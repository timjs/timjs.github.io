// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"GYot":[function(require,module,exports) {
"use strict";

exports.arrayMap = function (f) {
  return function (arr) {
    var l = arr.length;
    var result = new Array(l);

    for (var i = 0; i < l; i++) {
      result[i] = f(arr[i]);
    }

    return result;
  };
};
},{}],"riRy":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Semigroupoid = function Semigroupoid(compose) {
  this.compose = compose;
};

var semigroupoidFn = new Semigroupoid(function (f) {
  return function (g) {
    return function (x) {
      return f(g(x));
    };
  };
});

var compose = function compose(dict) {
  return dict.compose;
};

var composeFlipped = function composeFlipped(dictSemigroupoid) {
  return function (f) {
    return function (g) {
      return compose(dictSemigroupoid)(g)(f);
    };
  };
};

module.exports = {
  compose: compose,
  Semigroupoid: Semigroupoid,
  composeFlipped: composeFlipped,
  semigroupoidFn: semigroupoidFn
};
},{}],"IAi2":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Category = function Category(Semigroupoid0, identity) {
  this.Semigroupoid0 = Semigroupoid0;
  this.identity = identity;
};

var identity = function identity(dict) {
  return dict.identity;
};

var categoryFn = new Category(function () {
  return Control_Semigroupoid.semigroupoidFn;
}, function (x) {
  return x;
});
module.exports = {
  Category: Category,
  identity: identity,
  categoryFn: categoryFn,
  Semigroupoid: Control_Semigroupoid.Semigroupoid,
  compose: Control_Semigroupoid.compose
};
},{"../Control.Semigroupoid/index.js":"riRy"}],"ObQr":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var otherwise = true;
module.exports = {
  otherwise: otherwise
};
},{}],"ImXJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var on = function on(f) {
  return function (g) {
    return function (x) {
      return function (y) {
        return f(g(x))(g(y));
      };
    };
  };
};

var flip = function flip(f) {
  return function (b) {
    return function (a) {
      return f(a)(b);
    };
  };
};

var $$const = function $$const(a) {
  return function (v) {
    return a;
  };
};

var applyN = function applyN(f) {
  var go = function go($copy_n) {
    return function ($copy_acc) {
      var $tco_var_n = $copy_n;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(n, acc) {
        if (n <= 0) {
          $tco_done = true;
          return acc;
        }

        ;

        if (Data_Boolean.otherwise) {
          $tco_var_n = n - 1 | 0;
          $copy_acc = f(acc);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.Function (line 100, column 3 - line 102, column 37): " + [n.constructor.name, acc.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_n, $copy_acc);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var applyFlipped = function applyFlipped(x) {
  return function (f) {
    return f(x);
  };
};

var apply = function apply(f) {
  return function (x) {
    return f(x);
  };
};

module.exports = {
  flip: flip,
  "const": $$const,
  apply: apply,
  applyFlipped: applyFlipped,
  applyN: applyN,
  on: on,
  compose: Control_Category.compose,
  identity: Control_Category.identity
};
},{"../Control.Category/index.js":"IAi2","../Data.Boolean/index.js":"ObQr"}],"Nqls":[function(require,module,exports) {
"use strict";

exports.unit = {};
},{}],"qgjE":[function(require,module,exports) {
"use strict";

exports.showIntImpl = function (n) {
  return n.toString();
};

exports.showNumberImpl = function (n) {
  var str = n.toString();
  return isNaN(str + ".0") ? str : str + ".0";
};

exports.showCharImpl = function (c) {
  var code = c.charCodeAt(0);

  if (code < 0x20 || code === 0x7F) {
    switch (c) {
      case "\x07":
        return "'\\a'";

      case "\b":
        return "'\\b'";

      case "\f":
        return "'\\f'";

      case "\n":
        return "'\\n'";

      case "\r":
        return "'\\r'";

      case "\t":
        return "'\\t'";

      case "\v":
        return "'\\v'";
    }

    return "'\\" + code.toString(10) + "'";
  }

  return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
};

exports.showStringImpl = function (s) {
  var l = s.length;
  return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
  function (c, i) {
    switch (c) {
      case "\"":
      case "\\":
        return "\\" + c;

      case "\x07":
        return "\\a";

      case "\b":
        return "\\b";

      case "\f":
        return "\\f";

      case "\n":
        return "\\n";

      case "\r":
        return "\\r";

      case "\t":
        return "\\t";

      case "\v":
        return "\\v";
    }

    var k = i + 1;
    var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
    return "\\" + c.charCodeAt(0).toString(10) + empty;
  }) + "\"";
};

exports.showArrayImpl = function (f) {
  return function (xs) {
    var ss = [];

    for (var i = 0, l = xs.length; i < l; i++) {
      ss[i] = f(xs[i]);
    }

    return "[" + ss.join(",") + "]";
  };
};

exports.cons = function (head) {
  return function (tail) {
    return [head].concat(tail);
  };
};

exports.join = function (separator) {
  return function (xs) {
    return xs.join(separator);
  };
};
},{}],"AvJb":[function(require,module,exports) {
"use strict"; // module Data.Symbol

exports.unsafeCoerce = function (arg) {
  return arg;
};
},{}],"ZOFT":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Proxy3 = function () {
  function Proxy3() {}

  ;
  Proxy3.value = new Proxy3();
  return Proxy3;
}();

var Proxy2 = function () {
  function Proxy2() {}

  ;
  Proxy2.value = new Proxy2();
  return Proxy2;
}();

var $$Proxy = function () {
  function $$Proxy() {}

  ;
  $$Proxy.value = new $$Proxy();
  return $$Proxy;
}();

module.exports = {
  "Proxy": $$Proxy,
  Proxy2: Proxy2,
  Proxy3: Proxy3
};
},{}],"oJQL":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var SProxy = function () {
  function SProxy() {}

  ;
  SProxy.value = new SProxy();
  return SProxy;
}();

var IsSymbol = function IsSymbol(reflectSymbol) {
  this.reflectSymbol = reflectSymbol;
};

var reifySymbol = function reifySymbol(s) {
  return function (f) {
    return $foreign.unsafeCoerce(function (dictIsSymbol) {
      return f(dictIsSymbol);
    })({
      reflectSymbol: function reflectSymbol(v) {
        return s;
      }
    })(Type_Proxy["Proxy"].value);
  };
};

var reflectSymbol = function reflectSymbol(dict) {
  return dict.reflectSymbol;
};

module.exports = {
  IsSymbol: IsSymbol,
  reflectSymbol: reflectSymbol,
  reifySymbol: reifySymbol,
  SProxy: SProxy
};
},{"./foreign.js":"AvJb","../Type.Proxy/index.js":"ZOFT"}],"CHMS":[function(require,module,exports) {
"use strict";

exports.unsafeHas = function (label) {
  return function (rec) {
    return {}.hasOwnProperty.call(rec, label);
  };
};

exports.unsafeGet = function (label) {
  return function (rec) {
    return rec[label];
  };
};

exports.unsafeSet = function (label) {
  return function (value) {
    return function (rec) {
      var copy = {};

      for (var key in rec) {
        if ({}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }

      copy[label] = value;
      return copy;
    };
  };
};

exports.unsafeDelete = function (label) {
  return function (rec) {
    var copy = {};

    for (var key in rec) {
      if (key !== label && {}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }

    return copy;
  };
};
},{}],"KG04":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeHas: $foreign.unsafeHas,
  unsafeGet: $foreign.unsafeGet,
  unsafeSet: $foreign.unsafeSet,
  unsafeDelete: $foreign.unsafeDelete
};
},{"./foreign.js":"CHMS"}],"mFY7":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var ShowRecordFields = function ShowRecordFields(showRecordFields) {
  this.showRecordFields = showRecordFields;
};

var Show = function Show(show) {
  this.show = show;
};

var showString = new Show($foreign.showStringImpl);
var showRecordFieldsNil = new ShowRecordFields(function (v) {
  return function (v1) {
    return [];
  };
});

var showRecordFields = function showRecordFields(dict) {
  return dict.showRecordFields;
};

var showRecord = function showRecord(dictRowToList) {
  return function (dictShowRecordFields) {
    return new Show(function (record) {
      var v = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);

      if (v.length === 0) {
        return "{}";
      }

      ;
      return $foreign.join(" ")(["{", $foreign.join(", ")(v), "}"]);
    });
  };
};

var showProxy3 = new Show(function (v) {
  return "Proxy3";
});
var showProxy2 = new Show(function (v) {
  return "Proxy2";
});
var showProxy = new Show(function (v) {
  return "Proxy";
});
var showNumber = new Show($foreign.showNumberImpl);
var showInt = new Show($foreign.showIntImpl);
var showChar = new Show($foreign.showCharImpl);
var showBoolean = new Show(function (v) {
  if (v) {
    return "true";
  }

  ;

  if (!v) {
    return "false";
  }

  ;
  throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 22, column 23): " + [v.constructor.name]);
});

var show = function show(dict) {
  return dict.show;
};

var showArray = function showArray(dictShow) {
  return new Show($foreign.showArrayImpl(show(dictShow)));
};

var showRecordFieldsCons = function showRecordFieldsCons(dictIsSymbol) {
  return function (dictShowRecordFields) {
    return function (dictShow) {
      return new ShowRecordFields(function (v) {
        return function (record) {
          var tail = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
          var focus = Record_Unsafe.unsafeGet(key)(record);
          return $foreign.cons($foreign.join(": ")([key, show(dictShow)(focus)]))(tail);
        };
      });
    };
  };
};

module.exports = {
  Show: Show,
  show: show,
  ShowRecordFields: ShowRecordFields,
  showRecordFields: showRecordFields,
  showBoolean: showBoolean,
  showInt: showInt,
  showNumber: showNumber,
  showChar: showChar,
  showString: showString,
  showArray: showArray,
  showProxy: showProxy,
  showProxy2: showProxy2,
  showProxy3: showProxy3,
  showRecord: showRecord,
  showRecordFieldsNil: showRecordFieldsNil,
  showRecordFieldsCons: showRecordFieldsCons
};
},{"./foreign.js":"qgjE","../Data.Symbol/index.js":"oJQL","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"NhVk":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Show = require("../Data.Show/index.js");

var showUnit = new Data_Show.Show(function (v) {
  return "unit";
});
module.exports = {
  showUnit: showUnit,
  unit: $foreign.unit
};
},{"./foreign.js":"Nqls","../Data.Show/index.js":"mFY7"}],"AEHo":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var Functor = function Functor(map) {
  this.map = map;
};

var map = function map(dict) {
  return dict.map;
};

var mapFlipped = function mapFlipped(dictFunctor) {
  return function (fa) {
    return function (f) {
      return map(dictFunctor)(f)(fa);
    };
  };
};

var $$void = function $$void(dictFunctor) {
  return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
};

var voidLeft = function voidLeft(dictFunctor) {
  return function (f) {
    return function (x) {
      return map(dictFunctor)(Data_Function["const"](x))(f);
    };
  };
};

var voidRight = function voidRight(dictFunctor) {
  return function (x) {
    return map(dictFunctor)(Data_Function["const"](x));
  };
};

var functorProxy = new Functor(function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
});
var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
var functorArray = new Functor($foreign.arrayMap);

var flap = function flap(dictFunctor) {
  return function (ff) {
    return function (x) {
      return map(dictFunctor)(function (f) {
        return f(x);
      })(ff);
    };
  };
};

module.exports = {
  Functor: Functor,
  map: map,
  mapFlipped: mapFlipped,
  "void": $$void,
  voidRight: voidRight,
  voidLeft: voidLeft,
  flap: flap,
  functorFn: functorFn,
  functorArray: functorArray,
  functorProxy: functorProxy
};
},{"./foreign.js":"GYot","../Control.Semigroupoid/index.js":"riRy","../Data.Function/index.js":"ImXJ","../Data.Unit/index.js":"NhVk","../Type.Proxy/index.js":"ZOFT"}],"phTL":[function(require,module,exports) {
"use strict";

exports.concatString = function (s1) {
  return function (s2) {
    return s1 + s2;
  };
};

exports.concatArray = function (xs) {
  return function (ys) {
    if (xs.length === 0) return ys;
    if (ys.length === 0) return xs;
    return xs.concat(ys);
  };
};
},{}],"bncE":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Show = require("../Data.Show/index.js");

var Void = function Void(x) {
  return x;
};

var absurd = function absurd(a) {
  var spin = function spin($copy_v) {
    var $tco_result;

    function $tco_loop(v) {
      $copy_v = v;
      return;
    }

    ;

    while (!false) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return spin(a);
};

var showVoid = new Data_Show.Show(absurd);
module.exports = {
  absurd: absurd,
  showVoid: showVoid
};
},{"../Data.Show/index.js":"mFY7"}],"EsAJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var SemigroupRecord = function SemigroupRecord(appendRecord) {
  this.appendRecord = appendRecord;
};

var Semigroup = function Semigroup(append) {
  this.append = append;
};

var semigroupVoid = new Semigroup(function (v) {
  return Data_Void.absurd;
});
var semigroupUnit = new Semigroup(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
});
var semigroupString = new Semigroup($foreign.concatString);
var semigroupRecordNil = new SemigroupRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
});
var semigroupProxy3 = new Semigroup(function (v) {
  return function (v1) {
    return Type_Proxy.Proxy3.value;
  };
});
var semigroupProxy2 = new Semigroup(function (v) {
  return function (v1) {
    return Type_Proxy.Proxy2.value;
  };
});
var semigroupProxy = new Semigroup(function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
});
var semigroupArray = new Semigroup($foreign.concatArray);

var appendRecord = function appendRecord(dict) {
  return dict.appendRecord;
};

var semigroupRecord = function semigroupRecord(dictRowToList) {
  return function (dictSemigroupRecord) {
    return new Semigroup(appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value));
  };
};

var append = function append(dict) {
  return dict.append;
};

var semigroupFn = function semigroupFn(dictSemigroup) {
  return new Semigroup(function (f) {
    return function (g) {
      return function (x) {
        return append(dictSemigroup)(f(x))(g(x));
      };
    };
  });
};

var semigroupRecordCons = function semigroupRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictSemigroupRecord) {
      return function (dictSemigroup) {
        return new SemigroupRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
            };
          };
        });
      };
    };
  };
};

module.exports = {
  Semigroup: Semigroup,
  append: append,
  SemigroupRecord: SemigroupRecord,
  appendRecord: appendRecord,
  semigroupString: semigroupString,
  semigroupUnit: semigroupUnit,
  semigroupVoid: semigroupVoid,
  semigroupFn: semigroupFn,
  semigroupArray: semigroupArray,
  semigroupProxy: semigroupProxy,
  semigroupProxy2: semigroupProxy2,
  semigroupProxy3: semigroupProxy3,
  semigroupRecord: semigroupRecord,
  semigroupRecordNil: semigroupRecordNil,
  semigroupRecordCons: semigroupRecordCons
};
},{"./foreign.js":"phTL","../Data.Symbol/index.js":"oJQL","../Data.Unit/index.js":"NhVk","../Data.Void/index.js":"bncE","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"lNMK":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Alt = function Alt(Functor0, alt) {
  this.Functor0 = Functor0;
  this.alt = alt;
};

var altArray = new Alt(function () {
  return Data_Functor.functorArray;
}, Data_Semigroup.append(Data_Semigroup.semigroupArray));

var alt = function alt(dict) {
  return dict.alt;
};

module.exports = {
  Alt: Alt,
  alt: alt,
  altArray: altArray,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Data.Functor/index.js":"AEHo","../Data.Semigroup/index.js":"EsAJ"}],"nyBi":[function(require,module,exports) {
"use strict";

exports.arrayApply = function (fs) {
  return function (xs) {
    var l = fs.length;
    var k = xs.length;
    var result = new Array(l * k);
    var n = 0;

    for (var i = 0; i < l; i++) {
      var f = fs[i];

      for (var j = 0; j < k; j++) {
        result[n++] = f(xs[j]);
      }
    }

    return result;
  };
};
},{}],"QcLv":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var Apply = function Apply(Functor0, apply) {
  this.Functor0 = Functor0;
  this.apply = apply;
};

var applyProxy = new Apply(function () {
  return Data_Functor.functorProxy;
}, function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
});
var applyFn = new Apply(function () {
  return Data_Functor.functorFn;
}, function (f) {
  return function (g) {
    return function (x) {
      return f(x)(g(x));
    };
  };
});
var applyArray = new Apply(function () {
  return Data_Functor.functorArray;
}, $foreign.arrayApply);

var apply = function apply(dict) {
  return dict.apply;
};

var applyFirst = function applyFirst(dictApply) {
  return function (a) {
    return function (b) {
      return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"])(a))(b);
    };
  };
};

var applySecond = function applySecond(dictApply) {
  return function (a) {
    return function (b) {
      return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
    };
  };
};

var lift2 = function lift2(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
      };
    };
  };
};

var lift3 = function lift3(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);
        };
      };
    };
  };
};

var lift4 = function lift4(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);
          };
        };
      };
    };
  };
};

var lift5 = function lift5(dictApply) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return function (e) {
              return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);
            };
          };
        };
      };
    };
  };
};

module.exports = {
  Apply: Apply,
  apply: apply,
  applyFirst: applyFirst,
  applySecond: applySecond,
  lift2: lift2,
  lift3: lift3,
  lift4: lift4,
  lift5: lift5,
  applyFn: applyFn,
  applyArray: applyArray,
  applyProxy: applyProxy,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"./foreign.js":"nyBi","../Control.Category/index.js":"IAi2","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Type.Proxy/index.js":"ZOFT"}],"qYya":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var Applicative = function Applicative(Apply0, pure) {
  this.Apply0 = Apply0;
  this.pure = pure;
};

var pure = function pure(dict) {
  return dict.pure;
};

var unless = function unless(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (!v) {
        return v1;
      }

      ;

      if (v) {
        return pure(dictApplicative)(Data_Unit.unit);
      }

      ;
      throw new Error("Failed pattern match at Control.Applicative (line 66, column 1 - line 66, column 65): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var when = function when(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v) {
        return v1;
      }

      ;

      if (!v) {
        return pure(dictApplicative)(Data_Unit.unit);
      }

      ;
      throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var liftA1 = function liftA1(dictApplicative) {
  return function (f) {
    return function (a) {
      return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
    };
  };
};

var applicativeProxy = new Applicative(function () {
  return Control_Apply.applyProxy;
}, function (v) {
  return Type_Proxy["Proxy"].value;
});
var applicativeFn = new Applicative(function () {
  return Control_Apply.applyFn;
}, function (x) {
  return function (v) {
    return x;
  };
});
var applicativeArray = new Applicative(function () {
  return Control_Apply.applyArray;
}, function (x) {
  return [x];
});
module.exports = {
  Applicative: Applicative,
  pure: pure,
  liftA1: liftA1,
  unless: unless,
  when: when,
  applicativeFn: applicativeFn,
  applicativeArray: applicativeArray,
  applicativeProxy: applicativeProxy,
  Apply: Control_Apply.Apply,
  apply: Control_Apply.apply,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Apply/index.js":"QcLv","../Data.Functor/index.js":"AEHo","../Data.Unit/index.js":"NhVk","../Type.Proxy/index.js":"ZOFT"}],"oMBg":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Plus = function Plus(Alt0, empty) {
  this.Alt0 = Alt0;
  this.empty = empty;
};

var plusArray = new Plus(function () {
  return Control_Alt.altArray;
}, []);

var empty = function empty(dict) {
  return dict.empty;
};

module.exports = {
  Plus: Plus,
  empty: empty,
  plusArray: plusArray,
  Alt: Control_Alt.Alt,
  alt: Control_Alt.alt,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Alt/index.js":"lNMK","../Data.Functor/index.js":"AEHo"}],"aHia":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Alternative = function Alternative(Applicative0, Plus1) {
  this.Applicative0 = Applicative0;
  this.Plus1 = Plus1;
};

var guard = function guard(dictAlternative) {
  return function (v) {
    if (v) {
      return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Unit.unit);
    }

    ;

    if (!v) {
      return Control_Plus.empty(dictAlternative.Plus1());
    }

    ;
    throw new Error("Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): " + [v.constructor.name]);
  };
};

var alternativeArray = new Alternative(function () {
  return Control_Applicative.applicativeArray;
}, function () {
  return Control_Plus.plusArray;
});
module.exports = {
  Alternative: Alternative,
  guard: guard,
  alternativeArray: alternativeArray,
  Alt: Control_Alt.Alt,
  alt: Control_Alt.alt,
  Applicative: Control_Applicative.Applicative,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  Apply: Control_Apply.Apply,
  apply: Control_Apply.apply,
  Plus: Control_Plus.Plus,
  empty: Control_Plus.empty,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Plus/index.js":"oMBg","../Data.Functor/index.js":"AEHo","../Data.Unit/index.js":"NhVk"}],"S3WG":[function(require,module,exports) {
"use strict";

exports.arrayBind = function (arr) {
  return function (f) {
    var result = [];

    for (var i = 0, l = arr.length; i < l; i++) {
      Array.prototype.push.apply(result, f(arr[i]));
    }

    return result;
  };
};
},{}],"VcTy":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var Bind = function Bind(Apply0, bind) {
  this.Apply0 = Apply0;
  this.bind = bind;
};

var Discard = function Discard(discard) {
  this.discard = discard;
};

var discard = function discard(dict) {
  return dict.discard;
};

var bindProxy = new Bind(function () {
  return Control_Apply.applyProxy;
}, function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
});
var bindFn = new Bind(function () {
  return Control_Apply.applyFn;
}, function (m) {
  return function (f) {
    return function (x) {
      return f(m(x))(x);
    };
  };
});
var bindArray = new Bind(function () {
  return Control_Apply.applyArray;
}, $foreign.arrayBind);

var bind = function bind(dict) {
  return dict.bind;
};

var bindFlipped = function bindFlipped(dictBind) {
  return Data_Function.flip(bind(dictBind));
};

var composeKleisliFlipped = function composeKleisliFlipped(dictBind) {
  return function (f) {
    return function (g) {
      return function (a) {
        return bindFlipped(dictBind)(f)(g(a));
      };
    };
  };
};

var composeKleisli = function composeKleisli(dictBind) {
  return function (f) {
    return function (g) {
      return function (a) {
        return bind(dictBind)(f(a))(g);
      };
    };
  };
};

var discardProxy = new Discard(function (dictBind) {
  return bind(dictBind);
});
var discardProxy2 = new Discard(function (dictBind) {
  return bind(dictBind);
});
var discardProxy3 = new Discard(function (dictBind) {
  return bind(dictBind);
});
var discardUnit = new Discard(function (dictBind) {
  return bind(dictBind);
});

var ifM = function ifM(dictBind) {
  return function (cond) {
    return function (t) {
      return function (f) {
        return bind(dictBind)(cond)(function (cond$prime) {
          if (cond$prime) {
            return t;
          }

          ;
          return f;
        });
      };
    };
  };
};

var join = function join(dictBind) {
  return function (m) {
    return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  Bind: Bind,
  bind: bind,
  bindFlipped: bindFlipped,
  Discard: Discard,
  discard: discard,
  join: join,
  composeKleisli: composeKleisli,
  composeKleisliFlipped: composeKleisliFlipped,
  ifM: ifM,
  bindFn: bindFn,
  bindArray: bindArray,
  bindProxy: bindProxy,
  discardUnit: discardUnit,
  discardProxy: discardProxy,
  discardProxy2: discardProxy2,
  discardProxy3: discardProxy3,
  Applicative: Control_Applicative.Applicative,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  Apply: Control_Apply.Apply,
  apply: Control_Apply.apply,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"./foreign.js":"S3WG","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Category/index.js":"IAi2","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Type.Proxy/index.js":"ZOFT"}],"UIxr":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Monad = function Monad(Applicative0, Bind1) {
  this.Applicative0 = Applicative0;
  this.Bind1 = Bind1;
};

var whenM = function whenM(dictMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
        return Control_Applicative.when(dictMonad.Applicative0())(b)(m);
      });
    };
  };
};

var unlessM = function unlessM(dictMonad) {
  return function (mb) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {
        return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
      });
    };
  };
};

var monadProxy = new Monad(function () {
  return Control_Applicative.applicativeProxy;
}, function () {
  return Control_Bind.bindProxy;
});
var monadFn = new Monad(function () {
  return Control_Applicative.applicativeFn;
}, function () {
  return Control_Bind.bindFn;
});
var monadArray = new Monad(function () {
  return Control_Applicative.applicativeArray;
}, function () {
  return Control_Bind.bindArray;
});

var liftM1 = function liftM1(dictMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
        return Control_Applicative.pure(dictMonad.Applicative0())(f(a$prime));
      });
    };
  };
};

var ap = function ap(dictMonad) {
  return function (f) {
    return function (a) {
      return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
        return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
          return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
        });
      });
    };
  };
};

module.exports = {
  Monad: Monad,
  liftM1: liftM1,
  whenM: whenM,
  unlessM: unlessM,
  ap: ap,
  monadFn: monadFn,
  monadArray: monadArray,
  monadProxy: monadProxy,
  Applicative: Control_Applicative.Applicative,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  Apply: Control_Apply.Apply,
  apply: Control_Apply.apply,
  Bind: Control_Bind.Bind,
  bind: Control_Bind.bind,
  ifM: Control_Bind.ifM,
  join: Control_Bind.join,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Data.Functor/index.js":"AEHo"}],"YFBA":[function(require,module,exports) {
"use strict";

exports.arrayExtend = function (f) {
  return function (xs) {
    return xs.map(function (_, i, xs) {
      return f(xs.slice(i));
    });
  };
};
},{}],"JIoJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Extend = function Extend(Functor0, extend) {
  this.Functor0 = Functor0;
  this.extend = extend;
};

var extendFn = function extendFn(dictSemigroup) {
  return new Extend(function () {
    return Data_Functor.functorFn;
  }, function (f) {
    return function (g) {
      return function (w) {
        return f(function (w$prime) {
          return g(Data_Semigroup.append(dictSemigroup)(w)(w$prime));
        });
      };
    };
  });
};

var extendArray = new Extend(function () {
  return Data_Functor.functorArray;
}, $foreign.arrayExtend);

var extend = function extend(dict) {
  return dict.extend;
};

var extendFlipped = function extendFlipped(dictExtend) {
  return function (w) {
    return function (f) {
      return extend(dictExtend)(f)(w);
    };
  };
};

var duplicate = function duplicate(dictExtend) {
  return extend(dictExtend)(Control_Category.identity(Control_Category.categoryFn));
};

var composeCoKleisliFlipped = function composeCoKleisliFlipped(dictExtend) {
  return function (f) {
    return function (g) {
      return function (w) {
        return f(extend(dictExtend)(g)(w));
      };
    };
  };
};

var composeCoKleisli = function composeCoKleisli(dictExtend) {
  return function (f) {
    return function (g) {
      return function (w) {
        return g(extend(dictExtend)(f)(w));
      };
    };
  };
};

module.exports = {
  Extend: Extend,
  extend: extend,
  extendFlipped: extendFlipped,
  composeCoKleisli: composeCoKleisli,
  composeCoKleisliFlipped: composeCoKleisliFlipped,
  duplicate: duplicate,
  extendFn: extendFn,
  extendArray: extendArray,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"./foreign.js":"YFBA","../Control.Category/index.js":"IAi2","../Data.Functor/index.js":"AEHo","../Data.Semigroup/index.js":"EsAJ"}],"CGFD":[function(require,module,exports) {
"use strict";

exports.topInt = 2147483647;
exports.bottomInt = -2147483648;
exports.topChar = String.fromCharCode(65535);
exports.bottomChar = String.fromCharCode(0);
exports.topNumber = Number.POSITIVE_INFINITY;
exports.bottomNumber = Number.NEGATIVE_INFINITY;
},{}],"m7Aq":[function(require,module,exports) {
"use strict";

var unsafeCompareImpl = function unsafeCompareImpl(lt) {
  return function (eq) {
    return function (gt) {
      return function (x) {
        return function (y) {
          return x < y ? lt : x === y ? eq : gt;
        };
      };
    };
  };
};

exports.ordBooleanImpl = unsafeCompareImpl;
exports.ordIntImpl = unsafeCompareImpl;
exports.ordNumberImpl = unsafeCompareImpl;
exports.ordStringImpl = unsafeCompareImpl;
exports.ordCharImpl = unsafeCompareImpl;

exports.ordArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      var i = 0;
      var xlen = xs.length;
      var ylen = ys.length;

      while (i < xlen && i < ylen) {
        var x = xs[i];
        var y = ys[i];
        var o = f(x)(y);

        if (o !== 0) {
          return o;
        }

        i++;
      }

      if (xlen === ylen) {
        return 0;
      } else if (xlen > ylen) {
        return -1;
      } else {
        return 1;
      }
    };
  };
};
},{}],"h7nC":[function(require,module,exports) {
"use strict";

var refEq = function refEq(r1) {
  return function (r2) {
    return r1 === r2;
  };
};

exports.eqBooleanImpl = refEq;
exports.eqIntImpl = refEq;
exports.eqNumberImpl = refEq;
exports.eqCharImpl = refEq;
exports.eqStringImpl = refEq;

exports.eqArrayImpl = function (f) {
  return function (xs) {
    return function (ys) {
      if (xs.length !== ys.length) return false;

      for (var i = 0; i < xs.length; i++) {
        if (!f(xs[i])(ys[i])) return false;
      }

      return true;
    };
  };
};
},{}],"Pq4F":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var EqRecord = function EqRecord(eqRecord) {
  this.eqRecord = eqRecord;
};

var Eq = function Eq(eq) {
  this.eq = eq;
};

var Eq1 = function Eq1(eq1) {
  this.eq1 = eq1;
};

var eqVoid = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqUnit = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqString = new Eq($foreign.eqStringImpl);
var eqRowNil = new EqRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return true;
    };
  };
});

var eqRecord = function eqRecord(dict) {
  return dict.eqRecord;
};

var eqRec = function eqRec(dictRowToList) {
  return function (dictEqRecord) {
    return new Eq(eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value));
  };
};

var eqProxy3 = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqProxy2 = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqProxy = new Eq(function (v) {
  return function (v1) {
    return true;
  };
});
var eqNumber = new Eq($foreign.eqNumberImpl);
var eqInt = new Eq($foreign.eqIntImpl);
var eqChar = new Eq($foreign.eqCharImpl);
var eqBoolean = new Eq($foreign.eqBooleanImpl);

var eq1 = function eq1(dict) {
  return dict.eq1;
};

var eq = function eq(dict) {
  return dict.eq;
};

var eqArray = function eqArray(dictEq) {
  return new Eq($foreign.eqArrayImpl(eq(dictEq)));
};

var eq1Array = new Eq1(function (dictEq) {
  return eq(eqArray(dictEq));
});

var eqRowCons = function eqRowCons(dictEqRecord) {
  return function (dictCons) {
    return function (dictIsSymbol) {
      return function (dictEq) {
        return new EqRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var get = Record_Unsafe.unsafeGet(key);
              return eq(dictEq)(get(ra))(get(rb)) && tail;
            };
          };
        });
      };
    };
  };
};

var notEq = function notEq(dictEq) {
  return function (x) {
    return function (y) {
      return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
    };
  };
};

var notEq1 = function notEq1(dictEq1) {
  return function (dictEq) {
    return function (x) {
      return function (y) {
        return eq(eqBoolean)(eq1(dictEq1)(dictEq)(x)(y))(false);
      };
    };
  };
};

module.exports = {
  Eq: Eq,
  eq: eq,
  notEq: notEq,
  Eq1: Eq1,
  eq1: eq1,
  notEq1: notEq1,
  EqRecord: EqRecord,
  eqRecord: eqRecord,
  eqBoolean: eqBoolean,
  eqInt: eqInt,
  eqNumber: eqNumber,
  eqChar: eqChar,
  eqString: eqString,
  eqUnit: eqUnit,
  eqVoid: eqVoid,
  eqArray: eqArray,
  eqRec: eqRec,
  eqProxy: eqProxy,
  eqProxy2: eqProxy2,
  eqProxy3: eqProxy3,
  eq1Array: eq1Array,
  eqRowNil: eqRowNil,
  eqRowCons: eqRowCons
};
},{"./foreign.js":"h7nC","../Data.Symbol/index.js":"oJQL","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"Eunj":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var LT = function () {
  function LT() {}

  ;
  LT.value = new LT();
  return LT;
}();

var GT = function () {
  function GT() {}

  ;
  GT.value = new GT();
  return GT;
}();

var EQ = function () {
  function EQ() {}

  ;
  EQ.value = new EQ();
  return EQ;
}();

var showOrdering = new Data_Show.Show(function (v) {
  if (v instanceof LT) {
    return "LT";
  }

  ;

  if (v instanceof GT) {
    return "GT";
  }

  ;

  if (v instanceof EQ) {
    return "EQ";
  }

  ;
  throw new Error("Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): " + [v.constructor.name]);
});
var semigroupOrdering = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v instanceof LT) {
      return LT.value;
    }

    ;

    if (v instanceof GT) {
      return GT.value;
    }

    ;

    if (v instanceof EQ) {
      return v1;
    }

    ;
    throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): " + [v.constructor.name, v1.constructor.name]);
  };
});

var invert = function invert(v) {
  if (v instanceof GT) {
    return LT.value;
  }

  ;

  if (v instanceof EQ) {
    return EQ.value;
  }

  ;

  if (v instanceof LT) {
    return GT.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [v.constructor.name]);
};

var eqOrdering = new Data_Eq.Eq(function (v) {
  return function (v1) {
    if (v instanceof LT && v1 instanceof LT) {
      return true;
    }

    ;

    if (v instanceof GT && v1 instanceof GT) {
      return true;
    }

    ;

    if (v instanceof EQ && v1 instanceof EQ) {
      return true;
    }

    ;
    return false;
  };
});
module.exports = {
  LT: LT,
  GT: GT,
  EQ: EQ,
  invert: invert,
  eqOrdering: eqOrdering,
  semigroupOrdering: semigroupOrdering,
  showOrdering: showOrdering
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"BUGH":[function(require,module,exports) {
"use strict";

exports.intSub = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x - y | 0;
  };
};

exports.numSub = function (n1) {
  return function (n2) {
    return n1 - n2;
  };
};
},{}],"Vm8y":[function(require,module,exports) {
"use strict";

exports.intAdd = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x + y | 0;
  };
};

exports.intMul = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x * y | 0;
  };
};

exports.numAdd = function (n1) {
  return function (n2) {
    return n1 + n2;
  };
};

exports.numMul = function (n1) {
  return function (n2) {
    return n1 * n2;
  };
};
},{}],"NFPD":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var SemiringRecord = function SemiringRecord(addRecord, mulRecord, oneRecord, zeroRecord) {
  this.addRecord = addRecord;
  this.mulRecord = mulRecord;
  this.oneRecord = oneRecord;
  this.zeroRecord = zeroRecord;
};

var Semiring = function Semiring(add, mul, one, zero) {
  this.add = add;
  this.mul = mul;
  this.one = one;
  this.zero = zero;
};

var zeroRecord = function zeroRecord(dict) {
  return dict.zeroRecord;
};

var zero = function zero(dict) {
  return dict.zero;
};

var semiringUnit = new Semiring(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, Data_Unit.unit, Data_Unit.unit);
var semiringRecordNil = new SemiringRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return {};
  };
});
var semiringProxy3 = new Semiring(function (v) {
  return function (v1) {
    return Type_Proxy.Proxy3.value;
  };
}, function (v) {
  return function (v1) {
    return Type_Proxy.Proxy3.value;
  };
}, Type_Proxy.Proxy3.value, Type_Proxy.Proxy3.value);
var semiringProxy2 = new Semiring(function (v) {
  return function (v1) {
    return Type_Proxy.Proxy2.value;
  };
}, function (v) {
  return function (v1) {
    return Type_Proxy.Proxy2.value;
  };
}, Type_Proxy.Proxy2.value, Type_Proxy.Proxy2.value);
var semiringProxy = new Semiring(function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
}, function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
}, Type_Proxy["Proxy"].value, Type_Proxy["Proxy"].value);
var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);

var oneRecord = function oneRecord(dict) {
  return dict.oneRecord;
};

var one = function one(dict) {
  return dict.one;
};

var mulRecord = function mulRecord(dict) {
  return dict.mulRecord;
};

var mul = function mul(dict) {
  return dict.mul;
};

var addRecord = function addRecord(dict) {
  return dict.addRecord;
};

var semiringRecord = function semiringRecord(dictRowToList) {
  return function (dictSemiringRecord) {
    return new Semiring(addRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value), mulRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value), oneRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value), zeroRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value));
  };
};

var add = function add(dict) {
  return dict.add;
};

var semiringFn = function semiringFn(dictSemiring) {
  return new Semiring(function (f) {
    return function (g) {
      return function (x) {
        return add(dictSemiring)(f(x))(g(x));
      };
    };
  }, function (f) {
    return function (g) {
      return function (x) {
        return mul(dictSemiring)(f(x))(g(x));
      };
    };
  }, function (v) {
    return one(dictSemiring);
  }, function (v) {
    return zero(dictSemiring);
  });
};

var semiringRecordCons = function semiringRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictSemiringRecord) {
      return function (dictSemiring) {
        return new SemiringRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = addRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(add(dictSemiring)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = mulRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(mul(dictSemiring)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (v1) {
            var tail = oneRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(one(dictSemiring))(tail);
          };
        }, function (v) {
          return function (v1) {
            var tail = zeroRecord(dictSemiringRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(zero(dictSemiring))(tail);
          };
        });
      };
    };
  };
};

module.exports = {
  Semiring: Semiring,
  add: add,
  zero: zero,
  mul: mul,
  one: one,
  SemiringRecord: SemiringRecord,
  addRecord: addRecord,
  mulRecord: mulRecord,
  oneRecord: oneRecord,
  zeroRecord: zeroRecord,
  semiringInt: semiringInt,
  semiringNumber: semiringNumber,
  semiringFn: semiringFn,
  semiringUnit: semiringUnit,
  semiringProxy: semiringProxy,
  semiringProxy2: semiringProxy2,
  semiringProxy3: semiringProxy3,
  semiringRecord: semiringRecord,
  semiringRecordNil: semiringRecordNil,
  semiringRecordCons: semiringRecordCons
};
},{"./foreign.js":"Vm8y","../Data.Symbol/index.js":"oJQL","../Data.Unit/index.js":"NhVk","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"E2qH":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var RingRecord = function RingRecord(SemiringRecord0, subRecord) {
  this.SemiringRecord0 = SemiringRecord0;
  this.subRecord = subRecord;
};

var Ring = function Ring(Semiring0, sub) {
  this.Semiring0 = Semiring0;
  this.sub = sub;
};

var subRecord = function subRecord(dict) {
  return dict.subRecord;
};

var sub = function sub(dict) {
  return dict.sub;
};

var ringUnit = new Ring(function () {
  return Data_Semiring.semiringUnit;
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
});
var ringRecordNil = new RingRecord(function () {
  return Data_Semiring.semiringRecordNil;
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
});

var ringRecordCons = function ringRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictRingRecord) {
      return function (dictRing) {
        return new RingRecord(function () {
          return Data_Semiring.semiringRecordCons(dictIsSymbol)()(dictRingRecord.SemiringRecord0())(dictRing.Semiring0());
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = subRecord(dictRingRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(sub(dictRing)(get(ra))(get(rb)))(tail);
            };
          };
        });
      };
    };
  };
};

var ringRecord = function ringRecord(dictRowToList) {
  return function (dictRingRecord) {
    return new Ring(function () {
      return Data_Semiring.semiringRecord()(dictRingRecord.SemiringRecord0());
    }, subRecord(dictRingRecord)(Type_Proxy["Proxy"].value));
  };
};

var ringProxy3 = new Ring(function () {
  return Data_Semiring.semiringProxy3;
}, function (v) {
  return function (v1) {
    return Type_Proxy.Proxy3.value;
  };
});
var ringProxy2 = new Ring(function () {
  return Data_Semiring.semiringProxy2;
}, function (v) {
  return function (v1) {
    return Type_Proxy.Proxy2.value;
  };
});
var ringProxy = new Ring(function () {
  return Data_Semiring.semiringProxy;
}, function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
});
var ringNumber = new Ring(function () {
  return Data_Semiring.semiringNumber;
}, $foreign.numSub);
var ringInt = new Ring(function () {
  return Data_Semiring.semiringInt;
}, $foreign.intSub);

var ringFn = function ringFn(dictRing) {
  return new Ring(function () {
    return Data_Semiring.semiringFn(dictRing.Semiring0());
  }, function (f) {
    return function (g) {
      return function (x) {
        return sub(dictRing)(f(x))(g(x));
      };
    };
  });
};

var negate = function negate(dictRing) {
  return function (a) {
    return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
  };
};

module.exports = {
  Ring: Ring,
  sub: sub,
  negate: negate,
  RingRecord: RingRecord,
  subRecord: subRecord,
  ringInt: ringInt,
  ringNumber: ringNumber,
  ringUnit: ringUnit,
  ringFn: ringFn,
  ringProxy: ringProxy,
  ringProxy2: ringProxy2,
  ringProxy3: ringProxy3,
  ringRecord: ringRecord,
  ringRecordNil: ringRecordNil,
  ringRecordCons: ringRecordCons,
  Semiring: Data_Semiring.Semiring,
  SemiringRecord: Data_Semiring.SemiringRecord,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero
};
},{"./foreign.js":"BUGH","../Data.Semiring/index.js":"NFPD","../Data.Symbol/index.js":"oJQL","../Data.Unit/index.js":"NhVk","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"r4Vb":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var OrdRecord = function OrdRecord(EqRecord0, compareRecord) {
  this.EqRecord0 = EqRecord0;
  this.compareRecord = compareRecord;
};

var Ord = function Ord(Eq0, compare) {
  this.Eq0 = Eq0;
  this.compare = compare;
};

var Ord1 = function Ord1(Eq10, compare1) {
  this.Eq10 = Eq10;
  this.compare1 = compare1;
};

var ordVoid = new Ord(function () {
  return Data_Eq.eqVoid;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordUnit = new Ord(function () {
  return Data_Eq.eqUnit;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordString = new Ord(function () {
  return Data_Eq.eqString;
}, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordRecordNil = new OrdRecord(function () {
  return Data_Eq.eqRowNil;
}, function (v) {
  return function (v1) {
    return function (v2) {
      return Data_Ordering.EQ.value;
    };
  };
});
var ordProxy3 = new Ord(function () {
  return Data_Eq.eqProxy3;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordProxy2 = new Ord(function () {
  return Data_Eq.eqProxy2;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordProxy = new Ord(function () {
  return Data_Eq.eqProxy;
}, function (v) {
  return function (v1) {
    return Data_Ordering.EQ.value;
  };
});
var ordOrdering = new Ord(function () {
  return Data_Ordering.eqOrdering;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (v instanceof Data_Ordering.LT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {
      return Data_Ordering.GT.value;
    }

    ;

    if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {
      return Data_Ordering.LT.value;
    }

    ;

    if (v instanceof Data_Ordering.GT) {
      return Data_Ordering.GT.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Ord (line 121, column 1 - line 128, column 21): " + [v.constructor.name, v1.constructor.name]);
  };
});
var ordNumber = new Ord(function () {
  return Data_Eq.eqNumber;
}, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordInt = new Ord(function () {
  return Data_Eq.eqInt;
}, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordChar = new Ord(function () {
  return Data_Eq.eqChar;
}, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
var ordBoolean = new Ord(function () {
  return Data_Eq.eqBoolean;
}, $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));

var compareRecord = function compareRecord(dict) {
  return dict.compareRecord;
};

var ordRecord = function ordRecord(dictRowToList) {
  return function (dictOrdRecord) {
    return new Ord(function () {
      return Data_Eq.eqRec()(dictOrdRecord.EqRecord0());
    }, compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value));
  };
};

var compare1 = function compare1(dict) {
  return dict.compare1;
};

var compare = function compare(dict) {
  return dict.compare;
};

var comparing = function comparing(dictOrd) {
  return function (f) {
    return function (x) {
      return function (y) {
        return compare(dictOrd)(f(x))(f(y));
      };
    };
  };
};

var greaterThan = function greaterThan(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.GT) {
        return true;
      }

      ;
      return false;
    };
  };
};

var greaterThanOrEq = function greaterThanOrEq(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.LT) {
        return false;
      }

      ;
      return true;
    };
  };
};

var signum = function signum(dictOrd) {
  return function (dictRing) {
    return function (x) {
      var $49 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));

      if ($49) {
        return Data_Semiring.one(dictRing.Semiring0());
      }

      ;
      return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
    };
  };
};

var lessThan = function lessThan(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.LT) {
        return true;
      }

      ;
      return false;
    };
  };
};

var lessThanOrEq = function lessThanOrEq(dictOrd) {
  return function (a1) {
    return function (a2) {
      var v = compare(dictOrd)(a1)(a2);

      if (v instanceof Data_Ordering.GT) {
        return false;
      }

      ;
      return true;
    };
  };
};

var max = function max(dictOrd) {
  return function (x) {
    return function (y) {
      var v = compare(dictOrd)(x)(y);

      if (v instanceof Data_Ordering.LT) {
        return y;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return x;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 176, column 3 - line 179, column 12): " + [v.constructor.name]);
    };
  };
};

var min = function min(dictOrd) {
  return function (x) {
    return function (y) {
      var v = compare(dictOrd)(x)(y);

      if (v instanceof Data_Ordering.LT) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.EQ) {
        return x;
      }

      ;

      if (v instanceof Data_Ordering.GT) {
        return y;
      }

      ;
      throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [v.constructor.name]);
    };
  };
};

var ordArray = function ordArray(dictOrd) {
  return new Ord(function () {
    return Data_Eq.eqArray(dictOrd.Eq0());
  }, function () {
    var toDelta = function toDelta(x) {
      return function (y) {
        var v = compare(dictOrd)(x)(y);

        if (v instanceof Data_Ordering.EQ) {
          return 0;
        }

        ;

        if (v instanceof Data_Ordering.LT) {
          return 1;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return -1 | 0;
        }

        ;
        throw new Error("Failed pattern match at Data.Ord (line 74, column 7 - line 77, column 17): " + [v.constructor.name]);
      };
    };

    return function (xs) {
      return function (ys) {
        return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
      };
    };
  }());
};

var ord1Array = new Ord1(function () {
  return Data_Eq.eq1Array;
}, function (dictOrd) {
  return compare(ordArray(dictOrd));
});

var ordRecordCons = function ordRecordCons(dictOrdRecord) {
  return function (dictCons) {
    return function (dictIsSymbol) {
      return function (dictOrd) {
        return new OrdRecord(function () {
          return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())()(dictIsSymbol)(dictOrd.Eq0());
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
              var $55 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);

              if ($55) {
                return left;
              }

              ;
              return compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
            };
          };
        });
      };
    };
  };
};

var clamp = function clamp(dictOrd) {
  return function (low) {
    return function (hi) {
      return function (x) {
        return min(dictOrd)(hi)(max(dictOrd)(low)(x));
      };
    };
  };
};

var between = function between(dictOrd) {
  return function (low) {
    return function (hi) {
      return function (x) {
        if (lessThan(dictOrd)(x)(low)) {
          return false;
        }

        ;

        if (greaterThan(dictOrd)(x)(hi)) {
          return false;
        }

        ;
        return true;
      };
    };
  };
};

var abs = function abs(dictOrd) {
  return function (dictRing) {
    return function (x) {
      var $59 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));

      if ($59) {
        return x;
      }

      ;
      return Data_Ring.negate(dictRing)(x);
    };
  };
};

module.exports = {
  Ord: Ord,
  compare: compare,
  Ord1: Ord1,
  compare1: compare1,
  lessThan: lessThan,
  lessThanOrEq: lessThanOrEq,
  greaterThan: greaterThan,
  greaterThanOrEq: greaterThanOrEq,
  comparing: comparing,
  min: min,
  max: max,
  clamp: clamp,
  between: between,
  abs: abs,
  signum: signum,
  OrdRecord: OrdRecord,
  compareRecord: compareRecord,
  ordBoolean: ordBoolean,
  ordInt: ordInt,
  ordNumber: ordNumber,
  ordString: ordString,
  ordChar: ordChar,
  ordUnit: ordUnit,
  ordVoid: ordVoid,
  ordProxy: ordProxy,
  ordProxy2: ordProxy2,
  ordProxy3: ordProxy3,
  ordArray: ordArray,
  ordOrdering: ordOrdering,
  ord1Array: ord1Array,
  ordRecordNil: ordRecordNil,
  ordRecordCons: ordRecordCons,
  ordRecord: ordRecord,
  EQ: Data_Ordering.EQ,
  GT: Data_Ordering.GT,
  LT: Data_Ordering.LT
};
},{"./foreign.js":"m7Aq","../Data.Eq/index.js":"Pq4F","../Data.Ordering/index.js":"Eunj","../Data.Ring/index.js":"E2qH","../Data.Semiring/index.js":"NFPD","../Data.Symbol/index.js":"oJQL","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"kcUU":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var BoundedRecord = function BoundedRecord(OrdRecord0, bottomRecord, topRecord) {
  this.OrdRecord0 = OrdRecord0;
  this.bottomRecord = bottomRecord;
  this.topRecord = topRecord;
};

var Bounded = function Bounded(Ord0, bottom, top) {
  this.Ord0 = Ord0;
  this.bottom = bottom;
  this.top = top;
};

var topRecord = function topRecord(dict) {
  return dict.topRecord;
};

var top = function top(dict) {
  return dict.top;
};

var boundedUnit = new Bounded(function () {
  return Data_Ord.ordUnit;
}, Data_Unit.unit, Data_Unit.unit);
var boundedRecordNil = new BoundedRecord(function () {
  return Data_Ord.ordRecordNil;
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return {};
  };
});
var boundedProxy3 = new Bounded(function () {
  return Data_Ord.ordProxy3;
}, Type_Proxy.Proxy3.value, Type_Proxy.Proxy3.value);
var boundedProxy2 = new Bounded(function () {
  return Data_Ord.ordProxy2;
}, Type_Proxy.Proxy2.value, Type_Proxy.Proxy2.value);
var boundedProxy = new Bounded(function () {
  return Data_Ord.ordProxy;
}, Type_Proxy["Proxy"].value, Type_Proxy["Proxy"].value);
var boundedOrdering = new Bounded(function () {
  return Data_Ord.ordOrdering;
}, Data_Ordering.LT.value, Data_Ordering.GT.value);
var boundedNumber = new Bounded(function () {
  return Data_Ord.ordNumber;
}, $foreign.bottomNumber, $foreign.topNumber);
var boundedInt = new Bounded(function () {
  return Data_Ord.ordInt;
}, $foreign.bottomInt, $foreign.topInt);
var boundedChar = new Bounded(function () {
  return Data_Ord.ordChar;
}, $foreign.bottomChar, $foreign.topChar);
var boundedBoolean = new Bounded(function () {
  return Data_Ord.ordBoolean;
}, false, true);

var bottomRecord = function bottomRecord(dict) {
  return dict.bottomRecord;
};

var boundedRecord = function boundedRecord(dictRowToList) {
  return function (dictBoundedRecord) {
    return new Bounded(function () {
      return Data_Ord.ordRecord()(dictBoundedRecord.OrdRecord0());
    }, bottomRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value), topRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value));
  };
};

var bottom = function bottom(dict) {
  return dict.bottom;
};

var boundedRecordCons = function boundedRecordCons(dictIsSymbol) {
  return function (dictBounded) {
    return function (dictCons) {
      return function (dictCons1) {
        return function (dictBoundedRecord) {
          return new BoundedRecord(function () {
            return Data_Ord.ordRecordCons(dictBoundedRecord.OrdRecord0())()(dictIsSymbol)(dictBounded.Ord0());
          }, function (v) {
            return function (rowProxy) {
              var tail = bottomRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(rowProxy);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              return insert(bottom(dictBounded))(tail);
            };
          }, function (v) {
            return function (rowProxy) {
              var tail = topRecord(dictBoundedRecord)(Type_Proxy["Proxy"].value)(rowProxy);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              return insert(top(dictBounded))(tail);
            };
          });
        };
      };
    };
  };
};

module.exports = {
  Bounded: Bounded,
  bottom: bottom,
  top: top,
  BoundedRecord: BoundedRecord,
  bottomRecord: bottomRecord,
  topRecord: topRecord,
  boundedBoolean: boundedBoolean,
  boundedInt: boundedInt,
  boundedChar: boundedChar,
  boundedOrdering: boundedOrdering,
  boundedUnit: boundedUnit,
  boundedNumber: boundedNumber,
  boundedProxy: boundedProxy,
  boundedProxy2: boundedProxy2,
  boundedProxy3: boundedProxy3,
  boundedRecordNil: boundedRecordNil,
  boundedRecordCons: boundedRecordCons,
  boundedRecord: boundedRecord,
  EQ: Data_Ord.EQ,
  GT: Data_Ord.GT,
  LT: Data_Ord.LT,
  Ord: Data_Ord.Ord,
  OrdRecord: Data_Ord.OrdRecord,
  compare: Data_Ord.compare
};
},{"./foreign.js":"CGFD","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Symbol/index.js":"oJQL","../Data.Unit/index.js":"NhVk","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"AXkC":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Invariant = function Invariant(imap) {
  this.imap = imap;
};

var invariantMultiplicative = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantEndo = new Invariant(function (ab) {
  return function (ba) {
    return function (v) {
      return function ($36) {
        return ab(v(ba($36)));
      };
    };
  };
});
var invariantDual = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantDisj = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantConj = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
var invariantAdditive = new Invariant(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});

var imapF = function imapF(dictFunctor) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(f);
    };
  };
};

var invariantArray = new Invariant(imapF(Data_Functor.functorArray));
var invariantFn = new Invariant(imapF(Data_Functor.functorFn));

var imap = function imap(dict) {
  return dict.imap;
};

var invariantAlternate = function invariantAlternate(dictInvariant) {
  return new Invariant(function (f) {
    return function (g) {
      return function (v) {
        return imap(dictInvariant)(f)(g)(v);
      };
    };
  });
};

module.exports = {
  imap: imap,
  Invariant: Invariant,
  imapF: imapF,
  invariantFn: invariantFn,
  invariantArray: invariantArray,
  invariantAdditive: invariantAdditive,
  invariantConj: invariantConj,
  invariantDisj: invariantDisj,
  invariantDual: invariantDual,
  invariantEndo: invariantEndo,
  invariantMultiplicative: invariantMultiplicative,
  invariantAlternate: invariantAlternate
};
},{"../Data.Functor/index.js":"AEHo"}],"AuzG":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Show = require("../Data.Show/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var Inl = function () {
  function Inl(value0) {
    this.value0 = value0;
  }

  ;

  Inl.create = function (value0) {
    return new Inl(value0);
  };

  return Inl;
}();

var Inr = function () {
  function Inr(value0) {
    this.value0 = value0;
  }

  ;

  Inr.create = function (value0) {
    return new Inr(value0);
  };

  return Inr;
}();

var Product = function () {
  function Product(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Product.create = function (value0) {
    return function (value1) {
      return new Product(value0, value1);
    };
  };

  return Product;
}();

var NoArguments = function () {
  function NoArguments() {}

  ;
  NoArguments.value = new NoArguments();
  return NoArguments;
}();

var Generic = function Generic(from, to) {
  this.from = from;
  this.to = to;
};

var Constructor = function Constructor(x) {
  return x;
};

var Argument = function Argument(x) {
  return x;
};

var to = function to(dict) {
  return dict.to;
};

var showSum = function showSum(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      if (v instanceof Inl) {
        return "(Inl " + (Data_Show.show(dictShow)(v.value0) + ")");
      }

      ;

      if (v instanceof Inr) {
        return "(Inr " + (Data_Show.show(dictShow1)(v.value0) + ")");
      }

      ;
      throw new Error("Failed pattern match at Data.Generic.Rep (line 31, column 1 - line 33, column 42): " + [v.constructor.name]);
    });
  };
};

var showProduct = function showProduct(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(Product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var showNoArguments = new Data_Show.Show(function (v) {
  return "NoArguments";
});

var showConstructor = function showConstructor(dictIsSymbol) {
  return function (dictShow) {
    return new Data_Show.Show(function (v) {
      return "(Constructor @" + (Data_Show.show(Data_Show.showString)(Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value)) + (" " + (Data_Show.show(dictShow)(v) + ")")));
    });
  };
};

var showArgument = function showArgument(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Argument " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var repOf = function repOf(dictGeneric) {
  return function (v) {
    return Type_Proxy["Proxy"].value;
  };
};

var from = function from(dict) {
  return dict.from;
};

module.exports = {
  Generic: Generic,
  to: to,
  from: from,
  repOf: repOf,
  NoArguments: NoArguments,
  Inl: Inl,
  Inr: Inr,
  Product: Product,
  Constructor: Constructor,
  Argument: Argument,
  showNoArguments: showNoArguments,
  showSum: showSum,
  showProduct: showProduct,
  showConstructor: showConstructor,
  showArgument: showArgument
};
},{"../Data.Show/index.js":"mFY7","../Data.Symbol/index.js":"oJQL","../Type.Proxy/index.js":"ZOFT"}],"lD5R":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var MonadZeroIsDeprecated = {};

var MonadZero = function MonadZero(Alternative1, Monad0, MonadZeroIsDeprecated2) {
  this.Alternative1 = Alternative1;
  this.Monad0 = Monad0;
  this.MonadZeroIsDeprecated2 = MonadZeroIsDeprecated2;
};

var monadZeroIsDeprecated = function monadZeroIsDeprecated(dictWarn) {
  return MonadZeroIsDeprecated;
};

var monadZeroArray = new MonadZero(function () {
  return Control_Alternative.alternativeArray;
}, function () {
  return Control_Monad.monadArray;
}, function () {
  return undefined;
});
module.exports = {
  MonadZeroIsDeprecated: MonadZeroIsDeprecated,
  MonadZero: MonadZero,
  monadZeroIsDeprecated: monadZeroIsDeprecated,
  monadZeroArray: monadZeroArray,
  Alt: Control_Alt.Alt,
  alt: Control_Alt.alt,
  Alternative: Control_Alternative.Alternative,
  guard: Control_Alternative.guard,
  Applicative: Control_Applicative.Applicative,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  Apply: Control_Apply.Apply,
  apply: Control_Apply.apply,
  Bind: Control_Bind.Bind,
  bind: Control_Bind.bind,
  ifM: Control_Bind.ifM,
  join: Control_Bind.join,
  Monad: Control_Monad.Monad,
  ap: Control_Monad.ap,
  liftM1: Control_Monad.liftM1,
  Plus: Control_Plus.Plus,
  empty: Control_Plus.empty,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Control.Plus/index.js":"oMBg","../Data.Functor/index.js":"AEHo"}],"EBwR":[function(require,module,exports) {
"use strict";

exports.intDegree = function (x) {
  return Math.min(Math.abs(x), 2147483647);
}; // See the Euclidean definition in
// https://en.m.wikipedia.org/wiki/Modulo_operation.


exports.intDiv = function (x) {
  return function (y) {
    if (y === 0) return 0;
    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
  };
};

exports.intMod = function (x) {
  return function (y) {
    if (y === 0) return 0;
    var yy = Math.abs(y);
    return (x % yy + yy) % yy;
  };
};

exports.numDiv = function (n1) {
  return function (n2) {
    return n1 / n2;
  };
};
},{}],"TQxD":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var CommutativeRingRecord = function CommutativeRingRecord(RingRecord0) {
  this.RingRecord0 = RingRecord0;
};

var CommutativeRing = function CommutativeRing(Ring0) {
  this.Ring0 = Ring0;
};

var commutativeRingUnit = new CommutativeRing(function () {
  return Data_Ring.ringUnit;
});
var commutativeRingRecordNil = new CommutativeRingRecord(function () {
  return Data_Ring.ringRecordNil;
});

var commutativeRingRecordCons = function commutativeRingRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCommutativeRingRecord) {
      return function (dictCommutativeRing) {
        return new CommutativeRingRecord(function () {
          return Data_Ring.ringRecordCons(dictIsSymbol)()(dictCommutativeRingRecord.RingRecord0())(dictCommutativeRing.Ring0());
        });
      };
    };
  };
};

var commutativeRingRecord = function commutativeRingRecord(dictRowToList) {
  return function (dictCommutativeRingRecord) {
    return new CommutativeRing(function () {
      return Data_Ring.ringRecord()(dictCommutativeRingRecord.RingRecord0());
    });
  };
};

var commutativeRingProxy3 = new CommutativeRing(function () {
  return Data_Ring.ringProxy3;
});
var commutativeRingProxy2 = new CommutativeRing(function () {
  return Data_Ring.ringProxy2;
});
var commutativeRingProxy = new CommutativeRing(function () {
  return Data_Ring.ringProxy;
});
var commutativeRingNumber = new CommutativeRing(function () {
  return Data_Ring.ringNumber;
});
var commutativeRingInt = new CommutativeRing(function () {
  return Data_Ring.ringInt;
});

var commutativeRingFn = function commutativeRingFn(dictCommutativeRing) {
  return new CommutativeRing(function () {
    return Data_Ring.ringFn(dictCommutativeRing.Ring0());
  });
};

module.exports = {
  CommutativeRing: CommutativeRing,
  CommutativeRingRecord: CommutativeRingRecord,
  commutativeRingInt: commutativeRingInt,
  commutativeRingNumber: commutativeRingNumber,
  commutativeRingUnit: commutativeRingUnit,
  commutativeRingFn: commutativeRingFn,
  commutativeRingRecord: commutativeRingRecord,
  commutativeRingProxy: commutativeRingProxy,
  commutativeRingProxy2: commutativeRingProxy2,
  commutativeRingProxy3: commutativeRingProxy3,
  commutativeRingRecordNil: commutativeRingRecordNil,
  commutativeRingRecordCons: commutativeRingRecordCons,
  Ring: Data_Ring.Ring,
  RingRecord: Data_Ring.RingRecord,
  Semiring: Data_Semiring.Semiring,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero
};
},{"../Data.Ring/index.js":"E2qH","../Data.Semiring/index.js":"NFPD"}],"IRBO":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var EuclideanRing = function EuclideanRing(CommutativeRing0, degree, div, mod) {
  this.CommutativeRing0 = CommutativeRing0;
  this.degree = degree;
  this.div = div;
  this.mod = mod;
};

var mod = function mod(dict) {
  return dict.mod;
};

var gcd = function gcd($copy_dictEq) {
  return function ($copy_dictEuclideanRing) {
    return function ($copy_a) {
      return function ($copy_b) {
        var $tco_var_dictEq = $copy_dictEq;
        var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
        var $tco_var_a = $copy_a;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(dictEq, dictEuclideanRing, a, b) {
          var $7 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));

          if ($7) {
            $tco_done = true;
            return a;
          }

          ;
          $tco_var_dictEq = dictEq;
          $tco_var_dictEuclideanRing = dictEuclideanRing;
          $tco_var_a = b;
          $copy_b = mod(dictEuclideanRing)(a)(b);
          return;
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
        }

        ;
        return $tco_result;
      };
    };
  };
};

var euclideanRingNumber = new EuclideanRing(function () {
  return Data_CommutativeRing.commutativeRingNumber;
}, function (v) {
  return 1;
}, $foreign.numDiv, function (v) {
  return function (v1) {
    return 0.0;
  };
});
var euclideanRingInt = new EuclideanRing(function () {
  return Data_CommutativeRing.commutativeRingInt;
}, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);

var div = function div(dict) {
  return dict.div;
};

var lcm = function lcm(dictEq) {
  return function (dictEuclideanRing) {
    return function (a) {
      return function (b) {
        var $8 = Data_Eq.eq(dictEq)(a)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())) || Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));

        if ($8) {
          return Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0());
        }

        ;
        return div(dictEuclideanRing)(Data_Semiring.mul(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())(a)(b))(gcd(dictEq)(dictEuclideanRing)(a)(b));
      };
    };
  };
};

var degree = function degree(dict) {
  return dict.degree;
};

module.exports = {
  EuclideanRing: EuclideanRing,
  degree: degree,
  div: div,
  mod: mod,
  gcd: gcd,
  lcm: lcm,
  euclideanRingInt: euclideanRingInt,
  euclideanRingNumber: euclideanRingNumber,
  CommutativeRing: Data_CommutativeRing.CommutativeRing,
  Ring: Data_Ring.Ring,
  sub: Data_Ring.sub,
  Semiring: Data_Semiring.Semiring,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero
};
},{"./foreign.js":"EBwR","../Data.CommutativeRing/index.js":"TQxD","../Data.Eq/index.js":"Pq4F","../Data.Ring/index.js":"E2qH","../Data.Semiring/index.js":"NFPD"}],"TiEB":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var MonoidRecord = function MonoidRecord(SemigroupRecord0, memptyRecord) {
  this.SemigroupRecord0 = SemigroupRecord0;
  this.memptyRecord = memptyRecord;
};

var Monoid = function Monoid(Semigroup0, mempty) {
  this.Semigroup0 = Semigroup0;
  this.mempty = mempty;
};

var monoidUnit = new Monoid(function () {
  return Data_Semigroup.semigroupUnit;
}, Data_Unit.unit);
var monoidString = new Monoid(function () {
  return Data_Semigroup.semigroupString;
}, "");
var monoidRecordNil = new MonoidRecord(function () {
  return Data_Semigroup.semigroupRecordNil;
}, function (v) {
  return {};
});
var monoidOrdering = new Monoid(function () {
  return Data_Ordering.semigroupOrdering;
}, Data_Ordering.EQ.value);
var monoidArray = new Monoid(function () {
  return Data_Semigroup.semigroupArray;
}, []);

var memptyRecord = function memptyRecord(dict) {
  return dict.memptyRecord;
};

var monoidRecord = function monoidRecord(dictRowToList) {
  return function (dictMonoidRecord) {
    return new Monoid(function () {
      return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
    }, memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value));
  };
};

var mempty = function mempty(dict) {
  return dict.mempty;
};

var monoidFn = function monoidFn(dictMonoid) {
  return new Monoid(function () {
    return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
  }, function (v) {
    return mempty(dictMonoid);
  });
};

var monoidRecordCons = function monoidRecordCons(dictIsSymbol) {
  return function (dictMonoid) {
    return function (dictCons) {
      return function (dictMonoidRecord) {
        return new MonoidRecord(function () {
          return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
        }, function (v) {
          var tail = memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value);
          var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
          var insert = Record_Unsafe.unsafeSet(key);
          return insert(mempty(dictMonoid))(tail);
        });
      };
    };
  };
};

var power = function power(dictMonoid) {
  return function (x) {
    var go = function go(p) {
      if (p <= 0) {
        return mempty(dictMonoid);
      }

      ;

      if (p === 1) {
        return x;
      }

      ;

      if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
        var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
        return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
      }

      ;

      if (Data_Boolean.otherwise) {
        var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
        return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
      }

      ;
      throw new Error("Failed pattern match at Data.Monoid (line 86, column 3 - line 86, column 17): " + [p.constructor.name]);
    };

    return go;
  };
};

var guard = function guard(dictMonoid) {
  return function (v) {
    return function (v1) {
      if (v) {
        return v1;
      }

      ;

      if (!v) {
        return mempty(dictMonoid);
      }

      ;
      throw new Error("Failed pattern match at Data.Monoid (line 94, column 1 - line 94, column 49): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

module.exports = {
  Monoid: Monoid,
  mempty: mempty,
  power: power,
  guard: guard,
  MonoidRecord: MonoidRecord,
  memptyRecord: memptyRecord,
  monoidUnit: monoidUnit,
  monoidOrdering: monoidOrdering,
  monoidFn: monoidFn,
  monoidString: monoidString,
  monoidArray: monoidArray,
  monoidRecord: monoidRecord,
  monoidRecordNil: monoidRecordNil,
  monoidRecordCons: monoidRecordCons,
  Semigroup: Data_Semigroup.Semigroup,
  SemigroupRecord: Data_Semigroup.SemigroupRecord
};
},{"../Data.Boolean/index.js":"ObQr","../Data.EuclideanRing/index.js":"IRBO","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Symbol/index.js":"oJQL","../Data.Unit/index.js":"NhVk","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"mN7T":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Nothing = function () {
  function Nothing() {}

  ;
  Nothing.value = new Nothing();
  return Nothing;
}();

var Just = function () {
  function Just(value0) {
    this.value0 = value0;
  }

  ;

  Just.create = function (value0) {
    return new Just(value0);
  };

  return Just;
}();

var showMaybe = function showMaybe(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof Just) {
      return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
    }

    ;

    if (v instanceof Nothing) {
      return "Nothing";
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 216, column 1 - line 218, column 28): " + [v.constructor.name]);
  });
};

var semigroupMaybe = function semigroupMaybe(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      if (v instanceof Nothing) {
        return v1;
      }

      ;

      if (v1 instanceof Nothing) {
        return v;
      }

      ;

      if (v instanceof Just && v1 instanceof Just) {
        return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 185, column 1 - line 188, column 43): " + [v.constructor.name, v1.constructor.name]);
    };
  });
};

var optional = function optional(dictAlt) {
  return function (dictApplicative) {
    return function (a) {
      return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Just.create)(a))(Control_Applicative.pure(dictApplicative)(Nothing.value));
    };
  };
};

var monoidMaybe = function monoidMaybe(dictSemigroup) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMaybe(dictSemigroup);
  }, Nothing.value);
};

var maybe$prime = function maybe$prime(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Nothing) {
        return v(Data_Unit.unit);
      }

      ;

      if (v2 instanceof Just) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 243, column 1 - line 243, column 62): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var maybe = function maybe(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Nothing) {
        return v;
      }

      ;

      if (v2 instanceof Just) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var isNothing = maybe(true)(Data_Function["const"](false));
var isJust = maybe(false)(Data_Function["const"](true));
var genericMaybe = new Data_Generic_Rep.Generic(function (x) {
  if (x instanceof Nothing) {
    return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
  }

  ;

  if (x instanceof Just) {
    return new Data_Generic_Rep.Inr(x.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Maybe (line 220, column 1 - line 220, column 52): " + [x.constructor.name]);
}, function (x) {
  if (x instanceof Data_Generic_Rep.Inl) {
    return Nothing.value;
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr) {
    return new Just(x.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Maybe (line 220, column 1 - line 220, column 52): " + [x.constructor.name]);
});
var functorMaybe = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof Just) {
      return new Just(v(v1.value0));
    }

    ;
    return Nothing.value;
  };
});
var invariantMaybe = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorMaybe));

var fromMaybe$prime = function fromMaybe$prime(a) {
  return maybe$prime(a)(Control_Category.identity(Control_Category.categoryFn));
};

var fromMaybe = function fromMaybe(a) {
  return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
};

var fromJust = function fromJust(dictPartial) {
  return function (v) {
    if (v instanceof Just) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [v.constructor.name]);
  };
};

var extendMaybe = new Control_Extend.Extend(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Nothing) {
      return Nothing.value;
    }

    ;
    return new Just(v(v1));
  };
});

var eqMaybe = function eqMaybe(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Nothing && y instanceof Nothing) {
        return true;
      }

      ;

      if (x instanceof Just && y instanceof Just) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0);
      }

      ;
      return false;
    };
  });
};

var ordMaybe = function ordMaybe(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMaybe(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      if (x instanceof Nothing && y instanceof Nothing) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Nothing) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Nothing) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Just && y instanceof Just) {
        return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 51): " + [x.constructor.name, y.constructor.name]);
    };
  });
};

var eq1Maybe = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqMaybe(dictEq));
});
var ord1Maybe = new Data_Ord.Ord1(function () {
  return eq1Maybe;
}, function (dictOrd) {
  return Data_Ord.compare(ordMaybe(dictOrd));
});

var boundedMaybe = function boundedMaybe(dictBounded) {
  return new Data_Bounded.Bounded(function () {
    return ordMaybe(dictBounded.Ord0());
  }, Nothing.value, new Just(Data_Bounded.top(dictBounded)));
};

var applyMaybe = new Control_Apply.Apply(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Just) {
      return Data_Functor.map(functorMaybe)(v.value0)(v1);
    }

    ;

    if (v instanceof Nothing) {
      return Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindMaybe = new Control_Bind.Bind(function () {
  return applyMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Just) {
      return v1(v.value0);
    }

    ;

    if (v instanceof Nothing) {
      return Nothing.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [v.constructor.name, v1.constructor.name]);
  };
});
var applicativeMaybe = new Control_Applicative.Applicative(function () {
  return applyMaybe;
}, Just.create);
var monadMaybe = new Control_Monad.Monad(function () {
  return applicativeMaybe;
}, function () {
  return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function () {
  return functorMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Nothing) {
      return v1;
    }

    ;
    return v;
  };
});
var plusMaybe = new Control_Plus.Plus(function () {
  return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
  return applicativeMaybe;
}, function () {
  return plusMaybe;
});
var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
  return alternativeMaybe;
}, function () {
  return monadMaybe;
}, function () {
  return undefined;
});
module.exports = {
  Nothing: Nothing,
  Just: Just,
  maybe: maybe,
  "maybe'": maybe$prime,
  fromMaybe: fromMaybe,
  "fromMaybe'": fromMaybe$prime,
  isJust: isJust,
  isNothing: isNothing,
  fromJust: fromJust,
  optional: optional,
  functorMaybe: functorMaybe,
  applyMaybe: applyMaybe,
  applicativeMaybe: applicativeMaybe,
  altMaybe: altMaybe,
  plusMaybe: plusMaybe,
  alternativeMaybe: alternativeMaybe,
  bindMaybe: bindMaybe,
  monadMaybe: monadMaybe,
  monadZeroMaybe: monadZeroMaybe,
  extendMaybe: extendMaybe,
  invariantMaybe: invariantMaybe,
  semigroupMaybe: semigroupMaybe,
  monoidMaybe: monoidMaybe,
  eqMaybe: eqMaybe,
  eq1Maybe: eq1Maybe,
  ordMaybe: ordMaybe,
  ord1Maybe: ord1Maybe,
  boundedMaybe: boundedMaybe,
  showMaybe: showMaybe,
  genericMaybe: genericMaybe
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Extend/index.js":"JIoJ","../Control.Monad/index.js":"UIxr","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Bounded/index.js":"kcUU","../Data.Eq/index.js":"Pq4F","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Functor.Invariant/index.js":"AXkC","../Data.Generic.Rep/index.js":"AuzG","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Data.Unit/index.js":"NhVk"}],"B2JL":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Left = function () {
  function Left(value0) {
    this.value0 = value0;
  }

  ;

  Left.create = function (value0) {
    return new Left(value0);
  };

  return Left;
}();

var Right = function () {
  function Right(value0) {
    this.value0 = value0;
  }

  ;

  Right.create = function (value0) {
    return new Right(value0);
  };

  return Right;
}();

var showEither = function showEither(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      if (v instanceof Left) {
        return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
      }

      ;

      if (v instanceof Right) {
        return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): " + [v.constructor.name]);
    });
  };
};

var note$prime = function note$prime(f) {
  return Data_Maybe["maybe'"](function ($105) {
    return Left.create(f($105));
  })(Right.create);
};

var note = function note(a) {
  return Data_Maybe.maybe(new Left(a))(Right.create);
};

var genericEither = new Data_Generic_Rep.Generic(function (x) {
  if (x instanceof Left) {
    return new Data_Generic_Rep.Inl(x.value0);
  }

  ;

  if (x instanceof Right) {
    return new Data_Generic_Rep.Inr(x.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [x.constructor.name]);
}, function (x) {
  if (x instanceof Data_Generic_Rep.Inl) {
    return new Left(x.value0);
  }

  ;

  if (x instanceof Data_Generic_Rep.Inr) {
    return new Right(x.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): " + [x.constructor.name]);
});
var functorEither = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Left) {
      return new Left(m.value0);
    }

    ;

    if (m instanceof Right) {
      return new Right(f(m.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [m.constructor.name]);
  };
});
var invariantEither = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorEither));

var fromRight$prime = function fromRight$prime(v) {
  return function (v1) {
    if (v1 instanceof Right) {
      return v1.value0;
    }

    ;
    return v(Data_Unit.unit);
  };
};

var fromRight = function fromRight(v) {
  return function (v1) {
    if (v1 instanceof Right) {
      return v1.value0;
    }

    ;
    return v;
  };
};

var fromLeft$prime = function fromLeft$prime(v) {
  return function (v1) {
    if (v1 instanceof Left) {
      return v1.value0;
    }

    ;
    return v(Data_Unit.unit);
  };
};

var fromLeft = function fromLeft(v) {
  return function (v1) {
    if (v1 instanceof Left) {
      return v1.value0;
    }

    ;
    return v;
  };
};

var extendEither = new Control_Extend.Extend(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Left) {
      return new Left(v1.value0);
    }

    ;
    return new Right(v(v1));
  };
});

var eqEither = function eqEither(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        if (x instanceof Left && y instanceof Left) {
          return Data_Eq.eq(dictEq)(x.value0)(y.value0);
        }

        ;

        if (x instanceof Right && y instanceof Right) {
          return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
        }

        ;
        return false;
      };
    });
  };
};

var ordEither = function ordEither(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        if (x instanceof Left && y instanceof Left) {
          return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
        }

        ;

        if (x instanceof Left) {
          return Data_Ordering.LT.value;
        }

        ;

        if (y instanceof Left) {
          return Data_Ordering.GT.value;
        }

        ;

        if (x instanceof Right && y instanceof Right) {
          return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 189, column 1 - line 189, column 64): " + [x.constructor.name, y.constructor.name]);
      };
    });
  };
};

var eq1Either = function eq1Either(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqEither(dictEq)(dictEq1));
  });
};

var ord1Either = function ord1Either(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Either(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));
  });
};

var either = function either(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Left) {
        return v(v2.value0);
      }

      ;

      if (v2 instanceof Right) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
var isLeft = either(Data_Function["const"](true))(Data_Function["const"](false));
var isRight = either(Data_Function["const"](false))(Data_Function["const"](true));

var choose = function choose(dictAlt) {
  return function (a) {
    return function (b) {
      return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));
    };
  };
};

var boundedEither = function boundedEither(dictBounded) {
  return function (dictBounded1) {
    return new Data_Bounded.Bounded(function () {
      return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());
    }, new Left(Data_Bounded.bottom(dictBounded)), new Right(Data_Bounded.top(dictBounded1)));
  };
};

var applyEither = new Control_Apply.Apply(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Left) {
      return new Left(v.value0);
    }

    ;

    if (v instanceof Right) {
      return Data_Functor.map(functorEither)(v.value0)(v1);
    }

    ;
    throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindEither = new Control_Bind.Bind(function () {
  return applyEither;
}, either(function (e) {
  return function (v) {
    return new Left(e);
  };
})(function (a) {
  return function (f) {
    return f(a);
  };
}));

var semigroupEither = function semigroupEither(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (x) {
    return function (y) {
      return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);
    };
  });
};

var applicativeEither = new Control_Applicative.Applicative(function () {
  return applyEither;
}, Right.create);
var monadEither = new Control_Monad.Monad(function () {
  return applicativeEither;
}, function () {
  return bindEither;
});
var altEither = new Control_Alt.Alt(function () {
  return functorEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Left) {
      return v1;
    }

    ;
    return v;
  };
});
module.exports = {
  Left: Left,
  Right: Right,
  either: either,
  choose: choose,
  isLeft: isLeft,
  isRight: isRight,
  fromLeft: fromLeft,
  "fromLeft'": fromLeft$prime,
  fromRight: fromRight,
  "fromRight'": fromRight$prime,
  note: note,
  "note'": note$prime,
  hush: hush,
  functorEither: functorEither,
  genericEither: genericEither,
  invariantEither: invariantEither,
  applyEither: applyEither,
  applicativeEither: applicativeEither,
  altEither: altEither,
  bindEither: bindEither,
  monadEither: monadEither,
  extendEither: extendEither,
  showEither: showEither,
  eqEither: eqEither,
  eq1Either: eq1Either,
  ordEither: ordEither,
  ord1Either: ord1Either,
  boundedEither: boundedEither,
  semigroupEither: semigroupEither
};
},{"../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Extend/index.js":"JIoJ","../Control.Monad/index.js":"UIxr","../Data.Bounded/index.js":"kcUU","../Data.Eq/index.js":"Pq4F","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Functor.Invariant/index.js":"AXkC","../Data.Generic.Rep/index.js":"AuzG","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Data.Unit/index.js":"NhVk"}],"U0zO":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Extend = require("../Control.Extend/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Comonad = function Comonad(Extend0, extract) {
  this.Extend0 = Extend0;
  this.extract = extract;
};

var extract = function extract(dict) {
  return dict.extract;
};

module.exports = {
  Comonad: Comonad,
  extract: extract,
  Extend: Control_Extend.Extend,
  duplicate: Control_Extend.duplicate,
  extend: Control_Extend.extend,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Extend/index.js":"JIoJ","../Data.Functor/index.js":"AEHo"}],"y9cE":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Unit = require("../Data.Unit/index.js");

var Lazy = function Lazy(defer) {
  this.defer = defer;
};

var lazyUnit = new Lazy(function (v) {
  return Data_Unit.unit;
});
var lazyFn = new Lazy(function (f) {
  return function (x) {
    return f(Data_Unit.unit)(x);
  };
});

var defer = function defer(dict) {
  return dict.defer;
};

var fix = function fix(dictLazy) {
  return function (f) {
    var go = defer(dictLazy)(function (v) {
      return f(go);
    });
    return go;
  };
};

module.exports = {
  defer: defer,
  Lazy: Lazy,
  fix: fix,
  lazyFn: lazyFn,
  lazyUnit: lazyUnit
};
},{"../Data.Unit/index.js":"NhVk"}],"fWMi":[function(require,module,exports) {
"use strict";

exports.boolConj = function (b1) {
  return function (b2) {
    return b1 && b2;
  };
};

exports.boolDisj = function (b1) {
  return function (b2) {
    return b1 || b2;
  };
};

exports.boolNot = function (b) {
  return !b;
};
},{}],"paZe":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var HeytingAlgebraRecord = function HeytingAlgebraRecord(conjRecord, disjRecord, ffRecord, impliesRecord, notRecord, ttRecord) {
  this.conjRecord = conjRecord;
  this.disjRecord = disjRecord;
  this.ffRecord = ffRecord;
  this.impliesRecord = impliesRecord;
  this.notRecord = notRecord;
  this.ttRecord = ttRecord;
};

var HeytingAlgebra = function HeytingAlgebra(conj, disj, ff, implies, not, tt) {
  this.conj = conj;
  this.disj = disj;
  this.ff = ff;
  this.implies = implies;
  this.not = not;
  this.tt = tt;
};

var ttRecord = function ttRecord(dict) {
  return dict.ttRecord;
};

var tt = function tt(dict) {
  return dict.tt;
};

var notRecord = function notRecord(dict) {
  return dict.notRecord;
};

var not = function not(dict) {
  return dict.not;
};

var impliesRecord = function impliesRecord(dict) {
  return dict.impliesRecord;
};

var implies = function implies(dict) {
  return dict.implies;
};

var heytingAlgebraUnit = new HeytingAlgebra(function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, Data_Unit.unit, function (v) {
  return function (v1) {
    return Data_Unit.unit;
  };
}, function (v) {
  return Data_Unit.unit;
}, Data_Unit.unit);
var heytingAlgebraRecordNil = new HeytingAlgebraRecord(function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return function (v2) {
      return {};
    };
  };
}, function (v) {
  return function (v1) {
    return {};
  };
}, function (v) {
  return function (v1) {
    return {};
  };
});
var heytingAlgebraProxy3 = new HeytingAlgebra(function (v) {
  return function (v1) {
    return Type_Proxy.Proxy3.value;
  };
}, function (v) {
  return function (v1) {
    return Type_Proxy.Proxy3.value;
  };
}, Type_Proxy.Proxy3.value, function (v) {
  return function (v1) {
    return Type_Proxy.Proxy3.value;
  };
}, function (v) {
  return Type_Proxy.Proxy3.value;
}, Type_Proxy.Proxy3.value);
var heytingAlgebraProxy2 = new HeytingAlgebra(function (v) {
  return function (v1) {
    return Type_Proxy.Proxy2.value;
  };
}, function (v) {
  return function (v1) {
    return Type_Proxy.Proxy2.value;
  };
}, Type_Proxy.Proxy2.value, function (v) {
  return function (v1) {
    return Type_Proxy.Proxy2.value;
  };
}, function (v) {
  return Type_Proxy.Proxy2.value;
}, Type_Proxy.Proxy2.value);
var heytingAlgebraProxy = new HeytingAlgebra(function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
}, function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
}, Type_Proxy["Proxy"].value, function (v) {
  return function (v1) {
    return Type_Proxy["Proxy"].value;
  };
}, function (v) {
  return Type_Proxy["Proxy"].value;
}, Type_Proxy["Proxy"].value);

var ffRecord = function ffRecord(dict) {
  return dict.ffRecord;
};

var ff = function ff(dict) {
  return dict.ff;
};

var disjRecord = function disjRecord(dict) {
  return dict.disjRecord;
};

var disj = function disj(dict) {
  return dict.disj;
};

var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
  return function (b) {
    return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
  };
}, $foreign.boolNot, true);

var conjRecord = function conjRecord(dict) {
  return dict.conjRecord;
};

var heytingAlgebraRecord = function heytingAlgebraRecord(dictRowToList) {
  return function (dictHeytingAlgebraRecord) {
    return new HeytingAlgebra(conjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value), disjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value), ffRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value), impliesRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value), notRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value), ttRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(Type_Proxy["Proxy"].value));
  };
};

var conj = function conj(dict) {
  return dict.conj;
};

var heytingAlgebraFunction = function heytingAlgebraFunction(dictHeytingAlgebra) {
  return new HeytingAlgebra(function (f) {
    return function (g) {
      return function (a) {
        return conj(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (f) {
    return function (g) {
      return function (a) {
        return disj(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (v) {
    return ff(dictHeytingAlgebra);
  }, function (f) {
    return function (g) {
      return function (a) {
        return implies(dictHeytingAlgebra)(f(a))(g(a));
      };
    };
  }, function (f) {
    return function (a) {
      return not(dictHeytingAlgebra)(f(a));
    };
  }, function (v) {
    return tt(dictHeytingAlgebra);
  });
};

var heytingAlgebraRecordCons = function heytingAlgebraRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictHeytingAlgebraRecord) {
      return function (dictHeytingAlgebra) {
        return new HeytingAlgebraRecord(function (v) {
          return function (ra) {
            return function (rb) {
              var tail = conjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(conj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = disjRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(disj(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (row) {
            var tail = ffRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(ff(dictHeytingAlgebra))(tail);
          };
        }, function (v) {
          return function (ra) {
            return function (rb) {
              var tail = impliesRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
              var insert = Record_Unsafe.unsafeSet(key);
              var get = Record_Unsafe.unsafeGet(key);
              return insert(implies(dictHeytingAlgebra)(get(ra))(get(rb)))(tail);
            };
          };
        }, function (v) {
          return function (row) {
            var tail = notRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
            var insert = Record_Unsafe.unsafeSet(key);
            var get = Record_Unsafe.unsafeGet(key);
            return insert(not(dictHeytingAlgebra)(get(row)))(tail);
          };
        }, function (v) {
          return function (row) {
            var tail = ttRecord(dictHeytingAlgebraRecord)(Type_Proxy["Proxy"].value)(row);
            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
            var insert = Record_Unsafe.unsafeSet(key);
            return insert(tt(dictHeytingAlgebra))(tail);
          };
        });
      };
    };
  };
};

module.exports = {
  HeytingAlgebra: HeytingAlgebra,
  tt: tt,
  ff: ff,
  implies: implies,
  conj: conj,
  disj: disj,
  not: not,
  HeytingAlgebraRecord: HeytingAlgebraRecord,
  ffRecord: ffRecord,
  ttRecord: ttRecord,
  impliesRecord: impliesRecord,
  conjRecord: conjRecord,
  disjRecord: disjRecord,
  notRecord: notRecord,
  heytingAlgebraBoolean: heytingAlgebraBoolean,
  heytingAlgebraUnit: heytingAlgebraUnit,
  heytingAlgebraFunction: heytingAlgebraFunction,
  heytingAlgebraProxy: heytingAlgebraProxy,
  heytingAlgebraProxy2: heytingAlgebraProxy2,
  heytingAlgebraProxy3: heytingAlgebraProxy3,
  heytingAlgebraRecord: heytingAlgebraRecord,
  heytingAlgebraRecordNil: heytingAlgebraRecordNil,
  heytingAlgebraRecordCons: heytingAlgebraRecordCons
};
},{"./foreign.js":"fWMi","../Data.Symbol/index.js":"oJQL","../Data.Unit/index.js":"NhVk","../Record.Unsafe/index.js":"KG04","../Type.Proxy/index.js":"ZOFT"}],"e7yH":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var BooleanAlgebraRecord = function BooleanAlgebraRecord(HeytingAlgebraRecord0) {
  this.HeytingAlgebraRecord0 = HeytingAlgebraRecord0;
};

var BooleanAlgebra = function BooleanAlgebra(HeytingAlgebra0) {
  this.HeytingAlgebra0 = HeytingAlgebra0;
};

var booleanAlgebraUnit = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraUnit;
});
var booleanAlgebraRecordNil = new BooleanAlgebraRecord(function () {
  return Data_HeytingAlgebra.heytingAlgebraRecordNil;
});

var booleanAlgebraRecordCons = function booleanAlgebraRecordCons(dictIsSymbol) {
  return function (dictCons) {
    return function (dictBooleanAlgebraRecord) {
      return function (dictBooleanAlgebra) {
        return new BooleanAlgebraRecord(function () {
          return Data_HeytingAlgebra.heytingAlgebraRecordCons(dictIsSymbol)()(dictBooleanAlgebraRecord.HeytingAlgebraRecord0())(dictBooleanAlgebra.HeytingAlgebra0());
        });
      };
    };
  };
};

var booleanAlgebraRecord = function booleanAlgebraRecord(dictRowToList) {
  return function (dictBooleanAlgebraRecord) {
    return new BooleanAlgebra(function () {
      return Data_HeytingAlgebra.heytingAlgebraRecord()(dictBooleanAlgebraRecord.HeytingAlgebraRecord0());
    });
  };
};

var booleanAlgebraProxy3 = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraProxy3;
});
var booleanAlgebraProxy2 = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraProxy2;
});
var booleanAlgebraProxy = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraProxy;
});

var booleanAlgebraFn = function booleanAlgebraFn(dictBooleanAlgebra) {
  return new BooleanAlgebra(function () {
    return Data_HeytingAlgebra.heytingAlgebraFunction(dictBooleanAlgebra.HeytingAlgebra0());
  });
};

var booleanAlgebraBoolean = new BooleanAlgebra(function () {
  return Data_HeytingAlgebra.heytingAlgebraBoolean;
});
module.exports = {
  BooleanAlgebra: BooleanAlgebra,
  BooleanAlgebraRecord: BooleanAlgebraRecord,
  booleanAlgebraBoolean: booleanAlgebraBoolean,
  booleanAlgebraUnit: booleanAlgebraUnit,
  booleanAlgebraFn: booleanAlgebraFn,
  booleanAlgebraRecord: booleanAlgebraRecord,
  booleanAlgebraProxy: booleanAlgebraProxy,
  booleanAlgebraProxy2: booleanAlgebraProxy2,
  booleanAlgebraProxy3: booleanAlgebraProxy3,
  booleanAlgebraRecordNil: booleanAlgebraRecordNil,
  booleanAlgebraRecordCons: booleanAlgebraRecordCons,
  HeytingAlgebra: Data_HeytingAlgebra.HeytingAlgebra,
  HeytingAlgebraRecord: Data_HeytingAlgebra.HeytingAlgebraRecord,
  conj: Data_HeytingAlgebra.conj,
  disj: Data_HeytingAlgebra.disj,
  ff: Data_HeytingAlgebra.ff,
  implies: Data_HeytingAlgebra.implies,
  not: Data_HeytingAlgebra.not,
  tt: Data_HeytingAlgebra.tt
};
},{"../Data.HeytingAlgebra/index.js":"paZe"}],"IIOM":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Tuple = function () {
  function Tuple(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Tuple.create = function (value0) {
    return function (value1) {
      return new Tuple(value0, value1);
    };
  };

  return Tuple;
}();

var uncurry = function uncurry(f) {
  return function (v) {
    return f(v.value0)(v.value1);
  };
};

var swap = function swap(v) {
  return new Tuple(v.value1, v.value0);
};

var snd = function snd(v) {
  return v.value1;
};

var showTuple = function showTuple(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(Tuple " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var semiringTuple = function semiringTuple(dictSemiring) {
  return function (dictSemiring1) {
    return new Data_Semiring.Semiring(function (v) {
      return function (v1) {
        return new Tuple(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0), Data_Semiring.add(dictSemiring1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0), Data_Semiring.mul(dictSemiring1)(v.value1)(v1.value1));
      };
    }, new Tuple(Data_Semiring.one(dictSemiring), Data_Semiring.one(dictSemiring1)), new Tuple(Data_Semiring.zero(dictSemiring), Data_Semiring.zero(dictSemiring1)));
  };
};

var semigroupoidTuple = new Control_Semigroupoid.Semigroupoid(function (v) {
  return function (v1) {
    return new Tuple(v1.value0, v.value1);
  };
});

var semigroupTuple = function semigroupTuple(dictSemigroup) {
  return function (dictSemigroup1) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
      };
    });
  };
};

var ringTuple = function ringTuple(dictRing) {
  return function (dictRing1) {
    return new Data_Ring.Ring(function () {
      return semiringTuple(dictRing.Semiring0())(dictRing1.Semiring0());
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_Ring.sub(dictRing)(v.value0)(v1.value0), Data_Ring.sub(dictRing1)(v.value1)(v1.value1));
      };
    });
  };
};

var monoidTuple = function monoidTuple(dictMonoid) {
  return function (dictMonoid1) {
    return new Data_Monoid.Monoid(function () {
      return semigroupTuple(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
    }, new Tuple(Data_Monoid.mempty(dictMonoid), Data_Monoid.mempty(dictMonoid1)));
  };
};

var heytingAlgebraTuple = function heytingAlgebraTuple(dictHeytingAlgebra) {
  return function (dictHeytingAlgebra1) {
    return new Data_HeytingAlgebra.HeytingAlgebra(function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.conj(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.disj(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, new Tuple(Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra1)), function (v) {
      return function (v1) {
        return new Tuple(Data_HeytingAlgebra.implies(dictHeytingAlgebra)(v.value0)(v1.value0), Data_HeytingAlgebra.implies(dictHeytingAlgebra1)(v.value1)(v1.value1));
      };
    }, function (v) {
      return new Tuple(Data_HeytingAlgebra.not(dictHeytingAlgebra)(v.value0), Data_HeytingAlgebra.not(dictHeytingAlgebra1)(v.value1));
    }, new Tuple(Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra1)));
  };
};

var genericTuple = new Data_Generic_Rep.Generic(function (x) {
  return new Data_Generic_Rep.Product(x.value0, x.value1);
}, function (x) {
  return new Tuple(x.value0, x.value1);
});
var functorTuple = new Data_Functor.Functor(function (f) {
  return function (m) {
    return new Tuple(m.value0, f(m.value1));
  };
});
var invariantTuple = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorTuple));

var fst = function fst(v) {
  return v.value0;
};

var lazyTuple = function lazyTuple(dictLazy) {
  return function (dictLazy1) {
    return new Control_Lazy.Lazy(function (f) {
      return new Tuple(Control_Lazy.defer(dictLazy)(function (v) {
        return fst(f(Data_Unit.unit));
      }), Control_Lazy.defer(dictLazy1)(function (v) {
        return snd(f(Data_Unit.unit));
      }));
    });
  };
};

var extendTuple = new Control_Extend.Extend(function () {
  return functorTuple;
}, function (f) {
  return function (v) {
    return new Tuple(v.value0, f(v));
  };
});

var eqTuple = function eqTuple(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
      };
    });
  };
};

var ordTuple = function ordTuple(dictOrd) {
  return function (dictOrd1) {
    return new Data_Ord.Ord(function () {
      return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
      };
    });
  };
};

var eq1Tuple = function eq1Tuple(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqTuple(dictEq)(dictEq1));
  });
};

var ord1Tuple = function ord1Tuple(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Tuple(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordTuple(dictOrd)(dictOrd1));
  });
};

var curry = function curry(f) {
  return function (a) {
    return function (b) {
      return f(new Tuple(a, b));
    };
  };
};

var comonadTuple = new Control_Comonad.Comonad(function () {
  return extendTuple;
}, snd);

var commutativeRingTuple = function commutativeRingTuple(dictCommutativeRing) {
  return function (dictCommutativeRing1) {
    return new Data_CommutativeRing.CommutativeRing(function () {
      return ringTuple(dictCommutativeRing.Ring0())(dictCommutativeRing1.Ring0());
    });
  };
};

var boundedTuple = function boundedTuple(dictBounded) {
  return function (dictBounded1) {
    return new Data_Bounded.Bounded(function () {
      return ordTuple(dictBounded.Ord0())(dictBounded1.Ord0());
    }, new Tuple(Data_Bounded.bottom(dictBounded), Data_Bounded.bottom(dictBounded1)), new Tuple(Data_Bounded.top(dictBounded), Data_Bounded.top(dictBounded1)));
  };
};

var booleanAlgebraTuple = function booleanAlgebraTuple(dictBooleanAlgebra) {
  return function (dictBooleanAlgebra1) {
    return new Data_BooleanAlgebra.BooleanAlgebra(function () {
      return heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0())(dictBooleanAlgebra1.HeytingAlgebra0());
    });
  };
};

var applyTuple = function applyTuple(dictSemigroup) {
  return new Control_Apply.Apply(function () {
    return functorTuple;
  }, function (v) {
    return function (v1) {
      return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1(v1.value1));
    };
  });
};

var bindTuple = function bindTuple(dictSemigroup) {
  return new Control_Bind.Bind(function () {
    return applyTuple(dictSemigroup);
  }, function (v) {
    return function (f) {
      var v1 = f(v.value1);
      return new Tuple(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
    };
  });
};

var applicativeTuple = function applicativeTuple(dictMonoid) {
  return new Control_Applicative.Applicative(function () {
    return applyTuple(dictMonoid.Semigroup0());
  }, Tuple.create(Data_Monoid.mempty(dictMonoid)));
};

var monadTuple = function monadTuple(dictMonoid) {
  return new Control_Monad.Monad(function () {
    return applicativeTuple(dictMonoid);
  }, function () {
    return bindTuple(dictMonoid.Semigroup0());
  });
};

module.exports = {
  Tuple: Tuple,
  fst: fst,
  snd: snd,
  curry: curry,
  uncurry: uncurry,
  swap: swap,
  showTuple: showTuple,
  eqTuple: eqTuple,
  eq1Tuple: eq1Tuple,
  ordTuple: ordTuple,
  ord1Tuple: ord1Tuple,
  boundedTuple: boundedTuple,
  semigroupoidTuple: semigroupoidTuple,
  semigroupTuple: semigroupTuple,
  monoidTuple: monoidTuple,
  semiringTuple: semiringTuple,
  ringTuple: ringTuple,
  commutativeRingTuple: commutativeRingTuple,
  heytingAlgebraTuple: heytingAlgebraTuple,
  booleanAlgebraTuple: booleanAlgebraTuple,
  functorTuple: functorTuple,
  genericTuple: genericTuple,
  invariantTuple: invariantTuple,
  applyTuple: applyTuple,
  applicativeTuple: applicativeTuple,
  bindTuple: bindTuple,
  monadTuple: monadTuple,
  extendTuple: extendTuple,
  comonadTuple: comonadTuple,
  lazyTuple: lazyTuple
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Comonad/index.js":"U0zO","../Control.Extend/index.js":"JIoJ","../Control.Lazy/index.js":"y9cE","../Control.Monad/index.js":"UIxr","../Control.Semigroupoid/index.js":"riRy","../Data.BooleanAlgebra/index.js":"e7yH","../Data.Bounded/index.js":"kcUU","../Data.CommutativeRing/index.js":"TQxD","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Functor.Invariant/index.js":"AXkC","../Data.Generic.Rep/index.js":"AuzG","../Data.HeytingAlgebra/index.js":"paZe","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Ring/index.js":"E2qH","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7","../Data.Unit/index.js":"NhVk"}],"e2Wc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Bifunctor = function Bifunctor(bimap) {
  this.bimap = bimap;
};

var bimap = function bimap(dict) {
  return dict.bimap;
};

var lmap = function lmap(dictBifunctor) {
  return function (f) {
    return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var rmap = function rmap(dictBifunctor) {
  return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
};

var bifunctorTuple = new Bifunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Data_Tuple.Tuple(f(v.value0), g(v.value1));
    };
  };
});
var bifunctorEither = new Bifunctor(function (v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_Either.Left) {
        return new Data_Either.Left(v(v2.value0));
      }

      ;

      if (v2 instanceof Data_Either.Right) {
        return new Data_Either.Right(v1(v2.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
});
var bifunctorConst = new Bifunctor(function (f) {
  return function (v) {
    return function (v1) {
      return f(v1);
    };
  };
});
module.exports = {
  bimap: bimap,
  Bifunctor: Bifunctor,
  lmap: lmap,
  rmap: rmap,
  bifunctorEither: bifunctorEither,
  bifunctorTuple: bifunctorTuple,
  bifunctorConst: bifunctorConst
};
},{"../Control.Category/index.js":"IAi2","../Data.Either/index.js":"B2JL","../Data.Tuple/index.js":"IIOM"}],"Bc2X":[function(require,module,exports) {
"use strict"; // module Unsafe.Coerce

exports.unsafeCoerce = function (x) {
  return x;
};
},{}],"ETUV":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafeCoerce: $foreign.unsafeCoerce
};
},{"./foreign.js":"Bc2X"}],"iVKl":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var coerce = function coerce(dictCoercible) {
  return Unsafe_Coerce.unsafeCoerce;
};

module.exports = {
  coerce: coerce
};
},{"../Unsafe.Coerce/index.js":"ETUV"}],"lz8k":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Safe_Coerce = require("../Safe.Coerce/index.js");

var Newtype = function Newtype(Coercible0) {
  this.Coercible0 = Coercible0;
};

var wrap = function wrap(dictNewtype) {
  return Safe_Coerce.coerce();
};

var unwrap = function unwrap(dictNewtype) {
  return Safe_Coerce.coerce();
};

var underF2 = function underF2(dictCoercible) {
  return function (dictCoercible1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var underF = function underF(dictCoercible) {
  return function (dictCoercible1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var under2 = function under2(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var under = function under(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var un = function un(dictNewtype) {
  return function (v) {
    return unwrap();
  };
};

var traverse = function traverse(dictCoercible) {
  return function (dictNewtype) {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var overF2 = function overF2(dictCoercible) {
  return function (dictCoercible1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var overF = function overF(dictCoercible) {
  return function (dictCoercible1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var over2 = function over2(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var over = function over(dictNewtype) {
  return function (dictNewtype1) {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var newtypeMultiplicative = new Newtype(function () {
  return undefined;
});
var newtypeLast = new Newtype(function () {
  return undefined;
});
var newtypeFirst = new Newtype(function () {
  return undefined;
});
var newtypeEndo = new Newtype(function () {
  return undefined;
});
var newtypeDual = new Newtype(function () {
  return undefined;
});
var newtypeDisj = new Newtype(function () {
  return undefined;
});
var newtypeConj = new Newtype(function () {
  return undefined;
});
var newtypeAdditive = new Newtype(function () {
  return undefined;
});

var collect = function collect(dictCoercible) {
  return function (dictNewtype) {
    return function (v) {
      return Safe_Coerce.coerce();
    };
  };
};

var alaF = function alaF(dictCoercible) {
  return function (dictCoercible1) {
    return function (dictNewtype) {
      return function (dictNewtype1) {
        return function (v) {
          return Safe_Coerce.coerce();
        };
      };
    };
  };
};

var ala = function ala(dictCoercible) {
  return function (dictNewtype) {
    return function (dictNewtype1) {
      return function (v) {
        return function (f) {
          return Safe_Coerce.coerce()(f(wrap()));
        };
      };
    };
  };
};

module.exports = {
  Newtype: Newtype,
  wrap: wrap,
  unwrap: unwrap,
  un: un,
  ala: ala,
  alaF: alaF,
  over: over,
  overF: overF,
  under: under,
  underF: underF,
  over2: over2,
  overF2: overF2,
  under2: under2,
  underF2: underF2,
  traverse: traverse,
  collect: collect,
  newtypeAdditive: newtypeAdditive,
  newtypeMultiplicative: newtypeMultiplicative,
  newtypeConj: newtypeConj,
  newtypeDisj: newtypeDisj,
  newtypeDual: newtypeDual,
  newtypeEndo: newtypeEndo,
  newtypeFirst: newtypeFirst,
  newtypeLast: newtypeLast
};
},{"../Safe.Coerce/index.js":"iVKl"}],"OKTm":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Identity = function Identity(x) {
  return x;
};

var showIdentity = function showIdentity(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Identity " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringIdentity = function semiringIdentity(dictSemiring) {
  return dictSemiring;
};

var semigroupIdenity = function semigroupIdenity(dictSemigroup) {
  return dictSemigroup;
};

var ringIdentity = function ringIdentity(dictRing) {
  return dictRing;
};

var ordIdentity = function ordIdentity(dictOrd) {
  return dictOrd;
};

var newtypeIdentity = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monoidIdentity = function monoidIdentity(dictMonoid) {
  return dictMonoid;
};

var lazyIdentity = function lazyIdentity(dictLazy) {
  return dictLazy;
};

var heytingAlgebraIdentity = function heytingAlgebraIdentity(dictHeytingAlgebra) {
  return dictHeytingAlgebra;
};

var functorIdentity = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});
var invariantIdentity = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorIdentity));
var extendIdentity = new Control_Extend.Extend(function () {
  return functorIdentity;
}, function (f) {
  return function (m) {
    return f(m);
  };
});

var euclideanRingIdentity = function euclideanRingIdentity(dictEuclideanRing) {
  return dictEuclideanRing;
};

var eqIdentity = function eqIdentity(dictEq) {
  return dictEq;
};

var eq1Identity = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqIdentity(dictEq));
});
var ord1Identity = new Data_Ord.Ord1(function () {
  return eq1Identity;
}, function (dictOrd) {
  return Data_Ord.compare(ordIdentity(dictOrd));
});
var comonadIdentity = new Control_Comonad.Comonad(function () {
  return extendIdentity;
}, function (v) {
  return v;
});

var commutativeRingIdentity = function commutativeRingIdentity(dictCommutativeRing) {
  return dictCommutativeRing;
};

var boundedIdentity = function boundedIdentity(dictBounded) {
  return dictBounded;
};

var booleanAlgebraIdentity = function booleanAlgebraIdentity(dictBooleanAlgebra) {
  return dictBooleanAlgebra;
};

var applyIdentity = new Control_Apply.Apply(function () {
  return functorIdentity;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindIdentity = new Control_Bind.Bind(function () {
  return applyIdentity;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeIdentity = new Control_Applicative.Applicative(function () {
  return applyIdentity;
}, Identity);
var monadIdentity = new Control_Monad.Monad(function () {
  return applicativeIdentity;
}, function () {
  return bindIdentity;
});
var altIdentity = new Control_Alt.Alt(function () {
  return functorIdentity;
}, function (x) {
  return function (v) {
    return x;
  };
});
module.exports = {
  Identity: Identity,
  newtypeIdentity: newtypeIdentity,
  eqIdentity: eqIdentity,
  ordIdentity: ordIdentity,
  boundedIdentity: boundedIdentity,
  heytingAlgebraIdentity: heytingAlgebraIdentity,
  booleanAlgebraIdentity: booleanAlgebraIdentity,
  semigroupIdenity: semigroupIdenity,
  monoidIdentity: monoidIdentity,
  semiringIdentity: semiringIdentity,
  euclideanRingIdentity: euclideanRingIdentity,
  ringIdentity: ringIdentity,
  commutativeRingIdentity: commutativeRingIdentity,
  lazyIdentity: lazyIdentity,
  showIdentity: showIdentity,
  eq1Identity: eq1Identity,
  ord1Identity: ord1Identity,
  functorIdentity: functorIdentity,
  invariantIdentity: invariantIdentity,
  altIdentity: altIdentity,
  applyIdentity: applyIdentity,
  applicativeIdentity: applicativeIdentity,
  bindIdentity: bindIdentity,
  monadIdentity: monadIdentity,
  extendIdentity: extendIdentity,
  comonadIdentity: comonadIdentity
};
},{"../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Comonad/index.js":"U0zO","../Control.Extend/index.js":"JIoJ","../Control.Monad/index.js":"UIxr","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Functor.Invariant/index.js":"AXkC","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Show/index.js":"mFY7"}],"bXvE":[function(require,module,exports) {
"use strict";

exports.pureE = function (a) {
  return function () {
    return a;
  };
};

exports.bindE = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.untilE = function (f) {
  return function () {
    while (!f()) {
      ;
    }
  };
};

exports.whileE = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
    };
  };
};

exports.forE = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreachE = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};
},{}],"oTWB":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var monadEffect = new Control_Monad.Monad(function () {
  return applicativeEffect;
}, function () {
  return bindEffect;
});
var bindEffect = new Control_Bind.Bind(function () {
  return applyEffect;
}, $foreign.bindE);
var applyEffect = new Control_Apply.Apply(function () {
  return functorEffect;
}, Control_Monad.ap(monadEffect));
var applicativeEffect = new Control_Applicative.Applicative(function () {
  return applyEffect;
}, $foreign.pureE);
var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));

var semigroupEffect = function semigroupEffect(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup)));
};

var monoidEffect = function monoidEffect(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffect(dictMonoid.Semigroup0());
  }, $foreign.pureE(Data_Monoid.mempty(dictMonoid)));
};

module.exports = {
  functorEffect: functorEffect,
  applyEffect: applyEffect,
  applicativeEffect: applicativeEffect,
  bindEffect: bindEffect,
  monadEffect: monadEffect,
  semigroupEffect: semigroupEffect,
  monoidEffect: monoidEffect,
  untilE: $foreign.untilE,
  whileE: $foreign.whileE,
  forE: $foreign.forE,
  foreachE: $foreign.foreachE
};
},{"./foreign.js":"bXvE","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Semigroup/index.js":"EsAJ"}],"bagd":[function(require,module,exports) {
"use strict";

exports.new = function (val) {
  return function () {
    return {
      value: val
    };
  };
};

exports.newWithSelf = function (f) {
  return function () {
    var ref = {
      value: null
    };
    ref.value = f(ref);
    return ref;
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifyImpl = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (val) {
  return function (ref) {
    return function () {
      ref.value = val;
    };
  };
};
},{}],"Jajm":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Effect = require("../Effect/index.js");

var modify$prime = $foreign.modifyImpl;

var modify = function modify(f) {
  return modify$prime(function (s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};

var modify_ = function modify_(f) {
  return function (s) {
    return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
  };
};

module.exports = {
  "modify'": modify$prime,
  modify: modify,
  modify_: modify_,
  "new": $foreign["new"],
  newWithSelf: $foreign.newWithSelf,
  read: $foreign.read,
  write: $foreign.write
};
},{"./foreign.js":"bagd","../Data.Functor/index.js":"AEHo","../Effect/index.js":"oTWB"}],"UVIy":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Loop = function () {
  function Loop(value0) {
    this.value0 = value0;
  }

  ;

  Loop.create = function (value0) {
    return new Loop(value0);
  };

  return Loop;
}();

var Done = function () {
  function Done(value0) {
    this.value0 = value0;
  }

  ;

  Done.create = function (value0) {
    return new Done(value0);
  };

  return Done;
}();

var MonadRec = function MonadRec(Monad0, tailRecM) {
  this.Monad0 = Monad0;
  this.tailRecM = tailRecM;
};

var tailRecM = function tailRecM(dict) {
  return dict.tailRecM;
};

var tailRecM2 = function tailRecM2(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (b) {
        return tailRecM(dictMonadRec)(function (o) {
          return f(o.a)(o.b);
        })({
          a: a,
          b: b
        });
      };
    };
  };
};

var tailRecM3 = function tailRecM3(dictMonadRec) {
  return function (f) {
    return function (a) {
      return function (b) {
        return function (c) {
          return tailRecM(dictMonadRec)(function (o) {
            return f(o.a)(o.b)(o.c);
          })({
            a: a,
            b: b,
            c: c
          });
        };
      };
    };
  };
};

var untilJust = function untilJust(dictMonadRec) {
  return function (m) {
    return tailRecM(dictMonadRec)(function (v) {
      return Data_Functor.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(m)(function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return new Loop(Data_Unit.unit);
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return new Done(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 155, column 43 - line 157, column 19): " + [v1.constructor.name]);
      });
    })(Data_Unit.unit);
  };
};

var whileJust = function whileJust(dictMonoid) {
  return function (dictMonadRec) {
    return function (m) {
      return tailRecM(dictMonadRec)(function (v) {
        return Data_Functor.mapFlipped(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(m)(function (v1) {
          if (v1 instanceof Data_Maybe.Nothing) {
            return new Done(v);
          }

          ;

          if (v1 instanceof Data_Maybe.Just) {
            return Loop.create(Data_Semigroup.append(dictMonoid.Semigroup0())(v)(v1.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 148, column 45 - line 150, column 26): " + [v1.constructor.name]);
        });
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var tailRec = function tailRec(f) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Loop) {
        $copy_v = f(v.value0);
        return;
      }

      ;

      if (v instanceof Done) {
        $tco_done = true;
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return function ($58) {
    return go(f($58));
  };
};

var monadRecMaybe = new MonadRec(function () {
  return Data_Maybe.monadMaybe;
}, function (f) {
  return function (a0) {
    var g = function g(v) {
      if (v instanceof Data_Maybe.Nothing) {
        return new Done(Data_Maybe.Nothing.value);
      }

      ;

      if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {
        return new Loop(f(v.value0.value0));
      }

      ;

      if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {
        return new Done(new Data_Maybe.Just(v.value0.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 129, column 7 - line 129, column 31): " + [v.constructor.name]);
    };

    return tailRec(g)(f(a0));
  };
});
var monadRecIdentity = new MonadRec(function () {
  return Data_Identity.monadIdentity;
}, function (f) {
  var runIdentity = function runIdentity(v) {
    return v;
  };

  var $59 = tailRec(function ($61) {
    return runIdentity(f($61));
  });
  return function ($60) {
    return Data_Identity.Identity($59($60));
  };
});
var monadRecFunction = new MonadRec(function () {
  return Control_Monad.monadFn;
}, function (f) {
  return function (a0) {
    return function (e) {
      return tailRec(function (a) {
        return f(a)(e);
      })(a0);
    };
  };
});
var monadRecEither = new MonadRec(function () {
  return Data_Either.monadEither;
}, function (f) {
  return function (a0) {
    var g = function g(v) {
      if (v instanceof Data_Either.Left) {
        return new Done(new Data_Either.Left(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
        return new Loop(f(v.value0.value0));
      }

      ;

      if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
        return new Done(new Data_Either.Right(v.value0.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [v.constructor.name]);
    };

    return tailRec(g)(f(a0));
  };
});
var monadRecEffect = new MonadRec(function () {
  return Effect.monadEffect;
}, function (f) {
  return function (a) {
    var fromDone = function fromDone(v) {
      if (v instanceof Done) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [v.constructor.name]);
    };

    return function __do() {
      var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();

      (function () {
        while (!function __do() {
          var v = Effect_Ref.read(r)();

          if (v instanceof Loop) {
            var e = f(v.value0)();
            Effect_Ref.write(e)(r)();
            return false;
          }

          ;

          if (v instanceof Done) {
            return true;
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [v.constructor.name]);
        }()) {}

        ;
        return {};
      })();

      return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
    };
  };
});
var functorStep = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Loop) {
      return new Loop(m.value0);
    }

    ;

    if (m instanceof Done) {
      return new Done(f(m.value0));
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 27, column 1 - line 27, column 48): " + [m.constructor.name]);
  };
});

var forever = function forever(dictMonadRec) {
  return function (ma) {
    return tailRecM(dictMonadRec)(function (u) {
      return Data_Functor.voidRight(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(new Loop(u))(ma);
    })(Data_Unit.unit);
  };
};

var bifunctorStep = new Data_Bifunctor.Bifunctor(function (v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Loop) {
        return new Loop(v(v2.value0));
      }

      ;

      if (v2 instanceof Done) {
        return new Done(v1(v2.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
});
module.exports = {
  Loop: Loop,
  Done: Done,
  MonadRec: MonadRec,
  tailRec: tailRec,
  tailRecM: tailRecM,
  tailRecM2: tailRecM2,
  tailRecM3: tailRecM3,
  forever: forever,
  whileJust: whileJust,
  untilJust: untilJust,
  functorStep: functorStep,
  bifunctorStep: bifunctorStep,
  monadRecIdentity: monadRecIdentity,
  monadRecEffect: monadRecEffect,
  monadRecFunction: monadRecFunction,
  monadRecEither: monadRecEither,
  monadRecMaybe: monadRecMaybe
};
},{"../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Bifunctor/index.js":"e2Wc","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Identity/index.js":"OKTm","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Semigroup/index.js":"EsAJ","../Data.Unit/index.js":"NhVk","../Effect/index.js":"oTWB","../Effect.Ref/index.js":"Jajm"}],"tIRA":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var MonadTrans = function MonadTrans(lift) {
  this.lift = lift;
};

var lift = function lift(dict) {
  return dict.lift;
};

module.exports = {
  lift: lift,
  MonadTrans: MonadTrans
};
},{}],"HkJx":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var MonadPlus = function MonadPlus(Alternative1, Monad0) {
  this.Alternative1 = Alternative1;
  this.Monad0 = Monad0;
};

var monadPlusArray = new MonadPlus(function () {
  return Control_Alternative.alternativeArray;
}, function () {
  return Control_Monad.monadArray;
});
module.exports = {
  MonadPlus: MonadPlus,
  monadPlusArray: monadPlusArray,
  Alt: Control_Alt.Alt,
  alt: Control_Alt.alt,
  Alternative: Control_Alternative.Alternative,
  guard: Control_Alternative.guard,
  Applicative: Control_Applicative.Applicative,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  Apply: Control_Apply.Apply,
  apply: Control_Apply.apply,
  Bind: Control_Bind.Bind,
  bind: Control_Bind.bind,
  ifM: Control_Bind.ifM,
  join: Control_Bind.join,
  Monad: Control_Monad.Monad,
  ap: Control_Monad.ap,
  liftM1: Control_Monad.liftM1,
  MonadZero: Control_MonadZero.MonadZero,
  Plus: Control_Plus.Plus,
  empty: Control_Plus.empty,
  Functor: Data_Functor.Functor,
  map: Data_Functor.map,
  "void": Data_Functor["void"]
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Functor/index.js":"AEHo"}],"kY6E":[function(require,module,exports) {
"use strict";

exports.foldrArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;

      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
      }

      return acc;
    };
  };
};

exports.foldlArray = function (f) {
  return function (init) {
    return function (xs) {
      var acc = init;
      var len = xs.length;

      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
      }

      return acc;
    };
  };
};
},{}],"zImR":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Coproduct = function Coproduct(x) {
  return x;
};

var showCoproduct = function showCoproduct(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      if (v instanceof Data_Either.Left) {
        return "(left " + (Data_Show.show(dictShow)(v.value0) + ")");
      }

      ;

      if (v instanceof Data_Either.Right) {
        return "(right " + (Data_Show.show(dictShow1)(v.value0) + ")");
      }

      ;
      throw new Error("Failed pattern match at Data.Functor.Coproduct (line 63, column 1 - line 65, column 60): " + [v.constructor.name]);
    });
  };
};

var right = function right(ga) {
  return new Data_Either.Right(ga);
};

var newtypeCoproduct = new Data_Newtype.Newtype(function () {
  return undefined;
});

var left = function left(fa) {
  return new Data_Either.Left(fa);
};

var functorCoproduct = function functorCoproduct(dictFunctor) {
  return function (dictFunctor1) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
      };
    });
  };
};

var eq1Coproduct = function eq1Coproduct(dictEq1) {
  return function (dictEq11) {
    return new Data_Eq.Eq1(function (dictEq) {
      return function (v) {
        return function (v1) {
          if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
            return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0);
          }

          ;

          if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
            return Data_Eq.eq1(dictEq11)(dictEq)(v.value0)(v1.value0);
          }

          ;
          return false;
        };
      };
    });
  };
};

var eqCoproduct = function eqCoproduct(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return new Data_Eq.Eq(Data_Eq.eq1(eq1Coproduct(dictEq1)(dictEq11))(dictEq));
    };
  };
};

var ord1Coproduct = function ord1Coproduct(dictOrd1) {
  return function (dictOrd11) {
    return new Data_Ord.Ord1(function () {
      return eq1Coproduct(dictOrd1.Eq10())(dictOrd11.Eq10());
    }, function (dictOrd) {
      return function (v) {
        return function (v1) {
          if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
            return Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);
          }

          ;

          if (v instanceof Data_Either.Left) {
            return Data_Ordering.LT.value;
          }

          ;

          if (v1 instanceof Data_Either.Left) {
            return Data_Ordering.GT.value;
          }

          ;

          if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
            return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value0)(v1.value0);
          }

          ;
          throw new Error("Failed pattern match at Data.Functor.Coproduct (line 57, column 5 - line 61, column 43): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    });
  };
};

var ordCoproduct = function ordCoproduct(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqCoproduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
      }, Data_Ord.compare1(ord1Coproduct(dictOrd1)(dictOrd11))(dictOrd));
    };
  };
};

var coproduct = function coproduct(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_Either.Left) {
        return v(v2.value0);
      }

      ;

      if (v2 instanceof Data_Either.Right) {
        return v1(v2.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Functor.Coproduct (line 27, column 1 - line 27, column 78): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var extendCoproduct = function extendCoproduct(dictExtend) {
  return function (dictExtend1) {
    return new Control_Extend.Extend(function () {
      return functorCoproduct(dictExtend.Functor0())(dictExtend1.Functor0());
    }, function (f) {
      var $61 = coproduct(function () {
        var $63 = Control_Extend.extend(dictExtend)(function ($65) {
          return f(Coproduct(Data_Either.Left.create($65)));
        });
        return function ($64) {
          return Data_Either.Left.create($63($64));
        };
      }())(function () {
        var $66 = Control_Extend.extend(dictExtend1)(function ($68) {
          return f(Coproduct(Data_Either.Right.create($68)));
        });
        return function ($67) {
          return Data_Either.Right.create($66($67));
        };
      }());
      return function ($62) {
        return Coproduct($61($62));
      };
    });
  };
};

var comonadCoproduct = function comonadCoproduct(dictComonad) {
  return function (dictComonad1) {
    return new Control_Comonad.Comonad(function () {
      return extendCoproduct(dictComonad.Extend0())(dictComonad1.Extend0());
    }, coproduct(Control_Comonad.extract(dictComonad))(Control_Comonad.extract(dictComonad1)));
  };
};

var bihoistCoproduct = function bihoistCoproduct(natF) {
  return function (natG) {
    return function (v) {
      return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(natF)(natG)(v);
    };
  };
};

module.exports = {
  Coproduct: Coproduct,
  left: left,
  right: right,
  coproduct: coproduct,
  bihoistCoproduct: bihoistCoproduct,
  newtypeCoproduct: newtypeCoproduct,
  eqCoproduct: eqCoproduct,
  eq1Coproduct: eq1Coproduct,
  ordCoproduct: ordCoproduct,
  ord1Coproduct: ord1Coproduct,
  showCoproduct: showCoproduct,
  functorCoproduct: functorCoproduct,
  extendCoproduct: extendCoproduct,
  comonadCoproduct: comonadCoproduct
};
},{"../Control.Comonad/index.js":"U0zO","../Control.Extend/index.js":"JIoJ","../Data.Bifunctor/index.js":"e2Wc","../Data.Either/index.js":"B2JL","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"WL67":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var First = function First(x) {
  return x;
};

var showFirst = function showFirst(dictShow) {
  return new Data_Show.Show(function (v) {
    return "First (" + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
  });
};

var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v instanceof Data_Maybe.Just) {
      return v;
    }

    ;
    return v1;
  };
});

var ordFirst = function ordFirst(dictOrd) {
  return Data_Maybe.ordMaybe(dictOrd);
};

var ord1First = Data_Maybe.ord1Maybe;
var newtypeFirst = new Data_Newtype.Newtype(function () {
  return undefined;
});
var monoidFirst = new Data_Monoid.Monoid(function () {
  return semigroupFirst;
}, Data_Maybe.Nothing.value);
var monadFirst = Data_Maybe.monadMaybe;
var invariantFirst = Data_Maybe.invariantMaybe;
var functorFirst = Data_Maybe.functorMaybe;
var extendFirst = Data_Maybe.extendMaybe;

var eqFirst = function eqFirst(dictEq) {
  return Data_Maybe.eqMaybe(dictEq);
};

var eq1First = Data_Maybe.eq1Maybe;

var boundedFirst = function boundedFirst(dictBounded) {
  return Data_Maybe.boundedMaybe(dictBounded);
};

var bindFirst = Data_Maybe.bindMaybe;
var applyFirst = Data_Maybe.applyMaybe;
var applicativeFirst = Data_Maybe.applicativeMaybe;
var altFirst = new Control_Alt.Alt(function () {
  return functorFirst;
}, Data_Semigroup.append(semigroupFirst));
var plusFirst = new Control_Plus.Plus(function () {
  return altFirst;
}, Data_Monoid.mempty(monoidFirst));
var alternativeFirst = new Control_Alternative.Alternative(function () {
  return applicativeFirst;
}, function () {
  return plusFirst;
});
var monadZeroFirst = new Control_MonadZero.MonadZero(function () {
  return alternativeFirst;
}, function () {
  return monadFirst;
}, function () {
  return undefined;
});
module.exports = {
  First: First,
  newtypeFirst: newtypeFirst,
  eqFirst: eqFirst,
  eq1First: eq1First,
  ordFirst: ordFirst,
  ord1First: ord1First,
  boundedFirst: boundedFirst,
  functorFirst: functorFirst,
  invariantFirst: invariantFirst,
  applyFirst: applyFirst,
  applicativeFirst: applicativeFirst,
  bindFirst: bindFirst,
  monadFirst: monadFirst,
  extendFirst: extendFirst,
  showFirst: showFirst,
  semigroupFirst: semigroupFirst,
  monoidFirst: monoidFirst,
  altFirst: altFirst,
  plusFirst: plusFirst,
  alternativeFirst: alternativeFirst,
  monadZeroFirst: monadZeroFirst
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"UG5s":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Conj = function Conj(x) {
  return x;
};

var showConj = function showConj(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Conj " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringConj = function semiringConj(dictHeytingAlgebra) {
  return new Data_Semiring.Semiring(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  }, function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  }, Data_HeytingAlgebra.ff(dictHeytingAlgebra), Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};

var semigroupConj = function semigroupConj(dictHeytingAlgebra) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  });
};

var ordConj = function ordConj(dictOrd) {
  return dictOrd;
};

var monoidConj = function monoidConj(dictHeytingAlgebra) {
  return new Data_Monoid.Monoid(function () {
    return semigroupConj(dictHeytingAlgebra);
  }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
};

var functorConj = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqConj = function eqConj(dictEq) {
  return dictEq;
};

var eq1Conj = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqConj(dictEq));
});
var ord1Conj = new Data_Ord.Ord1(function () {
  return eq1Conj;
}, function (dictOrd) {
  return Data_Ord.compare(ordConj(dictOrd));
});

var boundedConj = function boundedConj(dictBounded) {
  return dictBounded;
};

var applyConj = new Control_Apply.Apply(function () {
  return functorConj;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindConj = new Control_Bind.Bind(function () {
  return applyConj;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeConj = new Control_Applicative.Applicative(function () {
  return applyConj;
}, Conj);
var monadConj = new Control_Monad.Monad(function () {
  return applicativeConj;
}, function () {
  return bindConj;
});
module.exports = {
  Conj: Conj,
  eqConj: eqConj,
  eq1Conj: eq1Conj,
  ordConj: ordConj,
  ord1Conj: ord1Conj,
  boundedConj: boundedConj,
  showConj: showConj,
  functorConj: functorConj,
  applyConj: applyConj,
  applicativeConj: applicativeConj,
  bindConj: bindConj,
  monadConj: monadConj,
  semigroupConj: semigroupConj,
  monoidConj: monoidConj,
  semiringConj: semiringConj
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.HeytingAlgebra/index.js":"paZe","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7"}],"bR7j":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Disj = function Disj(x) {
  return x;
};

var showDisj = function showDisj(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Disj " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringDisj = function semiringDisj(dictHeytingAlgebra) {
  return new Data_Semiring.Semiring(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  }, function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
    };
  }, Data_HeytingAlgebra.tt(dictHeytingAlgebra), Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};

var semigroupDisj = function semigroupDisj(dictHeytingAlgebra) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
    };
  });
};

var ordDisj = function ordDisj(dictOrd) {
  return dictOrd;
};

var monoidDisj = function monoidDisj(dictHeytingAlgebra) {
  return new Data_Monoid.Monoid(function () {
    return semigroupDisj(dictHeytingAlgebra);
  }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
};

var functorDisj = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqDisj = function eqDisj(dictEq) {
  return dictEq;
};

var eq1Disj = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqDisj(dictEq));
});
var ord1Disj = new Data_Ord.Ord1(function () {
  return eq1Disj;
}, function (dictOrd) {
  return Data_Ord.compare(ordDisj(dictOrd));
});

var boundedDisj = function boundedDisj(dictBounded) {
  return dictBounded;
};

var applyDisj = new Control_Apply.Apply(function () {
  return functorDisj;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindDisj = new Control_Bind.Bind(function () {
  return applyDisj;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeDisj = new Control_Applicative.Applicative(function () {
  return applyDisj;
}, Disj);
var monadDisj = new Control_Monad.Monad(function () {
  return applicativeDisj;
}, function () {
  return bindDisj;
});
module.exports = {
  Disj: Disj,
  eqDisj: eqDisj,
  eq1Disj: eq1Disj,
  ordDisj: ordDisj,
  ord1Disj: ord1Disj,
  boundedDisj: boundedDisj,
  showDisj: showDisj,
  functorDisj: functorDisj,
  applyDisj: applyDisj,
  applicativeDisj: applicativeDisj,
  bindDisj: bindDisj,
  monadDisj: monadDisj,
  semigroupDisj: semigroupDisj,
  monoidDisj: monoidDisj,
  semiringDisj: semiringDisj
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.HeytingAlgebra/index.js":"paZe","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7"}],"ULyl":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Dual = function Dual(x) {
  return x;
};

var showDual = function showDual(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Dual " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupDual = function semigroupDual(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semigroup.append(dictSemigroup)(v1)(v);
    };
  });
};

var ordDual = function ordDual(dictOrd) {
  return dictOrd;
};

var monoidDual = function monoidDual(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupDual(dictMonoid.Semigroup0());
  }, Data_Monoid.mempty(dictMonoid));
};

var functorDual = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqDual = function eqDual(dictEq) {
  return dictEq;
};

var eq1Dual = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqDual(dictEq));
});
var ord1Dual = new Data_Ord.Ord1(function () {
  return eq1Dual;
}, function (dictOrd) {
  return Data_Ord.compare(ordDual(dictOrd));
});

var boundedDual = function boundedDual(dictBounded) {
  return dictBounded;
};

var applyDual = new Control_Apply.Apply(function () {
  return functorDual;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindDual = new Control_Bind.Bind(function () {
  return applyDual;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeDual = new Control_Applicative.Applicative(function () {
  return applyDual;
}, Dual);
var monadDual = new Control_Monad.Monad(function () {
  return applicativeDual;
}, function () {
  return bindDual;
});
module.exports = {
  Dual: Dual,
  eqDual: eqDual,
  eq1Dual: eq1Dual,
  ordDual: ordDual,
  ord1Dual: ord1Dual,
  boundedDual: boundedDual,
  showDual: showDual,
  functorDual: functorDual,
  applyDual: applyDual,
  applicativeDual: applicativeDual,
  bindDual: bindDual,
  monadDual: monadDual,
  semigroupDual: semigroupDual,
  monoidDual: monoidDual
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"o47N":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Endo = function Endo(x) {
  return x;
};

var showEndo = function showEndo(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Endo " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupEndo = function semigroupEndo(dictSemigroupoid) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Control_Semigroupoid.compose(dictSemigroupoid)(v)(v1);
    };
  });
};

var ordEndo = function ordEndo(dictOrd) {
  return dictOrd;
};

var monoidEndo = function monoidEndo(dictCategory) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEndo(dictCategory.Semigroupoid0());
  }, Control_Category.identity(dictCategory));
};

var eqEndo = function eqEndo(dictEq) {
  return dictEq;
};

var boundedEndo = function boundedEndo(dictBounded) {
  return dictBounded;
};

module.exports = {
  Endo: Endo,
  eqEndo: eqEndo,
  ordEndo: ordEndo,
  boundedEndo: boundedEndo,
  showEndo: showEndo,
  semigroupEndo: semigroupEndo,
  monoidEndo: monoidEndo
};
},{"../Control.Category/index.js":"IAi2","../Control.Semigroupoid/index.js":"riRy","../Data.Monoid/index.js":"TiEB","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"eVDl":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Foldable = function Foldable(foldMap, foldl, foldr) {
  this.foldMap = foldMap;
  this.foldl = foldl;
  this.foldr = foldr;
};

var foldr = function foldr(dict) {
  return dict.foldr;
};

var indexr = function indexr(dictFoldable) {
  return function (idx) {
    var go = function go(a) {
      return function (cursor) {
        if (cursor.elem instanceof Data_Maybe.Just) {
          return cursor;
        }

        ;
        var $152 = cursor.pos === idx;

        if ($152) {
          return {
            elem: new Data_Maybe.Just(a),
            pos: cursor.pos
          };
        }

        ;
        return {
          pos: cursor.pos + 1 | 0,
          elem: cursor.elem
        };
      };
    };

    var $309 = foldr(dictFoldable)(go)({
      elem: Data_Maybe.Nothing.value,
      pos: 0
    });
    return function ($310) {
      return function (v) {
        return v.elem;
      }($309($310));
    };
  };
};

var $$null = function $$null(dictFoldable) {
  return foldr(dictFoldable)(function (v) {
    return function (v1) {
      return false;
    };
  })(true);
};

var oneOf = function oneOf(dictFoldable) {
  return function (dictPlus) {
    return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));
  };
};

var oneOfMap = function oneOfMap(dictFoldable) {
  return function (dictPlus) {
    return function (f) {
      return foldr(dictFoldable)(function () {
        var $311 = Control_Alt.alt(dictPlus.Alt0());
        return function ($312) {
          return $311(f($312));
        };
      }())(Control_Plus.empty(dictPlus));
    };
  };
};

var traverse_ = function traverse_(dictApplicative) {
  return function (dictFoldable) {
    return function (f) {
      return foldr(dictFoldable)(function () {
        var $313 = Control_Apply.applySecond(dictApplicative.Apply0());
        return function ($314) {
          return $313(f($314));
        };
      }())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var for_ = function for_(dictApplicative) {
  return function (dictFoldable) {
    return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
  };
};

var sequence_ = function sequence_(dictApplicative) {
  return function (dictFoldable) {
    return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var foldl = function foldl(dict) {
  return dict.foldl;
};

var indexl = function indexl(dictFoldable) {
  return function (idx) {
    var go = function go(cursor) {
      return function (a) {
        if (cursor.elem instanceof Data_Maybe.Just) {
          return cursor;
        }

        ;
        var $155 = cursor.pos === idx;

        if ($155) {
          return {
            elem: new Data_Maybe.Just(a),
            pos: cursor.pos
          };
        }

        ;
        return {
          pos: cursor.pos + 1 | 0,
          elem: cursor.elem
        };
      };
    };

    var $315 = foldl(dictFoldable)(go)({
      elem: Data_Maybe.Nothing.value,
      pos: 0
    });
    return function ($316) {
      return function (v) {
        return v.elem;
      }($315($316));
    };
  };
};

var intercalate = function intercalate(dictFoldable) {
  return function (dictMonoid) {
    return function (sep) {
      return function (xs) {
        var go = function go(v) {
          return function (x) {
            if (v.init) {
              return {
                init: false,
                acc: x
              };
            }

            ;
            return {
              init: false,
              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
            };
          };
        };

        return foldl(dictFoldable)(go)({
          init: true,
          acc: Data_Monoid.mempty(dictMonoid)
        })(xs).acc;
      };
    };
  };
};

var length = function length(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(function (c) {
      return function (v) {
        return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
      };
    })(Data_Semiring.zero(dictSemiring));
  };
};

var maximumBy = function maximumBy(dictFoldable) {
  return function (cmp) {
    var max$prime = function max$prime(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(v1);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(function () {
            var $162 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);

            if ($162) {
              return v.value0;
            }

            ;
            return v1;
          }());
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
  };
};

var maximum = function maximum(dictOrd) {
  return function (dictFoldable) {
    return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
  };
};

var minimumBy = function minimumBy(dictFoldable) {
  return function (cmp) {
    var min$prime = function min$prime(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return new Data_Maybe.Just(v1);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return new Data_Maybe.Just(function () {
            var $166 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);

            if ($166) {
              return v.value0;
            }

            ;
            return v1;
          }());
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
  };
};

var minimum = function minimum(dictOrd) {
  return function (dictFoldable) {
    return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
  };
};

var product = function product(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));
  };
};

var sum = function sum(dictFoldable) {
  return function (dictSemiring) {
    return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
  };
};

var foldableTuple = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v.value1)(z);
    };
  };
});
var foldableMultiplicative = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableMaybe = new Foldable(function (dictMonoid) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return v(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return z;
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return v(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return z;
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return v(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var foldableIdentity = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableEither = new Foldable(function (dictMonoid) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return v(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return z;
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return v(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return z;
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return v(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var foldableDual = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableDisj = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableConst = new Foldable(function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return Data_Monoid.mempty(dictMonoid);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
});
var foldableConj = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});
var foldableAdditive = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(v)(z);
    };
  };
});

var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
  return function (dictMonoid) {
    return function (f) {
      return foldr(dictFoldable)(function (x) {
        return function (acc) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldableArray = new Foldable(function (dictMonoid) {
  return foldMapDefaultR(foldableArray)(dictMonoid);
}, $foreign.foldlArray, $foreign.foldrArray);

var foldMapDefaultL = function foldMapDefaultL(dictFoldable) {
  return function (dictMonoid) {
    return function (f) {
      return foldl(dictFoldable)(function (acc) {
        return function (x) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldMap = function foldMap(dict) {
  return dict.foldMap;
};

var foldableApp = function foldableApp(dictFoldable) {
  return new Foldable(function (dictMonoid) {
    return function (f) {
      return function (v) {
        return foldMap(dictFoldable)(dictMonoid)(f)(v);
      };
    };
  }, function (f) {
    return function (i) {
      return function (v) {
        return foldl(dictFoldable)(f)(i)(v);
      };
    };
  }, function (f) {
    return function (i) {
      return function (v) {
        return foldr(dictFoldable)(f)(i)(v);
      };
    };
  });
};

var foldableCompose = function foldableCompose(dictFoldable) {
  return function (dictFoldable1) {
    return new Foldable(function (dictMonoid) {
      return function (f) {
        return function (v) {
          return foldMap(dictFoldable)(dictMonoid)(foldMap(dictFoldable1)(dictMonoid)(f))(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return foldl(dictFoldable)(foldl(dictFoldable1)(f))(i)(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return foldr(dictFoldable)(Data_Function.flip(foldr(dictFoldable1)(f)))(i)(v);
        };
      };
    });
  };
};

var foldableCoproduct = function foldableCoproduct(dictFoldable) {
  return function (dictFoldable1) {
    return new Foldable(function (dictMonoid) {
      return function (f) {
        return Data_Functor_Coproduct.coproduct(foldMap(dictFoldable)(dictMonoid)(f))(foldMap(dictFoldable1)(dictMonoid)(f));
      };
    }, function (f) {
      return function (z) {
        return Data_Functor_Coproduct.coproduct(foldl(dictFoldable)(f)(z))(foldl(dictFoldable1)(f)(z));
      };
    }, function (f) {
      return function (z) {
        return Data_Functor_Coproduct.coproduct(foldr(dictFoldable)(f)(z))(foldr(dictFoldable1)(f)(z));
      };
    });
  };
};

var foldableFirst = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return foldMap(foldableMaybe)(dictMonoid)(f)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldl(foldableMaybe)(f)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldr(foldableMaybe)(f)(z)(v);
    };
  };
});
var foldableLast = new Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return foldMap(foldableMaybe)(dictMonoid)(f)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldl(foldableMaybe)(f)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return foldr(foldableMaybe)(f)(z)(v);
    };
  };
});

var foldableProduct = function foldableProduct(dictFoldable) {
  return function (dictFoldable1) {
    return new Foldable(function (dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(foldMap(dictFoldable)(dictMonoid)(f)(v.value0))(foldMap(dictFoldable1)(dictMonoid)(f)(v.value1));
        };
      };
    }, function (f) {
      return function (z) {
        return function (v) {
          return foldl(dictFoldable1)(f)(foldl(dictFoldable)(f)(z)(v.value0))(v.value1);
        };
      };
    }, function (f) {
      return function (z) {
        return function (v) {
          return foldr(dictFoldable)(f)(foldr(dictFoldable1)(f)(z)(v.value1))(v.value0);
        };
      };
    });
  };
};

var foldlDefault = function foldlDefault(dictFoldable) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap()(Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function () {
          var $317 = Data_Function.flip(c);
          return function ($318) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($317($318)));
          };
        }())(xs)))(u);
      };
    };
  };
};

var foldrDefault = function foldrDefault(dictFoldable) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($319) {
          return Data_Monoid_Endo.Endo(c($319));
        })(xs))(u);
      };
    };
  };
};

var lookup = function lookup(dictFoldable) {
  return function (dictEq) {
    return function (a) {
      var $320 = Data_Newtype.unwrap();
      var $321 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
        var $302 = Data_Eq.eq(dictEq)(a)(v.value0);

        if ($302) {
          return new Data_Maybe.Just(v.value1);
        }

        ;
        return Data_Maybe.Nothing.value;
      });
      return function ($322) {
        return $320($321($322));
      };
    };
  };
};

var surroundMap = function surroundMap(dictFoldable) {
  return function (dictSemigroup) {
    return function (d) {
      return function (t) {
        return function (f) {
          var joined = function joined(a) {
            return function (m) {
              return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));
            };
          };

          return Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
        };
      };
    };
  };
};

var surround = function surround(dictFoldable) {
  return function (dictSemigroup) {
    return function (d) {
      return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.identity(Control_Category.categoryFn));
    };
  };
};

var foldM = function foldM(dictFoldable) {
  return function (dictMonad) {
    return function (f) {
      return function (b0) {
        return foldl(dictFoldable)(function (b) {
          return function (a) {
            return Control_Bind.bind(dictMonad.Bind1())(b)(Data_Function.flip(f)(a));
          };
        })(Control_Applicative.pure(dictMonad.Applicative0())(b0));
      };
    };
  };
};

var fold = function fold(dictFoldable) {
  return function (dictMonoid) {
    return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var findMap = function findMap(dictFoldable) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing) {
          return p(v1);
        }

        ;
        return v;
      };
    };

    return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
  };
};

var find = function find(dictFoldable) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        if (v instanceof Data_Maybe.Nothing && p(v1)) {
          return new Data_Maybe.Just(v1);
        }

        ;
        return v;
      };
    };

    return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
  };
};

var any = function any(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
  };
};

var elem = function elem(dictFoldable) {
  return function (dictEq) {
    var $323 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
    var $324 = Data_Eq.eq(dictEq);
    return function ($325) {
      return $323($324($325));
    };
  };
};

var notElem = function notElem(dictFoldable) {
  return function (dictEq) {
    return function (x) {
      var $326 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
      var $327 = elem(dictFoldable)(dictEq)(x);
      return function ($328) {
        return $326($327($328));
      };
    };
  };
};

var or = function or(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var all = function all(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return Data_Newtype.alaF()()()()(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
  };
};

var and = function and(dictFoldable) {
  return function (dictHeytingAlgebra) {
    return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  Foldable: Foldable,
  foldr: foldr,
  foldl: foldl,
  foldMap: foldMap,
  foldrDefault: foldrDefault,
  foldlDefault: foldlDefault,
  foldMapDefaultL: foldMapDefaultL,
  foldMapDefaultR: foldMapDefaultR,
  fold: fold,
  foldM: foldM,
  traverse_: traverse_,
  for_: for_,
  sequence_: sequence_,
  oneOf: oneOf,
  oneOfMap: oneOfMap,
  intercalate: intercalate,
  surroundMap: surroundMap,
  surround: surround,
  and: and,
  or: or,
  all: all,
  any: any,
  sum: sum,
  product: product,
  elem: elem,
  notElem: notElem,
  indexl: indexl,
  indexr: indexr,
  find: find,
  findMap: findMap,
  maximum: maximum,
  maximumBy: maximumBy,
  minimum: minimum,
  minimumBy: minimumBy,
  "null": $$null,
  length: length,
  lookup: lookup,
  foldableArray: foldableArray,
  foldableMaybe: foldableMaybe,
  foldableFirst: foldableFirst,
  foldableLast: foldableLast,
  foldableAdditive: foldableAdditive,
  foldableDual: foldableDual,
  foldableDisj: foldableDisj,
  foldableConj: foldableConj,
  foldableMultiplicative: foldableMultiplicative,
  foldableEither: foldableEither,
  foldableTuple: foldableTuple,
  foldableIdentity: foldableIdentity,
  foldableConst: foldableConst,
  foldableProduct: foldableProduct,
  foldableCoproduct: foldableCoproduct,
  foldableCompose: foldableCompose,
  foldableApp: foldableApp
};
},{"./foreign.js":"kY6E","../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Plus/index.js":"oMBg","../Data.Either/index.js":"B2JL","../Data.Eq/index.js":"Pq4F","../Data.Function/index.js":"ImXJ","../Data.Functor.Coproduct/index.js":"zImR","../Data.HeytingAlgebra/index.js":"paZe","../Data.Maybe/index.js":"mN7T","../Data.Maybe.First/index.js":"WL67","../Data.Monoid/index.js":"TiEB","../Data.Monoid.Conj/index.js":"UG5s","../Data.Monoid.Disj/index.js":"bR7j","../Data.Monoid.Dual/index.js":"ULyl","../Data.Monoid.Endo/index.js":"o47N","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Unit/index.js":"NhVk"}],"ZgoH":[function(require,module,exports) {
"use strict";

exports.mapWithIndexArray = function (f) {
  return function (xs) {
    var l = xs.length;
    var result = Array(l);

    for (var i = 0; i < l; i++) {
      result[i] = f(i)(xs[i]);
    }

    return result;
  };
};
},{}],"OmNG":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Const = function Const(x) {
  return x;
};

var showConst = function showConst(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Const " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semiringConst = function semiringConst(dictSemiring) {
  return dictSemiring;
};

var semigroupoidConst = new Control_Semigroupoid.Semigroupoid(function (v) {
  return function (v1) {
    return v1;
  };
});

var semigroupConst = function semigroupConst(dictSemigroup) {
  return dictSemigroup;
};

var ringConst = function ringConst(dictRing) {
  return dictRing;
};

var ordConst = function ordConst(dictOrd) {
  return dictOrd;
};

var newtypeConst = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monoidConst = function monoidConst(dictMonoid) {
  return dictMonoid;
};

var heytingAlgebraConst = function heytingAlgebraConst(dictHeytingAlgebra) {
  return dictHeytingAlgebra;
};

var functorConst = new Data_Functor.Functor(function (f) {
  return function (m) {
    return m;
  };
});
var invariantConst = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorConst));

var euclideanRingConst = function euclideanRingConst(dictEuclideanRing) {
  return dictEuclideanRing;
};

var eqConst = function eqConst(dictEq) {
  return dictEq;
};

var eq1Const = function eq1Const(dictEq) {
  return new Data_Eq.Eq1(function (dictEq1) {
    return Data_Eq.eq(eqConst(dictEq));
  });
};

var ord1Const = function ord1Const(dictOrd) {
  return new Data_Ord.Ord1(function () {
    return eq1Const(dictOrd.Eq0());
  }, function (dictOrd1) {
    return Data_Ord.compare(ordConst(dictOrd));
  });
};

var commutativeRingConst = function commutativeRingConst(dictCommutativeRing) {
  return dictCommutativeRing;
};

var boundedConst = function boundedConst(dictBounded) {
  return dictBounded;
};

var booleanAlgebraConst = function booleanAlgebraConst(dictBooleanAlgebra) {
  return dictBooleanAlgebra;
};

var applyConst = function applyConst(dictSemigroup) {
  return new Control_Apply.Apply(function () {
    return functorConst;
  }, function (v) {
    return function (v1) {
      return Data_Semigroup.append(dictSemigroup)(v)(v1);
    };
  });
};

var applicativeConst = function applicativeConst(dictMonoid) {
  return new Control_Applicative.Applicative(function () {
    return applyConst(dictMonoid.Semigroup0());
  }, function (v) {
    return Data_Monoid.mempty(dictMonoid);
  });
};

module.exports = {
  Const: Const,
  newtypeConst: newtypeConst,
  eqConst: eqConst,
  eq1Const: eq1Const,
  ordConst: ordConst,
  ord1Const: ord1Const,
  boundedConst: boundedConst,
  showConst: showConst,
  semigroupoidConst: semigroupoidConst,
  semigroupConst: semigroupConst,
  monoidConst: monoidConst,
  semiringConst: semiringConst,
  ringConst: ringConst,
  euclideanRingConst: euclideanRingConst,
  commutativeRingConst: commutativeRingConst,
  heytingAlgebraConst: heytingAlgebraConst,
  booleanAlgebraConst: booleanAlgebraConst,
  functorConst: functorConst,
  invariantConst: invariantConst,
  applyConst: applyConst,
  applicativeConst: applicativeConst
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Semigroupoid/index.js":"riRy","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Functor.Invariant/index.js":"AXkC","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"FExJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var App = function App(x) {
  return x;
};

var showApp = function showApp(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(App " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupApp = function semigroupApp(dictApply) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
      };
    });
  };
};

var plusApp = function plusApp(dictPlus) {
  return dictPlus;
};

var newtypeApp = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monoidApp = function monoidApp(dictApplicative) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupApp(dictApplicative.Apply0())(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(dictApplicative)(Data_Monoid.mempty(dictMonoid)));
  };
};

var monadPlusApp = function monadPlusApp(dictMonadPlus) {
  return dictMonadPlus;
};

var monadApp = function monadApp(dictMonad) {
  return dictMonad;
};

var lazyApp = function lazyApp(dictLazy) {
  return dictLazy;
};

var hoistLowerApp = Unsafe_Coerce.unsafeCoerce;
var hoistLiftApp = Unsafe_Coerce.unsafeCoerce;

var hoistApp = function hoistApp(f) {
  return function (v) {
    return f(v);
  };
};

var functorApp = function functorApp(dictFunctor) {
  return dictFunctor;
};

var extendApp = function extendApp(dictExtend) {
  return dictExtend;
};

var eqApp = function eqApp(dictEq1) {
  return function (dictEq) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq1(dictEq1)(dictEq)(x)(y);
      };
    });
  };
};

var ordApp = function ordApp(dictOrd1) {
  return function (dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqApp(dictOrd1.Eq10())(dictOrd.Eq0());
    }, function (x) {
      return function (y) {
        return Data_Ord.compare1(dictOrd1)(dictOrd)(x)(y);
      };
    });
  };
};

var eq1App = function eq1App(dictEq1) {
  return new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqApp(dictEq1)(dictEq));
  });
};

var ord1App = function ord1App(dictOrd1) {
  return new Data_Ord.Ord1(function () {
    return eq1App(dictOrd1.Eq10());
  }, function (dictOrd) {
    return Data_Ord.compare(ordApp(dictOrd1)(dictOrd));
  });
};

var comonadApp = function comonadApp(dictComonad) {
  return dictComonad;
};

var bindApp = function bindApp(dictBind) {
  return dictBind;
};

var applyApp = function applyApp(dictApply) {
  return dictApply;
};

var applicativeApp = function applicativeApp(dictApplicative) {
  return dictApplicative;
};

var alternativeApp = function alternativeApp(dictAlternative) {
  return dictAlternative;
};

var monadZeroApp = function monadZeroApp(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeApp(dictMonadZero.Alternative1());
  }, function () {
    return monadApp(dictMonadZero.Monad0());
  }, function () {
    return undefined;
  });
};

var altApp = function altApp(dictAlt) {
  return dictAlt;
};

module.exports = {
  App: App,
  hoistApp: hoistApp,
  hoistLiftApp: hoistLiftApp,
  hoistLowerApp: hoistLowerApp,
  newtypeApp: newtypeApp,
  eqApp: eqApp,
  eq1App: eq1App,
  ordApp: ordApp,
  ord1App: ord1App,
  showApp: showApp,
  semigroupApp: semigroupApp,
  monoidApp: monoidApp,
  monadZeroApp: monadZeroApp,
  functorApp: functorApp,
  applyApp: applyApp,
  applicativeApp: applicativeApp,
  bindApp: bindApp,
  monadApp: monadApp,
  altApp: altApp,
  plusApp: plusApp,
  alternativeApp: alternativeApp,
  monadPlusApp: monadPlusApp,
  lazyApp: lazyApp,
  extendApp: extendApp,
  comonadApp: comonadApp
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.MonadZero/index.js":"lD5R","../Data.Eq/index.js":"Pq4F","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Unsafe.Coerce/index.js":"ETUV"}],"z8br":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Compose = function Compose(x) {
  return x;
};

var showCompose = function showCompose(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Compose " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var newtypeCompose = new Data_Newtype.Newtype(function () {
  return undefined;
});

var functorCompose = function functorCompose(dictFunctor) {
  return function (dictFunctor1) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
      };
    });
  };
};

var eqCompose = function eqCompose(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return new Data_Eq.Eq(function (v) {
        return function (v1) {
          return Data_Eq.eq1(dictEq1)(Data_Functor_App.eqApp(dictEq11)(dictEq))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
        };
      });
    };
  };
};

var ordCompose = function ordCompose(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqCompose(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
      }, function (v) {
        return function (v1) {
          return Data_Ord.compare1(dictOrd1)(Data_Functor_App.ordApp(dictOrd11)(dictOrd))(Data_Functor_App.hoistLiftApp(v))(Data_Functor_App.hoistLiftApp(v1));
        };
      });
    };
  };
};

var eq1Compose = function eq1Compose(dictEq1) {
  return function (dictEq11) {
    return new Data_Eq.Eq1(function (dictEq) {
      return Data_Eq.eq(eqCompose(dictEq1)(dictEq11)(dictEq));
    });
  };
};

var ord1Compose = function ord1Compose(dictOrd1) {
  return function (dictOrd11) {
    return new Data_Ord.Ord1(function () {
      return eq1Compose(dictOrd1.Eq10())(dictOrd11.Eq10());
    }, function (dictOrd) {
      return Data_Ord.compare(ordCompose(dictOrd1)(dictOrd11)(dictOrd));
    });
  };
};

var bihoistCompose = function bihoistCompose(dictFunctor) {
  return function (natF) {
    return function (natG) {
      return function (v) {
        return natF(Data_Functor.map(dictFunctor)(natG)(v));
      };
    };
  };
};

var applyCompose = function applyCompose(dictApply) {
  return function (dictApply1) {
    return new Control_Apply.Apply(function () {
      return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
    }, function (v) {
      return function (v1) {
        return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
      };
    });
  };
};

var applicativeCompose = function applicativeCompose(dictApplicative) {
  return function (dictApplicative1) {
    return new Control_Applicative.Applicative(function () {
      return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
    }, function () {
      var $51 = Control_Applicative.pure(dictApplicative);
      var $52 = Control_Applicative.pure(dictApplicative1);
      return function ($53) {
        return Compose($51($52($53)));
      };
    }());
  };
};

var altCompose = function altCompose(dictAlt) {
  return function (dictFunctor) {
    return new Control_Alt.Alt(function () {
      return functorCompose(dictAlt.Functor0())(dictFunctor);
    }, function (v) {
      return function (v1) {
        return Compose(Control_Alt.alt(dictAlt)(v)(v1));
      };
    });
  };
};

var plusCompose = function plusCompose(dictPlus) {
  return function (dictFunctor) {
    return new Control_Plus.Plus(function () {
      return altCompose(dictPlus.Alt0())(dictFunctor);
    }, Control_Plus.empty(dictPlus));
  };
};

var alternativeCompose = function alternativeCompose(dictAlternative) {
  return function (dictApplicative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeCompose(dictAlternative.Applicative0())(dictApplicative);
    }, function () {
      return plusCompose(dictAlternative.Plus1())(dictApplicative.Apply0().Functor0());
    });
  };
};

module.exports = {
  Compose: Compose,
  bihoistCompose: bihoistCompose,
  newtypeCompose: newtypeCompose,
  eqCompose: eqCompose,
  eq1Compose: eq1Compose,
  ordCompose: ordCompose,
  ord1Compose: ord1Compose,
  showCompose: showCompose,
  functorCompose: functorCompose,
  applyCompose: applyCompose,
  applicativeCompose: applicativeCompose,
  altCompose: altCompose,
  plusCompose: plusCompose,
  alternativeCompose: alternativeCompose
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Plus/index.js":"oMBg","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Functor.App/index.js":"FExJ","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Show/index.js":"mFY7"}],"TPdM":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Product = function Product(x) {
  return x;
};

var showProduct = function showProduct(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(product " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var product = function product(fa) {
  return function (ga) {
    return new Data_Tuple.Tuple(fa, ga);
  };
};

var newtypeProduct = new Data_Newtype.Newtype(function () {
  return undefined;
});

var functorProduct = function functorProduct(dictFunctor) {
  return function (dictFunctor1) {
    return new Data_Functor.Functor(function (f) {
      return function (v) {
        return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(Data_Functor.map(dictFunctor)(f))(Data_Functor.map(dictFunctor1)(f))(v);
      };
    });
  };
};

var eq1Product = function eq1Product(dictEq1) {
  return function (dictEq11) {
    return new Data_Eq.Eq1(function (dictEq) {
      return function (v) {
        return function (v1) {
          return Data_Eq.eq1(dictEq1)(dictEq)(v.value0)(v1.value0) && Data_Eq.eq1(dictEq11)(dictEq)(v.value1)(v1.value1);
        };
      };
    });
  };
};

var eqProduct = function eqProduct(dictEq1) {
  return function (dictEq11) {
    return function (dictEq) {
      return new Data_Eq.Eq(Data_Eq.eq1(eq1Product(dictEq1)(dictEq11))(dictEq));
    };
  };
};

var ord1Product = function ord1Product(dictOrd1) {
  return function (dictOrd11) {
    return new Data_Ord.Ord1(function () {
      return eq1Product(dictOrd1.Eq10())(dictOrd11.Eq10());
    }, function (dictOrd) {
      return function (v) {
        return function (v1) {
          var v2 = Data_Ord.compare1(dictOrd1)(dictOrd)(v.value0)(v1.value0);

          if (v2 instanceof Data_Ordering.EQ) {
            return Data_Ord.compare1(dictOrd11)(dictOrd)(v.value1)(v1.value1);
          }

          ;
          return v2;
        };
      };
    });
  };
};

var ordProduct = function ordProduct(dictOrd1) {
  return function (dictOrd11) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqProduct(dictOrd1.Eq10())(dictOrd11.Eq10())(dictOrd.Eq0());
      }, Data_Ord.compare1(ord1Product(dictOrd1)(dictOrd11))(dictOrd));
    };
  };
};

var bihoistProduct = function bihoistProduct(natF) {
  return function (natG) {
    return function (v) {
      return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(natF)(natG)(v);
    };
  };
};

var applyProduct = function applyProduct(dictApply) {
  return function (dictApply1) {
    return new Control_Apply.Apply(function () {
      return functorProduct(dictApply.Functor0())(dictApply1.Functor0());
    }, function (v) {
      return function (v1) {
        return product(Control_Apply.apply(dictApply)(v.value0)(v1.value0))(Control_Apply.apply(dictApply1)(v.value1)(v1.value1));
      };
    });
  };
};

var bindProduct = function bindProduct(dictBind) {
  return function (dictBind1) {
    return new Control_Bind.Bind(function () {
      return applyProduct(dictBind.Apply0())(dictBind1.Apply0());
    }, function (v) {
      return function (f) {
        return product(Control_Bind.bind(dictBind)(v.value0)(function () {
          var $67 = Data_Newtype.unwrap();
          return function ($68) {
            return Data_Tuple.fst($67(f($68)));
          };
        }()))(Control_Bind.bind(dictBind1)(v.value1)(function () {
          var $69 = Data_Newtype.unwrap();
          return function ($70) {
            return Data_Tuple.snd($69(f($70)));
          };
        }()));
      };
    });
  };
};

var applicativeProduct = function applicativeProduct(dictApplicative) {
  return function (dictApplicative1) {
    return new Control_Applicative.Applicative(function () {
      return applyProduct(dictApplicative.Apply0())(dictApplicative1.Apply0());
    }, function (a) {
      return product(Control_Applicative.pure(dictApplicative)(a))(Control_Applicative.pure(dictApplicative1)(a));
    });
  };
};

var monadProduct = function monadProduct(dictMonad) {
  return function (dictMonad1) {
    return new Control_Monad.Monad(function () {
      return applicativeProduct(dictMonad.Applicative0())(dictMonad1.Applicative0());
    }, function () {
      return bindProduct(dictMonad.Bind1())(dictMonad1.Bind1());
    });
  };
};

module.exports = {
  Product: Product,
  product: product,
  bihoistProduct: bihoistProduct,
  newtypeProduct: newtypeProduct,
  eqProduct: eqProduct,
  eq1Product: eq1Product,
  ordProduct: ordProduct,
  ord1Product: ord1Product,
  showProduct: showProduct,
  functorProduct: functorProduct,
  applyProduct: applyProduct,
  applicativeProduct: applicativeProduct,
  bindProduct: bindProduct,
  monadProduct: monadProduct
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Bifunctor/index.js":"e2Wc","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7","../Data.Tuple/index.js":"IIOM"}],"aQky":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Last = function Last(x) {
  return x;
};

var showLast = function showLast(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Last " + (Data_Show.show(Data_Maybe.showMaybe(dictShow))(v) + ")");
  });
};

var semigroupLast = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    if (v1 instanceof Data_Maybe.Just) {
      return v1;
    }

    ;

    if (v1 instanceof Data_Maybe.Nothing) {
      return v;
    }

    ;
    throw new Error("Failed pattern match at Data.Maybe.Last (line 52, column 1 - line 54, column 36): " + [v.constructor.name, v1.constructor.name]);
  };
});

var ordLast = function ordLast(dictOrd) {
  return Data_Maybe.ordMaybe(dictOrd);
};

var ord1Last = Data_Maybe.ord1Maybe;
var newtypeLast = new Data_Newtype.Newtype(function () {
  return undefined;
});
var monoidLast = new Data_Monoid.Monoid(function () {
  return semigroupLast;
}, Data_Maybe.Nothing.value);
var monadLast = Data_Maybe.monadMaybe;
var invariantLast = Data_Maybe.invariantMaybe;
var functorLast = Data_Maybe.functorMaybe;
var extendLast = Data_Maybe.extendMaybe;

var eqLast = function eqLast(dictEq) {
  return Data_Maybe.eqMaybe(dictEq);
};

var eq1Last = Data_Maybe.eq1Maybe;

var boundedLast = function boundedLast(dictBounded) {
  return Data_Maybe.boundedMaybe(dictBounded);
};

var bindLast = Data_Maybe.bindMaybe;
var applyLast = Data_Maybe.applyMaybe;
var applicativeLast = Data_Maybe.applicativeMaybe;
var altLast = new Control_Alt.Alt(function () {
  return functorLast;
}, Data_Semigroup.append(semigroupLast));
var plusLast = new Control_Plus.Plus(function () {
  return altLast;
}, Data_Monoid.mempty(monoidLast));
var alternativeLast = new Control_Alternative.Alternative(function () {
  return applicativeLast;
}, function () {
  return plusLast;
});
var monadZeroLast = new Control_MonadZero.MonadZero(function () {
  return alternativeLast;
}, function () {
  return monadLast;
}, function () {
  return undefined;
});
module.exports = {
  Last: Last,
  newtypeLast: newtypeLast,
  eqLast: eqLast,
  eq1Last: eq1Last,
  ordLast: ordLast,
  ord1Last: ord1Last,
  boundedLast: boundedLast,
  functorLast: functorLast,
  invariantLast: invariantLast,
  applyLast: applyLast,
  applicativeLast: applicativeLast,
  bindLast: bindLast,
  monadLast: monadLast,
  extendLast: extendLast,
  showLast: showLast,
  semigroupLast: semigroupLast,
  monoidLast: monoidLast,
  altLast: altLast,
  plusLast: plusLast,
  alternativeLast: alternativeLast,
  monadZeroLast: monadZeroLast
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"fHyj":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Additive = function Additive(x) {
  return x;
};

var showAdditive = function showAdditive(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Additive " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupAdditive = function semigroupAdditive(dictSemiring) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semiring.add(dictSemiring)(v)(v1);
    };
  });
};

var ordAdditive = function ordAdditive(dictOrd) {
  return dictOrd;
};

var monoidAdditive = function monoidAdditive(dictSemiring) {
  return new Data_Monoid.Monoid(function () {
    return semigroupAdditive(dictSemiring);
  }, Data_Semiring.zero(dictSemiring));
};

var functorAdditive = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqAdditive = function eqAdditive(dictEq) {
  return dictEq;
};

var eq1Additive = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqAdditive(dictEq));
});
var ord1Additive = new Data_Ord.Ord1(function () {
  return eq1Additive;
}, function (dictOrd) {
  return Data_Ord.compare(ordAdditive(dictOrd));
});

var boundedAdditive = function boundedAdditive(dictBounded) {
  return dictBounded;
};

var applyAdditive = new Control_Apply.Apply(function () {
  return functorAdditive;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindAdditive = new Control_Bind.Bind(function () {
  return applyAdditive;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeAdditive = new Control_Applicative.Applicative(function () {
  return applyAdditive;
}, Additive);
var monadAdditive = new Control_Monad.Monad(function () {
  return applicativeAdditive;
}, function () {
  return bindAdditive;
});
module.exports = {
  Additive: Additive,
  eqAdditive: eqAdditive,
  eq1Additive: eq1Additive,
  ordAdditive: ordAdditive,
  ord1Additive: ord1Additive,
  boundedAdditive: boundedAdditive,
  showAdditive: showAdditive,
  functorAdditive: functorAdditive,
  applyAdditive: applyAdditive,
  applicativeAdditive: applicativeAdditive,
  bindAdditive: bindAdditive,
  monadAdditive: monadAdditive,
  semigroupAdditive: semigroupAdditive,
  monoidAdditive: monoidAdditive
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7"}],"y5cd":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Multiplicative = function Multiplicative(x) {
  return x;
};

var showMultiplicative = function showMultiplicative(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Multiplicative " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMultiplicative = function semigroupMultiplicative(dictSemiring) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Semiring.mul(dictSemiring)(v)(v1);
    };
  });
};

var ordMultiplicative = function ordMultiplicative(dictOrd) {
  return dictOrd;
};

var monoidMultiplicative = function monoidMultiplicative(dictSemiring) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMultiplicative(dictSemiring);
  }, Data_Semiring.one(dictSemiring));
};

var functorMultiplicative = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});

var eqMultiplicative = function eqMultiplicative(dictEq) {
  return dictEq;
};

var eq1Multiplicative = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqMultiplicative(dictEq));
});
var ord1Multiplicative = new Data_Ord.Ord1(function () {
  return eq1Multiplicative;
}, function (dictOrd) {
  return Data_Ord.compare(ordMultiplicative(dictOrd));
});

var boundedMultiplicative = function boundedMultiplicative(dictBounded) {
  return dictBounded;
};

var applyMultiplicative = new Control_Apply.Apply(function () {
  return functorMultiplicative;
}, function (v) {
  return function (v1) {
    return v(v1);
  };
});
var bindMultiplicative = new Control_Bind.Bind(function () {
  return applyMultiplicative;
}, function (v) {
  return function (f) {
    return f(v);
  };
});
var applicativeMultiplicative = new Control_Applicative.Applicative(function () {
  return applyMultiplicative;
}, Multiplicative);
var monadMultiplicative = new Control_Monad.Monad(function () {
  return applicativeMultiplicative;
}, function () {
  return bindMultiplicative;
});
module.exports = {
  Multiplicative: Multiplicative,
  eqMultiplicative: eqMultiplicative,
  eq1Multiplicative: eq1Multiplicative,
  ordMultiplicative: ordMultiplicative,
  ord1Multiplicative: ord1Multiplicative,
  boundedMultiplicative: boundedMultiplicative,
  showMultiplicative: showMultiplicative,
  functorMultiplicative: functorMultiplicative,
  applyMultiplicative: applyMultiplicative,
  applicativeMultiplicative: applicativeMultiplicative,
  bindMultiplicative: bindMultiplicative,
  monadMultiplicative: monadMultiplicative,
  semigroupMultiplicative: semigroupMultiplicative,
  monoidMultiplicative: monoidMultiplicative
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7"}],"OHRN":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Functor_Product = require("../Data.Functor.Product/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var FunctorWithIndex = function FunctorWithIndex(Functor0, mapWithIndex) {
  this.Functor0 = Functor0;
  this.mapWithIndex = mapWithIndex;
};

var mapWithIndex = function mapWithIndex(dict) {
  return dict.mapWithIndex;
};

var mapDefault = function mapDefault(dictFunctorWithIndex) {
  return function (f) {
    return mapWithIndex(dictFunctorWithIndex)(Data_Function["const"](f));
  };
};

var functorWithIndexTuple = new FunctorWithIndex(function () {
  return Data_Tuple.functorTuple;
}, function (f) {
  return Data_Functor.map(Data_Tuple.functorTuple)(f(Data_Unit.unit));
});

var functorWithIndexProduct = function functorWithIndexProduct(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return new FunctorWithIndex(function () {
      return Data_Functor_Product.functorProduct(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
    }, function (f) {
      return function (v) {
        return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(mapWithIndex(dictFunctorWithIndex)(function ($27) {
          return f(Data_Either.Left.create($27));
        }))(mapWithIndex(dictFunctorWithIndex1)(function ($28) {
          return f(Data_Either.Right.create($28));
        }))(v);
      };
    });
  };
};

var functorWithIndexMultiplicative = new FunctorWithIndex(function () {
  return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative)(f(Data_Unit.unit));
});
var functorWithIndexMaybe = new FunctorWithIndex(function () {
  return Data_Maybe.functorMaybe;
}, function (f) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(f(Data_Unit.unit));
});
var functorWithIndexLast = new FunctorWithIndex(function () {
  return Data_Maybe_Last.functorLast;
}, function (f) {
  return Data_Functor.map(Data_Maybe_Last.functorLast)(f(Data_Unit.unit));
});
var functorWithIndexIdentity = new FunctorWithIndex(function () {
  return Data_Identity.functorIdentity;
}, function (f) {
  return function (v) {
    return f(Data_Unit.unit)(v);
  };
});
var functorWithIndexFirst = new FunctorWithIndex(function () {
  return Data_Maybe_First.functorFirst;
}, function (f) {
  return Data_Functor.map(Data_Maybe_First.functorFirst)(f(Data_Unit.unit));
});
var functorWithIndexEither = new FunctorWithIndex(function () {
  return Data_Either.functorEither;
}, function (f) {
  return Data_Functor.map(Data_Either.functorEither)(f(Data_Unit.unit));
});
var functorWithIndexDual = new FunctorWithIndex(function () {
  return Data_Monoid_Dual.functorDual;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Dual.functorDual)(f(Data_Unit.unit));
});
var functorWithIndexDisj = new FunctorWithIndex(function () {
  return Data_Monoid_Disj.functorDisj;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Disj.functorDisj)(f(Data_Unit.unit));
});

var functorWithIndexCoproduct = function functorWithIndexCoproduct(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return new FunctorWithIndex(function () {
      return Data_Functor_Coproduct.functorCoproduct(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
    }, function (f) {
      return function (v) {
        return Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(mapWithIndex(dictFunctorWithIndex)(function ($29) {
          return f(Data_Either.Left.create($29));
        }))(mapWithIndex(dictFunctorWithIndex1)(function ($30) {
          return f(Data_Either.Right.create($30));
        }))(v);
      };
    });
  };
};

var functorWithIndexConst = new FunctorWithIndex(function () {
  return Data_Const.functorConst;
}, function (v) {
  return function (v1) {
    return v1;
  };
});
var functorWithIndexConj = new FunctorWithIndex(function () {
  return Data_Monoid_Conj.functorConj;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Conj.functorConj)(f(Data_Unit.unit));
});

var functorWithIndexCompose = function functorWithIndexCompose(dictFunctorWithIndex) {
  return function (dictFunctorWithIndex1) {
    return new FunctorWithIndex(function () {
      return Data_Functor_Compose.functorCompose(dictFunctorWithIndex.Functor0())(dictFunctorWithIndex1.Functor0());
    }, function (f) {
      return function (v) {
        return Data_Functor_Compose.Compose(mapWithIndex(dictFunctorWithIndex)(function () {
          var $31 = mapWithIndex(dictFunctorWithIndex1);
          var $32 = Data_Tuple.curry(f);
          return function ($33) {
            return $31($32($33));
          };
        }())(v));
      };
    });
  };
};

var functorWithIndexArray = new FunctorWithIndex(function () {
  return Data_Functor.functorArray;
}, $foreign.mapWithIndexArray);

var functorWithIndexApp = function functorWithIndexApp(dictFunctorWithIndex) {
  return new FunctorWithIndex(function () {
    return Data_Functor_App.functorApp(dictFunctorWithIndex.Functor0());
  }, function (f) {
    return function (v) {
      return Data_Functor_App.App(mapWithIndex(dictFunctorWithIndex)(f)(v));
    };
  });
};

var functorWithIndexAdditive = new FunctorWithIndex(function () {
  return Data_Monoid_Additive.functorAdditive;
}, function (f) {
  return Data_Functor.map(Data_Monoid_Additive.functorAdditive)(f(Data_Unit.unit));
});
module.exports = {
  FunctorWithIndex: FunctorWithIndex,
  mapWithIndex: mapWithIndex,
  mapDefault: mapDefault,
  functorWithIndexArray: functorWithIndexArray,
  functorWithIndexMaybe: functorWithIndexMaybe,
  functorWithIndexFirst: functorWithIndexFirst,
  functorWithIndexLast: functorWithIndexLast,
  functorWithIndexAdditive: functorWithIndexAdditive,
  functorWithIndexDual: functorWithIndexDual,
  functorWithIndexConj: functorWithIndexConj,
  functorWithIndexDisj: functorWithIndexDisj,
  functorWithIndexMultiplicative: functorWithIndexMultiplicative,
  functorWithIndexEither: functorWithIndexEither,
  functorWithIndexTuple: functorWithIndexTuple,
  functorWithIndexIdentity: functorWithIndexIdentity,
  functorWithIndexConst: functorWithIndexConst,
  functorWithIndexProduct: functorWithIndexProduct,
  functorWithIndexCoproduct: functorWithIndexCoproduct,
  functorWithIndexCompose: functorWithIndexCompose,
  functorWithIndexApp: functorWithIndexApp
};
},{"./foreign.js":"ZgoH","../Data.Bifunctor/index.js":"e2Wc","../Data.Const/index.js":"OmNG","../Data.Either/index.js":"B2JL","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Functor.App/index.js":"FExJ","../Data.Functor.Compose/index.js":"z8br","../Data.Functor.Coproduct/index.js":"zImR","../Data.Functor.Product/index.js":"TPdM","../Data.Identity/index.js":"OKTm","../Data.Maybe/index.js":"mN7T","../Data.Maybe.First/index.js":"WL67","../Data.Maybe.Last/index.js":"aQky","../Data.Monoid.Additive/index.js":"fHyj","../Data.Monoid.Conj/index.js":"UG5s","../Data.Monoid.Disj/index.js":"bR7j","../Data.Monoid.Dual/index.js":"ULyl","../Data.Monoid.Multiplicative/index.js":"y5cd","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk"}],"Efib":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var FoldableWithIndex = function FoldableWithIndex(Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
  this.Foldable0 = Foldable0;
  this.foldMapWithIndex = foldMapWithIndex;
  this.foldlWithIndex = foldlWithIndex;
  this.foldrWithIndex = foldrWithIndex;
};

var foldrWithIndex = function foldrWithIndex(dict) {
  return dict.foldrWithIndex;
};

var traverseWithIndex_ = function traverseWithIndex_(dictApplicative) {
  return function (dictFoldableWithIndex) {
    return function (f) {
      return foldrWithIndex(dictFoldableWithIndex)(function (i) {
        var $161 = Control_Apply.applySecond(dictApplicative.Apply0());
        var $162 = f(i);
        return function ($163) {
          return $161($162($163));
        };
      })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
    };
  };
};

var forWithIndex_ = function forWithIndex_(dictApplicative) {
  return function (dictFoldableWithIndex) {
    return Data_Function.flip(traverseWithIndex_(dictApplicative)(dictFoldableWithIndex));
  };
};

var foldrDefault = function foldrDefault(dictFoldableWithIndex) {
  return function (f) {
    return foldrWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
  };
};

var foldlWithIndex = function foldlWithIndex(dict) {
  return dict.foldlWithIndex;
};

var foldlDefault = function foldlDefault(dictFoldableWithIndex) {
  return function (f) {
    return foldlWithIndex(dictFoldableWithIndex)(Data_Function["const"](f));
  };
};

var foldableWithIndexTuple = new FoldableWithIndex(function () {
  return Data_Foldable.foldableTuple;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(Data_Unit.unit)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(z)(v.value1);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(v.value1)(z);
    };
  };
});
var foldableWithIndexMultiplicative = new FoldableWithIndex(function () {
  return Data_Foldable.foldableMultiplicative;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableMultiplicative)(f(Data_Unit.unit));
});
var foldableWithIndexMaybe = new FoldableWithIndex(function () {
  return Data_Foldable.foldableMaybe;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableMaybe)(f(Data_Unit.unit));
});
var foldableWithIndexLast = new FoldableWithIndex(function () {
  return Data_Foldable.foldableLast;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableLast)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableLast)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableLast)(f(Data_Unit.unit));
});
var foldableWithIndexIdentity = new FoldableWithIndex(function () {
  return Data_Foldable.foldableIdentity;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(Data_Unit.unit)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(z)(v);
    };
  };
}, function (f) {
  return function (z) {
    return function (v) {
      return f(Data_Unit.unit)(v)(z);
    };
  };
});
var foldableWithIndexFirst = new FoldableWithIndex(function () {
  return Data_Foldable.foldableFirst;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableFirst)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableFirst)(f(Data_Unit.unit));
});
var foldableWithIndexEither = new FoldableWithIndex(function () {
  return Data_Foldable.foldableEither;
}, function (dictMonoid) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return v(Data_Unit.unit)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [v.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return z;
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return v(Data_Unit.unit)(z)(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return z;
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return v(Data_Unit.unit)(v1.value0)(z);
      }

      ;
      throw new Error("Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
    };
  };
});
var foldableWithIndexDual = new FoldableWithIndex(function () {
  return Data_Foldable.foldableDual;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableDual)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableDual)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableDual)(f(Data_Unit.unit));
});
var foldableWithIndexDisj = new FoldableWithIndex(function () {
  return Data_Foldable.foldableDisj;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableDisj)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableDisj)(f(Data_Unit.unit));
});
var foldableWithIndexConst = new FoldableWithIndex(function () {
  return Data_Foldable.foldableConst;
}, function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return Data_Monoid.mempty(dictMonoid);
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
}, function (v) {
  return function (z) {
    return function (v1) {
      return z;
    };
  };
});
var foldableWithIndexConj = new FoldableWithIndex(function () {
  return Data_Foldable.foldableConj;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableConj)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableConj)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableConj)(f(Data_Unit.unit));
});
var foldableWithIndexAdditive = new FoldableWithIndex(function () {
  return Data_Foldable.foldableAdditive;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(Data_Foldable.foldableAdditive)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(Data_Foldable.foldableAdditive)(f(Data_Unit.unit));
});

var foldWithIndexM = function foldWithIndexM(dictFoldableWithIndex) {
  return function (dictMonad) {
    return function (f) {
      return function (a0) {
        return foldlWithIndex(dictFoldableWithIndex)(function (i) {
          return function (ma) {
            return function (b) {
              return Control_Bind.bind(dictMonad.Bind1())(ma)(Data_Function.flip(f(i))(b));
            };
          };
        })(Control_Applicative.pure(dictMonad.Applicative0())(a0));
      };
    };
  };
};

var foldMapWithIndexDefaultR = function foldMapWithIndexDefaultR(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldrWithIndex(dictFoldableWithIndex)(function (i) {
        return function (x) {
          return function (acc) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldableWithIndexArray = new FoldableWithIndex(function () {
  return Data_Foldable.foldableArray;
}, function (dictMonoid) {
  return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
}, function (f) {
  return function (z) {
    var $164 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
      return function (v) {
        return f(v.value0)(y)(v.value1);
      };
    })(z);
    var $165 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
    return function ($166) {
      return $164($165($166));
    };
  };
}, function (f) {
  return function (z) {
    var $167 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
      return function (y) {
        return f(v.value0)(v.value1)(y);
      };
    })(z);
    var $168 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
    return function ($169) {
      return $167($168($169));
    };
  };
});

var foldMapWithIndexDefaultL = function foldMapWithIndexDefaultL(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldlWithIndex(dictFoldableWithIndex)(function (i) {
        return function (acc) {
          return function (x) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(i)(x));
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };
};

var foldMapWithIndex = function foldMapWithIndex(dict) {
  return dict.foldMapWithIndex;
};

var foldableWithIndexApp = function foldableWithIndexApp(dictFoldableWithIndex) {
  return new FoldableWithIndex(function () {
    return Data_Foldable.foldableApp(dictFoldableWithIndex.Foldable0());
  }, function (dictMonoid) {
    return function (f) {
      return function (v) {
        return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(f)(v);
      };
    };
  }, function (f) {
    return function (z) {
      return function (v) {
        return foldlWithIndex(dictFoldableWithIndex)(f)(z)(v);
      };
    };
  }, function (f) {
    return function (z) {
      return function (v) {
        return foldrWithIndex(dictFoldableWithIndex)(f)(z)(v);
      };
    };
  });
};

var foldableWithIndexCompose = function foldableWithIndexCompose(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return new FoldableWithIndex(function () {
      return Data_Foldable.foldableCompose(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
    }, function (dictMonoid) {
      return function (f) {
        return function (v) {
          return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function () {
            var $170 = foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid);
            var $171 = Data_Tuple.curry(f);
            return function ($172) {
              return $170($171($172));
            };
          }())(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return foldlWithIndex(dictFoldableWithIndex)(function () {
            var $173 = foldlWithIndex(dictFoldableWithIndex1);
            var $174 = Data_Tuple.curry(f);
            return function ($175) {
              return $173($174($175));
            };
          }())(i)(v);
        };
      };
    }, function (f) {
      return function (i) {
        return function (v) {
          return foldrWithIndex(dictFoldableWithIndex)(function (a) {
            return Data_Function.flip(foldrWithIndex(dictFoldableWithIndex1)(Data_Tuple.curry(f)(a)));
          })(i)(v);
        };
      };
    });
  };
};

var foldableWithIndexCoproduct = function foldableWithIndexCoproduct(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return new FoldableWithIndex(function () {
      return Data_Foldable.foldableCoproduct(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
    }, function (dictMonoid) {
      return function (f) {
        return Data_Functor_Coproduct.coproduct(foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($176) {
          return f(Data_Either.Left.create($176));
        }))(foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(function ($177) {
          return f(Data_Either.Right.create($177));
        }));
      };
    }, function (f) {
      return function (z) {
        return Data_Functor_Coproduct.coproduct(foldlWithIndex(dictFoldableWithIndex)(function ($178) {
          return f(Data_Either.Left.create($178));
        })(z))(foldlWithIndex(dictFoldableWithIndex1)(function ($179) {
          return f(Data_Either.Right.create($179));
        })(z));
      };
    }, function (f) {
      return function (z) {
        return Data_Functor_Coproduct.coproduct(foldrWithIndex(dictFoldableWithIndex)(function ($180) {
          return f(Data_Either.Left.create($180));
        })(z))(foldrWithIndex(dictFoldableWithIndex1)(function ($181) {
          return f(Data_Either.Right.create($181));
        })(z));
      };
    });
  };
};

var foldableWithIndexProduct = function foldableWithIndexProduct(dictFoldableWithIndex) {
  return function (dictFoldableWithIndex1) {
    return new FoldableWithIndex(function () {
      return Data_Foldable.foldableProduct(dictFoldableWithIndex.Foldable0())(dictFoldableWithIndex1.Foldable0());
    }, function (dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($182) {
            return f(Data_Either.Left.create($182));
          })(v.value0))(foldMapWithIndex(dictFoldableWithIndex1)(dictMonoid)(function ($183) {
            return f(Data_Either.Right.create($183));
          })(v.value1));
        };
      };
    }, function (f) {
      return function (z) {
        return function (v) {
          return foldlWithIndex(dictFoldableWithIndex1)(function ($184) {
            return f(Data_Either.Right.create($184));
          })(foldlWithIndex(dictFoldableWithIndex)(function ($185) {
            return f(Data_Either.Left.create($185));
          })(z)(v.value0))(v.value1);
        };
      };
    }, function (f) {
      return function (z) {
        return function (v) {
          return foldrWithIndex(dictFoldableWithIndex)(function ($186) {
            return f(Data_Either.Left.create($186));
          })(foldrWithIndex(dictFoldableWithIndex1)(function ($187) {
            return f(Data_Either.Right.create($187));
          })(z)(v.value1))(v.value0);
        };
      };
    });
  };
};

var foldlWithIndexDefault = function foldlWithIndexDefault(dictFoldableWithIndex) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap()(Data_Newtype.unwrap()(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function (i) {
          var $188 = Data_Function.flip(c(i));
          return function ($189) {
            return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($188($189)));
          };
        })(xs)))(u);
      };
    };
  };
};

var foldrWithIndexDefault = function foldrWithIndexDefault(dictFoldableWithIndex) {
  return function (c) {
    return function (u) {
      return function (xs) {
        return Data_Newtype.unwrap()(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function (i) {
          var $190 = c(i);
          return function ($191) {
            return Data_Monoid_Endo.Endo($190($191));
          };
        })(xs))(u);
      };
    };
  };
};

var surroundMapWithIndex = function surroundMapWithIndex(dictFoldableWithIndex) {
  return function (dictSemigroup) {
    return function (d) {
      return function (t) {
        return function (f) {
          var joined = function joined(i) {
            return function (a) {
              return function (m) {
                return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(i)(a))(m));
              };
            };
          };

          return Data_Newtype.unwrap()(foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);
        };
      };
    };
  };
};

var foldMapDefault = function foldMapDefault(dictFoldableWithIndex) {
  return function (dictMonoid) {
    return function (f) {
      return foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(Data_Function["const"](f));
    };
  };
};

var findWithIndex = function findWithIndex(dictFoldableWithIndex) {
  return function (p) {
    var go = function go(v) {
      return function (v1) {
        return function (v2) {
          if (v1 instanceof Data_Maybe.Nothing && p(v)(v2)) {
            return new Data_Maybe.Just({
              index: v,
              value: v2
            });
          }

          ;
          return v1;
        };
      };
    };

    return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
  };
};

var findMapWithIndex = function findMapWithIndex(dictFoldableWithIndex) {
  return function (f) {
    var go = function go(v) {
      return function (v1) {
        return function (v2) {
          if (v1 instanceof Data_Maybe.Nothing) {
            return f(v)(v2);
          }

          ;
          return v1;
        };
      };
    };

    return foldlWithIndex(dictFoldableWithIndex)(go)(Data_Maybe.Nothing.value);
  };
};

var anyWithIndex = function anyWithIndex(dictFoldableWithIndex) {
  return function (dictHeytingAlgebra) {
    return function (t) {
      var $192 = Data_Newtype.unwrap();
      var $193 = foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra))(function (i) {
        var $195 = t(i);
        return function ($196) {
          return Data_Monoid_Disj.Disj($195($196));
        };
      });
      return function ($194) {
        return $192($193($194));
      };
    };
  };
};

var allWithIndex = function allWithIndex(dictFoldableWithIndex) {
  return function (dictHeytingAlgebra) {
    return function (t) {
      var $197 = Data_Newtype.unwrap();
      var $198 = foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
        var $200 = t(i);
        return function ($201) {
          return Data_Monoid_Conj.Conj($200($201));
        };
      });
      return function ($199) {
        return $197($198($199));
      };
    };
  };
};

module.exports = {
  FoldableWithIndex: FoldableWithIndex,
  foldrWithIndex: foldrWithIndex,
  foldlWithIndex: foldlWithIndex,
  foldMapWithIndex: foldMapWithIndex,
  foldrWithIndexDefault: foldrWithIndexDefault,
  foldlWithIndexDefault: foldlWithIndexDefault,
  foldMapWithIndexDefaultR: foldMapWithIndexDefaultR,
  foldMapWithIndexDefaultL: foldMapWithIndexDefaultL,
  foldWithIndexM: foldWithIndexM,
  traverseWithIndex_: traverseWithIndex_,
  forWithIndex_: forWithIndex_,
  surroundMapWithIndex: surroundMapWithIndex,
  allWithIndex: allWithIndex,
  anyWithIndex: anyWithIndex,
  findWithIndex: findWithIndex,
  findMapWithIndex: findMapWithIndex,
  foldrDefault: foldrDefault,
  foldlDefault: foldlDefault,
  foldMapDefault: foldMapDefault,
  foldableWithIndexArray: foldableWithIndexArray,
  foldableWithIndexMaybe: foldableWithIndexMaybe,
  foldableWithIndexFirst: foldableWithIndexFirst,
  foldableWithIndexLast: foldableWithIndexLast,
  foldableWithIndexAdditive: foldableWithIndexAdditive,
  foldableWithIndexDual: foldableWithIndexDual,
  foldableWithIndexDisj: foldableWithIndexDisj,
  foldableWithIndexConj: foldableWithIndexConj,
  foldableWithIndexMultiplicative: foldableWithIndexMultiplicative,
  foldableWithIndexEither: foldableWithIndexEither,
  foldableWithIndexTuple: foldableWithIndexTuple,
  foldableWithIndexIdentity: foldableWithIndexIdentity,
  foldableWithIndexConst: foldableWithIndexConst,
  foldableWithIndexProduct: foldableWithIndexProduct,
  foldableWithIndexCoproduct: foldableWithIndexCoproduct,
  foldableWithIndexCompose: foldableWithIndexCompose,
  foldableWithIndexApp: foldableWithIndexApp
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Data.Either/index.js":"B2JL","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor.Coproduct/index.js":"zImR","../Data.FunctorWithIndex/index.js":"OHRN","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Monoid.Conj/index.js":"UG5s","../Data.Monoid.Disj/index.js":"bR7j","../Data.Monoid.Dual/index.js":"ULyl","../Data.Monoid.Endo/index.js":"o47N","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk"}],"fhx3":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Max = function Max(x) {
  return x;
};

var showMax = function showMax(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Max " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMax = function semigroupMax(dictOrd) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Ord.max(dictOrd)(v)(v1);
    };
  });
};

var newtypeMax = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monoidMax = function monoidMax(dictBounded) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMax(dictBounded.Ord0());
  }, Data_Bounded.bottom(dictBounded));
};

var eqMax = function eqMax(dictEq) {
  return dictEq;
};

var ordMax = function ordMax(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMax(dictOrd.Eq0());
  }, function (v) {
    return function (v1) {
      return Data_Ord.compare(dictOrd)(v)(v1);
    };
  });
};

module.exports = {
  Max: Max,
  newtypeMax: newtypeMax,
  eqMax: eqMax,
  ordMax: ordMax,
  semigroupMax: semigroupMax,
  monoidMax: monoidMax,
  showMax: showMax
};
},{"../Data.Bounded/index.js":"kcUU","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"XTng":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Min = function Min(x) {
  return x;
};

var showMin = function showMin(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Min " + (Data_Show.show(dictShow)(v) + ")");
  });
};

var semigroupMin = function semigroupMin(dictOrd) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Data_Ord.min(dictOrd)(v)(v1);
    };
  });
};

var newtypeMin = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monoidMin = function monoidMin(dictBounded) {
  return new Data_Monoid.Monoid(function () {
    return semigroupMin(dictBounded.Ord0());
  }, Data_Bounded.top(dictBounded));
};

var eqMin = function eqMin(dictEq) {
  return dictEq;
};

var ordMin = function ordMin(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqMin(dictOrd.Eq0());
  }, function (v) {
    return function (v1) {
      return Data_Ord.compare(dictOrd)(v)(v1);
    };
  });
};

module.exports = {
  Min: Min,
  newtypeMin: newtypeMin,
  eqMin: eqMin,
  ordMin: ordMin,
  semigroupMin: semigroupMin,
  monoidMin: monoidMin,
  showMin: showMin
};
},{"../Data.Bounded/index.js":"kcUU","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"htAR":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord_Max = require("../Data.Ord.Max/index.js");

var Data_Ord_Min = require("../Data.Ord.Min/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var JoinWith = function JoinWith(x) {
  return x;
};

var Foldable1 = function Foldable1(Foldable0, foldMap1, foldl1, foldr1) {
  this.Foldable0 = Foldable0;
  this.foldMap1 = foldMap1;
  this.foldl1 = foldl1;
  this.foldr1 = foldr1;
};

var FoldRight1 = function () {
  function FoldRight1(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  FoldRight1.create = function (value0) {
    return function (value1) {
      return new FoldRight1(value0, value1);
    };
  };

  return FoldRight1;
}();

var Act = function Act(x) {
  return x;
};

var semigroupJoinWith = function semigroupJoinWith(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return JoinWith(function (j) {
        return Data_Semigroup.append(dictSemigroup)(v(j))(Data_Semigroup.append(dictSemigroup)(j)(v1(j)));
      });
    };
  });
};

var semigroupAct = function semigroupAct(dictApply) {
  return new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Control_Apply.applySecond(dictApply)(v)(v1);
    };
  });
};

var runFoldRight1 = function runFoldRight1(v) {
  return v.value0(v.value1);
};

var mkFoldRight1 = FoldRight1.create(Data_Function["const"]);

var joinee = function joinee(v) {
  return v;
};

var getAct = function getAct(v) {
  return v;
};

var foldr1 = function foldr1(dict) {
  return dict.foldr1;
};

var foldl1 = function foldl1(dict) {
  return dict.foldl1;
};

var maximumBy = function maximumBy(dictFoldable1) {
  return function (cmp) {
    return foldl1(dictFoldable1)(function (x) {
      return function (y) {
        var $74 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);

        if ($74) {
          return x;
        }

        ;
        return y;
      };
    });
  };
};

var minimumBy = function minimumBy(dictFoldable1) {
  return function (cmp) {
    return foldl1(dictFoldable1)(function (x) {
      return function (y) {
        var $75 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.LT.value);

        if ($75) {
          return x;
        }

        ;
        return y;
      };
    });
  };
};

var foldableTuple = new Foldable1(function () {
  return Data_Foldable.foldableTuple;
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v.value1);
    };
  };
}, function (v) {
  return function (v1) {
    return v1.value1;
  };
}, function (v) {
  return function (v1) {
    return v1.value1;
  };
});
var foldableMultiplicative = new Foldable1(function () {
  return Data_Foldable.foldableMultiplicative;
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (v) {
  return function (v1) {
    return v1;
  };
}, function (v) {
  return function (v1) {
    return v1;
  };
});
var foldableIdentity = new Foldable1(function () {
  return Data_Foldable.foldableIdentity;
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (v) {
  return function (v1) {
    return v1;
  };
}, function (v) {
  return function (v1) {
    return v1;
  };
});
var foldableDual = new Foldable1(function () {
  return Data_Foldable.foldableDual;
}, function (dictSemigroup) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (v) {
  return function (v1) {
    return v1;
  };
}, function (v) {
  return function (v1) {
    return v1;
  };
});
var foldRight1Semigroup = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return new FoldRight1(function (a) {
      return function (f) {
        return v.value0(f(v.value1)(v1.value0(a)(f)))(f);
      };
    }, v1.value1);
  };
});

var foldMap1DefaultR = function foldMap1DefaultR(dictFoldable1) {
  return function (dictFunctor) {
    return function (dictSemigroup) {
      return function (f) {
        var $112 = foldr1(dictFoldable1)(Data_Semigroup.append(dictSemigroup));
        var $113 = Data_Functor.map(dictFunctor)(f);
        return function ($114) {
          return $112($113($114));
        };
      };
    };
  };
};

var foldMap1DefaultL = function foldMap1DefaultL(dictFoldable1) {
  return function (dictFunctor) {
    return function (dictSemigroup) {
      return function (f) {
        var $115 = foldl1(dictFoldable1)(Data_Semigroup.append(dictSemigroup));
        var $116 = Data_Functor.map(dictFunctor)(f);
        return function ($117) {
          return $115($116($117));
        };
      };
    };
  };
};

var foldMap1Default = function foldMap1Default(dictWarn) {
  return function (dictFoldable1) {
    return function (dictFunctor) {
      return function (dictSemigroup) {
        return foldMap1DefaultL(dictFoldable1)(dictFunctor)(dictSemigroup);
      };
    };
  };
};

var foldMap1 = function foldMap1(dict) {
  return dict.foldMap1;
};

var foldl1Default = function foldl1Default(dictFoldable1) {
  var $118 = Data_Function.flip(function () {
    var $120 = Data_Newtype.alaF()()()()(Data_Monoid_Dual.Dual)(foldMap1(dictFoldable1)(Data_Monoid_Dual.semigroupDual(foldRight1Semigroup)))(mkFoldRight1);
    return function ($121) {
      return runFoldRight1($120($121));
    };
  }());
  return function ($119) {
    return $118(Data_Function.flip($119));
  };
};

var foldr1Default = function foldr1Default(dictFoldable1) {
  return Data_Function.flip(function () {
    var $122 = foldMap1(dictFoldable1)(foldRight1Semigroup)(mkFoldRight1);
    return function ($123) {
      return runFoldRight1($122($123));
    };
  }());
};

var intercalateMap = function intercalateMap(dictFoldable1) {
  return function (dictSemigroup) {
    return function (j) {
      return function (f) {
        return function (foldable) {
          return joinee(foldMap1(dictFoldable1)(semigroupJoinWith(dictSemigroup))(function ($124) {
            return JoinWith(Data_Function["const"](f($124)));
          })(foldable))(j);
        };
      };
    };
  };
};

var intercalate = function intercalate(dictFoldable1) {
  return function (dictSemigroup) {
    return Data_Function.flip(intercalateMap(dictFoldable1)(dictSemigroup))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var maximum = function maximum(dictOrd) {
  return function (dictFoldable1) {
    return Data_Newtype.ala()()()(Data_Ord_Max.Max)(foldMap1(dictFoldable1)(Data_Ord_Max.semigroupMax(dictOrd)));
  };
};

var minimum = function minimum(dictOrd) {
  return function (dictFoldable1) {
    return Data_Newtype.ala()()()(Data_Ord_Min.Min)(foldMap1(dictFoldable1)(Data_Ord_Min.semigroupMin(dictOrd)));
  };
};

var traverse1_ = function traverse1_(dictFoldable1) {
  return function (dictApply) {
    return function (f) {
      return function (t) {
        return Data_Functor.voidRight(dictApply.Functor0())(Data_Unit.unit)(getAct(foldMap1(dictFoldable1)(semigroupAct(dictApply))(function ($125) {
          return Act(f($125));
        })(t)));
      };
    };
  };
};

var for1_ = function for1_(dictFoldable1) {
  return function (dictApply) {
    return Data_Function.flip(traverse1_(dictFoldable1)(dictApply));
  };
};

var sequence1_ = function sequence1_(dictFoldable1) {
  return function (dictApply) {
    return traverse1_(dictFoldable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var fold1 = function fold1(dictFoldable1) {
  return function (dictSemigroup) {
    return foldMap1(dictFoldable1)(dictSemigroup)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  Foldable1: Foldable1,
  foldMap1: foldMap1,
  fold1: fold1,
  foldr1: foldr1,
  foldl1: foldl1,
  traverse1_: traverse1_,
  for1_: for1_,
  sequence1_: sequence1_,
  foldr1Default: foldr1Default,
  foldl1Default: foldl1Default,
  foldMap1DefaultR: foldMap1DefaultR,
  foldMap1DefaultL: foldMap1DefaultL,
  foldMap1Default: foldMap1Default,
  intercalate: intercalate,
  intercalateMap: intercalateMap,
  maximum: maximum,
  maximumBy: maximumBy,
  minimum: minimum,
  minimumBy: minimumBy,
  foldableDual: foldableDual,
  foldableMultiplicative: foldableMultiplicative,
  foldableTuple: foldableTuple,
  foldableIdentity: foldableIdentity
};
},{"../Control.Apply/index.js":"QcLv","../Control.Category/index.js":"IAi2","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Monoid.Dual/index.js":"ULyl","../Data.Newtype/index.js":"lz8k","../Data.Ord.Max/index.js":"fhx3","../Data.Ord.Min/index.js":"XTng","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Unit/index.js":"NhVk"}],"oRQn":[function(require,module,exports) {
"use strict"; // jshint maxparams: 3

exports.traverseArrayImpl = function () {
  function array1(a) {
    return [a];
  }

  function array2(a) {
    return function (b) {
      return [a, b];
    };
  }

  function array3(a) {
    return function (b) {
      return function (c) {
        return [a, b, c];
      };
    };
  }

  function concat2(xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  }

  return function (apply) {
    return function (map) {
      return function (pure) {
        return function (f) {
          return function (array) {
            function go(bot, top) {
              switch (top - bot) {
                case 0:
                  return pure([]);

                case 1:
                  return map(array1)(f(array[bot]));

                case 2:
                  return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));

                case 3:
                  return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));

                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
              }
            }

            return go(0, array.length);
          };
        };
      };
    };
  };
}();
},{}],"gWkY":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

module.exports = {};
},{}],"LbSr":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var StateR = function StateR(x) {
  return x;
};

var StateL = function StateL(x) {
  return x;
};

var stateR = function stateR(v) {
  return v;
};

var stateL = function stateL(v) {
  return v;
};

var functorStateR = new Data_Functor.Functor(function (f) {
  return function (k) {
    return function (s) {
      var v = stateR(k)(s);
      return {
        accum: v.accum,
        value: f(v.value)
      };
    };
  };
});
var functorStateL = new Data_Functor.Functor(function (f) {
  return function (k) {
    return function (s) {
      var v = stateL(k)(s);
      return {
        accum: v.accum,
        value: f(v.value)
      };
    };
  };
});
var applyStateR = new Control_Apply.Apply(function () {
  return functorStateR;
}, function (f) {
  return function (x) {
    return function (s) {
      var v = stateR(x)(s);
      var v1 = stateR(f)(v.accum);
      return {
        accum: v1.accum,
        value: v1.value(v.value)
      };
    };
  };
});
var applyStateL = new Control_Apply.Apply(function () {
  return functorStateL;
}, function (f) {
  return function (x) {
    return function (s) {
      var v = stateL(f)(s);
      var v1 = stateL(x)(v.accum);
      return {
        accum: v1.accum,
        value: v.value(v1.value)
      };
    };
  };
});
var applicativeStateR = new Control_Applicative.Applicative(function () {
  return applyStateR;
}, function (a) {
  return function (s) {
    return {
      accum: s,
      value: a
    };
  };
});
var applicativeStateL = new Control_Applicative.Applicative(function () {
  return applyStateL;
}, function (a) {
  return function (s) {
    return {
      accum: s,
      value: a
    };
  };
});
module.exports = {
  StateL: StateL,
  stateL: stateL,
  StateR: StateR,
  stateR: stateR,
  functorStateL: functorStateL,
  applyStateL: applyStateL,
  applicativeStateL: applicativeStateL,
  functorStateR: functorStateR,
  applyStateR: applyStateR,
  applicativeStateR: applicativeStateR
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Data.Functor/index.js":"AEHo"}],"n7EE":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Functor_Product = require("../Data.Functor.Product/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Maybe_First = require("../Data.Maybe.First/index.js");

var Data_Maybe_Last = require("../Data.Maybe.Last/index.js");

var Data_Monoid_Additive = require("../Data.Monoid.Additive/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");

var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Traversable = function Traversable(Foldable1, Functor0, sequence, traverse) {
  this.Foldable1 = Foldable1;
  this.Functor0 = Functor0;
  this.sequence = sequence;
  this.traverse = traverse;
};

var traverse = function traverse(dict) {
  return dict.traverse;
};

var traversableTuple = new Traversable(function () {
  return Data_Foldable.foldableTuple;
}, function () {
  return Data_Tuple.functorTuple;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(v.value1);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(f(v.value1));
    };
  };
});
var traversableMultiplicative = new Traversable(function () {
  return Data_Foldable.foldableMultiplicative;
}, function () {
  return Data_Monoid_Multiplicative.functorMultiplicative;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
    };
  };
});
var traversableMaybe = new Traversable(function () {
  return Data_Foldable.foldableMaybe;
}, function () {
  return Data_Maybe.functorMaybe;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_Maybe.Nothing) {
        return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
      }

      ;

      if (v1 instanceof Data_Maybe.Just) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe.Just.create)(v(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableIdentity = new Traversable(function () {
  return Data_Foldable.foldableIdentity;
}, function () {
  return Data_Identity.functorIdentity;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(f(v));
    };
  };
});
var traversableEither = new Traversable(function () {
  return Data_Foldable.foldableEither;
}, function () {
  return Data_Either.functorEither;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof Data_Either.Left) {
      return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v.value0));
    }

    ;

    if (v instanceof Data_Either.Right) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v1.value0));
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Traversable (line 149, column 1 - line 153, column 36): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableDual = new Traversable(function () {
  return Data_Foldable.foldableDual;
}, function () {
  return Data_Monoid_Dual.functorDual;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Dual.Dual)(f(v));
    };
  };
});
var traversableDisj = new Traversable(function () {
  return Data_Foldable.foldableDisj;
}, function () {
  return Data_Monoid_Disj.functorDisj;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Disj.Disj)(f(v));
    };
  };
});
var traversableConst = new Traversable(function () {
  return Data_Foldable.foldableConst;
}, function () {
  return Data_Const.functorConst;
}, function (dictApplicative) {
  return function (v) {
    return Control_Applicative.pure(dictApplicative)(v);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictApplicative)(v1);
    };
  };
});
var traversableConj = new Traversable(function () {
  return Data_Foldable.foldableConj;
}, function () {
  return Data_Monoid_Conj.functorConj;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Conj.Conj)(f(v));
    };
  };
});

var traversableCompose = function traversableCompose(dictTraversable) {
  return function (dictTraversable1) {
    return new Traversable(function () {
      return Data_Foldable.foldableCompose(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
    }, function () {
      return Data_Functor_Compose.functorCompose(dictTraversable.Functor0())(dictTraversable1.Functor0());
    }, function (dictApplicative) {
      return traverse(traversableCompose(dictTraversable)(dictTraversable1))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_Compose.Compose)(traverse(dictTraversable)(dictApplicative)(traverse(dictTraversable1)(dictApplicative)(f))(v));
        };
      };
    });
  };
};

var traversableAdditive = new Traversable(function () {
  return Data_Foldable.foldableAdditive;
}, function () {
  return Data_Monoid_Additive.functorAdditive;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Monoid_Additive.Additive)(f(v));
    };
  };
});

var sequenceDefault = function sequenceDefault(dictTraversable) {
  return function (dictApplicative) {
    return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var traversableArray = new Traversable(function () {
  return Data_Foldable.foldableArray;
}, function () {
  return Data_Functor.functorArray;
}, function (dictApplicative) {
  return sequenceDefault(traversableArray)(dictApplicative);
}, function (dictApplicative) {
  return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
});

var sequence = function sequence(dict) {
  return dict.sequence;
};

var traversableApp = function traversableApp(dictTraversable) {
  return new Traversable(function () {
    return Data_Foldable.foldableApp(dictTraversable.Foldable1());
  }, function () {
    return Data_Functor_App.functorApp(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(sequence(dictTraversable)(dictApplicative)(v));
    };
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(traverse(dictTraversable)(dictApplicative)(f)(v));
      };
    };
  });
};

var traversableCoproduct = function traversableCoproduct(dictTraversable) {
  return function (dictTraversable1) {
    return new Traversable(function () {
      return Data_Foldable.foldableCoproduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
    }, function () {
      return Data_Functor_Coproduct.functorCoproduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
    }, function (dictApplicative) {
      return Data_Functor_Coproduct.coproduct(function () {
        var $141 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($144) {
          return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($144));
        });
        var $142 = sequence(dictTraversable)(dictApplicative);
        return function ($143) {
          return $141($142($143));
        };
      }())(function () {
        var $145 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($148) {
          return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($148));
        });
        var $146 = sequence(dictTraversable1)(dictApplicative);
        return function ($147) {
          return $145($146($147));
        };
      }());
    }, function (dictApplicative) {
      return function (f) {
        return Data_Functor_Coproduct.coproduct(function () {
          var $149 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($152) {
            return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($152));
          });
          var $150 = traverse(dictTraversable)(dictApplicative)(f);
          return function ($151) {
            return $149($150($151));
          };
        }())(function () {
          var $153 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($156) {
            return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($156));
          });
          var $154 = traverse(dictTraversable1)(dictApplicative)(f);
          return function ($155) {
            return $153($154($155));
          };
        }());
      };
    });
  };
};

var traversableFirst = new Traversable(function () {
  return Data_Foldable.foldableFirst;
}, function () {
  return Data_Maybe_First.functorFirst;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(sequence(traversableMaybe)(dictApplicative)(v));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_First.First)(traverse(traversableMaybe)(dictApplicative)(f)(v));
    };
  };
});
var traversableLast = new Traversable(function () {
  return Data_Foldable.foldableLast;
}, function () {
  return Data_Maybe_Last.functorLast;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(sequence(traversableMaybe)(dictApplicative)(v));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Maybe_Last.Last)(traverse(traversableMaybe)(dictApplicative)(f)(v));
    };
  };
});

var traversableProduct = function traversableProduct(dictTraversable) {
  return function (dictTraversable1) {
    return new Traversable(function () {
      return Data_Foldable.foldableProduct(dictTraversable.Foldable1())(dictTraversable1.Foldable1());
    }, function () {
      return Data_Functor_Product.functorProduct(dictTraversable.Functor0())(dictTraversable1.Functor0());
    }, function (dictApplicative) {
      return function (v) {
        return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(sequence(dictTraversable)(dictApplicative)(v.value0))(sequence(dictTraversable1)(dictApplicative)(v.value1));
      };
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(traverse(dictTraversable)(dictApplicative)(f)(v.value0))(traverse(dictTraversable1)(dictApplicative)(f)(v.value1));
        };
      };
    });
  };
};

var traverseDefault = function traverseDefault(dictTraversable) {
  return function (dictApplicative) {
    return function (f) {
      return function (ta) {
        return sequence(dictTraversable)(dictApplicative)(Data_Functor.map(dictTraversable.Functor0())(f)(ta));
      };
    };
  };
};

var mapAccumR = function mapAccumR(dictTraversable) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateR(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateR)(function (a) {
          return function (s) {
            return f(s)(a);
          };
        })(xs))(s0);
      };
    };
  };
};

var scanr = function scanr(dictTraversable) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumR(dictTraversable)(function (b) {
          return function (a) {
            var b$prime = f(a)(b);
            return {
              accum: b$prime,
              value: b$prime
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var mapAccumL = function mapAccumL(dictTraversable) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateL(traverse(dictTraversable)(Data_Traversable_Accum_Internal.applicativeStateL)(function (a) {
          return function (s) {
            return f(s)(a);
          };
        })(xs))(s0);
      };
    };
  };
};

var scanl = function scanl(dictTraversable) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumL(dictTraversable)(function (b) {
          return function (a) {
            var b$prime = f(b)(a);
            return {
              accum: b$prime,
              value: b$prime
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var $$for = function $$for(dictApplicative) {
  return function (dictTraversable) {
    return function (x) {
      return function (f) {
        return traverse(dictTraversable)(dictApplicative)(f)(x);
      };
    };
  };
};

module.exports = {
  Traversable: Traversable,
  traverse: traverse,
  sequence: sequence,
  traverseDefault: traverseDefault,
  sequenceDefault: sequenceDefault,
  "for": $$for,
  scanl: scanl,
  scanr: scanr,
  mapAccumL: mapAccumL,
  mapAccumR: mapAccumR,
  traversableArray: traversableArray,
  traversableMaybe: traversableMaybe,
  traversableFirst: traversableFirst,
  traversableLast: traversableLast,
  traversableAdditive: traversableAdditive,
  traversableDual: traversableDual,
  traversableConj: traversableConj,
  traversableDisj: traversableDisj,
  traversableMultiplicative: traversableMultiplicative,
  traversableEither: traversableEither,
  traversableTuple: traversableTuple,
  traversableIdentity: traversableIdentity,
  traversableConst: traversableConst,
  traversableProduct: traversableProduct,
  traversableCoproduct: traversableCoproduct,
  traversableCompose: traversableCompose,
  traversableApp: traversableApp,
  Foldable: Data_Foldable.Foldable,
  all: Data_Foldable.all,
  and: Data_Foldable.and,
  any: Data_Foldable.any,
  elem: Data_Foldable.elem,
  find: Data_Foldable.find,
  fold: Data_Foldable.fold,
  foldMap: Data_Foldable.foldMap,
  foldMapDefaultL: Data_Foldable.foldMapDefaultL,
  foldMapDefaultR: Data_Foldable.foldMapDefaultR,
  foldl: Data_Foldable.foldl,
  foldlDefault: Data_Foldable.foldlDefault,
  foldr: Data_Foldable.foldr,
  foldrDefault: Data_Foldable.foldrDefault,
  for_: Data_Foldable.for_,
  intercalate: Data_Foldable.intercalate,
  maximum: Data_Foldable.maximum,
  maximumBy: Data_Foldable.maximumBy,
  minimum: Data_Foldable.minimum,
  minimumBy: Data_Foldable.minimumBy,
  notElem: Data_Foldable.notElem,
  oneOf: Data_Foldable.oneOf,
  or: Data_Foldable.or,
  sequence_: Data_Foldable.sequence_,
  sum: Data_Foldable.sum,
  traverse_: Data_Foldable.traverse_
};
},{"./foreign.js":"oRQn","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Category/index.js":"IAi2","../Data.Const/index.js":"OmNG","../Data.Either/index.js":"B2JL","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.Functor.App/index.js":"FExJ","../Data.Functor.Compose/index.js":"z8br","../Data.Functor.Coproduct/index.js":"zImR","../Data.Functor.Product/index.js":"TPdM","../Data.Identity/index.js":"OKTm","../Data.Maybe/index.js":"mN7T","../Data.Maybe.First/index.js":"WL67","../Data.Maybe.Last/index.js":"aQky","../Data.Monoid.Additive/index.js":"fHyj","../Data.Monoid.Conj/index.js":"UG5s","../Data.Monoid.Disj/index.js":"bR7j","../Data.Monoid.Dual/index.js":"ULyl","../Data.Monoid.Multiplicative/index.js":"y5cd","../Data.Traversable.Accum/index.js":"gWkY","../Data.Traversable.Accum.Internal/index.js":"LbSr","../Data.Tuple/index.js":"IIOM"}],"V4EF":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_App = require("../Data.Functor.App/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Functor_Coproduct = require("../Data.Functor.Coproduct/index.js");

var Data_Functor_Product = require("../Data.Functor.Product/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Traversable_Accum = require("../Data.Traversable.Accum/index.js");

var Data_Traversable_Accum_Internal = require("../Data.Traversable.Accum.Internal/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var TraversableWithIndex = function TraversableWithIndex(FoldableWithIndex1, FunctorWithIndex0, Traversable2, traverseWithIndex) {
  this.FoldableWithIndex1 = FoldableWithIndex1;
  this.FunctorWithIndex0 = FunctorWithIndex0;
  this.Traversable2 = Traversable2;
  this.traverseWithIndex = traverseWithIndex;
};

var traverseWithIndexDefault = function traverseWithIndexDefault(dictTraversableWithIndex) {
  return function (dictApplicative) {
    return function (f) {
      var $63 = Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
      var $64 = Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
      return function ($65) {
        return $63($64($65));
      };
    };
  };
};

var traverseWithIndex = function traverseWithIndex(dict) {
  return dict.traverseWithIndex;
};

var traverseDefault = function traverseDefault(dictTraversableWithIndex) {
  return function (dictApplicative) {
    return function (f) {
      return traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(Data_Function["const"](f));
    };
  };
};

var traversableWithIndexTuple = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexTuple;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexTuple;
}, function () {
  return Data_Traversable.traversableTuple;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(v.value0))(f(Data_Unit.unit)(v.value1));
    };
  };
});

var traversableWithIndexProduct = function traversableWithIndexProduct(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return new TraversableWithIndex(function () {
      return Data_FoldableWithIndex.foldableWithIndexProduct(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
    }, function () {
      return Data_FunctorWithIndex.functorWithIndexProduct(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
    }, function () {
      return Data_Traversable.traversableProduct(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Control_Apply.lift2(dictApplicative.Apply0())(Data_Functor_Product.product)(traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($66) {
            return f(Data_Either.Left.create($66));
          })(v.value0))(traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(function ($67) {
            return f(Data_Either.Right.create($67));
          })(v.value1));
        };
      };
    });
  };
};

var traversableWithIndexMultiplicative = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexMultiplicative;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexMultiplicative;
}, function () {
  return Data_Traversable.traversableMultiplicative;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableMultiplicative)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexMaybe = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexMaybe;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexMaybe;
}, function () {
  return Data_Traversable.traversableMaybe;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableMaybe)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexLast = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexLast;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexLast;
}, function () {
  return Data_Traversable.traversableLast;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableLast)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexIdentity = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexIdentity;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexIdentity;
}, function () {
  return Data_Traversable.traversableIdentity;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Identity.Identity)(f(Data_Unit.unit)(v));
    };
  };
});
var traversableWithIndexFirst = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexFirst;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexFirst;
}, function () {
  return Data_Traversable.traversableFirst;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableFirst)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexEither = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexEither;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexEither;
}, function () {
  return Data_Traversable.traversableEither;
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_Either.Left) {
        return Control_Applicative.pure(dictApplicative)(new Data_Either.Left(v1.value0));
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create)(v(Data_Unit.unit)(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.TraversableWithIndex (line 95, column 1 - line 97, column 53): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var traversableWithIndexDual = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexDual;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexDual;
}, function () {
  return Data_Traversable.traversableDual;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableDual)(dictApplicative)(f(Data_Unit.unit));
  };
});
var traversableWithIndexDisj = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexDisj;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexDisj;
}, function () {
  return Data_Traversable.traversableDisj;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableDisj)(dictApplicative)(f(Data_Unit.unit));
  };
});

var traversableWithIndexCoproduct = function traversableWithIndexCoproduct(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return new TraversableWithIndex(function () {
      return Data_FoldableWithIndex.foldableWithIndexCoproduct(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
    }, function () {
      return Data_FunctorWithIndex.functorWithIndexCoproduct(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
    }, function () {
      return Data_Traversable.traversableCoproduct(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
    }, function (dictApplicative) {
      return function (f) {
        return Data_Functor_Coproduct.coproduct(function () {
          var $68 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($71) {
            return Data_Functor_Coproduct.Coproduct(Data_Either.Left.create($71));
          });
          var $69 = traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($72) {
            return f(Data_Either.Left.create($72));
          });
          return function ($70) {
            return $68($69($70));
          };
        }())(function () {
          var $73 = Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($76) {
            return Data_Functor_Coproduct.Coproduct(Data_Either.Right.create($76));
          });
          var $74 = traverseWithIndex(dictTraversableWithIndex1)(dictApplicative)(function ($77) {
            return f(Data_Either.Right.create($77));
          });
          return function ($75) {
            return $73($74($75));
          };
        }());
      };
    });
  };
};

var traversableWithIndexConst = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexConst;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexConst;
}, function () {
  return Data_Traversable.traversableConst;
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictApplicative)(v1);
    };
  };
});
var traversableWithIndexConj = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexConj;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexConj;
}, function () {
  return Data_Traversable.traversableConj;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableConj)(dictApplicative)(f(Data_Unit.unit));
  };
});

var traversableWithIndexCompose = function traversableWithIndexCompose(dictTraversableWithIndex) {
  return function (dictTraversableWithIndex1) {
    return new TraversableWithIndex(function () {
      return Data_FoldableWithIndex.foldableWithIndexCompose(dictTraversableWithIndex.FoldableWithIndex1())(dictTraversableWithIndex1.FoldableWithIndex1());
    }, function () {
      return Data_FunctorWithIndex.functorWithIndexCompose(dictTraversableWithIndex.FunctorWithIndex0())(dictTraversableWithIndex1.FunctorWithIndex0());
    }, function () {
      return Data_Traversable.traversableCompose(dictTraversableWithIndex.Traversable2())(dictTraversableWithIndex1.Traversable2());
    }, function (dictApplicative) {
      return function (f) {
        return function (v) {
          return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_Compose.Compose)(traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function () {
            var $78 = traverseWithIndex(dictTraversableWithIndex1)(dictApplicative);
            var $79 = Data_Tuple.curry(f);
            return function ($80) {
              return $78($79($80));
            };
          }())(v));
        };
      };
    });
  };
};

var traversableWithIndexArray = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexArray;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexArray;
}, function () {
  return Data_Traversable.traversableArray;
}, function (dictApplicative) {
  return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
});

var traversableWithIndexApp = function traversableWithIndexApp(dictTraversableWithIndex) {
  return new TraversableWithIndex(function () {
    return Data_FoldableWithIndex.foldableWithIndexApp(dictTraversableWithIndex.FoldableWithIndex1());
  }, function () {
    return Data_FunctorWithIndex.functorWithIndexApp(dictTraversableWithIndex.FunctorWithIndex0());
  }, function () {
    return Data_Traversable.traversableApp(dictTraversableWithIndex.Traversable2());
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Functor_App.App)(traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(f)(v));
      };
    };
  });
};

var traversableWithIndexAdditive = new TraversableWithIndex(function () {
  return Data_FoldableWithIndex.foldableWithIndexAdditive;
}, function () {
  return Data_FunctorWithIndex.functorWithIndexAdditive;
}, function () {
  return Data_Traversable.traversableAdditive;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(Data_Traversable.traversableAdditive)(dictApplicative)(f(Data_Unit.unit));
  };
});

var mapAccumRWithIndex = function mapAccumRWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateR(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateR)(function (i) {
          return function (a) {
            return function (s) {
              return f(i)(s)(a);
            };
          };
        })(xs))(s0);
      };
    };
  };
};

var scanrWithIndex = function scanrWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumRWithIndex(dictTraversableWithIndex)(function (i) {
          return function (b) {
            return function (a) {
              var b$prime = f(i)(a)(b);
              return {
                accum: b$prime,
                value: b$prime
              };
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var mapAccumLWithIndex = function mapAccumLWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (s0) {
      return function (xs) {
        return Data_Traversable_Accum_Internal.stateL(traverseWithIndex(dictTraversableWithIndex)(Data_Traversable_Accum_Internal.applicativeStateL)(function (i) {
          return function (a) {
            return function (s) {
              return f(i)(s)(a);
            };
          };
        })(xs))(s0);
      };
    };
  };
};

var scanlWithIndex = function scanlWithIndex(dictTraversableWithIndex) {
  return function (f) {
    return function (b0) {
      return function (xs) {
        return mapAccumLWithIndex(dictTraversableWithIndex)(function (i) {
          return function (b) {
            return function (a) {
              var b$prime = f(i)(b)(a);
              return {
                accum: b$prime,
                value: b$prime
              };
            };
          };
        })(b0)(xs).value;
      };
    };
  };
};

var forWithIndex = function forWithIndex(dictApplicative) {
  return function (dictTraversableWithIndex) {
    return Data_Function.flip(traverseWithIndex(dictTraversableWithIndex)(dictApplicative));
  };
};

module.exports = {
  TraversableWithIndex: TraversableWithIndex,
  traverseWithIndex: traverseWithIndex,
  traverseWithIndexDefault: traverseWithIndexDefault,
  forWithIndex: forWithIndex,
  scanlWithIndex: scanlWithIndex,
  mapAccumLWithIndex: mapAccumLWithIndex,
  scanrWithIndex: scanrWithIndex,
  mapAccumRWithIndex: mapAccumRWithIndex,
  traverseDefault: traverseDefault,
  traversableWithIndexArray: traversableWithIndexArray,
  traversableWithIndexMaybe: traversableWithIndexMaybe,
  traversableWithIndexFirst: traversableWithIndexFirst,
  traversableWithIndexLast: traversableWithIndexLast,
  traversableWithIndexAdditive: traversableWithIndexAdditive,
  traversableWithIndexDual: traversableWithIndexDual,
  traversableWithIndexConj: traversableWithIndexConj,
  traversableWithIndexDisj: traversableWithIndexDisj,
  traversableWithIndexMultiplicative: traversableWithIndexMultiplicative,
  traversableWithIndexEither: traversableWithIndexEither,
  traversableWithIndexTuple: traversableWithIndexTuple,
  traversableWithIndexIdentity: traversableWithIndexIdentity,
  traversableWithIndexConst: traversableWithIndexConst,
  traversableWithIndexProduct: traversableWithIndexProduct,
  traversableWithIndexCoproduct: traversableWithIndexCoproduct,
  traversableWithIndexCompose: traversableWithIndexCompose,
  traversableWithIndexApp: traversableWithIndexApp
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Data.Either/index.js":"B2JL","../Data.FoldableWithIndex/index.js":"Efib","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Functor.App/index.js":"FExJ","../Data.Functor.Compose/index.js":"z8br","../Data.Functor.Coproduct/index.js":"zImR","../Data.Functor.Product/index.js":"TPdM","../Data.FunctorWithIndex/index.js":"OHRN","../Data.Identity/index.js":"OKTm","../Data.Traversable/index.js":"n7EE","../Data.Traversable.Accum/index.js":"gWkY","../Data.Traversable.Accum.Internal/index.js":"LbSr","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk"}],"v61O":[function(require,module,exports) {
"use strict";

exports.unfoldrArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;

            while (true) {
              // eslint-disable-line no-constant-condition
              var maybe = f(value);
              if (isNothing(maybe)) return result;
              var tuple = fromJust(maybe);
              result.push(fst(tuple));
              value = snd(tuple);
            }
          };
        };
      };
    };
  };
};
},{}],"rpkt":[function(require,module,exports) {
"use strict";

exports.unfoldr1ArrayImpl = function (isNothing) {
  return function (fromJust) {
    return function (fst) {
      return function (snd) {
        return function (f) {
          return function (b) {
            var result = [];
            var value = b;

            while (true) {
              // eslint-disable-line no-constant-condition
              var tuple = f(value);
              result.push(fst(tuple));
              var maybe = snd(tuple);
              if (isNothing(maybe)) return result;
              value = fromJust(maybe);
            }
          };
        };
      };
    };
  };
};
},{}],"qkfi":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Multiplicative = require("../Data.Monoid.Multiplicative/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Traversable1 = function Traversable1(Foldable10, _Traversable, sequence1, traverse1) {
  this.Foldable10 = Foldable10;
  this.Traversable1 = _Traversable;
  this.sequence1 = sequence1;
  this.traverse1 = traverse1;
};

var traverse1 = function traverse1(dict) {
  return dict.traverse1;
};

var traversableTuple = new Traversable1(function () {
  return Data_Semigroup_Foldable.foldableTuple;
}, function () {
  return Data_Traversable.traversableTuple;
}, function (dictApply) {
  return function (v) {
    return Data_Functor.map(dictApply.Functor0())(Data_Tuple.Tuple.create(v.value0))(v.value1);
  };
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Tuple.Tuple.create(v.value0))(f(v.value1));
    };
  };
});
var traversableIdentity = new Traversable1(function () {
  return Data_Semigroup_Foldable.foldableIdentity;
}, function () {
  return Data_Traversable.traversableIdentity;
}, function (dictApply) {
  return function (v) {
    return Data_Functor.map(dictApply.Functor0())(Data_Identity.Identity)(v);
  };
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Identity.Identity)(f(v));
    };
  };
});

var sequence1Default = function sequence1Default(dictTraversable1) {
  return function (dictApply) {
    return traverse1(dictTraversable1)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var traversableDual = new Traversable1(function () {
  return Data_Semigroup_Foldable.foldableDual;
}, function () {
  return Data_Traversable.traversableDual;
}, function (dictApply) {
  return sequence1Default(traversableDual)(dictApply);
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Dual.Dual)(f(v));
    };
  };
});
var traversableMultiplicative = new Traversable1(function () {
  return Data_Semigroup_Foldable.foldableMultiplicative;
}, function () {
  return Data_Traversable.traversableMultiplicative;
}, function (dictApply) {
  return sequence1Default(traversableMultiplicative)(dictApply);
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApply.Functor0())(Data_Monoid_Multiplicative.Multiplicative)(f(v));
    };
  };
});

var sequence1 = function sequence1(dict) {
  return dict.sequence1;
};

var traverse1Default = function traverse1Default(dictTraversable1) {
  return function (dictApply) {
    return function (f) {
      return function (ta) {
        return sequence1(dictTraversable1)(dictApply)(Data_Functor.map(dictTraversable1.Traversable1().Functor0())(f)(ta));
      };
    };
  };
};

module.exports = {
  sequence1: sequence1,
  traverse1: traverse1,
  Traversable1: Traversable1,
  traverse1Default: traverse1Default,
  sequence1Default: sequence1Default,
  traversableDual: traversableDual,
  traversableMultiplicative: traversableMultiplicative,
  traversableTuple: traversableTuple,
  traversableIdentity: traversableIdentity
};
},{"../Control.Category/index.js":"IAi2","../Data.Functor/index.js":"AEHo","../Data.Identity/index.js":"OKTm","../Data.Monoid.Dual/index.js":"ULyl","../Data.Monoid.Multiplicative/index.js":"y5cd","../Data.Semigroup.Foldable/index.js":"htAR","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM"}],"S0Nl":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Unfoldable1 = function Unfoldable1(unfoldr1) {
  this.unfoldr1 = unfoldr1;
};

var unfoldr1 = function unfoldr1(dict) {
  return dict.unfoldr1;
};

var unfoldable1Maybe = new Unfoldable1(function (f) {
  return function (b) {
    return new Data_Maybe.Just(Data_Tuple.fst(f(b)));
  };
});
var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));

var replicate1 = function replicate1(dictUnfoldable1) {
  return function (n) {
    return function (v) {
      var step = function step(i) {
        if (i <= 0) {
          return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));
        }

        ;
        throw new Error("Failed pattern match at Data.Unfoldable1 (line 67, column 5 - line 67, column 39): " + [i.constructor.name]);
      };

      return unfoldr1(dictUnfoldable1)(step)(n - 1 | 0);
    };
  };
};

var replicate1A = function replicate1A(dictApply) {
  return function (dictUnfoldable1) {
    return function (dictTraversable1) {
      return function (n) {
        return function (m) {
          return Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply)(replicate1(dictUnfoldable1)(n)(m));
        };
      };
    };
  };
};

var singleton = function singleton(dictUnfoldable1) {
  return replicate1(dictUnfoldable1)(1);
};

var range = function range(dictUnfoldable1) {
  return function (start) {
    return function (end) {
      var go = function go(delta) {
        return function (i) {
          var i$prime = i + delta | 0;
          return new Data_Tuple.Tuple(i, function () {
            var $8 = i === end;

            if ($8) {
              return Data_Maybe.Nothing.value;
            }

            ;
            return new Data_Maybe.Just(i$prime);
          }());
        };
      };

      var delta = function () {
        var $9 = end >= start;

        if ($9) {
          return 1;
        }

        ;
        return -1 | 0;
      }();

      return unfoldr1(dictUnfoldable1)(go(delta))(start);
    };
  };
};

module.exports = {
  Unfoldable1: Unfoldable1,
  unfoldr1: unfoldr1,
  replicate1: replicate1,
  replicate1A: replicate1A,
  singleton: singleton,
  range: range,
  unfoldable1Array: unfoldable1Array,
  unfoldable1Maybe: unfoldable1Maybe
};
},{"./foreign.js":"rpkt","../Data.Boolean/index.js":"ObQr","../Data.Maybe/index.js":"mN7T","../Data.Semigroup.Traversable/index.js":"qkfi","../Data.Tuple/index.js":"IIOM"}],"ZwHW":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Unfoldable = function Unfoldable(Unfoldable10, unfoldr) {
  this.Unfoldable10 = Unfoldable10;
  this.unfoldr = unfoldr;
};

var unfoldr = function unfoldr(dict) {
  return dict.unfoldr;
};

var unfoldableMaybe = new Unfoldable(function () {
  return Data_Unfoldable1.unfoldable1Maybe;
}, function (f) {
  return function (b) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst)(f(b));
  };
});
var unfoldableArray = new Unfoldable(function () {
  return Data_Unfoldable1.unfoldable1Array;
}, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));

var replicate = function replicate(dictUnfoldable) {
  return function (n) {
    return function (v) {
      var step = function step(i) {
        var $7 = i <= 0;

        if ($7) {
          return Data_Maybe.Nothing.value;
        }

        ;
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v, i - 1 | 0));
      };

      return unfoldr(dictUnfoldable)(step)(n);
    };
  };
};

var replicateA = function replicateA(dictApplicative) {
  return function (dictUnfoldable) {
    return function (dictTraversable) {
      return function (n) {
        return function (m) {
          return Data_Traversable.sequence(dictTraversable)(dictApplicative)(replicate(dictUnfoldable)(n)(m));
        };
      };
    };
  };
};

var none = function none(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Unit.unit);
};

var fromMaybe = function fromMaybe(dictUnfoldable) {
  return unfoldr(dictUnfoldable)(function (b) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Maybe.Nothing.value))(b);
  });
};

module.exports = {
  Unfoldable: Unfoldable,
  unfoldr: unfoldr,
  replicate: replicate,
  replicateA: replicateA,
  none: none,
  fromMaybe: fromMaybe,
  unfoldableArray: unfoldableArray,
  unfoldableMaybe: unfoldableMaybe,
  Unfoldable1: Data_Unfoldable1.Unfoldable1,
  range: Data_Unfoldable1.range,
  replicate1: Data_Unfoldable1.replicate1,
  replicate1A: Data_Unfoldable1.replicate1A,
  singleton: Data_Unfoldable1.singleton,
  unfoldr1: Data_Unfoldable1.unfoldr1
};
},{"./foreign.js":"v61O","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable1/index.js":"S0Nl","../Data.Unit/index.js":"NhVk"}],"qF8i":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var NonEmpty = function () {
  function NonEmpty(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  NonEmpty.create = function (value0) {
    return function (value1) {
      return new NonEmpty(value0, value1);
    };
  };

  return NonEmpty;
}();

var unfoldable1NonEmpty = function unfoldable1NonEmpty(dictUnfoldable) {
  return new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
      return Data_Tuple.uncurry(NonEmpty.create)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Unfoldable.unfoldr(dictUnfoldable)(Data_Functor.map(Data_Maybe.functorMaybe)(f)))(f(b)));
    };
  });
};

var tail = function tail(v) {
  return v.value1;
};

var singleton = function singleton(dictPlus) {
  return function (a) {
    return new NonEmpty(a, Control_Plus.empty(dictPlus));
  };
};

var showNonEmpty = function showNonEmpty(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (v) {
      return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
    });
  };
};

var oneOf = function oneOf(dictAlternative) {
  return function (v) {
    return Control_Alt.alt(dictAlternative.Plus1().Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
  };
};

var head = function head(v) {
  return v.value0;
};

var functorNonEmpty = function functorNonEmpty(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (m) {
      return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
    };
  });
};

var functorWithIndex = function functorWithIndex(dictFunctorWithIndex) {
  return new Data_FunctorWithIndex.FunctorWithIndex(function () {
    return functorNonEmpty(dictFunctorWithIndex.Functor0());
  }, function (f) {
    return function (v) {
      return new NonEmpty(f(Data_Maybe.Nothing.value)(v.value0), Data_FunctorWithIndex.mapWithIndex(dictFunctorWithIndex)(function ($151) {
        return f(Data_Maybe.Just.create($151));
      })(v.value1));
    };
  });
};

var fromNonEmpty = function fromNonEmpty(f) {
  return function (v) {
    return f(v.value0)(v.value1);
  };
};

var foldableNonEmpty = function foldableNonEmpty(dictFoldable) {
  return new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
      };
    };
  });
};

var foldableWithIndexNonEmpty = function foldableWithIndexNonEmpty(dictFoldableWithIndex) {
  return new Data_FoldableWithIndex.FoldableWithIndex(function () {
    return foldableNonEmpty(dictFoldableWithIndex.Foldable0());
  }, function (dictMonoid) {
    return function (f) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(Data_Maybe.Nothing.value)(v.value0))(Data_FoldableWithIndex.foldMapWithIndex(dictFoldableWithIndex)(dictMonoid)(function ($152) {
          return f(Data_Maybe.Just.create($152));
        })(v.value1));
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function ($153) {
          return f(Data_Maybe.Just.create($153));
        })(f(Data_Maybe.Nothing.value)(b)(v.value0))(v.value1);
      };
    };
  }, function (f) {
    return function (b) {
      return function (v) {
        return f(Data_Maybe.Nothing.value)(v.value0)(Data_FoldableWithIndex.foldrWithIndex(dictFoldableWithIndex)(function ($154) {
          return f(Data_Maybe.Just.create($154));
        })(b)(v.value1));
      };
    };
  });
};

var traversableNonEmpty = function traversableNonEmpty(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableNonEmpty(dictTraversable.Foldable1());
  }, function () {
    return functorNonEmpty(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return function (v) {
      return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(v.value0))(Data_Traversable.sequence(dictTraversable)(dictApplicative)(v.value1));
    };
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(v.value0)))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(f)(v.value1));
      };
    };
  });
};

var traversableWithIndexNonEmpty = function traversableWithIndexNonEmpty(dictTraversableWithIndex) {
  return new Data_TraversableWithIndex.TraversableWithIndex(function () {
    return foldableWithIndexNonEmpty(dictTraversableWithIndex.FoldableWithIndex1());
  }, function () {
    return functorWithIndex(dictTraversableWithIndex.FunctorWithIndex0());
  }, function () {
    return traversableNonEmpty(dictTraversableWithIndex.Traversable2());
  }, function (dictApplicative) {
    return function (f) {
      return function (v) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmpty.create)(f(Data_Maybe.Nothing.value)(v.value0)))(Data_TraversableWithIndex.traverseWithIndex(dictTraversableWithIndex)(dictApplicative)(function ($155) {
          return f(Data_Maybe.Just.create($155));
        })(v.value1));
      };
    };
  });
};

var foldable1NonEmpty = function foldable1NonEmpty(dictFoldable) {
  return new Data_Semigroup_Foldable.Foldable1(function () {
    return foldableNonEmpty(dictFoldable);
  }, function (dictSemigroup) {
    return function (f) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(function (s) {
          return function (a1) {
            return Data_Semigroup.append(dictSemigroup)(s)(f(a1));
          };
        })(f(v.value0))(v.value1);
      };
    };
  }, function (f) {
    return function (v) {
      return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
    };
  }, function (f) {
    return function (v) {
      return Data_Maybe.maybe(v.value0)(f(v.value0))(Data_Foldable.foldr(dictFoldable)(function (a1) {
        var $156 = Data_Maybe.maybe(a1)(f(a1));
        return function ($157) {
          return Data_Maybe.Just.create($156($157));
        };
      })(Data_Maybe.Nothing.value)(v.value1));
    };
  });
};

var foldl1 = function foldl1(dictFoldable) {
  return function (dictWarn) {
    return Data_Semigroup_Foldable.foldl1(foldable1NonEmpty(dictFoldable));
  };
};

var eqNonEmpty = function eqNonEmpty(dictEq1) {
  return function (dictEq) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq1(dictEq1)(dictEq)(x.value1)(y.value1);
      };
    });
  };
};

var ordNonEmpty = function ordNonEmpty(dictOrd1) {
  return function (dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqNonEmpty(dictOrd1.Eq10())(dictOrd.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare1(dictOrd1)(dictOrd)(x.value1)(y.value1);
      };
    });
  };
};

var eq1NonEmpty = function eq1NonEmpty(dictEq1) {
  return new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqNonEmpty(dictEq1)(dictEq));
  });
};

var ord1NonEmpty = function ord1NonEmpty(dictOrd1) {
  return new Data_Ord.Ord1(function () {
    return eq1NonEmpty(dictOrd1.Eq10());
  }, function (dictOrd) {
    return Data_Ord.compare(ordNonEmpty(dictOrd1)(dictOrd));
  });
};

module.exports = {
  NonEmpty: NonEmpty,
  singleton: singleton,
  foldl1: foldl1,
  fromNonEmpty: fromNonEmpty,
  oneOf: oneOf,
  head: head,
  tail: tail,
  showNonEmpty: showNonEmpty,
  eqNonEmpty: eqNonEmpty,
  eq1NonEmpty: eq1NonEmpty,
  ordNonEmpty: ordNonEmpty,
  ord1NonEmpty: ord1NonEmpty,
  functorNonEmpty: functorNonEmpty,
  functorWithIndex: functorWithIndex,
  foldableNonEmpty: foldableNonEmpty,
  foldableWithIndexNonEmpty: foldableWithIndexNonEmpty,
  traversableNonEmpty: traversableNonEmpty,
  traversableWithIndexNonEmpty: traversableWithIndexNonEmpty,
  foldable1NonEmpty: foldable1NonEmpty,
  unfoldable1NonEmpty: unfoldable1NonEmpty
};
},{"../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Plus/index.js":"oMBg","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.FoldableWithIndex/index.js":"Efib","../Data.Functor/index.js":"AEHo","../Data.FunctorWithIndex/index.js":"OHRN","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Semigroup.Foldable/index.js":"htAR","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.TraversableWithIndex/index.js":"V4EF","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW","../Data.Unfoldable1/index.js":"S0Nl"}],"Xxuc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Nil = function () {
  function Nil() {}

  ;
  Nil.value = new Nil();
  return Nil;
}();

var Cons = function () {
  function Cons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Cons.create = function (value0) {
    return function (value1) {
      return new Cons(value0, value1);
    };
  };

  return Cons;
}();

var NonEmptyList = function NonEmptyList(x) {
  return x;
};

var toList = function toList(v) {
  return new Cons(v.value0, v.value1);
};

var newtypeNonEmptyList = new Data_Newtype.Newtype(function () {
  return undefined;
});

var nelCons = function nelCons(a) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));
  };
};

var listMap = function listMap(f) {
  var chunkedRevMap = function chunkedRevMap($copy_chunksAcc) {
    return function ($copy_v) {
      var $tco_var_chunksAcc = $copy_chunksAcc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(chunksAcc, v) {
        if (v instanceof Cons && v.value1 instanceof Cons && v.value1.value1 instanceof Cons) {
          $tco_var_chunksAcc = new Cons(v, chunksAcc);
          $copy_v = v.value1.value1.value1;
          return;
        }

        ;

        var unrolledMap = function unrolledMap(v1) {
          if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil) {
            return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
          }

          ;

          if (v1 instanceof Cons && v1.value1 instanceof Nil) {
            return new Cons(f(v1.value0), Nil.value);
          }

          ;
          return Nil.value;
        };

        var reverseUnrolledMap = function reverseUnrolledMap($copy_v1) {
          return function ($copy_acc) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done1 = false;
            var $tco_result;

            function $tco_loop(v1, acc) {
              if (v1 instanceof Cons && v1.value0 instanceof Cons && v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons) {
                $tco_var_v1 = v1.value1;
                $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                return;
              }

              ;
              $tco_done1 = true;
              return acc;
            }

            ;

            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
            }

            ;
            return $tco_result;
          };
        };

        $tco_done = true;
        return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return chunkedRevMap(Nil.value);
};

var functorList = new Data_Functor.Functor(listMap);
var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldl(foldableList)(function (acc) {
      var $205 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
      return function ($206) {
        return $205(f($206));
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (f) {
  var go = function go($copy_b) {
    return function ($copy_v) {
      var $tco_var_b = $copy_b;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(b, v) {
        if (v instanceof Nil) {
          $tco_done = true;
          return b;
        }

        ;

        if (v instanceof Cons) {
          $tco_var_b = f(b)(v.value0);
          $copy_v = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_b, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return function (b) {
    var rev = function () {
      var go = function go($copy_acc) {
        return function ($copy_v) {
          var $tco_var_acc = $copy_acc;
          var $tco_done1 = false;
          var $tco_result;

          function $tco_loop(acc, v) {
            if (v instanceof Nil) {
              $tco_done1 = true;
              return acc;
            }

            ;

            if (v instanceof Cons) {
              $tco_var_acc = new Cons(v.value0, acc);
              $copy_v = v.value1;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [acc.constructor.name, v.constructor.name]);
          }

          ;

          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_acc, $copy_v);
          }

          ;
          return $tco_result;
        };
      };

      return go(Nil.value);
    }();

    var $207 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
    return function ($208) {
      return $207(rev($208));
    };
  };
});
var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
var foldableWithIndexList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableList;
}, function (dictMonoid) {
  return function (f) {
    return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
      return function (acc) {
        var $209 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
        var $210 = f(i);
        return function ($211) {
          return $209($210($211));
        };
      };
    })(Data_Monoid.mempty(dictMonoid));
  };
}, function (f) {
  return function (acc) {
    var $212 = Data_Foldable.foldl(foldableList)(function (v) {
      return function (a) {
        return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));
      };
    })(new Data_Tuple.Tuple(0, acc));
    return function ($213) {
      return Data_Tuple.snd($212($213));
    };
  };
}, function (f) {
  return function (b) {
    return function (xs) {
      var v = function () {
        var rev = Data_Foldable.foldl(foldableList)(function (v1) {
          return function (a) {
            return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));
          };
        });
        return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);
      }();

      return Data_Tuple.snd(Data_Foldable.foldl(foldableList)(function (v1) {
        return function (a) {
          return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));
        };
      })(new Data_Tuple.Tuple(v.value0, b))(v.value1));
    };
  };
});
var foldableWithIndexNonEmptyList = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableNonEmptyList;
}, function (dictMonoid) {
  return function (f) {
    return function (v) {
      return Data_FoldableWithIndex.foldMapWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(dictMonoid)(function () {
        var $214 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($215) {
          return f($214($215));
        };
      }())(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldlWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function () {
        var $216 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($217) {
          return f($216($217));
        };
      }())(b)(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return Data_FoldableWithIndex.foldrWithIndex(Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList))(function () {
        var $218 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($219) {
          return f($218($219));
        };
      }())(b)(v);
    };
  };
});
var functorWithIndexList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorList;
}, function (f) {
  return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList)(function (i) {
    return function (x) {
      return function (acc) {
        return new Cons(f(i)(x), acc);
      };
    };
  })(Nil.value);
});
var functorWithIndexNonEmptyList = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorNonEmptyList;
}, function (fn) {
  return function (v) {
    return NonEmptyList(Data_FunctorWithIndex.mapWithIndex(Data_NonEmpty.functorWithIndex(functorWithIndexList))(function () {
      var $220 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
      return function ($221) {
        return fn($220($221));
      };
    }())(v));
  };
});
var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
  return function (ys) {
    return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
  };
});
var monoidList = new Data_Monoid.Monoid(function () {
  return semigroupList;
}, Nil.value);
var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
  return function (as$prime) {
    return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
  };
});

var showList = function showList(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof Nil) {
      return "Nil";
    }

    ;
    return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
  });
};

var showNonEmptyList = function showNonEmptyList(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
  });
};

var traversableList = new Data_Traversable.Traversable(function () {
  return foldableList;
}, function () {
  return functorList;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableList)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApplicative) {
  return function (f) {
    var $222 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value));
    var $223 = Data_Foldable.foldl(foldableList)(function (acc) {
      var $225 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
      return function ($226) {
        return $225(f($226));
      };
    })(Control_Applicative.pure(dictApplicative)(Nil.value));
    return function ($224) {
      return $222($223($224));
    };
  };
});
var traversableNonEmptyList = Data_NonEmpty.traversableNonEmpty(traversableList);
var traversableWithIndexList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexList;
}, function () {
  return functorWithIndexList;
}, function () {
  return traversableList;
}, function (dictApplicative) {
  return function (f) {
    var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
    var $227 = Data_Functor.map(dictApplicative.Apply0().Functor0())(rev);
    var $228 = Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {
      return function (acc) {
        var $230 = Control_Apply.lift2(dictApplicative.Apply0())(Data_Function.flip(Cons.create))(acc);
        var $231 = f(i);
        return function ($232) {
          return $230($231($232));
        };
      };
    })(Control_Applicative.pure(dictApplicative)(Nil.value));
    return function ($229) {
      return $227($228($229));
    };
  };
});
var traversableWithIndexNonEmptyList = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexNonEmptyList;
}, function () {
  return functorWithIndexNonEmptyList;
}, function () {
  return traversableNonEmptyList;
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(NonEmptyList)(Data_TraversableWithIndex.traverseWithIndex(Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList))(dictApplicative)(function () {
        var $233 = Data_Maybe.maybe(0)(Data_Semiring.add(Data_Semiring.semiringInt)(1));
        return function ($234) {
          return f($233($234));
        };
      }())(v));
    };
  };
});
var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = new Cons(v.value0, memo);
            return;
          }

          ;

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(Nil.value);
  };
});
var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1List;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = new Cons(v.value0.value0, memo);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(Nil.value);
  };
});
var unfoldable1NonEmptyList = Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);
var foldable1NonEmptyList = Data_NonEmpty.foldable1NonEmpty(foldableList);
var extendNonEmptyList = new Control_Extend.Extend(function () {
  return functorNonEmptyList;
}, function (f) {
  return function (v) {
    var go = function go(a) {
      return function (v1) {
        return {
          val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),
          acc: new Cons(a, v1.acc)
        };
      };
    };

    return new Data_NonEmpty.NonEmpty(f(v), Data_Foldable.foldr(foldableList)(go)({
      val: Nil.value,
      acc: Nil.value
    })(v.value1).val);
  };
});
var extendList = new Control_Extend.Extend(function () {
  return functorList;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v1 instanceof Cons) {
      var go = function go(a$prime) {
        return function (v2) {
          var acc$prime = new Cons(a$prime, v2.acc);
          return {
            val: new Cons(v(acc$prime), v2.val),
            acc: acc$prime
          };
        };
      };

      return new Cons(v(v1), Data_Foldable.foldr(foldableList)(go)({
        val: Nil.value,
        acc: Nil.value
      })(v1.value1).val);
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 183, column 1 - line 190, column 42): " + [v.constructor.name, v1.constructor.name]);
  };
});
var eq1List = new Data_Eq.Eq1(function (dictEq) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          return function ($copy_v2) {
            var $tco_var_v = $copy_v;
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1, v2) {
              if (!v2) {
                $tco_done = true;
                return false;
              }

              ;

              if (v instanceof Nil && v1 instanceof Nil) {
                $tco_done = true;
                return v2;
              }

              ;

              if (v instanceof Cons && v1 instanceof Cons) {
                $tco_var_v = v.value1;
                $tco_var_v1 = v1.value1;
                $copy_v2 = v2 && Data_Eq.eq(dictEq)(v1.value0)(v.value0);
                return;
              }

              ;
              $tco_done = true;
              return false;
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);
            }

            ;
            return $tco_result;
          };
        };
      };

      return go(xs)(ys)(true);
    };
  };
});
var eq1NonEmptyList = Data_NonEmpty.eq1NonEmpty(eq1List);

var eqList = function eqList(dictEq) {
  return new Data_Eq.Eq(Data_Eq.eq1(eq1List)(dictEq));
};

var eqNonEmptyList = function eqNonEmptyList(dictEq) {
  return Data_NonEmpty.eqNonEmpty(eq1List)(dictEq);
};

var ord1List = new Data_Ord.Ord1(function () {
  return eq1List;
}, function (dictOrd) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Nil && v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.EQ.value;
            }

            ;

            if (v instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.LT.value;
            }

            ;

            if (v1 instanceof Nil) {
              $tco_done = true;
              return Data_Ordering.GT.value;
            }

            ;

            if (v instanceof Cons && v1 instanceof Cons) {
              var v2 = Data_Ord.compare(dictOrd)(v.value0)(v1.value0);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_var_v = v.value1;
                $copy_v1 = v1.value1;
                return;
              }

              ;
              $tco_done = true;
              return v2;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Types (line 61, column 5 - line 61, column 20): " + [v.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      return go(xs)(ys);
    };
  };
});
var ord1NonEmptyList = Data_NonEmpty.ord1NonEmpty(ord1List);

var ordList = function ordList(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqList(dictOrd.Eq0());
  }, Data_Ord.compare1(ord1List)(dictOrd));
};

var ordNonEmptyList = function ordNonEmptyList(dictOrd) {
  return Data_NonEmpty.ordNonEmpty(ord1List)(dictOrd);
};

var comonadNonEmptyList = new Control_Comonad.Comonad(function () {
  return extendNonEmptyList;
}, function (v) {
  return v.value0;
});
var applyList = new Control_Apply.Apply(function () {
  return functorList;
}, function (v) {
  return function (v1) {
    if (v instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v instanceof Cons) {
      return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): " + [v.constructor.name, v1.constructor.name]);
  };
});
var applyNonEmptyList = new Control_Apply.Apply(function () {
  return functorNonEmptyList;
}, function (v) {
  return function (v1) {
    return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
  };
});
var bindList = new Control_Bind.Bind(function () {
  return applyList;
}, function (v) {
  return function (v1) {
    if (v instanceof Nil) {
      return Nil.value;
    }

    ;

    if (v instanceof Cons) {
      return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.List.Types (line 165, column 1 - line 167, column 37): " + [v.constructor.name, v1.constructor.name]);
  };
});
var bindNonEmptyList = new Control_Bind.Bind(function () {
  return applyNonEmptyList;
}, function (v) {
  return function (f) {
    var v1 = f(v.value0);
    return new Data_NonEmpty.NonEmpty(v1.value0, Data_Semigroup.append(semigroupList)(v1.value1)(Control_Bind.bind(bindList)(v.value1)(function ($235) {
      return toList(f($235));
    })));
  };
});
var applicativeList = new Control_Applicative.Applicative(function () {
  return applyList;
}, function (a) {
  return new Cons(a, Nil.value);
});
var monadList = new Control_Monad.Monad(function () {
  return applicativeList;
}, function () {
  return bindList;
});
var altNonEmptyList = new Control_Alt.Alt(function () {
  return functorNonEmptyList;
}, Data_Semigroup.append(semigroupNonEmptyList));
var altList = new Control_Alt.Alt(function () {
  return functorList;
}, Data_Semigroup.append(semigroupList));
var plusList = new Control_Plus.Plus(function () {
  return altList;
}, Nil.value);
var alternativeList = new Control_Alternative.Alternative(function () {
  return applicativeList;
}, function () {
  return plusList;
});
var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
  return alternativeList;
}, function () {
  return monadList;
});
var monadZeroList = new Control_MonadZero.MonadZero(function () {
  return alternativeList;
}, function () {
  return monadList;
}, function () {
  return undefined;
});
var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
  return applyNonEmptyList;
}, function () {
  var $236 = Data_NonEmpty.singleton(plusList);
  return function ($237) {
    return NonEmptyList($236($237));
  };
}());
var monadNonEmptyList = new Control_Monad.Monad(function () {
  return applicativeNonEmptyList;
}, function () {
  return bindNonEmptyList;
});
var traversable1NonEmptyList = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1NonEmptyList;
}, function () {
  return traversableNonEmptyList;
}, function (dictApply) {
  return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(Control_Category.identity(Control_Category.categoryFn));
}, function (dictApply) {
  return function (f) {
    return function (v) {
      return Data_Functor.mapFlipped(dictApply.Functor0())(Data_Foldable.foldl(foldableList)(function (acc) {
        var $238 = Control_Apply.lift2(dictApply)(Data_Function.flip(nelCons))(acc);
        return function ($239) {
          return $238(f($239));
        };
      })(Data_Functor.map(dictApply.Functor0())(Control_Applicative.pure(applicativeNonEmptyList))(f(v.value0)))(v.value1))(function (v1) {
        return Data_Foldable.foldl(foldableList)(Data_Function.flip(nelCons))(Control_Applicative.pure(applicativeNonEmptyList)(v1.value0))(v1.value1);
      });
    };
  };
});
module.exports = {
  Nil: Nil,
  Cons: Cons,
  NonEmptyList: NonEmptyList,
  toList: toList,
  nelCons: nelCons,
  showList: showList,
  eqList: eqList,
  eq1List: eq1List,
  ordList: ordList,
  ord1List: ord1List,
  semigroupList: semigroupList,
  monoidList: monoidList,
  functorList: functorList,
  functorWithIndexList: functorWithIndexList,
  foldableList: foldableList,
  foldableWithIndexList: foldableWithIndexList,
  unfoldable1List: unfoldable1List,
  unfoldableList: unfoldableList,
  traversableList: traversableList,
  traversableWithIndexList: traversableWithIndexList,
  applyList: applyList,
  applicativeList: applicativeList,
  bindList: bindList,
  monadList: monadList,
  altList: altList,
  plusList: plusList,
  alternativeList: alternativeList,
  monadZeroList: monadZeroList,
  monadPlusList: monadPlusList,
  extendList: extendList,
  newtypeNonEmptyList: newtypeNonEmptyList,
  eqNonEmptyList: eqNonEmptyList,
  ordNonEmptyList: ordNonEmptyList,
  eq1NonEmptyList: eq1NonEmptyList,
  ord1NonEmptyList: ord1NonEmptyList,
  showNonEmptyList: showNonEmptyList,
  functorNonEmptyList: functorNonEmptyList,
  applyNonEmptyList: applyNonEmptyList,
  applicativeNonEmptyList: applicativeNonEmptyList,
  bindNonEmptyList: bindNonEmptyList,
  monadNonEmptyList: monadNonEmptyList,
  altNonEmptyList: altNonEmptyList,
  extendNonEmptyList: extendNonEmptyList,
  comonadNonEmptyList: comonadNonEmptyList,
  semigroupNonEmptyList: semigroupNonEmptyList,
  foldableNonEmptyList: foldableNonEmptyList,
  traversableNonEmptyList: traversableNonEmptyList,
  foldable1NonEmptyList: foldable1NonEmptyList,
  unfoldable1NonEmptyList: unfoldable1NonEmptyList,
  functorWithIndexNonEmptyList: functorWithIndexNonEmptyList,
  foldableWithIndexNonEmptyList: foldableWithIndexNonEmptyList,
  traversableWithIndexNonEmptyList: traversableWithIndexNonEmptyList,
  traversable1NonEmptyList: traversable1NonEmptyList
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Comonad/index.js":"U0zO","../Control.Extend/index.js":"JIoJ","../Control.Monad/index.js":"UIxr","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.FoldableWithIndex/index.js":"Efib","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.FunctorWithIndex/index.js":"OHRN","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.NonEmpty/index.js":"qF8i","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Semigroup.Traversable/index.js":"qkfi","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.TraversableWithIndex/index.js":"V4EF","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW","../Data.Unfoldable1/index.js":"S0Nl"}],"vWoU":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Leaf = function () {
  function Leaf() {}

  ;
  Leaf.value = new Leaf();
  return Leaf;
}();

var Two = function () {
  function Two(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Two.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Two(value0, value1, value2);
      };
    };
  };

  return Two;
}();

var Three = function () {
  function Three(value0, value1, value2, value3, value4) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  ;

  Three.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return function (value4) {
            return new Three(value0, value1, value2, value3, value4);
          };
        };
      };
    };
  };

  return Three;
}();

var TwoLeft = function () {
  function TwoLeft(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  TwoLeft.create = function (value0) {
    return function (value1) {
      return new TwoLeft(value0, value1);
    };
  };

  return TwoLeft;
}();

var TwoRight = function () {
  function TwoRight(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  TwoRight.create = function (value0) {
    return function (value1) {
      return new TwoRight(value0, value1);
    };
  };

  return TwoRight;
}();

var ThreeLeft = function () {
  function ThreeLeft(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  ThreeLeft.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new ThreeLeft(value0, value1, value2, value3);
        };
      };
    };
  };

  return ThreeLeft;
}();

var ThreeMiddle = function () {
  function ThreeMiddle(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  ThreeMiddle.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new ThreeMiddle(value0, value1, value2, value3);
        };
      };
    };
  };

  return ThreeMiddle;
}();

var ThreeRight = function () {
  function ThreeRight(value0, value1, value2, value3) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  ;

  ThreeRight.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return function (value3) {
          return new ThreeRight(value0, value1, value2, value3);
        };
      };
    };
  };

  return ThreeRight;
}();

var KickUp = function () {
  function KickUp(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  KickUp.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new KickUp(value0, value1, value2);
      };
    };
  };

  return KickUp;
}();

var fromZipper = function fromZipper($copy_v) {
  return function ($copy_tree) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, tree) {
      if (v instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return tree;
      }

      ;

      if (v instanceof Data_List_Types.Cons) {
        if (v.value0 instanceof TwoLeft) {
          $tco_var_v = v.value1;
          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1);
          return;
        }

        ;

        if (v.value0 instanceof TwoRight) {
          $tco_var_v = v.value1;
          $copy_tree = new Two(v.value0.value0, v.value0.value1, tree);
          return;
        }

        ;

        if (v.value0 instanceof ThreeLeft) {
          $tco_var_v = v.value1;
          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3);
          return;
        }

        ;

        if (v.value0 instanceof ThreeMiddle) {
          $tco_var_v = v.value1;
          $copy_tree = new Three(v.value0.value0, v.value0.value1, tree, v.value0.value2, v.value0.value3);
          return;
        }

        ;

        if (v.value0 instanceof ThreeRight) {
          $tco_var_v = v.value1;
          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, tree);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List.Internal (line 25, column 3 - line 30, column 76): " + [v.value0.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.List.Internal (line 22, column 1 - line 22, column 63): " + [v.constructor.name, tree.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_tree);
    }

    ;
    return $tco_result;
  };
};

var insertAndLookupBy = function insertAndLookupBy(comp) {
  return function (k) {
    return function (orig) {
      var up = function up($copy_v) {
        return function ($copy_v1) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v, v1) {
            if (v instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Two(v1.value0, v1.value1, v1.value2);
            }

            ;

            if (v instanceof Data_List_Types.Cons) {
              if (v.value0 instanceof TwoLeft) {
                $tco_done = true;
                return fromZipper(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v.value0.value0, v.value0.value1));
              }

              ;

              if (v.value0 instanceof TwoRight) {
                $tco_done = true;
                return fromZipper(v.value1)(new Three(v.value0.value0, v.value0.value1, v1.value0, v1.value1, v1.value2));
              }

              ;

              if (v.value0 instanceof ThreeLeft) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2), v.value0.value0, new Two(v.value0.value1, v.value0.value2, v.value0.value3));
                return;
              }

              ;

              if (v.value0 instanceof ThreeMiddle) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v1.value0), v1.value1, new Two(v1.value2, v.value0.value2, v.value0.value3));
                return;
              }

              ;

              if (v.value0 instanceof ThreeRight) {
                $tco_var_v = v.value1;
                $copy_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2), v.value0.value3, new Two(v1.value0, v1.value1, v1.value2));
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.List.Internal (line 58, column 5 - line 63, column 90): " + [v.value0.constructor.name, v1.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.List.Internal (line 55, column 3 - line 55, column 50): " + [v.constructor.name, v1.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_v, $copy_v1);
          }

          ;
          return $tco_result;
        };
      };

      var down = function down($copy_ctx) {
        return function ($copy_v) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done1 = false;
          var $tco_result;

          function $tco_loop(ctx, v) {
            if (v instanceof Leaf) {
              $tco_done1 = true;
              return {
                found: false,
                result: up(ctx)(new KickUp(Leaf.value, k, Leaf.value))
              };
            }

            ;

            if (v instanceof Two) {
              var v1 = comp(k)(v.value1);

              if (v1 instanceof Data_Ordering.EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }

              ;

              if (v1 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v.value1, v.value2), ctx);
                $copy_v = v.value0;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v.value0, v.value1), ctx);
              $copy_v = v.value2;
              return;
            }

            ;

            if (v instanceof Three) {
              var v1 = comp(k)(v.value1);

              if (v1 instanceof Data_Ordering.EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }

              ;
              var v2 = comp(k)(v.value3);

              if (v2 instanceof Data_Ordering.EQ) {
                $tco_done1 = true;
                return {
                  found: true,
                  result: orig
                };
              }

              ;

              if (v1 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v.value1, v.value2, v.value3, v.value4), ctx);
                $copy_v = v.value0;
                return;
              }

              ;

              if (v1 instanceof Data_Ordering.GT && v2 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v.value0, v.value1, v.value3, v.value4), ctx);
                $copy_v = v.value2;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v.value0, v.value1, v.value2, v.value3), ctx);
              $copy_v = v.value4;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.List.Internal (line 38, column 3 - line 38, column 81): " + [ctx.constructor.name, v.constructor.name]);
          }

          ;

          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_v);
          }

          ;
          return $tco_result;
        };
      };

      return down(Data_List_Types.Nil.value)(orig);
    };
  };
};

var emptySet = Leaf.value;
module.exports = {
  emptySet: emptySet,
  insertAndLookupBy: insertAndLookupBy
};
},{"../Data.List.Types/index.js":"Xxuc","../Data.Ordering/index.js":"Eunj"}],"ezw6":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_List_Internal = require("../Data.List.Internal/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Pattern = function Pattern(x) {
  return x;
};

var updateAt = function updateAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0 && v2 instanceof Data_List_Types.Cons) {
        return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(updateAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var unzip = Data_Foldable.foldr(Data_List_Types.foldableList)(function (v) {
  return function (v1) {
    return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));
  };
})(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));

var uncons = function uncons(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just({
      head: v.value0,
      tail: v.value1
    });
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 263, column 1 - line 263, column 66): " + [v.constructor.name]);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
      return new Data_Tuple.Tuple(rec.head, rec.tail);
    })(uncons(xs));
  });
};

var tail = function tail(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(v.value1);
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 249, column 1 - line 249, column 43): " + [v.constructor.name]);
};

var stripPrefix = function stripPrefix(dictEq) {
  return function (v) {
    return function (s) {
      var go = function go(prefix) {
        return function (input) {
          if (prefix instanceof Data_List_Types.Cons && input instanceof Data_List_Types.Cons && Data_Eq.eq(dictEq)(prefix.value0)(input.value0)) {
            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Loop({
              a: prefix.value1,
              b: input.value1
            }));
          }

          ;

          if (prefix instanceof Data_List_Types.Nil) {
            return Data_Maybe.Just.create(new Control_Monad_Rec_Class.Done(input));
          }

          ;
          return Data_Maybe.Nothing.value;
        };
      };

      return Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe)(go)(v)(s);
    };
  };
};

var span = function span(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {
      var v2 = span(v)(v1.value1);
      return {
        init: new Data_List_Types.Cons(v1.value0, v2.init),
        rest: v2.rest
      };
    }

    ;
    return {
      init: Data_List_Types.Nil.value,
      rest: v1
    };
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);
  };
};

var singleton = function singleton(a) {
  return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
};

var sortBy = function sortBy(cmp) {
  var merge = function merge(v) {
    return function (v1) {
      if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
        if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {
          return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));
        }

        ;

        if (Data_Boolean.otherwise) {
          return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));
        }

        ;
      }

      ;

      if (v instanceof Data_List_Types.Nil) {
        return v1;
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        return v;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 477, column 3 - line 477, column 38): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var mergePairs = function mergePairs(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
      return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));
    }

    ;
    return v;
  };

  var mergeAll = function mergeAll($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return v.value0;
      }

      ;
      $copy_v = mergePairs(v);
      return;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var sequences = function sequences(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
      if (Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {
        return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);
      }

      ;

      if (Data_Boolean.otherwise) {
        return ascending(v.value1.value0)(function (v1) {
          return new Data_List_Types.Cons(v.value0, v1);
        })(v.value1.value1);
      }

      ;
    }

    ;
    return singleton(v);
  };

  var descending = function descending($copy_a) {
    return function ($copy_as) {
      return function ($copy_v) {
        var $tco_var_a = $copy_a;
        var $tco_var_as = $copy_as;
        var $tco_done1 = false;
        var $tco_result;

        function $tco_loop(a, as, v) {
          if (v instanceof Data_List_Types.Cons && Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
            $tco_var_a = v.value0;
            $tco_var_as = new Data_List_Types.Cons(a, as);
            $copy_v = v.value1;
            return;
          }

          ;
          $tco_done1 = true;
          return new Data_List_Types.Cons(new Data_List_Types.Cons(a, as), sequences(v));
        }

        ;

        while (!$tco_done1) {
          $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
        }

        ;
        return $tco_result;
      };
    };
  };

  var ascending = function ascending($copy_a) {
    return function ($copy_as) {
      return function ($copy_v) {
        var $tco_var_a = $copy_a;
        var $tco_var_as = $copy_as;
        var $tco_done2 = false;
        var $tco_result;

        function $tco_loop(a, as, v) {
          if (v instanceof Data_List_Types.Cons && Data_Eq.notEq(Data_Ordering.eqOrdering)(cmp(a)(v.value0))(Data_Ordering.GT.value)) {
            $tco_var_a = v.value0;

            $tco_var_as = function $tco_var_as(ys) {
              return as(new Data_List_Types.Cons(a, ys));
            };

            $copy_v = v.value1;
            return;
          }

          ;
          $tco_done2 = true;
          return new Data_List_Types.Cons(as(singleton(a)), sequences(v));
        }

        ;

        while (!$tco_done2) {
          $tco_result = $tco_loop($tco_var_a, $tco_var_as, $copy_v);
        }

        ;
        return $tco_result;
      };
    };
  };

  return function ($345) {
    return mergeAll(sequences($345));
  };
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var tails = function tails(v) {
  if (v instanceof Data_List_Types.Nil) {
    return singleton(Data_List_Types.Nil.value);
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_List_Types.Cons(v, tails(v.value1));
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 657, column 1 - line 657, column 43): " + [v.constructor.name]);
};

var showPattern = function showPattern(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(Pattern " + (Data_Show.show(Data_List_Types.showList(dictShow))(v) + ")");
  });
};

var reverse = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return acc;
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
          $copy_v = v.value1;
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
}();

var take = function () {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      return function ($copy_v1) {
        var $tco_var_acc = $copy_acc;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(acc, v, v1) {
          if (v < 1) {
            $tco_done = true;
            return reverse(acc);
          }

          ;

          if (v1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return reverse(acc);
          }

          ;

          if (v1 instanceof Data_List_Types.Cons) {
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $tco_var_v = v - 1 | 0;
            $copy_v1 = v1.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 524, column 3 - line 524, column 35): " + [acc.constructor.name, v.constructor.name, v1.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_acc, $tco_var_v, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };
  };

  return go(Data_List_Types.Nil.value);
}();

var takeWhile = function takeWhile(p) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Cons && p(v.value0)) {
          $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
          $copy_v = v.value1;
          return;
        }

        ;
        $tco_done = true;
        return reverse(acc);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var unsnoc = function unsnoc(lst) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return new Data_Maybe.Just({
            revInit: v1,
            last: v.value0
          });
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          $tco_var_v = v.value1;
          $copy_v1 = new Data_List_Types.Cons(v.value0, v1);
          return;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 274, column 3 - line 274, column 21): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
    return {
      init: reverse(h.revInit),
      last: h.last
    };
  })(go(lst)(Data_List_Types.Nil.value));
};

var zipWith = function zipWith(f) {
  return function (xs) {
    return function (ys) {
      var go = function go($copy_v) {
        return function ($copy_v1) {
          return function ($copy_acc) {
            var $tco_var_v = $copy_v;
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, v1, acc) {
              if (v instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return acc;
              }

              ;

              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v.value1;
                $tco_var_v1 = v1.value1;
                $copy_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.List (line 795, column 3 - line 795, column 21): " + [v.constructor.name, v1.constructor.name, acc.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_acc);
            }

            ;
            return $tco_result;
          };
        };
      };

      return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
    };
  };
};

var zip = zipWith(Data_Tuple.Tuple.create);

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_List_Types.traversableList)(dictApplicative)(zipWith(f)(xs)(ys));
      };
    };
  };
};

var range = function range(start) {
  return function (end) {
    if (start === end) {
      return singleton(start);
    }

    ;

    if (Data_Boolean.otherwise) {
      var go = function go($copy_s) {
        return function ($copy_e) {
          return function ($copy_step) {
            return function ($copy_rest) {
              var $tco_var_s = $copy_s;
              var $tco_var_e = $copy_e;
              var $tco_var_step = $copy_step;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(s, e, step, rest) {
                if (s === e) {
                  $tco_done = true;
                  return new Data_List_Types.Cons(s, rest);
                }

                ;

                if (Data_Boolean.otherwise) {
                  $tco_var_s = s + step | 0;
                  $tco_var_e = e;
                  $tco_var_step = step;
                  $copy_rest = new Data_List_Types.Cons(s, rest);
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.List (line 152, column 3 - line 153, column 65): " + [s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);
              }

              ;
              return $tco_result;
            };
          };
        };
      };

      return go(end)(start)(function () {
        var $226 = start > end;

        if ($226) {
          return 1;
        }

        ;
        return -1 | 0;
      }())(Data_List_Types.Nil.value);
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 148, column 1 - line 148, column 32): " + [start.constructor.name, end.constructor.name]);
  };
};

var partition = function partition(p) {
  return function (xs) {
    var select = function select(x) {
      return function (v) {
        var $229 = p(x);

        if ($229) {
          return {
            no: v.no,
            yes: new Data_List_Types.Cons(x, v.yes)
          };
        }

        ;
        return {
          no: new Data_List_Types.Cons(x, v.no),
          yes: v.yes
        };
      };
    };

    return Data_Foldable.foldr(Data_List_Types.foldableList)(select)({
      no: Data_List_Types.Nil.value,
      yes: Data_List_Types.Nil.value
    })(xs);
  };
};

var $$null = function $$null(v) {
  if (v instanceof Data_List_Types.Nil) {
    return true;
  }

  ;
  return false;
};

var nubBy = function nubBy(p) {
  var go = function go($copy_v) {
    return function ($copy_acc) {
      return function ($copy_v1) {
        var $tco_var_v = $copy_v;
        var $tco_var_acc = $copy_acc;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v, acc, v1) {
          if (v1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return acc;
          }

          ;

          if (v1 instanceof Data_List_Types.Cons) {
            var v2 = Data_List_Internal.insertAndLookupBy(p)(v1.value0)(v);

            if (v2.found) {
              $tco_var_v = v2.result;
              $tco_var_acc = acc;
              $copy_v1 = v1.value1;
              return;
            }

            ;
            $tco_var_v = v2.result;
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $copy_v1 = v1.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 689, column 5 - line 689, column 23): " + [v.constructor.name, acc.constructor.name, v1.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $tco_var_acc, $copy_v1);
        }

        ;
        return $tco_result;
      };
    };
  };

  var $346 = go(Data_List_Internal.emptySet)(Data_List_Types.Nil.value);
  return function ($347) {
    return reverse($346($347));
  };
};

var nub = function nub(dictOrd) {
  return nubBy(Data_Ord.compare(dictOrd));
};

var newtypePattern = new Data_Newtype.Newtype(function () {
  return undefined;
});
var mapWithIndex = Data_FunctorWithIndex.mapWithIndex(Data_List_Types.functorWithIndexList);

var mapMaybe = function mapMaybe(f) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return reverse(acc);
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          var v1 = f(v.value0);

          if (v1 instanceof Data_Maybe.Nothing) {
            $tco_var_acc = acc;
            $copy_v = v.value1;
            return;
          }

          ;

          if (v1 instanceof Data_Maybe.Just) {
            $tco_var_acc = new Data_List_Types.Cons(v1.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 423, column 5 - line 425, column 32): " + [v1.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 421, column 3 - line 421, column 27): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var manyRec = function manyRec(dictMonadRec) {
  return function (dictAlternative) {
    return function (p) {
      var go = function go(acc) {
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (aa) {
          return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function (v) {
            return new Data_List_Types.Cons(v, acc);
          })(function (v) {
            return reverse(acc);
          })(aa));
        });
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
    };
  };
};

var someRec = function someRec(dictMonadRec) {
  return function (dictAlternative) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(manyRec(dictMonadRec)(dictAlternative)(v));
    };
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())(Data_List_Types.Nil.value));
    };
  };
};

var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
  return function (v) {
    return acc + 1 | 0;
  };
})(0);

var last = function last($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return new Data_Maybe.Just(v.value0);
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      $copy_v = v.value1;
      return;
    }

    ;
    $tco_done = true;
    return Data_Maybe.Nothing.value;
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var insertBy = function insertBy(v) {
  return function (x) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return singleton(x);
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        var v2 = v(x)(v1.value0);

        if (v2 instanceof Data_Ordering.GT) {
          return new Data_List_Types.Cons(v1.value0, insertBy(v)(x)(v1.value1));
        }

        ;
        return new Data_List_Types.Cons(x, v1);
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 220, column 1 - line 220, column 68): " + [v.constructor.name, x.constructor.name, v1.constructor.name]);
    };
  };
};

var insertAt = function insertAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0) {
        return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(insertAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var init = function init(lst) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return v.init;
  })(unsnoc(lst));
};

var index = function index($copy_v) {
  return function ($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, v1) {
      if (v instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v instanceof Data_List_Types.Cons && v1 === 0) {
        $tco_done = true;
        return new Data_Maybe.Just(v.value0);
      }

      ;

      if (v instanceof Data_List_Types.Cons) {
        $tco_var_v = v.value1;
        $copy_v1 = v1 - 1 | 0;
        return;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 285, column 1 - line 285, column 44): " + [v.constructor.name, v1.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }

    ;
    return $tco_result;
  };
};

var head = function head(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 234, column 1 - line 234, column 22): " + [v.constructor.name]);
};

var transpose = function transpose(v) {
  if (v instanceof Data_List_Types.Nil) {
    return Data_List_Types.Nil.value;
  }

  ;

  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {
    return transpose(v.value1);
  }

  ;

  if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {
    return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));
  }

  ;
  throw new Error("Failed pattern match at Data.List (line 829, column 1 - line 829, column 54): " + [v.constructor.name]);
};

var groupBy = function groupBy(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Nil) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      var v2 = span(v(v1.value0))(v1.value1);
      return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 624, column 1 - line 624, column 80): " + [v.constructor.name, v1.constructor.name]);
  };
};

var groupAllBy = function groupAllBy(dictOrd) {
  return function (p) {
    var $348 = groupBy(p);
    var $349 = sort(dictOrd);
    return function ($350) {
      return $348($349($350));
    };
  };
};

var group = function group(dictEq) {
  return groupBy(Data_Eq.eq(dictEq));
};

var groupAll = function groupAll(dictOrd) {
  var $351 = group(dictOrd.Eq0());
  var $352 = sort(dictOrd);
  return function ($353) {
    return $351($352($353));
  };
};

var group$prime = function group$prime(dictWarn) {
  return function (dictOrd) {
    return groupAll(dictOrd);
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
};

var foldM = function foldM(dictMonad) {
  return function (v) {
    return function (b) {
      return function (v1) {
        if (v1 instanceof Data_List_Types.Nil) {
          return Control_Applicative.pure(dictMonad.Applicative0())(b);
        }

        ;

        if (v1 instanceof Data_List_Types.Cons) {
          return Control_Bind.bind(dictMonad.Bind1())(v(b)(v1.value0))(function (b$prime) {
            return foldM(dictMonad)(v)(b$prime)(v1.value1);
          });
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 840, column 1 - line 840, column 72): " + [v.constructor.name, b.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var findIndex = function findIndex(fn) {
  var go = function go($copy_v) {
    return function ($copy_v1) {
      var $tco_var_v = $copy_v;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(v, v1) {
        if (v1 instanceof Data_List_Types.Cons) {
          if (fn(v1.value0)) {
            $tco_done = true;
            return new Data_Maybe.Just(v);
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_v = v + 1 | 0;
            $copy_v1 = v1.value1;
            return;
          }

          ;
        }

        ;

        if (v1 instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 305, column 3 - line 305, column 35): " + [v.constructor.name, v1.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_v, $copy_v1);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
};

var findLastIndex = function findLastIndex(fn) {
  return function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return (length(xs) - 1 | 0) - v | 0;
    })(findIndex(fn)(reverse(xs)));
  };
};

var filterM = function filterM(dictMonad) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_List_Types.Nil.value);
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        return Control_Bind.bind(dictMonad.Bind1())(v(v1.value0))(function (b) {
          return Control_Bind.bind(dictMonad.Bind1())(filterM(dictMonad)(v)(v1.value1))(function (xs$prime) {
            return Control_Applicative.pure(dictMonad.Applicative0())(function () {
              if (b) {
                return new Data_List_Types.Cons(v1.value0, xs$prime);
              }

              ;
              return xs$prime;
            }());
          });
        });
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 407, column 1 - line 407, column 75): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var filter = function filter(p) {
  var go = function go($copy_acc) {
    return function ($copy_v) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, v) {
        if (v instanceof Data_List_Types.Nil) {
          $tco_done = true;
          return reverse(acc);
        }

        ;

        if (v instanceof Data_List_Types.Cons) {
          if (p(v.value0)) {
            $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;

          if (Data_Boolean.otherwise) {
            $tco_var_acc = acc;
            $copy_v = v.value1;
            return;
          }

          ;
        }

        ;
        throw new Error("Failed pattern match at Data.List (line 394, column 3 - line 394, column 27): " + [acc.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_v);
      }

      ;
      return $tco_result;
    };
  };

  return go(Data_List_Types.Nil.value);
};

var intersectBy = function intersectBy(v) {
  return function (v1) {
    return function (v2) {
      if (v1 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v2 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;
      return filter(function (x) {
        return Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(v(x))(v2);
      })(v1);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var nubByEq = function nubByEq(v) {
  return function (v1) {
    if (v1 instanceof Data_List_Types.Nil) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      return new Data_List_Types.Cons(v1.value0, nubByEq(v)(filter(function (y) {
        return !v(v1.value0)(y);
      })(v1.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 721, column 1 - line 721, column 61): " + [v.constructor.name, v1.constructor.name]);
  };
};

var nubEq = function nubEq(dictEq) {
  return nubByEq(Data_Eq.eq(dictEq));
};

var eqPattern = function eqPattern(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(Data_List_Types.eqList(dictEq))(x)(y);
    };
  });
};

var ordPattern = function ordPattern(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqPattern(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(Data_List_Types.ordList(dictOrd))(x)(y);
    };
  });
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var dropWhile = function dropWhile(p) {
  var go = function go($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && p(v.value0)) {
        $copy_v = v.value1;
        return;
      }

      ;
      $tco_done = true;
      return v;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  return go;
};

var dropEnd = function dropEnd(n) {
  return function (xs) {
    return take(length(xs) - n | 0)(xs);
  };
};

var drop = function drop($copy_v) {
  return function ($copy_v1) {
    var $tco_var_v = $copy_v;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v, v1) {
      if (v < 1) {
        $tco_done = true;
        return v1;
      }

      ;

      if (v1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_List_Types.Nil.value;
      }

      ;

      if (v1 instanceof Data_List_Types.Cons) {
        $tco_var_v = v - 1 | 0;
        $copy_v1 = v1.value1;
        return;
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 547, column 1 - line 547, column 42): " + [v.constructor.name, v1.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_v, $copy_v1);
    }

    ;
    return $tco_result;
  };
};

var slice = function slice(start) {
  return function (end) {
    return function (xs) {
      return take(end - start | 0)(drop(start)(xs));
    };
  };
};

var takeEnd = function takeEnd(n) {
  return function (xs) {
    return drop(length(xs) - n | 0)(xs);
  };
};

var deleteBy = function deleteBy(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Data_List_Types.Nil) {
        return Data_List_Types.Nil.value;
      }

      ;

      if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {
        return v2.value1;
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));
      }

      ;
      throw new Error("Failed pattern match at Data.List (line 748, column 1 - line 748, column 67): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(xs)(Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var deleteAt = function deleteAt(v) {
  return function (v1) {
    if (v === 0 && v1 instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(v1.value1);
    }

    ;

    if (v1 instanceof Data_List_Types.Cons) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v2) {
        return new Data_List_Types.Cons(v1.value0, v2);
      })(deleteAt(v - 1 | 0)(v1.value1));
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return Data_Foldable.foldl(Data_List_Types.foldableList)(Data_Function.flip($$delete(dictEq)));
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_List_Types.bindList));

var concat = function concat(v) {
  return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.identity(Control_Category.categoryFn));
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(v) {
  return function (v1) {
    return function (v2) {
      if (v === 0 && v2 instanceof Data_List_Types.Cons) {
        return Data_Maybe.Just.create(function () {
          var v3 = v1(v2.value0);

          if (v3 instanceof Data_Maybe.Nothing) {
            return v2.value1;
          }

          ;

          if (v3 instanceof Data_Maybe.Just) {
            return new Data_List_Types.Cons(v3.value0, v2.value1);
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 356, column 3 - line 358, column 23): " + [v3.constructor.name]);
        }());
      }

      ;

      if (v2 instanceof Data_List_Types.Cons) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function (v3) {
          return new Data_List_Types.Cons(v2.value0, v3);
        })(alterAt(v - 1 | 0)(v1)(v2.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };
};

var modifyAt = function modifyAt(n) {
  return function (f) {
    return alterAt(n)(function ($354) {
      return Data_Maybe.Just.create(f($354));
    });
  };
};

module.exports = {
  toUnfoldable: toUnfoldable,
  fromFoldable: fromFoldable,
  singleton: singleton,
  range: range,
  some: some,
  someRec: someRec,
  many: many,
  manyRec: manyRec,
  "null": $$null,
  length: length,
  snoc: snoc,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  modifyAt: modifyAt,
  alterAt: alterAt,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  filterM: filterM,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  sort: sort,
  sortBy: sortBy,
  Pattern: Pattern,
  stripPrefix: stripPrefix,
  slice: slice,
  take: take,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  drop: drop,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  groupAll: groupAll,
  "group'": group$prime,
  groupBy: groupBy,
  groupAllBy: groupAllBy,
  partition: partition,
  nub: nub,
  nubBy: nubBy,
  nubEq: nubEq,
  nubByEq: nubByEq,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  transpose: transpose,
  foldM: foldM,
  eqPattern: eqPattern,
  ordPattern: ordPattern,
  newtypePattern: newtypePattern,
  showPattern: showPattern,
  all: Data_Foldable.all,
  any: Data_Foldable.any,
  elem: Data_Foldable.elem,
  find: Data_Foldable.find,
  findMap: Data_Foldable.findMap,
  fold: Data_Foldable.fold,
  foldMap: Data_Foldable.foldMap,
  foldl: Data_Foldable.foldl,
  foldr: Data_Foldable.foldr,
  intercalate: Data_Foldable.intercalate,
  notElem: Data_Foldable.notElem,
  Cons: Data_List_Types.Cons,
  Nil: Data_List_Types.Nil,
  scanl: Data_Traversable.scanl,
  scanr: Data_Traversable.scanr
};
},{"../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Lazy/index.js":"y9cE","../Control.Monad.Rec.Class/index.js":"UVIy","../Data.Bifunctor/index.js":"e2Wc","../Data.Boolean/index.js":"ObQr","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.FunctorWithIndex/index.js":"OHRN","../Data.HeytingAlgebra/index.js":"paZe","../Data.List.Internal/index.js":"vWoU","../Data.List.Types/index.js":"Xxuc","../Data.Maybe/index.js":"mN7T","../Data.Newtype/index.js":"lz8k","../Data.NonEmpty/index.js":"qF8i","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW","../Data.Unit/index.js":"NhVk"}],"hzl0":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List = require("../Data.List/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var CatQueue = function () {
  function CatQueue(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CatQueue.create = function (value0) {
    return function (value1) {
      return new CatQueue(value0, value1);
    };
  };

  return CatQueue;
}();

var unsnoc = function unsnoc($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v.value1 instanceof Data_List_Types.Cons) {
      $tco_done = true;
      return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value1.value0, new CatQueue(v.value0, v.value1.value1)));
    }

    ;

    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v.value1 instanceof Data_List_Types.Nil) {
      $copy_v = new CatQueue(Data_List_Types.Nil.value, Data_List.reverse(v.value0));
      return;
    }

    ;
    throw new Error("Failed pattern match at Data.CatQueue (line 93, column 1 - line 93, column 63): " + [v.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var uncons = function uncons($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v.value0 instanceof Data_List_Types.Nil) {
      $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
      return;
    }

    ;

    if (v.value0 instanceof Data_List_Types.Cons) {
      $tco_done = true;
      return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
    }

    ;
    throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [v.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var snoc = function snoc(v) {
  return function (a) {
    return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
  };
};

var showCatQueue = function showCatQueue(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(CatQueue " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value0) + (" " + (Data_Show.show(Data_List_Types.showList(dictShow))(v.value1) + ")")));
  });
};

var $$null = function $$null(v) {
  if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
    return true;
  }

  ;
  return false;
};

var length = function length(v) {
  return Data_List.length(v.value0) + Data_List.length(v.value1) | 0;
};

var functorCatQueue = new Data_Functor.Functor(function (f) {
  return function (v) {
    return new CatQueue(Data_Functor.map(Data_List_Types.functorList)(f)(v.value0), Data_Functor.map(Data_List_Types.functorList)(f)(v.value1));
  };
});
var foldableCatQueue = new Data_Foldable.Foldable(function (dictMonoid) {
  return Data_Foldable.foldMapDefaultL(foldableCatQueue)(dictMonoid);
}, function (f) {
  var go = function go($copy_acc) {
    return function ($copy_q) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, q) {
        var v = uncons(q);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_acc = f(acc)(v.value0.value0);
          $copy_q = v.value0.value1;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return acc;
        }

        ;
        throw new Error("Failed pattern match at Data.CatQueue (line 148, column 16 - line 150, column 22): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_q);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return Data_Foldable.foldrDefault(foldableCatQueue)(f);
});
var semigroupCatQueue = new Data_Semigroup.Semigroup(Data_Foldable.foldl(foldableCatQueue)(snoc));
var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
var monoidCatQueue = new Data_Monoid.Monoid(function () {
  return semigroupCatQueue;
}, empty);
var singleton = snoc(empty);

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (f) {
    return Data_Foldable.foldMap(dictFoldable)(monoidCatQueue)(singleton)(f);
  };
};

var traversableCatQueue = new Data_Traversable.Traversable(function () {
  return foldableCatQueue;
}, function () {
  return functorCatQueue;
}, function (dictApplicative) {
  return Data_Traversable.sequenceDefault(traversableCatQueue)(dictApplicative);
}, function (dictApplicative) {
  return function (f) {
    var $100 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Foldable.foldl(foldableCatQueue)(snoc)(empty));
    var $101 = Data_Foldable.foldl(foldableCatQueue)(function (acc) {
      var $103 = Control_Apply.lift2(dictApplicative.Apply0())(snoc)(acc);
      return function ($104) {
        return $103(f($104));
      };
    })(Control_Applicative.pure(dictApplicative)(empty));
    return function ($102) {
      return $100($101($102));
    };
  };
});
var unfoldable1CatQueue = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return snoc(memo)(v.value0);
          }

          ;

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = snoc(memo)(v.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatQueue (line 155, column 24 - line 157, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(empty);
  };
});
var unfoldableCatQueue = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1CatQueue;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return memo;
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = snoc(memo)(v.value0.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatQueue (line 162, column 24 - line 164, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(empty);
  };
});

var cqEq = function cqEq(dictEq) {
  var elemEq = Data_Eq.eq(dictEq);

  var go = function go($copy_xs) {
    return function ($copy_ys) {
      var $tco_var_xs = $copy_xs;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(xs, ys) {
        var v = uncons(ys);
        var v1 = uncons(xs);

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just && elemEq(v1.value0.value0)(v.value0.value0)) {
          $tco_var_xs = v1.value0.value1;
          $copy_ys = v.value0.value1;
          return;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return true;
        }

        ;
        $tco_done = true;
        return false;
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_xs, $copy_ys);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var eqCatQueue = function eqCatQueue(dictEq) {
  return new Data_Eq.Eq(cqEq(dictEq));
};

var cqCompare = function cqCompare(dictOrd) {
  var elemCompare = Data_Ord.compare(dictOrd);

  var go = function go($copy_xs) {
    return function ($copy_ys) {
      var $tco_var_xs = $copy_xs;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(xs, ys) {
        var v = uncons(ys);
        var v1 = uncons(xs);

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just) {
          var v2 = elemCompare(v1.value0.value0)(v.value0.value0);

          if (v2 instanceof Data_Ordering.EQ) {
            $tco_var_xs = v1.value0.value1;
            $copy_ys = v.value0.value1;
            return;
          }

          ;
          $tco_done = true;
          return v2;
        }

        ;

        if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Ordering.GT.value;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Just) {
          $tco_done = true;
          return Data_Ordering.LT.value;
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Ordering.EQ.value;
        }

        ;
        throw new Error("Failed pattern match at Data.CatQueue (line 118, column 16 - line 125, column 30): " + [v1.constructor.name, v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_xs, $copy_ys);
      }

      ;
      return $tco_result;
    };
  };

  return go;
};

var ordCatQueue = function ordCatQueue(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqCatQueue(dictOrd.Eq0());
  }, cqCompare(dictOrd));
};

var cons = function cons(a) {
  return function (v) {
    return new CatQueue(new Data_List_Types.Cons(a, v.value0), v.value1);
  };
};

var monadCatQueue = new Control_Monad.Monad(function () {
  return applicativeCatQueue;
}, function () {
  return bindCatQueue;
});
var bindCatQueue = new Control_Bind.Bind(function () {
  return applyCatQueue;
}, Data_Function.flip(Data_Foldable.foldMap(foldableCatQueue)(monoidCatQueue)));
var applyCatQueue = new Control_Apply.Apply(function () {
  return functorCatQueue;
}, Control_Monad.ap(monadCatQueue));
var applicativeCatQueue = new Control_Applicative.Applicative(function () {
  return applyCatQueue;
}, singleton);
var altCatQueue = new Control_Alt.Alt(function () {
  return functorCatQueue;
}, Data_Semigroup.append(semigroupCatQueue));
var plusCatQueue = new Control_Plus.Plus(function () {
  return altCatQueue;
}, empty);
var alternativeCatQueue = new Control_Alternative.Alternative(function () {
  return applicativeCatQueue;
}, function () {
  return plusCatQueue;
});
var monadPlusCatQueue = new Control_MonadPlus.MonadPlus(function () {
  return alternativeCatQueue;
}, function () {
  return monadCatQueue;
});
var monadZeroCatQueue = new Control_MonadZero.MonadZero(function () {
  return alternativeCatQueue;
}, function () {
  return monadCatQueue;
}, function () {
  return undefined;
});
module.exports = {
  CatQueue: CatQueue,
  empty: empty,
  "null": $$null,
  singleton: singleton,
  length: length,
  cons: cons,
  snoc: snoc,
  uncons: uncons,
  unsnoc: unsnoc,
  fromFoldable: fromFoldable,
  eqCatQueue: eqCatQueue,
  ordCatQueue: ordCatQueue,
  semigroupCatQueue: semigroupCatQueue,
  monoidCatQueue: monoidCatQueue,
  showCatQueue: showCatQueue,
  foldableCatQueue: foldableCatQueue,
  unfoldable1CatQueue: unfoldable1CatQueue,
  unfoldableCatQueue: unfoldableCatQueue,
  traversableCatQueue: traversableCatQueue,
  functorCatQueue: functorCatQueue,
  applyCatQueue: applyCatQueue,
  applicativeCatQueue: applicativeCatQueue,
  bindCatQueue: bindCatQueue,
  monadCatQueue: monadCatQueue,
  altCatQueue: altCatQueue,
  plusCatQueue: plusCatQueue,
  alternativeCatQueue: alternativeCatQueue,
  monadZeroCatQueue: monadZeroCatQueue,
  monadPlusCatQueue: monadPlusCatQueue
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.List/index.js":"ezw6","../Data.List.Types/index.js":"Xxuc","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW","../Data.Unfoldable1/index.js":"S0Nl"}],"Full":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_CatQueue = require("../Data.CatQueue/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var CatNil = function () {
  function CatNil() {}

  ;
  CatNil.value = new CatNil();
  return CatNil;
}();

var CatCons = function () {
  function CatCons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  CatCons.create = function (value0) {
    return function (value1) {
      return new CatCons(value0, value1);
    };
  };

  return CatCons;
}();

var showCatList = function showCatList(dictShow) {
  return new Data_Show.Show(function (v) {
    if (v instanceof CatNil) {
      return "CatNil";
    }

    ;

    if (v instanceof CatCons) {
      return "(CatList " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + ")")));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 148, column 1 - line 150, column 71): " + [v.constructor.name]);
  });
};

var $$null = function $$null(v) {
  if (v instanceof CatNil) {
    return true;
  }

  ;
  return false;
};

var link = function link(v) {
  return function (v1) {
    if (v instanceof CatNil) {
      return v1;
    }

    ;

    if (v1 instanceof CatNil) {
      return v;
    }

    ;

    if (v instanceof CatCons) {
      return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [v.constructor.name, v1.constructor.name]);
  };
};

var foldr = function foldr(k) {
  return function (b) {
    return function (q) {
      var foldl = function foldl($copy_v) {
        return function ($copy_c) {
          return function ($copy_v1) {
            var $tco_var_v = $copy_v;
            var $tco_var_c = $copy_c;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v, c, v1) {
              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return c;
              }

              ;

              if (v1 instanceof Data_List_Types.Cons) {
                $tco_var_v = v;
                $tco_var_c = v(c)(v1.value0);
                $copy_v1 = v1.value1;
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [v.constructor.name, c.constructor.name, v1.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
            }

            ;
            return $tco_result;
          };
        };
      };

      var go = function go($copy_xs) {
        return function ($copy_ys) {
          var $tco_var_xs = $copy_xs;
          var $tco_done1 = false;
          var $tco_result;

          function $tco_loop(xs, ys) {
            var v = Data_CatQueue.uncons(xs);

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done1 = true;
              return foldl(function (x) {
                return function (i) {
                  return i(x);
                };
              })(b)(ys);
            }

            ;

            if (v instanceof Data_Maybe.Just) {
              $tco_var_xs = v.value0.value1;
              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done1) {
            $tco_result = $tco_loop($tco_var_xs, $copy_ys);
          }

          ;
          return $tco_result;
        };
      };

      return go(q)(Data_List_Types.Nil.value);
    };
  };
};

var uncons = function uncons(v) {
  if (v instanceof CatNil) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof CatCons) {
    return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, function () {
      var $45 = Data_CatQueue["null"](v.value1);

      if ($45) {
        return CatNil.value;
      }

      ;
      return foldr(link)(CatNil.value)(v.value1);
    }()));
  }

  ;
  throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [v.constructor.name]);
};

var foldableCatList = new Data_Foldable.Foldable(function (dictMonoid) {
  return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);
}, function (f) {
  var go = function go($copy_acc) {
    return function ($copy_q) {
      var $tco_var_acc = $copy_acc;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(acc, q) {
        var v = uncons(q);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_acc = f(acc)(v.value0.value0);
          $copy_q = v.value0.value1;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return acc;
        }

        ;
        throw new Error("Failed pattern match at Data.CatList (line 157, column 16 - line 159, column 22): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_acc, $copy_q);
      }

      ;
      return $tco_result;
    };
  };

  return go;
}, function (f) {
  return function (s) {
    return function (l) {
      return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);
    };
  };
});
var length = Data_Foldable.length(foldableCatList)(Data_Semiring.semiringInt);

var foldMap = function foldMap(dictMonoid) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof CatNil) {
        return Data_Monoid.mempty(dictMonoid);
      }

      ;

      if (v1 instanceof CatCons) {
        var d = function () {
          var $54 = Data_CatQueue["null"](v1.value1);

          if ($54) {
            return CatNil.value;
          }

          ;
          return foldr(link)(CatNil.value)(v1.value1);
        }();

        return Data_Semigroup.append(dictMonoid.Semigroup0())(v(v1.value0))(foldMap(dictMonoid)(v)(d));
      }

      ;
      throw new Error("Failed pattern match at Data.CatList (line 135, column 1 - line 135, column 62): " + [v.constructor.name, v1.constructor.name]);
    };
  };
};

var empty = CatNil.value;
var append = link;

var cons = function cons(a) {
  return function (cat) {
    return append(new CatCons(a, Data_CatQueue.empty))(cat);
  };
};

var functorCatList = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof CatNil) {
      return CatNil.value;
    }

    ;

    if (v1 instanceof CatCons) {
      var d = function () {
        var $59 = Data_CatQueue["null"](v1.value1);

        if ($59) {
          return CatNil.value;
        }

        ;
        return foldr(link)(CatNil.value)(v1.value1);
      }();

      return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 185, column 1 - line 189, column 26): " + [v.constructor.name, v1.constructor.name]);
  };
});

var singleton = function singleton(a) {
  return cons(a)(CatNil.value);
};

var traversableCatList = new Data_Traversable.Traversable(function () {
  return foldableCatList;
}, function () {
  return functorCatList;
}, function (dictApplicative) {
  return function (v) {
    if (v instanceof CatNil) {
      return Control_Applicative.pure(dictApplicative)(CatNil.value);
    }

    ;

    if (v instanceof CatCons) {
      var d = function () {
        var $63 = Data_CatQueue["null"](v.value1);

        if ($63) {
          return CatNil.value;
        }

        ;
        return foldr(link)(CatNil.value)(v.value1);
      }();

      return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 183, column 33): " + [v.constructor.name]);
  };
}, function (dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v1 instanceof CatNil) {
        return Control_Applicative.pure(dictApplicative)(CatNil.value);
      }

      ;

      if (v1 instanceof CatCons) {
        var d = function () {
          var $68 = Data_CatQueue["null"](v1.value1);

          if ($68) {
            return CatNil.value;
          }

          ;
          return foldr(link)(CatNil.value)(v1.value1);
        }();

        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));
      }

      ;
      throw new Error("Failed pattern match at Data.CatList (line 175, column 1 - line 183, column 33): " + [v.constructor.name, v1.constructor.name]);
    };
  };
});
var semigroupCatList = new Data_Semigroup.Semigroup(append);
var monoidCatList = new Data_Monoid.Monoid(function () {
  return semigroupCatList;
}, CatNil.value);
var monadCatList = new Control_Monad.Monad(function () {
  return applicativeCatList;
}, function () {
  return bindCatList;
});
var bindCatList = new Control_Bind.Bind(function () {
  return applyCatList;
}, Data_Function.flip(foldMap(monoidCatList)));
var applyCatList = new Control_Apply.Apply(function () {
  return functorCatList;
}, Control_Monad.ap(monadCatList));
var applicativeCatList = new Control_Applicative.Applicative(function () {
  return applyCatList;
}, singleton);

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (f) {
    return Data_Foldable.foldMap(dictFoldable)(monoidCatList)(singleton)(f);
  };
};

var snoc = function snoc(cat) {
  return function (a) {
    return append(cat)(new CatCons(a, Data_CatQueue.empty));
  };
};

var unfoldable1CatList = new Data_Unfoldable1.Unfoldable1(function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v.value1 instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return snoc(memo)(v.value0);
          }

          ;

          if (v.value1 instanceof Data_Maybe.Just) {
            $tco_var_source = v.value1.value0;
            $copy_memo = snoc(memo)(v.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatList (line 171, column 24 - line 173, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(CatNil.value);
  };
});
var unfoldableCatList = new Data_Unfoldable.Unfoldable(function () {
  return unfoldable1CatList;
}, function (f) {
  return function (b) {
    var go = function go($copy_source) {
      return function ($copy_memo) {
        var $tco_var_source = $copy_source;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(source, memo) {
          var v = f(source);

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return memo;
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            $tco_var_source = v.value0.value1;
            $copy_memo = snoc(memo)(v.value0.value0);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.CatList (line 164, column 24 - line 166, column 57): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_source, $copy_memo);
        }

        ;
        return $tco_result;
      };
    };

    return go(b)(CatNil.value);
  };
});
var altCatList = new Control_Alt.Alt(function () {
  return functorCatList;
}, append);
var plusCatList = new Control_Plus.Plus(function () {
  return altCatList;
}, empty);
var alternativeCatList = new Control_Alternative.Alternative(function () {
  return applicativeCatList;
}, function () {
  return plusCatList;
});
var monadPlusCatList = new Control_MonadPlus.MonadPlus(function () {
  return alternativeCatList;
}, function () {
  return monadCatList;
});
var monadZeroCatList = new Control_MonadZero.MonadZero(function () {
  return alternativeCatList;
}, function () {
  return monadCatList;
}, function () {
  return undefined;
});
module.exports = {
  CatNil: CatNil,
  CatCons: CatCons,
  empty: empty,
  "null": $$null,
  singleton: singleton,
  length: length,
  append: append,
  cons: cons,
  snoc: snoc,
  uncons: uncons,
  fromFoldable: fromFoldable,
  semigroupCatList: semigroupCatList,
  monoidCatList: monoidCatList,
  showCatList: showCatList,
  foldableCatList: foldableCatList,
  unfoldableCatList: unfoldableCatList,
  unfoldable1CatList: unfoldable1CatList,
  traversableCatList: traversableCatList,
  functorCatList: functorCatList,
  applyCatList: applyCatList,
  applicativeCatList: applicativeCatList,
  bindCatList: bindCatList,
  monadCatList: monadCatList,
  altCatList: altCatList,
  plusCatList: plusCatList,
  alternativeCatList: alternativeCatList,
  monadZeroCatList: monadZeroCatList,
  monadPlusCatList: monadPlusCatList
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.CatQueue/index.js":"hzl0","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.List.Types/index.js":"Xxuc","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW","../Data.Unfoldable1/index.js":"S0Nl"}],"pVbB":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Data_CatList = require("../Data.CatList/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ExpF = function ExpF(x) {
  return x;
};

var Free = function () {
  function Free(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Free.create = function (value0) {
    return function (value1) {
      return new Free(value0, value1);
    };
  };

  return Free;
}();

var Return = function () {
  function Return(value0) {
    this.value0 = value0;
  }

  ;

  Return.create = function (value0) {
    return new Return(value0);
  };

  return Return;
}();

var Bind = function () {
  function Bind(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Bind.create = function (value0) {
    return function (value1) {
      return new Bind(value0, value1);
    };
  };

  return Bind;
}();

var toView = function toView($copy_v) {
  var $tco_done = false;
  var $tco_result;

  function $tco_loop(v) {
    var runExpF = function runExpF(v2) {
      return v2;
    };

    var concatF = function concatF(v2) {
      return function (r) {
        return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
      };
    };

    if (v.value0 instanceof Return) {
      var v2 = Data_CatList.uncons(v.value1);

      if (v2 instanceof Data_Maybe.Nothing) {
        $tco_done = true;
        return new Return(v.value0.value0);
      }

      ;

      if (v2 instanceof Data_Maybe.Just) {
        $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
        return;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
    }

    ;

    if (v.value0 instanceof Bind) {
      $tco_done = true;
      return new Bind(v.value0.value0, function (a) {
        return concatF(v.value0.value1(a))(v.value1);
      });
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
  }

  ;

  while (!$tco_done) {
    $tco_result = $tco_loop($copy_v);
  }

  ;
  return $tco_result;
};

var runFreeM = function runFreeM(dictFunctor) {
  return function (dictMonadRec) {
    return function (k) {
      var go = function go(f) {
        var v = toView(f);

        if (v instanceof Return) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
        }

        ;

        if (v instanceof Bind) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Loop.create)(k(Data_Functor.map(dictFunctor)(v.value1)(v.value0)));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 194, column 10 - line 196, column 37): " + [v.constructor.name]);
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
  };
};

var runFree = function runFree(dictFunctor) {
  return function (k) {
    var go = function go($copy_f) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(f) {
        var v = toView(f);

        if (v instanceof Return) {
          $tco_done = true;
          return v.value0;
        }

        ;

        if (v instanceof Bind) {
          $copy_f = k(Data_Functor.map(dictFunctor)(v.value1)(v.value0));
          return;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 178, column 10 - line 180, column 33): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_f);
      }

      ;
      return $tco_result;
    };

    return go;
  };
};

var resume$prime = function resume$prime(k) {
  return function (j) {
    return function (f) {
      var v = toView(f);

      if (v instanceof Return) {
        return j(v.value0);
      }

      ;

      if (v instanceof Bind) {
        return k(v.value0)(v.value1);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 213, column 17 - line 215, column 20): " + [v.constructor.name]);
    };
  };
};

var resume = function resume(dictFunctor) {
  return resume$prime(function (g) {
    return function (i) {
      return new Data_Either.Left(Data_Functor.map(dictFunctor)(i)(g));
    };
  })(Data_Either.Right.create);
};

var fromView = function fromView(f) {
  return new Free(f, Data_CatList.empty);
};

var wrap = function wrap(f) {
  return fromView(new Bind(f, Unsafe_Coerce.unsafeCoerce));
};

var suspendF = function suspendF(dictApplicative) {
  return function (f) {
    return wrap(Control_Applicative.pure(dictApplicative)(f));
  };
};

var freeMonad = new Control_Monad.Monad(function () {
  return freeApplicative;
}, function () {
  return freeBind;
});
var freeFunctor = new Data_Functor.Functor(function (k) {
  return function (f) {
    return Control_Bind.bindFlipped(freeBind)(function () {
      var $119 = Control_Applicative.pure(freeApplicative);
      return function ($120) {
        return $119(k($120));
      };
    }())(f);
  };
});
var freeBind = new Control_Bind.Bind(function () {
  return freeApply;
}, function (v) {
  return function (k) {
    return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
  };
});
var freeApply = new Control_Apply.Apply(function () {
  return freeFunctor;
}, Control_Monad.ap(freeMonad));
var freeApplicative = new Control_Applicative.Applicative(function () {
  return freeApply;
}, function ($121) {
  return fromView(Return.create($121));
});

var semigroupFree = function semigroupFree(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(freeApply)(Data_Semigroup.append(dictSemigroup)));
};

var freeMonadRec = new Control_Monad_Rec_Class.MonadRec(function () {
  return freeMonad;
}, function (k) {
  return function (a) {
    return Control_Bind.bind(freeBind)(k(a))(function (v) {
      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);
      }

      ;

      if (v instanceof Control_Monad_Rec_Class.Done) {
        return Control_Applicative.pure(freeApplicative)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 86, column 26 - line 88, column 21): " + [v.constructor.name]);
    });
  };
});

var liftF = function liftF(f) {
  return fromView(new Bind(f, function () {
    var $122 = Control_Applicative.pure(freeApplicative);
    return function ($123) {
      return $122($123);
    };
  }()));
};

var freeMonadTrans = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return liftF;
});

var monoidFree = function monoidFree(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupFree(dictMonoid.Semigroup0());
  }, Control_Applicative.pure(freeApplicative)(Data_Monoid.mempty(dictMonoid)));
};

var substFree = function substFree(k) {
  var go = function go(f) {
    var v = toView(f);

    if (v instanceof Return) {
      return Control_Applicative.pure(freeApplicative)(v.value0);
    }

    ;

    if (v instanceof Bind) {
      return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [v.constructor.name]);
  };

  return go;
};

var hoistFree = function hoistFree(k) {
  return substFree(function ($124) {
    return liftF(k($124));
  });
};

var foldableFree = function foldableFree(dictFunctor) {
  return function (dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
        var go = function () {
          var $125 = resume(dictFunctor);
          return function ($126) {
            return function (v) {
              if (v instanceof Data_Either.Left) {
                return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(go)(v.value0);
              }

              ;

              if (v instanceof Data_Either.Right) {
                return f(v.value0);
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Free (line 93, column 21 - line 95, column 21): " + [v.constructor.name]);
            }($125($126));
          };
        }();

        return go;
      };
    }, function (f) {
      var go = function go(r) {
        var $127 = resume(dictFunctor);
        return function ($128) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Foldable.foldl(dictFoldable)(go)(r)(v.value0);
            }

            ;

            if (v instanceof Data_Either.Right) {
              return f(r)(v.value0);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 98, column 23 - line 100, column 23): " + [v.constructor.name]);
          }($127($128));
        };
      };

      return go;
    }, function (f) {
      var go = function go(r) {
        var $129 = resume(dictFunctor);
        return function ($130) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Foldable.foldr(dictFoldable)(Data_Function.flip(go))(r)(v.value0);
            }

            ;

            if (v instanceof Data_Either.Right) {
              return f(v.value0)(r);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 103, column 23 - line 105, column 23): " + [v.constructor.name]);
          }($129($130));
        };
      };

      return go;
    });
  };
};

var traversableFree = function traversableFree(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableFree(dictTraversable.Functor0())(dictTraversable.Foldable1());
  }, function () {
    return freeFunctor;
  }, function (dictApplicative) {
    return function (tma) {
      return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(tma);
    };
  }, function (dictApplicative) {
    return function (f) {
      var go = function () {
        var $131 = resume(dictTraversable.Functor0());
        return function ($132) {
          return function (v) {
            if (v instanceof Data_Either.Left) {
              return Data_Functor.map(dictApplicative.Apply0().Functor0())(function () {
                var $133 = Control_Bind.join(freeBind);
                return function ($134) {
                  return $133(liftF($134));
                };
              }())(Data_Traversable.traverse(dictTraversable)(dictApplicative)(go)(v.value0));
            }

            ;

            if (v instanceof Data_Either.Right) {
              return Data_Functor.map(dictApplicative.Apply0().Functor0())(Control_Applicative.pure(freeApplicative))(f(v.value0));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 110, column 21 - line 112, column 30): " + [v.constructor.name]);
          }($131($132));
        };
      }();

      return go;
    };
  });
};

var foldFree = function foldFree(dictMonadRec) {
  return function (k) {
    var go = function go(f) {
      var v = toView(f);

      if (v instanceof Return) {
        return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
      }

      ;

      if (v instanceof Bind) {
        return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(function ($135) {
          return Control_Monad_Rec_Class.Loop.create(v.value1($135));
        })(k(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v.constructor.name]);
    };

    return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
  };
};

var eqFree = function eqFree(dictFunctor) {
  return function (dictEq1) {
    return function (dictEq) {
      return new Data_Eq.Eq(function (x) {
        return function (y) {
          var v = resume(dictFunctor)(y);
          var v1 = resume(dictFunctor)(x);

          if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
            return Data_Eq.eq1(dictEq1)(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);
          }

          ;

          if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
            return Data_Eq.eq(dictEq)(v1.value0)(v.value0);
          }

          ;
          return false;
        };
      });
    };
  };
};

var ordFree = function ordFree(dictFunctor) {
  return function (dictOrd1) {
    return function (dictOrd) {
      return new Data_Ord.Ord(function () {
        return eqFree(dictFunctor)(dictOrd1.Eq10())(dictOrd.Eq0());
      }, function (x) {
        return function (y) {
          var v = resume(dictFunctor)(y);
          var v1 = resume(dictFunctor)(x);

          if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {
            return Data_Ord.compare1(dictOrd1)(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);
          }

          ;

          if (v1 instanceof Data_Either.Left) {
            return Data_Ordering.LT.value;
          }

          ;

          if (v instanceof Data_Either.Left) {
            return Data_Ordering.GT.value;
          }

          ;

          if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {
            return Data_Ord.compare(dictOrd)(v1.value0)(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free (line 56, column 17 - line 60, column 36): " + [v1.constructor.name, v.constructor.name]);
        };
      });
    };
  };
};

var eq1Free = function eq1Free(dictFunctor) {
  return function (dictEq1) {
    return new Data_Eq.Eq1(function (dictEq) {
      return Data_Eq.eq(eqFree(dictFunctor)(dictEq1)(dictEq));
    });
  };
};

var ord1Free = function ord1Free(dictFunctor) {
  return function (dictOrd1) {
    return new Data_Ord.Ord1(function () {
      return eq1Free(dictFunctor)(dictOrd1.Eq10());
    }, function (dictOrd) {
      return Data_Ord.compare(ordFree(dictFunctor)(dictOrd1)(dictOrd));
    });
  };
};

module.exports = {
  suspendF: suspendF,
  wrap: wrap,
  liftF: liftF,
  hoistFree: hoistFree,
  foldFree: foldFree,
  substFree: substFree,
  runFree: runFree,
  runFreeM: runFreeM,
  resume: resume,
  "resume'": resume$prime,
  eqFree: eqFree,
  eq1Free: eq1Free,
  ordFree: ordFree,
  ord1Free: ord1Free,
  freeFunctor: freeFunctor,
  freeBind: freeBind,
  freeApplicative: freeApplicative,
  freeApply: freeApply,
  freeMonad: freeMonad,
  freeMonadTrans: freeMonadTrans,
  freeMonadRec: freeMonadRec,
  foldableFree: foldableFree,
  traversableFree: traversableFree,
  semigroupFree: semigroupFree,
  monoidFree: monoidFree
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Monad/index.js":"UIxr","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.Trans.Class/index.js":"tIRA","../Data.CatList/index.js":"Full","../Data.Either/index.js":"B2JL","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Traversable/index.js":"n7EE","../Unsafe.Coerce/index.js":"ETUV"}],"IpNh":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var MonadCont = function MonadCont(Monad0, callCC) {
  this.Monad0 = Monad0;
  this.callCC = callCC;
};

var callCC = function callCC(dict) {
  return dict.callCC;
};

module.exports = {
  MonadCont: MonadCont,
  callCC: callCC
};
},{}],"OvLS":[function(require,module,exports) {
"use strict";

exports.showErrorImpl = function (err) {
  return err.stack || err.toString();
};

exports.error = function (msg) {
  return new Error(msg);
};

exports.message = function (e) {
  return e.message;
};

exports.name = function (e) {
  return e.name || "Error";
};

exports.stackImpl = function (just) {
  return function (nothing) {
    return function (e) {
      return e.stack ? just(e.stack) : nothing;
    };
  };
};

exports.throwException = function (e) {
  return function () {
    throw e;
  };
};

exports.catchException = function (c) {
  return function (t) {
    return function () {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c(e)();
        } else {
          return c(new Error(e.toString()))();
        }
      }
    };
  };
};
},{}],"OCWS":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Show = require("../Data.Show/index.js");

var Effect = require("../Effect/index.js");

var $$try = function $$try(action) {
  return $foreign.catchException(function () {
    var $0 = Control_Applicative.pure(Effect.applicativeEffect);
    return function ($1) {
      return $0(Data_Either.Left.create($1));
    };
  }())(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
};

var $$throw = function $$throw($2) {
  return $foreign.throwException($foreign.error($2));
};

var stack = $foreign.stackImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var showError = new Data_Show.Show($foreign.showErrorImpl);
module.exports = {
  stack: stack,
  "throw": $$throw,
  "try": $$try,
  showError: showError,
  error: $foreign.error,
  message: $foreign.message,
  name: $foreign.name,
  throwException: $foreign.throwException,
  catchException: $foreign.catchException
};
},{"./foreign.js":"OvLS","../Control.Applicative/index.js":"qYya","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Show/index.js":"mFY7","../Effect/index.js":"oTWB"}],"L8Lk":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var MonadThrow = function MonadThrow(Monad0, throwError) {
  this.Monad0 = Monad0;
  this.throwError = throwError;
};

var MonadError = function MonadError(MonadThrow0, catchError) {
  this.MonadThrow0 = MonadThrow0;
  this.catchError = catchError;
};

var throwError = function throwError(dict) {
  return dict.throwError;
};

var monadThrowMaybe = new MonadThrow(function () {
  return Data_Maybe.monadMaybe;
}, Data_Function["const"](Data_Maybe.Nothing.value));
var monadThrowEither = new MonadThrow(function () {
  return Data_Either.monadEither;
}, Data_Either.Left.create);
var monadThrowEffect = new MonadThrow(function () {
  return Effect.monadEffect;
}, Effect_Exception.throwException);
var monadErrorMaybe = new MonadError(function () {
  return monadThrowMaybe;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Maybe.Nothing) {
      return v1(Data_Unit.unit);
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 79, column 1 - line 81, column 33): " + [v.constructor.name, v1.constructor.name]);
  };
});
var monadErrorEither = new MonadError(function () {
  return monadThrowEither;
}, function (v) {
  return function (v1) {
    if (v instanceof Data_Either.Left) {
      return v1(v.value0);
    }

    ;

    if (v instanceof Data_Either.Right) {
      return new Data_Either.Right(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Control.Monad.Error.Class (line 72, column 1 - line 74, column 35): " + [v.constructor.name, v1.constructor.name]);
  };
});
var monadErrorEffect = new MonadError(function () {
  return monadThrowEffect;
}, Data_Function.flip(Effect_Exception.catchException));

var catchError = function catchError(dict) {
  return dict.catchError;
};

var catchJust = function catchJust(dictMonadError) {
  return function (p) {
    return function (act) {
      return function (handler) {
        var handle = function handle(e) {
          var v = p(e);

          if (v instanceof Data_Maybe.Nothing) {
            return throwError(dictMonadError.MonadThrow0())(e);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return handler(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Error.Class (line 57, column 5 - line 59, column 26): " + [v.constructor.name]);
        };

        return catchError(dictMonadError)(act)(handle);
      };
    };
  };
};

var $$try = function $$try(dictMonadError) {
  return function (a) {
    return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function () {
      var $17 = Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0());
      return function ($18) {
        return $17(Data_Either.Left.create($18));
      };
    }());
  };
};

var withResource = function withResource(dictMonadError) {
  return function (acquire) {
    return function (release) {
      return function (kleisli) {
        return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())(acquire)(function (resource) {
          return Control_Bind.bind(dictMonadError.MonadThrow0().Monad0().Bind1())($$try(dictMonadError)(kleisli(resource)))(function (result) {
            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadError.MonadThrow0().Monad0().Bind1())(release(resource))(function () {
              return Data_Either.either(throwError(dictMonadError.MonadThrow0()))(Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0()))(result);
            });
          });
        });
      };
    };
  };
};

module.exports = {
  catchError: catchError,
  throwError: throwError,
  MonadThrow: MonadThrow,
  MonadError: MonadError,
  catchJust: catchJust,
  "try": $$try,
  withResource: withResource,
  monadThrowEither: monadThrowEither,
  monadErrorEither: monadErrorEither,
  monadThrowMaybe: monadThrowMaybe,
  monadErrorMaybe: monadErrorMaybe,
  monadThrowEffect: monadThrowEffect,
  monadErrorEffect: monadErrorEffect
};
},{"../Control.Applicative/index.js":"qYya","../Control.Bind/index.js":"VcTy","../Data.Either/index.js":"B2JL","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Unit/index.js":"NhVk","../Effect/index.js":"oTWB","../Effect.Exception/index.js":"OCWS"}],"c2ZJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var MonadAsk = function MonadAsk(Monad0, ask) {
  this.Monad0 = Monad0;
  this.ask = ask;
};

var MonadReader = function MonadReader(MonadAsk0, local) {
  this.MonadAsk0 = MonadAsk0;
  this.local = local;
};

var monadAskFun = new MonadAsk(function () {
  return Control_Monad.monadFn;
}, Control_Category.identity(Control_Category.categoryFn));
var monadReaderFun = new MonadReader(function () {
  return monadAskFun;
}, Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn));

var local = function local(dict) {
  return dict.local;
};

var ask = function ask(dict) {
  return dict.ask;
};

var asks = function asks(dictMonadAsk) {
  return function (f) {
    return Data_Functor.map(dictMonadAsk.Monad0().Bind1().Apply0().Functor0())(f)(ask(dictMonadAsk));
  };
};

module.exports = {
  ask: ask,
  local: local,
  MonadAsk: MonadAsk,
  asks: asks,
  MonadReader: MonadReader,
  monadAskFun: monadAskFun,
  monadReaderFun: monadReaderFun
};
},{"../Control.Category/index.js":"IAi2","../Control.Monad/index.js":"UIxr","../Control.Semigroupoid/index.js":"riRy","../Data.Functor/index.js":"AEHo"}],"u1pL":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var MonadState = function MonadState(Monad0, state) {
  this.Monad0 = Monad0;
  this.state = state;
};

var state = function state(dict) {
  return dict.state;
};

var put = function put(dictMonadState) {
  return function (s) {
    return state(dictMonadState)(function (v) {
      return new Data_Tuple.Tuple(Data_Unit.unit, s);
    });
  };
};

var modify_ = function modify_(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
    });
  };
};

var modify = function modify(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      var s$prime = f(s);
      return new Data_Tuple.Tuple(s$prime, s$prime);
    });
  };
};

var gets = function gets(dictMonadState) {
  return function (f) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(f(s), s);
    });
  };
};

var get = function get(dictMonadState) {
  return state(dictMonadState)(function (s) {
    return new Data_Tuple.Tuple(s, s);
  });
};

module.exports = {
  state: state,
  MonadState: MonadState,
  get: get,
  gets: gets,
  put: put,
  modify: modify,
  modify_: modify_
};
},{"../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk"}],"gxgA":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var MonadTell = function MonadTell(Monad1, Semigroup0, tell) {
  this.Monad1 = Monad1;
  this.Semigroup0 = Semigroup0;
  this.tell = tell;
};

var MonadWriter = function MonadWriter(MonadTell1, Monoid0, listen, pass) {
  this.MonadTell1 = MonadTell1;
  this.Monoid0 = Monoid0;
  this.listen = listen;
  this.pass = pass;
};

var tell = function tell(dict) {
  return dict.tell;
};

var pass = function pass(dict) {
  return dict.pass;
};

var listen = function listen(dict) {
  return dict.listen;
};

var listens = function listens(dictMonadWriter) {
  return function (f) {
    return function (m) {
      return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(listen(dictMonadWriter)(m))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(v.value0, f(v.value1)));
      });
    };
  };
};

var censor = function censor(dictMonadWriter) {
  return function (f) {
    return function (m) {
      return pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(a, f));
      }));
    };
  };
};

module.exports = {
  listen: listen,
  pass: pass,
  tell: tell,
  MonadTell: MonadTell,
  MonadWriter: MonadWriter,
  listens: listens,
  censor: censor
};
},{"../Control.Applicative/index.js":"qYya","../Control.Bind/index.js":"VcTy","../Data.Tuple/index.js":"IIOM"}],"dWtH":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Effect = require("../Effect/index.js");

var MonadEffect = function MonadEffect(Monad0, liftEffect) {
  this.Monad0 = Monad0;
  this.liftEffect = liftEffect;
};

var monadEffectEffect = new MonadEffect(function () {
  return Effect.monadEffect;
}, Control_Category.identity(Control_Category.categoryFn));

var liftEffect = function liftEffect(dict) {
  return dict.liftEffect;
};

module.exports = {
  liftEffect: liftEffect,
  MonadEffect: MonadEffect,
  monadEffectEffect: monadEffectEffect
};
},{"../Control.Category/index.js":"IAi2","../Effect/index.js":"oTWB"}],"gr8B":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ExceptT = function ExceptT(x) {
  return x;
};

var withExceptT = function withExceptT(dictFunctor) {
  return function (f) {
    return function (v) {
      var mapLeft = function mapLeft(v1) {
        return function (v2) {
          if (v2 instanceof Data_Either.Right) {
            return new Data_Either.Right(v2.value0);
          }

          ;

          if (v2 instanceof Data_Either.Left) {
            return new Data_Either.Left(v1(v2.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 43, column 3 - line 43, column 32): " + [v1.constructor.name, v2.constructor.name]);
        };
      };

      return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
    };
  };
};

var runExceptT = function runExceptT(v) {
  return v;
};

var newtypeExceptT = new Data_Newtype.Newtype(function () {
  return undefined;
});
var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(a));
    });
  };
});

var mapExceptT = function mapExceptT(f) {
  return function (v) {
    return f(v);
  };
};

var functorExceptT = function functorExceptT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
  });
};

var except = function except(dictApplicative) {
  var $89 = Control_Applicative.pure(dictApplicative);
  return function ($90) {
    return ExceptT($89($90));
  };
};

var monadExceptT = function monadExceptT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeExceptT(dictMonad);
  }, function () {
    return bindExceptT(dictMonad);
  });
};

var bindExceptT = function bindExceptT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyExceptT(dictMonad);
  }, function (v) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function () {
        var $91 = Control_Applicative.pure(dictMonad.Applicative0());
        return function ($92) {
          return $91(Data_Either.Left.create($92));
        };
      }())(function (a) {
        var v1 = k(a);
        return v1;
      }));
    };
  });
};

var applyExceptT = function applyExceptT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadExceptT(dictMonad)));
};

var applicativeExceptT = function applicativeExceptT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyExceptT(dictMonad);
  }, function () {
    var $93 = Control_Applicative.pure(dictMonad.Applicative0());
    return function ($94) {
      return ExceptT($93(Data_Either.Right.create($94)));
    };
  }());
};

var semigroupExceptT = function semigroupExceptT(dictMonad) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyExceptT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
  };
};

var monadAskExceptT = function monadAskExceptT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadExceptT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderExceptT = function monadReaderExceptT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskExceptT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return mapExceptT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
  });
};

var monadContExceptT = function monadContExceptT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadExceptT(dictMonadCont.Monad0());
  }, function (f) {
    return ExceptT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
      var v = f(function (a) {
        return ExceptT(c(new Data_Either.Right(a)));
      });
      return v;
    }));
  });
};

var monadEffectExceptT = function monadEffectExceptT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadExceptT(dictMonadEffect.Monad0());
  }, function () {
    var $95 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadEffect.Monad0());
    var $96 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($97) {
      return $95($96($97));
    };
  }());
};

var monadRecExceptT = function monadRecExceptT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadExceptT(dictMonadRec.Monad0());
  }, function (f) {
    var $98 = Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
      var v = f(a);
      return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v)(function (m$prime) {
        return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
          if (m$prime instanceof Data_Either.Left) {
            return new Control_Monad_Rec_Class.Done(new Data_Either.Left(m$prime.value0));
          }

          ;

          if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
          }

          ;

          if (m$prime instanceof Data_Either.Right && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
            return new Control_Monad_Rec_Class.Done(new Data_Either.Right(m$prime.value0.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 75, column 14 - line 78, column 43): " + [m$prime.constructor.name]);
        }());
      });
    });
    return function ($99) {
      return ExceptT($98($99));
    };
  });
};

var monadStateExceptT = function monadStateExceptT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadExceptT(dictMonadState.Monad0());
  }, function (f) {
    return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
  });
};

var monadTellExceptT = function monadTellExceptT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadExceptT(dictMonadTell.Monad1());
  }, dictMonadTell.Semigroup0, function () {
    var $100 = Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadTell.Monad1());
    var $101 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($102) {
      return $100($101($102));
    };
  }());
};

var monadWriterExceptT = function monadWriterExceptT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellExceptT(dictMonadWriter.MonadTell1());
  }, dictMonadWriter.Monoid0, mapExceptT(function (m) {
    return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(Data_Functor.map(Data_Either.functorEither)(function (r) {
        return new Data_Tuple.Tuple(r, v.value1);
      })(v.value0));
    });
  }), mapExceptT(function (m) {
    return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function (a) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(function () {
        if (a instanceof Data_Either.Left) {
          return new Data_Tuple.Tuple(new Data_Either.Left(a.value0), Control_Category.identity(Control_Category.categoryFn));
        }

        ;

        if (a instanceof Data_Either.Right) {
          return new Data_Tuple.Tuple(new Data_Either.Right(a.value0.value0), a.value0.value1);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 137, column 10 - line 139, column 45): " + [a.constructor.name]);
      }());
    }));
  }));
};

var monadThrowExceptT = function monadThrowExceptT(dictMonad) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadExceptT(dictMonad);
  }, function () {
    var $103 = Control_Applicative.pure(dictMonad.Applicative0());
    return function ($104) {
      return ExceptT($103(Data_Either.Left.create($104)));
    };
  }());
};

var monadErrorExceptT = function monadErrorExceptT(dictMonad) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowExceptT(dictMonad);
  }, function (v) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function (a) {
        var v1 = k(a);
        return v1;
      })(function () {
        var $105 = Control_Applicative.pure(dictMonad.Applicative0());
        return function ($106) {
          return $105(Data_Either.Right.create($106));
        };
      }()));
    };
  });
};

var monoidExceptT = function monoidExceptT(dictMonad) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupExceptT(dictMonad)(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
  };
};

var altExceptT = function altExceptT(dictSemigroup) {
  return function (dictMonad) {
    return new Control_Alt.Alt(function () {
      return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }, function (v) {
      return function (v1) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(function (rm) {
          if (rm instanceof Data_Either.Right) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
          }

          ;

          if (rm instanceof Data_Either.Left) {
            return Control_Bind.bind(dictMonad.Bind1())(v1)(function (rn) {
              if (rn instanceof Data_Either.Right) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
              }

              ;

              if (rn instanceof Data_Either.Left) {
                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): " + [rn.constructor.name]);
            });
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): " + [rm.constructor.name]);
        });
      };
    });
  };
};

var plusExceptT = function plusExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Plus.Plus(function () {
      return altExceptT(dictMonoid.Semigroup0())(dictMonad);
    }, Control_Monad_Error_Class.throwError(monadThrowExceptT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
  };
};

var alternativeExceptT = function alternativeExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Alternative.Alternative(function () {
      return applicativeExceptT(dictMonad);
    }, function () {
      return plusExceptT(dictMonoid)(dictMonad);
    });
  };
};

var monadPlusExceptT = function monadPlusExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_MonadPlus.MonadPlus(function () {
      return alternativeExceptT(dictMonoid)(dictMonad);
    }, function () {
      return monadExceptT(dictMonad);
    });
  };
};

var monadZeroExceptT = function monadZeroExceptT(dictMonoid) {
  return function (dictMonad) {
    return new Control_MonadZero.MonadZero(function () {
      return alternativeExceptT(dictMonoid)(dictMonad);
    }, function () {
      return monadExceptT(dictMonad);
    }, function () {
      return undefined;
    });
  };
};

module.exports = {
  ExceptT: ExceptT,
  runExceptT: runExceptT,
  withExceptT: withExceptT,
  mapExceptT: mapExceptT,
  except: except,
  newtypeExceptT: newtypeExceptT,
  functorExceptT: functorExceptT,
  applyExceptT: applyExceptT,
  applicativeExceptT: applicativeExceptT,
  bindExceptT: bindExceptT,
  monadExceptT: monadExceptT,
  monadRecExceptT: monadRecExceptT,
  altExceptT: altExceptT,
  plusExceptT: plusExceptT,
  alternativeExceptT: alternativeExceptT,
  monadPlusExceptT: monadPlusExceptT,
  monadZeroExceptT: monadZeroExceptT,
  monadTransExceptT: monadTransExceptT,
  monadEffectExceptT: monadEffectExceptT,
  monadContExceptT: monadContExceptT,
  monadThrowExceptT: monadThrowExceptT,
  monadErrorExceptT: monadErrorExceptT,
  monadAskExceptT: monadAskExceptT,
  monadReaderExceptT: monadReaderExceptT,
  monadStateExceptT: monadStateExceptT,
  monadTellExceptT: monadTellExceptT,
  monadWriterExceptT: monadWriterExceptT,
  semigroupExceptT: semigroupExceptT,
  monoidExceptT: monoidExceptT,
  MonadError: Control_Monad_Error_Class.MonadError,
  MonadThrow: Control_Monad_Error_Class.MonadThrow,
  catchError: Control_Monad_Error_Class.catchError,
  throwError: Control_Monad_Error_Class.throwError,
  MonadTrans: Control_Monad_Trans_Class.MonadTrans,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Monad/index.js":"UIxr","../Control.Monad.Cont.Class/index.js":"IpNh","../Control.Monad.Error.Class/index.js":"L8Lk","../Control.Monad.Reader.Class/index.js":"c2ZJ","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.Monad.Writer.Class/index.js":"gxgA","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Tuple/index.js":"IIOM","../Effect.Class/index.js":"dWtH"}],"Fynn":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var RWSResult = function () {
  function RWSResult(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  RWSResult.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new RWSResult(value0, value1, value2);
      };
    };
  };

  return RWSResult;
}();

var RWST = function RWST(x) {
  return x;
};

var withRWST = function withRWST(f) {
  return function (m) {
    return function (r) {
      return function (s) {
        return Data_Tuple.uncurry(m)(f(r)(s));
      };
    };
  };
};

var runRWST = function runRWST(v) {
  return v;
};

var newtypeRWST = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monadTransRWST = function monadTransRWST(dictMonoid) {
  return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
      return function (v) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
          });
        };
      };
    };
  });
};

var mapRWST = function mapRWST(f) {
  return function (v) {
    return function (r) {
      return function (s) {
        return f(v(r)(s));
      };
    };
  };
};

var lazyRWST = new Control_Lazy.Lazy(function (f) {
  return function (r) {
    return function (s) {
      var v = f(Data_Unit.unit);
      return v(r)(s);
    };
  };
});

var functorRWST = function functorRWST(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (r) {
        return function (s) {
          return Data_Functor.map(dictFunctor)(function (v1) {
            return new RWSResult(v1.value0, f(v1.value1), v1.value2);
          })(v(r)(s));
        };
      };
    };
  });
};

var execRWST = function execRWST(dictMonad) {
  return function (v) {
    return function (r) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0, v1.value2));
        });
      };
    };
  };
};

var evalRWST = function evalRWST(dictMonad) {
  return function (v) {
    return function (r) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(r)(s))(function (v1) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value1, v1.value2));
        });
      };
    };
  };
};

var applyRWST = function applyRWST(dictBind) {
  return function (dictMonoid) {
    return new Control_Apply.Apply(function () {
      return functorRWST(dictBind.Apply0().Functor0());
    }, function (v) {
      return function (v1) {
        return function (r) {
          return function (s) {
            return Control_Bind.bind(dictBind)(v(r)(s))(function (v2) {
              return Data_Functor.mapFlipped(dictBind.Apply0().Functor0())(v1(r)(v2.value0))(function (v3) {
                return new RWSResult(v3.value0, v2.value1(v3.value1), Data_Semigroup.append(dictMonoid.Semigroup0())(v2.value2)(v3.value2));
              });
            });
          };
        };
      };
    });
  };
};

var bindRWST = function bindRWST(dictBind) {
  return function (dictMonoid) {
    return new Control_Bind.Bind(function () {
      return applyRWST(dictBind)(dictMonoid);
    }, function (v) {
      return function (f) {
        return function (r) {
          return function (s) {
            return Control_Bind.bind(dictBind)(v(r)(s))(function (v1) {
              var v2 = f(v1.value1);
              return Data_Functor.mapFlipped(dictBind.Apply0().Functor0())(v2(r)(v1.value0))(function (v3) {
                return new RWSResult(v3.value0, v3.value1, Data_Semigroup.append(dictMonoid.Semigroup0())(v1.value2)(v3.value2));
              });
            });
          };
        };
      };
    });
  };
};

var semigroupRWST = function semigroupRWST(dictBind) {
  return function (dictMonoid) {
    return function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyRWST(dictBind)(dictMonoid))(Data_Semigroup.append(dictSemigroup)));
    };
  };
};

var applicativeRWST = function applicativeRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Applicative.Applicative(function () {
      return applyRWST(dictMonad.Bind1())(dictMonoid);
    }, function (a) {
      return function (v) {
        return function (s) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
        };
      };
    });
  };
};

var monadRWST = function monadRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad.Monad(function () {
      return applicativeRWST(dictMonad)(dictMonoid);
    }, function () {
      return bindRWST(dictMonad.Bind1())(dictMonoid);
    });
  };
};

var monadAskRWST = function monadAskRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, function (r) {
      return function (s) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, r, Data_Monoid.mempty(dictMonoid)));
      };
    });
  };
};

var monadReaderRWST = function monadReaderRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
      return monadAskRWST(dictMonad)(dictMonoid);
    }, function (f) {
      return function (m) {
        return function (r) {
          return function (s) {
            return m(f(r))(s);
          };
        };
      };
    });
  };
};

var monadEffectRWS = function monadEffectRWS(dictMonoid) {
  return function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadRWST(dictMonadEffect.Monad0())(dictMonoid);
    }, function () {
      var $158 = Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadEffect.Monad0());
      var $159 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($160) {
        return $158($159($160));
      };
    }());
  };
};

var monadRecRWST = function monadRecRWST(dictMonadRec) {
  return function (dictMonoid) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
      return monadRWST(dictMonadRec.Monad0())(dictMonoid);
    }, function (k) {
      return function (a) {
        var k$prime = function k$prime(r) {
          return function (v) {
            var v1 = k(v.value1);
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1(r)(v.value0))(function (v2) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
                if (v2.value1 instanceof Control_Monad_Rec_Class.Loop) {
                  return new Control_Monad_Rec_Class.Loop(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                }

                ;

                if (v2.value1 instanceof Control_Monad_Rec_Class.Done) {
                  return new Control_Monad_Rec_Class.Done(new RWSResult(v2.value0, v2.value1.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value2)(v2.value2)));
                }

                ;
                throw new Error("Failed pattern match at Control.Monad.RWS.Trans (line 128, column 16 - line 130, column 68): " + [v2.value1.constructor.name]);
              }());
            });
          };
        };

        return function (r) {
          return function (s) {
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(new RWSResult(s, a, Data_Monoid.mempty(dictMonoid)));
          };
        };
      };
    });
  };
};

var monadStateRWST = function monadStateRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, function (f) {
      return function (v) {
        return function (s) {
          var v1 = f(s);
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v1.value1, v1.value0, Data_Monoid.mempty(dictMonoid)));
        };
      };
    });
  };
};

var monadTellRWST = function monadTellRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
      return monadRWST(dictMonad)(dictMonoid);
    }, dictMonoid.Semigroup0, function (w) {
      return function (v) {
        return function (s) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(s, Data_Unit.unit, w));
        };
      };
    });
  };
};

var monadWriterRWST = function monadWriterRWST(dictMonad) {
  return function (dictMonoid) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
      return monadTellRWST(dictMonad)(dictMonoid);
    }, function () {
      return dictMonoid;
    }, function (m) {
      return function (r) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, new Data_Tuple.Tuple(v.value1, v.value2), v.value2));
          });
        };
      };
    }, function (m) {
      return function (r) {
        return function (s) {
          return Control_Bind.bind(dictMonad.Bind1())(m(r)(s))(function (v) {
            return Control_Applicative.pure(dictMonad.Applicative0())(new RWSResult(v.value0, v.value1.value0, v.value1.value1(v.value2)));
          });
        };
      };
    });
  };
};

var monadThrowRWST = function monadThrowRWST(dictMonadThrow) {
  return function (dictMonoid) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadRWST(dictMonadThrow.Monad0())(dictMonoid);
    }, function (e) {
      return Control_Monad_Trans_Class.lift(monadTransRWST(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
  };
};

var monadErrorRWST = function monadErrorRWST(dictMonadError) {
  return function (dictMonoid) {
    return new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowRWST(dictMonadError.MonadThrow0())(dictMonoid);
    }, function (m) {
      return function (h) {
        return RWST(function (r) {
          return function (s) {
            return Control_Monad_Error_Class.catchError(dictMonadError)(m(r)(s))(function (e) {
              var v = h(e);
              return v(r)(s);
            });
          };
        });
      };
    });
  };
};

var monoidRWST = function monoidRWST(dictMonad) {
  return function (dictMonoid) {
    return function (dictMonoid1) {
      return new Data_Monoid.Monoid(function () {
        return semigroupRWST(dictMonad.Bind1())(dictMonoid)(dictMonoid1.Semigroup0());
      }, Control_Applicative.pure(applicativeRWST(dictMonad)(dictMonoid))(Data_Monoid.mempty(dictMonoid1)));
    };
  };
};

var altRWST = function altRWST(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorRWST(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return RWST(function (r) {
        return function (s) {
          return Control_Alt.alt(dictAlt)(v(r)(s))(v1(r)(s));
        };
      });
    };
  });
};

var plusRWST = function plusRWST(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altRWST(dictPlus.Alt0());
  }, function (v) {
    return function (v1) {
      return Control_Plus.empty(dictPlus);
    };
  });
};

var alternativeRWST = function alternativeRWST(dictMonoid) {
  return function (dictAlternative) {
    return function (dictMonad) {
      return new Control_Alternative.Alternative(function () {
        return applicativeRWST(dictMonad)(dictMonoid);
      }, function () {
        return plusRWST(dictAlternative.Plus1());
      });
    };
  };
};

module.exports = {
  RWSResult: RWSResult,
  RWST: RWST,
  runRWST: runRWST,
  evalRWST: evalRWST,
  execRWST: execRWST,
  mapRWST: mapRWST,
  withRWST: withRWST,
  newtypeRWST: newtypeRWST,
  functorRWST: functorRWST,
  applyRWST: applyRWST,
  altRWST: altRWST,
  alternativeRWST: alternativeRWST,
  bindRWST: bindRWST,
  applicativeRWST: applicativeRWST,
  monadRWST: monadRWST,
  monadTransRWST: monadTransRWST,
  lazyRWST: lazyRWST,
  monadEffectRWS: monadEffectRWS,
  monadAskRWST: monadAskRWST,
  monadReaderRWST: monadReaderRWST,
  monadStateRWST: monadStateRWST,
  monadTellRWST: monadTellRWST,
  monadWriterRWST: monadWriterRWST,
  monadThrowRWST: monadThrowRWST,
  monadErrorRWST: monadErrorRWST,
  monadRecRWST: monadRecRWST,
  plusRWST: plusRWST,
  semigroupRWST: semigroupRWST,
  monoidRWST: monoidRWST,
  MonadTrans: Control_Monad_Trans_Class.MonadTrans,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Lazy/index.js":"y9cE","../Control.Monad/index.js":"UIxr","../Control.Monad.Error.Class/index.js":"L8Lk","../Control.Monad.Reader.Class/index.js":"c2ZJ","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.Monad.Writer.Class/index.js":"gxgA","../Control.Plus/index.js":"oMBg","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk","../Effect.Class/index.js":"dWtH"}],"UqR7":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var TypeEquals = function TypeEquals(Coercible0, proof) {
  this.Coercible0 = Coercible0;
  this.proof = proof;
};

var To = function To(x) {
  return x;
};

var From = function From(x) {
  return x;
};

var refl = new TypeEquals(function () {
  return undefined;
}, function (a) {
  return a;
});

var proof = function proof(dict) {
  return dict.proof;
};

var to = function to(dictTypeEquals) {
  var v = proof(dictTypeEquals)(function (a) {
    return a;
  });
  return v;
};

var from = function from(dictTypeEquals) {
  var v = proof(dictTypeEquals)(function (a) {
    return a;
  });
  return v;
};

module.exports = {
  TypeEquals: TypeEquals,
  proof: proof,
  to: to,
  from: from,
  refl: refl
};
},{}],"PTuN":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Type_Equality = require("../Type.Equality/index.js");

var Distributive = function Distributive(Functor0, collect, distribute) {
  this.Functor0 = Functor0;
  this.collect = collect;
  this.distribute = distribute;
};

var distributiveIdentity = new Distributive(function () {
  return Data_Identity.functorIdentity;
}, function (dictFunctor) {
  return function (f) {
    var $14 = Data_Functor.map(dictFunctor)(function () {
      var $16 = Data_Newtype.unwrap();
      return function ($17) {
        return $16(f($17));
      };
    }());
    return function ($15) {
      return Data_Identity.Identity($14($15));
    };
  };
}, function (dictFunctor) {
  var $18 = Data_Functor.map(dictFunctor)(Data_Newtype.unwrap());
  return function ($19) {
    return Data_Identity.Identity($18($19));
  };
});

var distribute = function distribute(dict) {
  return dict.distribute;
};

var distributiveFunction = new Distributive(function () {
  return Data_Functor.functorFn;
}, function (dictFunctor) {
  return function (f) {
    var $20 = distribute(distributiveFunction)(dictFunctor);
    var $21 = Data_Functor.map(dictFunctor)(f);
    return function ($22) {
      return $20($21($22));
    };
  };
}, function (dictFunctor) {
  return function (a) {
    return function (e) {
      return Data_Functor.map(dictFunctor)(function (v) {
        return v(e);
      })(a);
    };
  };
});

var cotraverse = function cotraverse(dictDistributive) {
  return function (dictFunctor) {
    return function (f) {
      var $23 = Data_Functor.map(dictDistributive.Functor0())(f);
      var $24 = distribute(dictDistributive)(dictFunctor);
      return function ($25) {
        return $23($24($25));
      };
    };
  };
};

var collectDefault = function collectDefault(dictDistributive) {
  return function (dictFunctor) {
    return function (f) {
      var $26 = distribute(dictDistributive)(dictFunctor);
      var $27 = Data_Functor.map(dictFunctor)(f);
      return function ($28) {
        return $26($27($28));
      };
    };
  };
};

var distributiveTuple = function distributiveTuple(dictTypeEquals) {
  return new Distributive(function () {
    return Data_Tuple.functorTuple;
  }, function (dictFunctor) {
    return collectDefault(distributiveTuple(dictTypeEquals))(dictFunctor);
  }, function (dictFunctor) {
    var $29 = Data_Tuple.Tuple.create(Type_Equality.from(dictTypeEquals)(Data_Unit.unit));
    var $30 = Data_Functor.map(dictFunctor)(Data_Tuple.snd);
    return function ($31) {
      return $29($30($31));
    };
  });
};

var collect = function collect(dict) {
  return dict.collect;
};

var distributeDefault = function distributeDefault(dictDistributive) {
  return function (dictFunctor) {
    return collect(dictDistributive)(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
};

module.exports = {
  collect: collect,
  distribute: distribute,
  Distributive: Distributive,
  distributeDefault: distributeDefault,
  collectDefault: collectDefault,
  cotraverse: cotraverse,
  distributiveIdentity: distributiveIdentity,
  distributiveFunction: distributiveFunction,
  distributiveTuple: distributiveTuple
};
},{"../Control.Category/index.js":"IAi2","../Data.Functor/index.js":"AEHo","../Data.Identity/index.js":"OKTm","../Data.Newtype/index.js":"lz8k","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk","../Type.Equality/index.js":"UqR7"}],"uvht":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ReaderT = function ReaderT(x) {
  return x;
};

var withReaderT = function withReaderT(f) {
  return function (v) {
    return function ($63) {
      return v(f($63));
    };
  };
};

var runReaderT = function runReaderT(v) {
  return v;
};

var newtypeReaderT = new Data_Newtype.Newtype(function () {
  return undefined;
});
var monadTransReaderT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function ($64) {
    return ReaderT(Data_Function["const"]($64));
  };
});

var mapReaderT = function mapReaderT(f) {
  return function (v) {
    return function ($65) {
      return f(v($65));
    };
  };
};

var functorReaderT = function functorReaderT(dictFunctor) {
  return new Data_Functor.Functor(function () {
    var $66 = Data_Functor.map(dictFunctor);
    return function ($67) {
      return mapReaderT($66($67));
    };
  }());
};

var distributiveReaderT = function distributiveReaderT(dictDistributive) {
  return new Data_Distributive.Distributive(function () {
    return functorReaderT(dictDistributive.Functor0());
  }, function (dictFunctor) {
    return function (f) {
      var $68 = Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor);
      var $69 = Data_Functor.map(dictFunctor)(f);
      return function ($70) {
        return $68($69($70));
      };
    };
  }, function (dictFunctor) {
    return function (a) {
      return function (e) {
        return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {
          return r(e);
        })(a);
      };
    };
  });
};

var applyReaderT = function applyReaderT(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorReaderT(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return function (r) {
        return Control_Apply.apply(dictApply)(v(r))(v1(r));
      };
    };
  });
};

var bindReaderT = function bindReaderT(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyReaderT(dictBind.Apply0());
  }, function (v) {
    return function (k) {
      return function (r) {
        return Control_Bind.bind(dictBind)(v(r))(function (a) {
          var v1 = k(a);
          return v1(r);
        });
      };
    };
  });
};

var semigroupReaderT = function semigroupReaderT(dictApply) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup)));
  };
};

var applicativeReaderT = function applicativeReaderT(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyReaderT(dictApplicative.Apply0());
  }, function () {
    var $71 = Control_Applicative.pure(dictApplicative);
    return function ($72) {
      return ReaderT(Data_Function["const"]($71($72)));
    };
  }());
};

var monadReaderT = function monadReaderT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeReaderT(dictMonad.Applicative0());
  }, function () {
    return bindReaderT(dictMonad.Bind1());
  });
};

var monadAskReaderT = function monadAskReaderT(dictMonad) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadReaderT(dictMonad);
  }, Control_Applicative.pure(dictMonad.Applicative0()));
};

var monadReaderReaderT = function monadReaderReaderT(dictMonad) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskReaderT(dictMonad);
  }, withReaderT);
};

var monadContReaderT = function monadContReaderT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadReaderT(dictMonadCont.Monad0());
  }, function (f) {
    return function (r) {
      return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function ($73) {
          return ReaderT(Data_Function["const"](c($73)));
        });
        return v(r);
      });
    };
  });
};

var monadEffectReader = function monadEffectReader(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadReaderT(dictMonadEffect.Monad0());
  }, function () {
    var $74 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());
    var $75 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($76) {
      return $74($75($76));
    };
  }());
};

var monadRecReaderT = function monadRecReaderT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadReaderT(dictMonadRec.Monad0());
  }, function (k) {
    return function (a) {
      var k$prime = function k$prime(r) {
        return function (a$prime) {
          var v = k(a$prime);
          return Control_Bind.bindFlipped(dictMonadRec.Monad0().Bind1())(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0()))(v(r));
        };
      };

      return function (r) {
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);
      };
    };
  });
};

var monadStateReaderT = function monadStateReaderT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadReaderT(dictMonadState.Monad0());
  }, function () {
    var $77 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0());
    var $78 = Control_Monad_State_Class.state(dictMonadState);
    return function ($79) {
      return $77($78($79));
    };
  }());
};

var monadTellReaderT = function monadTellReaderT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadReaderT(dictMonadTell.Monad1());
  }, dictMonadTell.Semigroup0, function () {
    var $80 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad1());
    var $81 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($82) {
      return $80($81($82));
    };
  }());
};

var monadWriterReaderT = function monadWriterReaderT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellReaderT(dictMonadWriter.MonadTell1());
  }, dictMonadWriter.Monoid0, mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)), mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)));
};

var monadThrowReaderT = function monadThrowReaderT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadReaderT(dictMonadThrow.Monad0());
  }, function () {
    var $83 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0());
    var $84 = Control_Monad_Error_Class.throwError(dictMonadThrow);
    return function ($85) {
      return $83($84($85));
    };
  }());
};

var monadErrorReaderT = function monadErrorReaderT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowReaderT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return function (r) {
        return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {
          var v1 = h(e);
          return v1(r);
        });
      };
    };
  });
};

var monoidReaderT = function monoidReaderT(dictApplicative) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
  };
};

var altReaderT = function altReaderT(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorReaderT(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return function (r) {
        return Control_Alt.alt(dictAlt)(v(r))(v1(r));
      };
    };
  });
};

var plusReaderT = function plusReaderT(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altReaderT(dictPlus.Alt0());
  }, Data_Function["const"](Control_Plus.empty(dictPlus)));
};

var alternativeReaderT = function alternativeReaderT(dictAlternative) {
  return new Control_Alternative.Alternative(function () {
    return applicativeReaderT(dictAlternative.Applicative0());
  }, function () {
    return plusReaderT(dictAlternative.Plus1());
  });
};

var monadPlusReaderT = function monadPlusReaderT(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return alternativeReaderT(dictMonadPlus.Alternative1());
  }, function () {
    return monadReaderT(dictMonadPlus.Monad0());
  });
};

var monadZeroReaderT = function monadZeroReaderT(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeReaderT(dictMonadZero.Alternative1());
  }, function () {
    return monadReaderT(dictMonadZero.Monad0());
  }, function () {
    return undefined;
  });
};

module.exports = {
  ReaderT: ReaderT,
  runReaderT: runReaderT,
  withReaderT: withReaderT,
  mapReaderT: mapReaderT,
  newtypeReaderT: newtypeReaderT,
  functorReaderT: functorReaderT,
  applyReaderT: applyReaderT,
  applicativeReaderT: applicativeReaderT,
  altReaderT: altReaderT,
  plusReaderT: plusReaderT,
  alternativeReaderT: alternativeReaderT,
  bindReaderT: bindReaderT,
  monadReaderT: monadReaderT,
  monadZeroReaderT: monadZeroReaderT,
  semigroupReaderT: semigroupReaderT,
  monoidReaderT: monoidReaderT,
  monadPlusReaderT: monadPlusReaderT,
  monadTransReaderT: monadTransReaderT,
  monadEffectReader: monadEffectReader,
  monadContReaderT: monadContReaderT,
  monadThrowReaderT: monadThrowReaderT,
  monadErrorReaderT: monadErrorReaderT,
  monadAskReaderT: monadAskReaderT,
  monadReaderReaderT: monadReaderReaderT,
  monadStateReaderT: monadStateReaderT,
  monadTellReaderT: monadTellReaderT,
  monadWriterReaderT: monadWriterReaderT,
  distributiveReaderT: distributiveReaderT,
  monadRecReaderT: monadRecReaderT,
  MonadAsk: Control_Monad_Reader_Class.MonadAsk,
  MonadReader: Control_Monad_Reader_Class.MonadReader,
  ask: Control_Monad_Reader_Class.ask,
  asks: Control_Monad_Reader_Class.asks,
  local: Control_Monad_Reader_Class.local,
  MonadTrans: Control_Monad_Trans_Class.MonadTrans,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Control.Monad.Cont.Class/index.js":"IpNh","../Control.Monad.Error.Class/index.js":"L8Lk","../Control.Monad.Reader.Class/index.js":"c2ZJ","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.Monad.Writer.Class/index.js":"gxgA","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Distributive/index.js":"PTuN","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Effect.Class/index.js":"dWtH"}],"KpW9":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var StateT = function StateT(x) {
  return x;
};

var withStateT = function withStateT(f) {
  return function (v) {
    return function ($106) {
      return v(f($106));
    };
  };
};

var runStateT = function runStateT(v) {
  return v;
};

var newtypeStateT = new Data_Newtype.Newtype(function () {
  return undefined;
});
var monadTransStateT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return function (s) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(function (x) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
      });
    };
  };
});

var mapStateT = function mapStateT(f) {
  return function (v) {
    return function ($107) {
      return f(v($107));
    };
  };
};

var lazyStateT = new Control_Lazy.Lazy(function (f) {
  return function (s) {
    var v = f(Data_Unit.unit);
    return v(s);
  };
});

var functorStateT = function functorStateT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (s) {
        return Data_Functor.map(dictFunctor)(function (v1) {
          return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
        })(v(s));
      };
    };
  });
};

var execStateT = function execStateT(dictFunctor) {
  return function (v) {
    return function (s) {
      return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v(s));
    };
  };
};

var evalStateT = function evalStateT(dictFunctor) {
  return function (v) {
    return function (s) {
      return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
    };
  };
};

var monadStateT = function monadStateT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeStateT(dictMonad);
  }, function () {
    return bindStateT(dictMonad);
  });
};

var bindStateT = function bindStateT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyStateT(dictMonad);
  }, function (v) {
    return function (f) {
      return function (s) {
        return Control_Bind.bind(dictMonad.Bind1())(v(s))(function (v1) {
          var v3 = f(v1.value0);
          return v3(v1.value1);
        });
      };
    };
  });
};

var applyStateT = function applyStateT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorStateT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadStateT(dictMonad)));
};

var applicativeStateT = function applicativeStateT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyStateT(dictMonad);
  }, function (a) {
    return function (s) {
      return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
    };
  });
};

var semigroupStateT = function semigroupStateT(dictMonad) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyStateT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
  };
};

var monadAskStateT = function monadAskStateT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadStateT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderStateT = function monadReaderStateT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskStateT(dictMonadReader.MonadAsk0());
  }, function () {
    var $108 = Control_Monad_Reader_Class.local(dictMonadReader);
    return function ($109) {
      return mapStateT($108($109));
    };
  }());
};

var monadContStateT = function monadContStateT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadStateT(dictMonadCont.Monad0());
  }, function (f) {
    return function (s) {
      return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function (a) {
          return function (s$prime) {
            return c(new Data_Tuple.Tuple(a, s$prime));
          };
        });
        return v(s);
      });
    };
  });
};

var monadEffectState = function monadEffectState(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadStateT(dictMonadEffect.Monad0());
  }, function () {
    var $110 = Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadEffect.Monad0());
    var $111 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($112) {
      return $110($111($112));
    };
  }());
};

var monadRecStateT = function monadRecStateT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadStateT(dictMonadRec.Monad0());
  }, function (f) {
    return function (a) {
      var f$prime = function f$prime(v) {
        var v1 = f(v.value0);
        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1(v.value1))(function (v2) {
          return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
            if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) {
              return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));
            }

            ;

            if (v2.value0 instanceof Control_Monad_Rec_Class.Done) {
              return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.State.Trans (line 88, column 16 - line 90, column 40): " + [v2.value0.constructor.name]);
          }());
        });
      };

      return function (s) {
        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, s));
      };
    };
  });
};

var monadStateStateT = function monadStateStateT(dictMonad) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadStateT(dictMonad);
  }, function (f) {
    return StateT(function () {
      var $113 = Control_Applicative.pure(dictMonad.Applicative0());
      return function ($114) {
        return $113(f($114));
      };
    }());
  });
};

var monadTellStateT = function monadTellStateT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadStateT(dictMonadTell.Monad1());
  }, dictMonadTell.Semigroup0, function () {
    var $115 = Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadTell.Monad1());
    var $116 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($117) {
      return $115($116($117));
    };
  }());
};

var monadWriterStateT = function monadWriterStateT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellStateT(dictMonadWriter.MonadTell1());
  }, dictMonadWriter.Monoid0, function (m) {
    return function (s) {
      return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m(s)))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
      });
    };
  }, function (m) {
    return function (s) {
      return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m(s))(function (v) {
        return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));
      }));
    };
  });
};

var monadThrowStateT = function monadThrowStateT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadStateT(dictMonadThrow.Monad0());
  }, function (e) {
    return Control_Monad_Trans_Class.lift(monadTransStateT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
  });
};

var monadErrorStateT = function monadErrorStateT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowStateT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return function (s) {
        return Control_Monad_Error_Class.catchError(dictMonadError)(v(s))(function (e) {
          var v1 = h(e);
          return v1(s);
        });
      };
    };
  });
};

var monoidStateT = function monoidStateT(dictMonad) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupStateT(dictMonad)(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeStateT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
  };
};

var altStateT = function altStateT(dictMonad) {
  return function (dictAlt) {
    return new Control_Alt.Alt(function () {
      return functorStateT(dictAlt.Functor0());
    }, function (v) {
      return function (v1) {
        return function (s) {
          return Control_Alt.alt(dictAlt)(v(s))(v1(s));
        };
      };
    });
  };
};

var plusStateT = function plusStateT(dictMonad) {
  return function (dictPlus) {
    return new Control_Plus.Plus(function () {
      return altStateT(dictMonad)(dictPlus.Alt0());
    }, function (v) {
      return Control_Plus.empty(dictPlus);
    });
  };
};

var alternativeStateT = function alternativeStateT(dictMonad) {
  return function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeStateT(dictMonad);
    }, function () {
      return plusStateT(dictMonad)(dictAlternative.Plus1());
    });
  };
};

var monadPlusStateT = function monadPlusStateT(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return alternativeStateT(dictMonadPlus.Monad0())(dictMonadPlus.Alternative1());
  }, function () {
    return monadStateT(dictMonadPlus.Monad0());
  });
};

var monadZeroStateT = function monadZeroStateT(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeStateT(dictMonadZero.Monad0())(dictMonadZero.Alternative1());
  }, function () {
    return monadStateT(dictMonadZero.Monad0());
  }, function () {
    return undefined;
  });
};

module.exports = {
  StateT: StateT,
  runStateT: runStateT,
  evalStateT: evalStateT,
  execStateT: execStateT,
  mapStateT: mapStateT,
  withStateT: withStateT,
  newtypeStateT: newtypeStateT,
  functorStateT: functorStateT,
  applyStateT: applyStateT,
  applicativeStateT: applicativeStateT,
  altStateT: altStateT,
  plusStateT: plusStateT,
  alternativeStateT: alternativeStateT,
  bindStateT: bindStateT,
  monadStateT: monadStateT,
  monadRecStateT: monadRecStateT,
  monadZeroStateT: monadZeroStateT,
  monadPlusStateT: monadPlusStateT,
  monadTransStateT: monadTransStateT,
  lazyStateT: lazyStateT,
  monadEffectState: monadEffectState,
  monadContStateT: monadContStateT,
  monadThrowStateT: monadThrowStateT,
  monadErrorStateT: monadErrorStateT,
  monadAskStateT: monadAskStateT,
  monadReaderStateT: monadReaderStateT,
  monadStateStateT: monadStateStateT,
  monadTellStateT: monadTellStateT,
  monadWriterStateT: monadWriterStateT,
  semigroupStateT: semigroupStateT,
  monoidStateT: monoidStateT,
  MonadState: Control_Monad_State_Class.MonadState,
  get: Control_Monad_State_Class.get,
  gets: Control_Monad_State_Class.gets,
  modify: Control_Monad_State_Class.modify,
  modify_: Control_Monad_State_Class.modify_,
  put: Control_Monad_State_Class.put,
  state: Control_Monad_State_Class.state,
  MonadTrans: Control_Monad_Trans_Class.MonadTrans,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Lazy/index.js":"y9cE","../Control.Monad/index.js":"UIxr","../Control.Monad.Cont.Class/index.js":"IpNh","../Control.Monad.Error.Class/index.js":"L8Lk","../Control.Monad.Reader.Class/index.js":"c2ZJ","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.Monad.Writer.Class/index.js":"gxgA","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk","../Effect.Class/index.js":"dWtH"}],"VAds":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var WriterT = function WriterT(x) {
  return x;
};

var runWriterT = function runWriterT(v) {
  return v;
};

var newtypeWriterT = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monadTransWriterT = function monadTransWriterT(dictMonoid) {
  return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
    return function (m) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(function (a) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid)));
      });
    };
  });
};

var mapWriterT = function mapWriterT(f) {
  return function (v) {
    return f(v);
  };
};

var functorWriterT = function functorWriterT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
      return new Data_Tuple.Tuple(f(v.value0), v.value1);
    }));
  });
};

var execWriterT = function execWriterT(dictFunctor) {
  return function (v) {
    return Data_Functor.map(dictFunctor)(Data_Tuple.snd)(v);
  };
};

var applyWriterT = function applyWriterT(dictSemigroup) {
  return function (dictApply) {
    return new Control_Apply.Apply(function () {
      return functorWriterT(dictApply.Functor0());
    }, function (v) {
      return function (v1) {
        var k = function k(v3) {
          return function (v4) {
            return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
          };
        };

        return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
      };
    });
  };
};

var bindWriterT = function bindWriterT(dictSemigroup) {
  return function (dictBind) {
    return new Control_Bind.Bind(function () {
      return applyWriterT(dictSemigroup)(dictBind.Apply0());
    }, function (v) {
      return function (k) {
        return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
          var v2 = k(v1.value0);
          return Data_Functor.map(dictBind.Apply0().Functor0())(function (v3) {
            return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
          })(v2);
        }));
      };
    });
  };
};

var semigroupWriterT = function semigroupWriterT(dictApply) {
  return function (dictSemigroup) {
    return function (dictSemigroup1) {
      return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyWriterT(dictSemigroup)(dictApply))(Data_Semigroup.append(dictSemigroup1)));
    };
  };
};

var applicativeWriterT = function applicativeWriterT(dictMonoid) {
  return function (dictApplicative) {
    return new Control_Applicative.Applicative(function () {
      return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
    }, function (a) {
      return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
    });
  };
};

var monadWriterT = function monadWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
    }, function () {
      return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
    });
  };
};

var monadAskWriterT = function monadAskWriterT(dictMonoid) {
  return function (dictMonadAsk) {
    return new Control_Monad_Reader_Class.MonadAsk(function () {
      return monadWriterT(dictMonoid)(dictMonadAsk.Monad0());
    }, Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
  };
};

var monadReaderWriterT = function monadReaderWriterT(dictMonoid) {
  return function (dictMonadReader) {
    return new Control_Monad_Reader_Class.MonadReader(function () {
      return monadAskWriterT(dictMonoid)(dictMonadReader.MonadAsk0());
    }, function (f) {
      return mapWriterT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
    });
  };
};

var monadContWriterT = function monadContWriterT(dictMonoid) {
  return function (dictMonadCont) {
    return new Control_Monad_Cont_Class.MonadCont(function () {
      return monadWriterT(dictMonoid)(dictMonadCont.Monad0());
    }, function (f) {
      return WriterT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
        var v = f(function (a) {
          return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
        });
        return v;
      }));
    });
  };
};

var monadEffectWriter = function monadEffectWriter(dictMonoid) {
  return function (dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadWriterT(dictMonoid)(dictMonadEffect.Monad0());
    }, function () {
      var $124 = Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadEffect.Monad0());
      var $125 = Effect_Class.liftEffect(dictMonadEffect);
      return function ($126) {
        return $124($125($126));
      };
    }());
  };
};

var monadRecWriterT = function monadRecWriterT(dictMonoid) {
  return function (dictMonadRec) {
    return new Control_Monad_Rec_Class.MonadRec(function () {
      return monadWriterT(dictMonoid)(dictMonadRec.Monad0());
    }, function (f) {
      return function (a) {
        var f$prime = function f$prime(v) {
          var v1 = f(v.value0);
          return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v1)(function (v2) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
              if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) {
                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v2.value1)));
              }

              ;

              if (v2.value0 instanceof Control_Monad_Rec_Class.Done) {
                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, Data_Semigroup.append(dictMonoid.Semigroup0())(v.value1)(v2.value1)));
              }

              ;
              throw new Error("Failed pattern match at Control.Monad.Writer.Trans (line 84, column 16 - line 86, column 47): " + [v2.value0.constructor.name]);
            }());
          });
        };

        return WriterT(Control_Monad_Rec_Class.tailRecM(dictMonadRec)(f$prime)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
      };
    });
  };
};

var monadStateWriterT = function monadStateWriterT(dictMonoid) {
  return function (dictMonadState) {
    return new Control_Monad_State_Class.MonadState(function () {
      return monadWriterT(dictMonoid)(dictMonadState.Monad0());
    }, function (f) {
      return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
    });
  };
};

var monadTellWriterT = function monadTellWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad_Writer_Class.MonadTell(function () {
      return monadWriterT(dictMonoid)(dictMonad);
    }, dictMonoid.Semigroup0, function () {
      var $127 = Control_Applicative.pure(dictMonad.Applicative0());
      var $128 = Data_Tuple.Tuple.create(Data_Unit.unit);
      return function ($129) {
        return WriterT($127($128($129)));
      };
    }());
  };
};

var monadWriterWriterT = function monadWriterWriterT(dictMonoid) {
  return function (dictMonad) {
    return new Control_Monad_Writer_Class.MonadWriter(function () {
      return monadTellWriterT(dictMonoid)(dictMonad);
    }, function () {
      return dictMonoid;
    }, function (v) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1), v1.value1));
      });
    }, function (v) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1(v1.value1)));
      });
    });
  };
};

var monadThrowWriterT = function monadThrowWriterT(dictMonoid) {
  return function (dictMonadThrow) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadWriterT(dictMonoid)(dictMonadThrow.Monad0());
    }, function (e) {
      return Control_Monad_Trans_Class.lift(monadTransWriterT(dictMonoid))(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
    });
  };
};

var monadErrorWriterT = function monadErrorWriterT(dictMonoid) {
  return function (dictMonadError) {
    return new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowWriterT(dictMonoid)(dictMonadError.MonadThrow0());
    }, function (v) {
      return function (h) {
        return WriterT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (e) {
          var v1 = h(e);
          return v1;
        }));
      };
    });
  };
};

var monoidWriterT = function monoidWriterT(dictApplicative) {
  return function (dictMonoid) {
    return function (dictMonoid1) {
      return new Data_Monoid.Monoid(function () {
        return semigroupWriterT(dictApplicative.Apply0())(dictMonoid.Semigroup0())(dictMonoid1.Semigroup0());
      }, Control_Applicative.pure(applicativeWriterT(dictMonoid)(dictApplicative))(Data_Monoid.mempty(dictMonoid1)));
    };
  };
};

var altWriterT = function altWriterT(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorWriterT(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Alt.alt(dictAlt)(v)(v1);
    };
  });
};

var plusWriterT = function plusWriterT(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altWriterT(dictPlus.Alt0());
  }, Control_Plus.empty(dictPlus));
};

var alternativeWriterT = function alternativeWriterT(dictMonoid) {
  return function (dictAlternative) {
    return new Control_Alternative.Alternative(function () {
      return applicativeWriterT(dictMonoid)(dictAlternative.Applicative0());
    }, function () {
      return plusWriterT(dictAlternative.Plus1());
    });
  };
};

var monadPlusWriterT = function monadPlusWriterT(dictMonoid) {
  return function (dictMonadPlus) {
    return new Control_MonadPlus.MonadPlus(function () {
      return alternativeWriterT(dictMonoid)(dictMonadPlus.Alternative1());
    }, function () {
      return monadWriterT(dictMonoid)(dictMonadPlus.Monad0());
    });
  };
};

var monadZeroWriterT = function monadZeroWriterT(dictMonoid) {
  return function (dictMonadZero) {
    return new Control_MonadZero.MonadZero(function () {
      return alternativeWriterT(dictMonoid)(dictMonadZero.Alternative1());
    }, function () {
      return monadWriterT(dictMonoid)(dictMonadZero.Monad0());
    }, function () {
      return undefined;
    });
  };
};

module.exports = {
  WriterT: WriterT,
  runWriterT: runWriterT,
  execWriterT: execWriterT,
  mapWriterT: mapWriterT,
  newtypeWriterT: newtypeWriterT,
  functorWriterT: functorWriterT,
  applyWriterT: applyWriterT,
  applicativeWriterT: applicativeWriterT,
  altWriterT: altWriterT,
  plusWriterT: plusWriterT,
  alternativeWriterT: alternativeWriterT,
  bindWriterT: bindWriterT,
  monadWriterT: monadWriterT,
  monadRecWriterT: monadRecWriterT,
  monadZeroWriterT: monadZeroWriterT,
  monadPlusWriterT: monadPlusWriterT,
  monadTransWriterT: monadTransWriterT,
  monadEffectWriter: monadEffectWriter,
  monadContWriterT: monadContWriterT,
  monadThrowWriterT: monadThrowWriterT,
  monadErrorWriterT: monadErrorWriterT,
  monadAskWriterT: monadAskWriterT,
  monadReaderWriterT: monadReaderWriterT,
  monadStateWriterT: monadStateWriterT,
  monadTellWriterT: monadTellWriterT,
  monadWriterWriterT: monadWriterWriterT,
  semigroupWriterT: semigroupWriterT,
  monoidWriterT: monoidWriterT,
  MonadTrans: Control_Monad_Trans_Class.MonadTrans,
  lift: Control_Monad_Trans_Class.lift,
  MonadTell: Control_Monad_Writer_Class.MonadTell,
  MonadWriter: Control_Monad_Writer_Class.MonadWriter,
  censor: Control_Monad_Writer_Class.censor,
  listen: Control_Monad_Writer_Class.listen,
  listens: Control_Monad_Writer_Class.listens,
  pass: Control_Monad_Writer_Class.pass,
  tell: Control_Monad_Writer_Class.tell
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Control.Monad.Cont.Class/index.js":"IpNh","../Control.Monad.Error.Class/index.js":"L8Lk","../Control.Monad.Reader.Class/index.js":"c2ZJ","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.Monad.Writer.Class/index.js":"gxgA","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk","../Effect.Class/index.js":"dWtH"}],"c2nd":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var MultiAlternative = function MultiAlternative(Plus0, orr) {
  this.Plus0 = Plus0;
  this.orr = orr;
};

var orr = function orr(dict) {
  return dict.orr;
};

var readerMultiAlternative = function readerMultiAlternative(dictMultiAlternative) {
  return new MultiAlternative(function () {
    return Control_Monad_Reader_Trans.plusReaderT(dictMultiAlternative.Plus0());
  }, function (rs) {
    return function (r) {
      return orr(dictMultiAlternative)(Data_Functor.map(Data_Functor.functorArray)(function (m) {
        return Data_Newtype.unwrap()(m)(r);
      })(rs));
    };
  });
};

var rwsMultiAlternative = function rwsMultiAlternative(dictMultiAlternative) {
  return new MultiAlternative(function () {
    return Control_Monad_RWS_Trans.plusRWST(dictMultiAlternative.Plus0());
  }, function (rs) {
    return function (r) {
      return function (s) {
        return orr(dictMultiAlternative)(Data_Functor.map(Data_Functor.functorArray)(function (m) {
          return Data_Newtype.unwrap()(m)(r)(s);
        })(rs));
      };
    };
  });
};

var stateMultiAlternative = function stateMultiAlternative(dictMultiAlternative) {
  return function (dictMonad) {
    return new MultiAlternative(function () {
      return Control_Monad_State_Trans.plusStateT(dictMonad)(dictMultiAlternative.Plus0());
    }, function (rs) {
      return function (s) {
        return orr(dictMultiAlternative)(Data_Functor.map(Data_Functor.functorArray)(function (m) {
          return Data_Newtype.unwrap()(m)(s);
        })(rs));
      };
    });
  };
};

var writerMultiAlternative = function writerMultiAlternative(dictMultiAlternative) {
  return new MultiAlternative(function () {
    return Control_Monad_Writer_Trans.plusWriterT(dictMultiAlternative.Plus0());
  }, function (rs) {
    return Control_Monad_Writer_Trans.WriterT(orr(dictMultiAlternative)(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap())(rs)));
  });
};

var defaultOrr = function defaultOrr(dictPlus) {
  return function (xs) {
    return Data_Foldable.foldl(Data_Foldable.foldableArray)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus))(xs);
  };
};

var exceptMultiAlternative = function exceptMultiAlternative(dictMonoid) {
  return function (dictMultiAlternative) {
    return function (dictMonad) {
      return new MultiAlternative(function () {
        return Control_Monad_Except_Trans.plusExceptT(dictMonoid)(dictMonad);
      }, defaultOrr(Control_Monad_Except_Trans.plusExceptT(dictMonoid)(dictMonad)));
    };
  };
};

module.exports = {
  orr: orr,
  MultiAlternative: MultiAlternative,
  defaultOrr: defaultOrr,
  exceptMultiAlternative: exceptMultiAlternative,
  rwsMultiAlternative: rwsMultiAlternative,
  readerMultiAlternative: readerMultiAlternative,
  stateMultiAlternative: stateMultiAlternative,
  writerMultiAlternative: writerMultiAlternative
};
},{"../Control.Alt/index.js":"lNMK","../Control.Monad.Except.Trans/index.js":"gr8B","../Control.Monad.RWS.Trans/index.js":"Fynn","../Control.Monad.Reader.Trans/index.js":"uvht","../Control.Monad.State.Trans/index.js":"KpW9","../Control.Monad.Writer.Trans/index.js":"VAds","../Control.Plus/index.js":"oMBg","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.Newtype/index.js":"lz8k"}],"XW2d":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var ContT = function ContT(x) {
  return x;
};

var withContT = function withContT(f) {
  return function (v) {
    return function (k) {
      return v(f(k));
    };
  };
};

var runContT = function runContT(v) {
  return function (k) {
    return v(k);
  };
};

var newtypeContT = new Data_Newtype.Newtype(function () {
  return undefined;
});
var monadTransContT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return function (m) {
    return function (k) {
      return Control_Bind.bind(dictMonad.Bind1())(m)(k);
    };
  };
});

var mapContT = function mapContT(f) {
  return function (v) {
    return function (k) {
      return f(v(k));
    };
  };
};

var functorContT = function functorContT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return function (k) {
        return v(function (a) {
          return k(f(a));
        });
      };
    };
  });
};

var applyContT = function applyContT(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorContT(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return function (k) {
        return v(function (g) {
          return v1(function (a) {
            return k(g(a));
          });
        });
      };
    };
  });
};

var bindContT = function bindContT(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyContT(dictBind.Apply0());
  }, function (v) {
    return function (k) {
      return function (k$prime) {
        return v(function (a) {
          var v1 = k(a);
          return v1(k$prime);
        });
      };
    };
  });
};

var semigroupContT = function semigroupContT(dictApply) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyContT(dictApply))(Data_Semigroup.append(dictSemigroup)));
  };
};

var applicativeContT = function applicativeContT(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyContT(dictApplicative.Apply0());
  }, function (a) {
    return function (k) {
      return k(a);
    };
  });
};

var monadContT = function monadContT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeContT(dictMonad.Applicative0());
  }, function () {
    return bindContT(dictMonad.Bind1());
  });
};

var monadAskContT = function monadAskContT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadContT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderContT = function monadReaderContT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskContT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return function (v) {
      return function (k) {
        return Control_Bind.bind(dictMonadReader.MonadAsk0().Monad0().Bind1())(Control_Monad_Reader_Class.ask(dictMonadReader.MonadAsk0()))(function (r) {
          return Control_Monad_Reader_Class.local(dictMonadReader)(f)(v(function () {
            var $44 = Control_Monad_Reader_Class.local(dictMonadReader)(Data_Function["const"](r));
            return function ($45) {
              return $44(k($45));
            };
          }()));
        });
      };
    };
  });
};

var monadContContT = function monadContContT(dictMonad) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadContT(dictMonad);
  }, function (f) {
    return function (k) {
      var v = f(function (a) {
        return function (v1) {
          return k(a);
        };
      });
      return v(k);
    };
  });
};

var monadEffectContT = function monadEffectContT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadContT(dictMonadEffect.Monad0());
  }, function () {
    var $46 = Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadEffect.Monad0());
    var $47 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($48) {
      return $46($47($48));
    };
  }());
};

var monadStateContT = function monadStateContT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadContT(dictMonadState.Monad0());
  }, function () {
    var $49 = Control_Monad_Trans_Class.lift(monadTransContT)(dictMonadState.Monad0());
    var $50 = Control_Monad_State_Class.state(dictMonadState);
    return function ($51) {
      return $49($50($51));
    };
  }());
};

var monoidContT = function monoidContT(dictApplicative) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupContT(dictApplicative.Apply0())(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeContT(dictApplicative))(Data_Monoid.mempty(dictMonoid)));
  };
};

module.exports = {
  ContT: ContT,
  runContT: runContT,
  mapContT: mapContT,
  withContT: withContT,
  newtypeContT: newtypeContT,
  monadContContT: monadContContT,
  functorContT: functorContT,
  applyContT: applyContT,
  applicativeContT: applicativeContT,
  bindContT: bindContT,
  monadContT: monadContT,
  monadTransContT: monadTransContT,
  monadEffectContT: monadEffectContT,
  monadAskContT: monadAskContT,
  monadReaderContT: monadReaderContT,
  monadStateContT: monadStateContT,
  semigroupContT: semigroupContT,
  monoidContT: monoidContT,
  MonadCont: Control_Monad_Cont_Class.MonadCont,
  callCC: Control_Monad_Cont_Class.callCC,
  MonadTrans: Control_Monad_Trans_Class.MonadTrans,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Control.Monad.Cont.Class/index.js":"IpNh","../Control.Monad.Reader.Class/index.js":"c2ZJ","../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.Trans.Class/index.js":"tIRA","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Effect.Class/index.js":"dWtH"}],"UUIS":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Class = require("../Control.Monad.Writer.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var MaybeT = function MaybeT(x) {
  return x;
};

var runMaybeT = function runMaybeT(v) {
  return v;
};

var newtypeMaybeT = new Data_Newtype.Newtype(function () {
  return undefined;
});
var monadTransMaybeT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  var $72 = Control_Monad.liftM1(dictMonad)(Data_Maybe.Just.create);
  return function ($73) {
    return MaybeT($72($73));
  };
});

var mapMaybeT = function mapMaybeT(f) {
  return function (v) {
    return f(v);
  };
};

var functorMaybeT = function functorMaybeT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      return Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v);
    };
  });
};

var monadMaybeT = function monadMaybeT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeMaybeT(dictMonad);
  }, function () {
    return bindMaybeT(dictMonad);
  });
};

var bindMaybeT = function bindMaybeT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyMaybeT(dictMonad);
  }, function (v) {
    return function (f) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          var v2 = f(v1.value0);
          return v2;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 55, column 11 - line 57, column 42): " + [v1.constructor.name]);
      });
    };
  });
};

var applyMaybeT = function applyMaybeT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadMaybeT(dictMonad)));
};

var applicativeMaybeT = function applicativeMaybeT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyMaybeT(dictMonad);
  }, function () {
    var $74 = Control_Applicative.pure(dictMonad.Applicative0());
    return function ($75) {
      return MaybeT($74(Data_Maybe.Just.create($75)));
    };
  }());
};

var semigroupMaybeT = function semigroupMaybeT(dictMonad) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyMaybeT(dictMonad))(Data_Semigroup.append(dictSemigroup)));
  };
};

var monadAskMaybeT = function monadAskMaybeT(dictMonadAsk) {
  return new Control_Monad_Reader_Class.MonadAsk(function () {
    return monadMaybeT(dictMonadAsk.Monad0());
  }, Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)));
};

var monadReaderMaybeT = function monadReaderMaybeT(dictMonadReader) {
  return new Control_Monad_Reader_Class.MonadReader(function () {
    return monadAskMaybeT(dictMonadReader.MonadAsk0());
  }, function (f) {
    return mapMaybeT(Control_Monad_Reader_Class.local(dictMonadReader)(f));
  });
};

var monadContMaybeT = function monadContMaybeT(dictMonadCont) {
  return new Control_Monad_Cont_Class.MonadCont(function () {
    return monadMaybeT(dictMonadCont.Monad0());
  }, function (f) {
    return MaybeT(Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {
      var v = f(function (a) {
        return MaybeT(c(new Data_Maybe.Just(a)));
      });
      return v;
    }));
  });
};

var monadEffectMaybe = function monadEffectMaybe(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadMaybeT(dictMonadEffect.Monad0());
  }, function () {
    var $76 = Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadEffect.Monad0());
    var $77 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($78) {
      return $76($77($78));
    };
  }());
};

var monadRecMaybeT = function monadRecMaybeT(dictMonadRec) {
  return new Control_Monad_Rec_Class.MonadRec(function () {
    return monadMaybeT(dictMonadRec.Monad0());
  }, function (f) {
    var $79 = Control_Monad_Rec_Class.tailRecM(dictMonadRec)(function (a) {
      var v = f(a);
      return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v)(function (m$prime) {
        return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(function () {
          if (m$prime instanceof Data_Maybe.Nothing) {
            return new Control_Monad_Rec_Class.Done(Data_Maybe.Nothing.value);
          }

          ;

          if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Loop) {
            return new Control_Monad_Rec_Class.Loop(m$prime.value0.value0);
          }

          ;

          if (m$prime instanceof Data_Maybe.Just && m$prime.value0 instanceof Control_Monad_Rec_Class.Done) {
            return new Control_Monad_Rec_Class.Done(new Data_Maybe.Just(m$prime.value0.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 85, column 16 - line 88, column 43): " + [m$prime.constructor.name]);
        }());
      });
    });
    return function ($80) {
      return MaybeT($79($80));
    };
  });
};

var monadStateMaybeT = function monadStateMaybeT(dictMonadState) {
  return new Control_Monad_State_Class.MonadState(function () {
    return monadMaybeT(dictMonadState.Monad0());
  }, function (f) {
    return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadState.Monad0())(Control_Monad_State_Class.state(dictMonadState)(f));
  });
};

var monadTellMaybeT = function monadTellMaybeT(dictMonadTell) {
  return new Control_Monad_Writer_Class.MonadTell(function () {
    return monadMaybeT(dictMonadTell.Monad1());
  }, dictMonadTell.Semigroup0, function () {
    var $81 = Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadTell.Monad1());
    var $82 = Control_Monad_Writer_Class.tell(dictMonadTell);
    return function ($83) {
      return $81($82($83));
    };
  }());
};

var monadWriterMaybeT = function monadWriterMaybeT(dictMonadWriter) {
  return new Control_Monad_Writer_Class.MonadWriter(function () {
    return monadTellMaybeT(dictMonadWriter.MonadTell1());
  }, dictMonadWriter.Monoid0, mapMaybeT(function (m) {
    return Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(Control_Monad_Writer_Class.listen(dictMonadWriter)(m))(function (v) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(Data_Functor.map(Data_Maybe.functorMaybe)(function (r) {
        return new Data_Tuple.Tuple(r, v.value1);
      })(v.value0));
    });
  }), mapMaybeT(function (m) {
    return Control_Monad_Writer_Class.pass(dictMonadWriter)(Control_Bind.bind(dictMonadWriter.MonadTell1().Monad1().Bind1())(m)(function (a) {
      return Control_Applicative.pure(dictMonadWriter.MonadTell1().Monad1().Applicative0())(function () {
        if (a instanceof Data_Maybe.Nothing) {
          return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Control_Category.identity(Control_Category.categoryFn));
        }

        ;

        if (a instanceof Data_Maybe.Just) {
          return new Data_Tuple.Tuple(new Data_Maybe.Just(a.value0.value0), a.value0.value1);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Maybe.Trans (line 122, column 10 - line 124, column 43): " + [a.constructor.name]);
      }());
    }));
  }));
};

var monadThrowMaybeT = function monadThrowMaybeT(dictMonadThrow) {
  return new Control_Monad_Error_Class.MonadThrow(function () {
    return monadMaybeT(dictMonadThrow.Monad0());
  }, function (e) {
    return Control_Monad_Trans_Class.lift(monadTransMaybeT)(dictMonadThrow.Monad0())(Control_Monad_Error_Class.throwError(dictMonadThrow)(e));
  });
};

var monadErrorMaybeT = function monadErrorMaybeT(dictMonadError) {
  return new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowMaybeT(dictMonadError.MonadThrow0());
  }, function (v) {
    return function (h) {
      return MaybeT(Control_Monad_Error_Class.catchError(dictMonadError)(v)(function (a) {
        var v1 = h(a);
        return v1;
      }));
    };
  });
};

var monoidMaybeT = function monoidMaybeT(dictMonad) {
  return function (dictMonoid) {
    return new Data_Monoid.Monoid(function () {
      return semigroupMaybeT(dictMonad)(dictMonoid.Semigroup0());
    }, Control_Applicative.pure(applicativeMaybeT(dictMonad))(Data_Monoid.mempty(dictMonoid)));
  };
};

var altMaybeT = function altMaybeT(dictMonad) {
  return new Control_Alt.Alt(function () {
    return functorMaybeT(dictMonad.Bind1().Apply0().Functor0());
  }, function (v) {
    return function (v1) {
      return Control_Bind.bind(dictMonad.Bind1())(v)(function (m) {
        if (m instanceof Data_Maybe.Nothing) {
          return v1;
        }

        ;
        return Control_Applicative.pure(dictMonad.Applicative0())(m);
      });
    };
  });
};

var plusMaybeT = function plusMaybeT(dictMonad) {
  return new Control_Plus.Plus(function () {
    return altMaybeT(dictMonad);
  }, Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value));
};

var alternativeMaybeT = function alternativeMaybeT(dictMonad) {
  return new Control_Alternative.Alternative(function () {
    return applicativeMaybeT(dictMonad);
  }, function () {
    return plusMaybeT(dictMonad);
  });
};

var monadPlusMaybeT = function monadPlusMaybeT(dictMonad) {
  return new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybeT(dictMonad);
  }, function () {
    return monadMaybeT(dictMonad);
  });
};

var monadZeroMaybeT = function monadZeroMaybeT(dictMonad) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeMaybeT(dictMonad);
  }, function () {
    return monadMaybeT(dictMonad);
  }, function () {
    return undefined;
  });
};

module.exports = {
  MaybeT: MaybeT,
  runMaybeT: runMaybeT,
  mapMaybeT: mapMaybeT,
  newtypeMaybeT: newtypeMaybeT,
  functorMaybeT: functorMaybeT,
  applyMaybeT: applyMaybeT,
  applicativeMaybeT: applicativeMaybeT,
  bindMaybeT: bindMaybeT,
  monadMaybeT: monadMaybeT,
  monadTransMaybeT: monadTransMaybeT,
  altMaybeT: altMaybeT,
  plusMaybeT: plusMaybeT,
  alternativeMaybeT: alternativeMaybeT,
  monadPlusMaybeT: monadPlusMaybeT,
  monadZeroMaybeT: monadZeroMaybeT,
  monadRecMaybeT: monadRecMaybeT,
  monadEffectMaybe: monadEffectMaybe,
  monadContMaybeT: monadContMaybeT,
  monadThrowMaybeT: monadThrowMaybeT,
  monadErrorMaybeT: monadErrorMaybeT,
  monadAskMaybeT: monadAskMaybeT,
  monadReaderMaybeT: monadReaderMaybeT,
  monadStateMaybeT: monadStateMaybeT,
  monadTellMaybeT: monadTellMaybeT,
  monadWriterMaybeT: monadWriterMaybeT,
  semigroupMaybeT: semigroupMaybeT,
  monoidMaybeT: monoidMaybeT,
  MonadTrans: Control_Monad_Trans_Class.MonadTrans,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Monad/index.js":"UIxr","../Control.Monad.Cont.Class/index.js":"IpNh","../Control.Monad.Error.Class/index.js":"L8Lk","../Control.Monad.Reader.Class/index.js":"c2ZJ","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.Monad.Writer.Class/index.js":"gxgA","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Tuple/index.js":"IIOM","../Effect.Class/index.js":"dWtH"}],"tRZm":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Void = require("../Data.Void/index.js");

var Contravariant = function Contravariant(cmap) {
  this.cmap = cmap;
};

var contravariantConst = new Contravariant(function (v) {
  return function (v1) {
    return v1;
  };
});

var cmap = function cmap(dict) {
  return dict.cmap;
};

var cmapFlipped = function cmapFlipped(dictContravariant) {
  return function (x) {
    return function (f) {
      return cmap(dictContravariant)(f)(x);
    };
  };
};

var coerce = function coerce(dictContravariant) {
  return function (dictFunctor) {
    return function (a) {
      return Data_Functor.map(dictFunctor)(Data_Void.absurd)(cmap(dictContravariant)(Data_Void.absurd)(a));
    };
  };
};

var imapC = function imapC(dictContravariant) {
  return function (v) {
    return function (f) {
      return cmap(dictContravariant)(f);
    };
  };
};

module.exports = {
  cmap: cmap,
  Contravariant: Contravariant,
  cmapFlipped: cmapFlipped,
  coerce: coerce,
  imapC: imapC,
  contravariantConst: contravariantConst
};
},{"../Data.Functor/index.js":"AEHo","../Data.Void/index.js":"bncE"}],"DaDq":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Profunctor = function Profunctor(dimap) {
  this.dimap = dimap;
};

var profunctorFn = new Profunctor(function (a2b) {
  return function (c2d) {
    return function (b2c) {
      return function ($9) {
        return c2d(b2c(a2b($9)));
      };
    };
  };
});

var dimap = function dimap(dict) {
  return dict.dimap;
};

var lcmap = function lcmap(dictProfunctor) {
  return function (a2b) {
    return dimap(dictProfunctor)(a2b)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var rmap = function rmap(dictProfunctor) {
  return function (b2c) {
    return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
  };
};

var unwrapIso = function unwrapIso(dictProfunctor) {
  return function (dictNewtype) {
    return dimap(dictProfunctor)(Data_Newtype.wrap())(Data_Newtype.unwrap());
  };
};

var wrapIso = function wrapIso(dictProfunctor) {
  return function (dictNewtype) {
    return function (v) {
      return dimap(dictProfunctor)(Data_Newtype.unwrap())(Data_Newtype.wrap());
    };
  };
};

var arr = function arr(dictCategory) {
  return function (dictProfunctor) {
    return function (f) {
      return rmap(dictProfunctor)(f)(Control_Category.identity(dictCategory));
    };
  };
};

module.exports = {
  dimap: dimap,
  Profunctor: Profunctor,
  lcmap: lcmap,
  rmap: rmap,
  arr: arr,
  unwrapIso: unwrapIso,
  wrapIso: wrapIso,
  profunctorFn: profunctorFn
};
},{"../Control.Category/index.js":"IAi2","../Data.Newtype/index.js":"lz8k"}],"af4y":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Closed = function Closed(Profunctor0, closed) {
  this.Profunctor0 = Profunctor0;
  this.closed = closed;
};

var closedFunction = new Closed(function () {
  return Data_Profunctor.profunctorFn;
}, Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));

var closed = function closed(dict) {
  return dict.closed;
};

module.exports = {
  closed: closed,
  Closed: Closed,
  closedFunction: closedFunction
};
},{"../Control.Semigroupoid/index.js":"riRy","../Data.Profunctor/index.js":"DaDq"}],"w9p6":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Strong = function Strong(Profunctor0, first, second) {
  this.Profunctor0 = Profunctor0;
  this.first = first;
  this.second = second;
};

var strongFn = new Strong(function () {
  return Data_Profunctor.profunctorFn;
}, function (a2b) {
  return function (v) {
    return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
  };
}, Data_Functor.map(Data_Tuple.functorTuple));

var second = function second(dict) {
  return dict.second;
};

var first = function first(dict) {
  return dict.first;
};

var splitStrong = function splitStrong(dictCategory) {
  return function (dictStrong) {
    return function (l) {
      return function (r) {
        return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(first(dictStrong)(l))(second(dictStrong)(r));
      };
    };
  };
};

var fanout = function fanout(dictCategory) {
  return function (dictStrong) {
    return function (l) {
      return function (r) {
        var split = Data_Profunctor.dimap(dictStrong.Profunctor0())(Control_Category.identity(Control_Category.categoryFn))(function (a) {
          return new Data_Tuple.Tuple(a, a);
        })(Control_Category.identity(dictCategory));
        return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(split)(splitStrong(dictCategory)(dictStrong)(l)(r));
      };
    };
  };
};

module.exports = {
  first: first,
  second: second,
  Strong: Strong,
  splitStrong: splitStrong,
  fanout: fanout,
  strongFn: strongFn
};
},{"../Control.Category/index.js":"IAi2","../Control.Semigroupoid/index.js":"riRy","../Data.Functor/index.js":"AEHo","../Data.Profunctor/index.js":"DaDq","../Data.Tuple/index.js":"IIOM"}],"XHlw":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Contravariant = require("../Data.Functor.Contravariant/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Costar = function Costar(x) {
  return x;
};

var semigroupoidCostar = function semigroupoidCostar(dictExtend) {
  return new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
      return Control_Extend.composeCoKleisliFlipped(dictExtend)(v)(v1);
    };
  });
};

var profunctorCostar = function profunctorCostar(dictFunctor) {
  return new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        var $46 = Data_Functor.map(dictFunctor)(f);
        return function ($47) {
          return g(v($46($47)));
        };
      };
    };
  });
};

var strongCostar = function strongCostar(dictComonad) {
  return new Data_Profunctor_Strong.Strong(function () {
    return profunctorCostar(dictComonad.Extend0().Functor0());
  }, function (v) {
    return function (x) {
      return new Data_Tuple.Tuple(v(Data_Functor.map(dictComonad.Extend0().Functor0())(Data_Tuple.fst)(x)), Data_Tuple.snd(Control_Comonad.extract(dictComonad)(x)));
    };
  }, function (v) {
    return function (x) {
      return new Data_Tuple.Tuple(Data_Tuple.fst(Control_Comonad.extract(dictComonad)(x)), v(Data_Functor.map(dictComonad.Extend0().Functor0())(Data_Tuple.snd)(x)));
    };
  });
};

var newtypeCostar = new Data_Newtype.Newtype(function () {
  return undefined;
});

var hoistCostar = function hoistCostar(f) {
  return function (v) {
    return Data_Profunctor.lcmap(Data_Profunctor.profunctorFn)(f)(v);
  };
};

var functorCostar = new Data_Functor.Functor(function (f) {
  return function (v) {
    return function ($48) {
      return f(v($48));
    };
  };
});
var invariantCostar = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorCostar));
var distributiveCostar = new Data_Distributive.Distributive(function () {
  return functorCostar;
}, function (dictFunctor) {
  return function (f) {
    var $49 = Data_Distributive.distribute(distributiveCostar)(dictFunctor);
    var $50 = Data_Functor.map(dictFunctor)(f);
    return function ($51) {
      return $49($50($51));
    };
  };
}, function (dictFunctor) {
  return function (f) {
    return function (a) {
      return Data_Functor.map(dictFunctor)(function (v) {
        return v(a);
      })(f);
    };
  };
});

var closedCostar = function closedCostar(dictFunctor) {
  return new Data_Profunctor_Closed.Closed(function () {
    return profunctorCostar(dictFunctor);
  }, function (v) {
    return function (g) {
      return function (x) {
        return v(Data_Functor.map(dictFunctor)(function (v1) {
          return v1(x);
        })(g));
      };
    };
  });
};

var categoryCostar = function categoryCostar(dictComonad) {
  return new Control_Category.Category(function () {
    return semigroupoidCostar(dictComonad.Extend0());
  }, Control_Comonad.extract(dictComonad));
};

var bifunctorCostar = function bifunctorCostar(dictContravariant) {
  return new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        var $52 = Data_Functor_Contravariant.cmap(dictContravariant)(f);
        return function ($53) {
          return g(v($52($53)));
        };
      };
    };
  });
};

var applyCostar = new Control_Apply.Apply(function () {
  return functorCostar;
}, function (v) {
  return function (v1) {
    return function (a) {
      return v(a)(v1(a));
    };
  };
});
var bindCostar = new Control_Bind.Bind(function () {
  return applyCostar;
}, function (v) {
  return function (f) {
    return function (x) {
      var v1 = f(v(x));
      return v1(x);
    };
  };
});
var applicativeCostar = new Control_Applicative.Applicative(function () {
  return applyCostar;
}, function (a) {
  return function (v) {
    return a;
  };
});
var monadCostar = new Control_Monad.Monad(function () {
  return applicativeCostar;
}, function () {
  return bindCostar;
});
module.exports = {
  Costar: Costar,
  hoistCostar: hoistCostar,
  newtypeCostar: newtypeCostar,
  semigroupoidCostar: semigroupoidCostar,
  categoryCostar: categoryCostar,
  functorCostar: functorCostar,
  invariantCostar: invariantCostar,
  applyCostar: applyCostar,
  applicativeCostar: applicativeCostar,
  bindCostar: bindCostar,
  monadCostar: monadCostar,
  distributiveCostar: distributiveCostar,
  bifunctorCostar: bifunctorCostar,
  profunctorCostar: profunctorCostar,
  strongCostar: strongCostar,
  closedCostar: closedCostar
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Comonad/index.js":"U0zO","../Control.Extend/index.js":"JIoJ","../Control.Monad/index.js":"UIxr","../Control.Semigroupoid/index.js":"riRy","../Data.Bifunctor/index.js":"e2Wc","../Data.Distributive/index.js":"PTuN","../Data.Functor/index.js":"AEHo","../Data.Functor.Contravariant/index.js":"tRZm","../Data.Functor.Invariant/index.js":"AXkC","../Data.Newtype/index.js":"lz8k","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Closed/index.js":"af4y","../Data.Profunctor.Strong/index.js":"w9p6","../Data.Tuple/index.js":"IIOM"}],"nkqb":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Choice = function Choice(Profunctor0, left, right) {
  this.Profunctor0 = Profunctor0;
  this.left = left;
  this.right = right;
};

var right = function right(dict) {
  return dict.right;
};

var left = function left(dict) {
  return dict.left;
};

var splitChoice = function splitChoice(dictCategory) {
  return function (dictChoice) {
    return function (l) {
      return function (r) {
        return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(left(dictChoice)(l))(right(dictChoice)(r));
      };
    };
  };
};

var fanin = function fanin(dictCategory) {
  return function (dictChoice) {
    return function (l) {
      return function (r) {
        var join = Data_Profunctor.dimap(dictChoice.Profunctor0())(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(dictCategory));
        return Control_Semigroupoid.composeFlipped(dictCategory.Semigroupoid0())(splitChoice(dictCategory)(dictChoice)(l)(r))(join);
      };
    };
  };
};

var choiceFn = new Choice(function () {
  return Data_Profunctor.profunctorFn;
}, function (v) {
  return function (v1) {
    if (v1 instanceof Data_Either.Left) {
      return Data_Either.Left.create(v(v1.value0));
    }

    ;

    if (v1 instanceof Data_Either.Right) {
      return new Data_Either.Right(v1.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [v.constructor.name, v1.constructor.name]);
  };
}, Data_Functor.map(Data_Either.functorEither));
module.exports = {
  left: left,
  right: right,
  Choice: Choice,
  splitChoice: splitChoice,
  fanin: fanin,
  choiceFn: choiceFn
};
},{"../Control.Category/index.js":"IAi2","../Control.Semigroupoid/index.js":"riRy","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Profunctor/index.js":"DaDq"}],"tj5E":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Distributive = require("../Data.Distributive/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Star = function Star(x) {
  return x;
};

var semigroupoidStar = function semigroupoidStar(dictBind) {
  return new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
      return function (x) {
        return Control_Bind.bind(dictBind)(v1(x))(v);
      };
    };
  });
};

var profunctorStar = function profunctorStar(dictFunctor) {
  return new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        var $75 = Data_Functor.map(dictFunctor)(g);
        return function ($76) {
          return $75(v(f($76)));
        };
      };
    };
  });
};

var strongStar = function strongStar(dictFunctor) {
  return new Data_Profunctor_Strong.Strong(function () {
    return profunctorStar(dictFunctor);
  }, function (v) {
    return function (v1) {
      return Data_Functor.map(dictFunctor)(function (v2) {
        return new Data_Tuple.Tuple(v2, v1.value1);
      })(v(v1.value0));
    };
  }, function (v) {
    return function (v1) {
      return Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create(v1.value0))(v(v1.value1));
    };
  });
};

var newtypeStar = new Data_Newtype.Newtype(function () {
  return undefined;
});

var invariantStar = function invariantStar(dictInvariant) {
  return new Data_Functor_Invariant.Invariant(function (f) {
    return function (g) {
      return function (v) {
        var $77 = Data_Functor_Invariant.imap(dictInvariant)(f)(g);
        return function ($78) {
          return $77(v($78));
        };
      };
    };
  });
};

var hoistStar = function hoistStar(f) {
  return function (v) {
    return function ($79) {
      return f(v($79));
    };
  };
};

var functorStar = function functorStar(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    return function (v) {
      var $80 = Data_Functor.map(dictFunctor)(f);
      return function ($81) {
        return $80(v($81));
      };
    };
  });
};

var distributiveStar = function distributiveStar(dictDistributive) {
  return new Data_Distributive.Distributive(function () {
    return functorStar(dictDistributive.Functor0());
  }, function (dictFunctor) {
    return function (f) {
      var $82 = Data_Distributive.distribute(distributiveStar(dictDistributive))(dictFunctor);
      var $83 = Data_Functor.map(dictFunctor)(f);
      return function ($84) {
        return $82($83($84));
      };
    };
  }, function (dictFunctor) {
    return function (f) {
      return function (a) {
        return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (v) {
          return v(a);
        })(f);
      };
    };
  });
};

var closedStar = function closedStar(dictDistributive) {
  return new Data_Profunctor_Closed.Closed(function () {
    return profunctorStar(dictDistributive.Functor0());
  }, function (v) {
    return function (g) {
      return Data_Distributive.distribute(dictDistributive)(Data_Functor.functorFn)(function ($85) {
        return v(g($85));
      });
    };
  });
};

var choiceStar = function choiceStar(dictApplicative) {
  return new Data_Profunctor_Choice.Choice(function () {
    return profunctorStar(dictApplicative.Apply0().Functor0());
  }, function (v) {
    return Star(Data_Either.either(function () {
      var $86 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Left.create);
      return function ($87) {
        return $86(v($87));
      };
    }())(function () {
      var $88 = Control_Applicative.pure(dictApplicative);
      return function ($89) {
        return $88(Data_Either.Right.create($89));
      };
    }()));
  }, function (v) {
    return Star(Data_Either.either(function () {
      var $90 = Control_Applicative.pure(dictApplicative);
      return function ($91) {
        return $90(Data_Either.Left.create($91));
      };
    }())(function () {
      var $92 = Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Either.Right.create);
      return function ($93) {
        return $92(v($93));
      };
    }()));
  });
};

var categoryStar = function categoryStar(dictMonad) {
  return new Control_Category.Category(function () {
    return semigroupoidStar(dictMonad.Bind1());
  }, Control_Applicative.pure(dictMonad.Applicative0()));
};

var applyStar = function applyStar(dictApply) {
  return new Control_Apply.Apply(function () {
    return functorStar(dictApply.Functor0());
  }, function (v) {
    return function (v1) {
      return function (a) {
        return Control_Apply.apply(dictApply)(v(a))(v1(a));
      };
    };
  });
};

var bindStar = function bindStar(dictBind) {
  return new Control_Bind.Bind(function () {
    return applyStar(dictBind.Apply0());
  }, function (v) {
    return function (f) {
      return function (x) {
        return Control_Bind.bind(dictBind)(v(x))(function (a) {
          var v1 = f(a);
          return v1(x);
        });
      };
    };
  });
};

var applicativeStar = function applicativeStar(dictApplicative) {
  return new Control_Applicative.Applicative(function () {
    return applyStar(dictApplicative.Apply0());
  }, function (a) {
    return function (v) {
      return Control_Applicative.pure(dictApplicative)(a);
    };
  });
};

var monadStar = function monadStar(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeStar(dictMonad.Applicative0());
  }, function () {
    return bindStar(dictMonad.Bind1());
  });
};

var altStar = function altStar(dictAlt) {
  return new Control_Alt.Alt(function () {
    return functorStar(dictAlt.Functor0());
  }, function (v) {
    return function (v1) {
      return function (a) {
        return Control_Alt.alt(dictAlt)(v(a))(v1(a));
      };
    };
  });
};

var plusStar = function plusStar(dictPlus) {
  return new Control_Plus.Plus(function () {
    return altStar(dictPlus.Alt0());
  }, function (v) {
    return Control_Plus.empty(dictPlus);
  });
};

var alternativeStar = function alternativeStar(dictAlternative) {
  return new Control_Alternative.Alternative(function () {
    return applicativeStar(dictAlternative.Applicative0());
  }, function () {
    return plusStar(dictAlternative.Plus1());
  });
};

var monadPlusStar = function monadPlusStar(dictMonadPlus) {
  return new Control_MonadPlus.MonadPlus(function () {
    return alternativeStar(dictMonadPlus.Alternative1());
  }, function () {
    return monadStar(dictMonadPlus.Monad0());
  });
};

var monadZeroStar = function monadZeroStar(dictMonadZero) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeStar(dictMonadZero.Alternative1());
  }, function () {
    return monadStar(dictMonadZero.Monad0());
  }, function () {
    return undefined;
  });
};

module.exports = {
  Star: Star,
  hoistStar: hoistStar,
  newtypeStar: newtypeStar,
  semigroupoidStar: semigroupoidStar,
  categoryStar: categoryStar,
  functorStar: functorStar,
  invariantStar: invariantStar,
  applyStar: applyStar,
  applicativeStar: applicativeStar,
  bindStar: bindStar,
  monadStar: monadStar,
  altStar: altStar,
  plusStar: plusStar,
  alternativeStar: alternativeStar,
  monadZeroStar: monadZeroStar,
  monadPlusStar: monadPlusStar,
  distributiveStar: distributiveStar,
  profunctorStar: profunctorStar,
  strongStar: strongStar,
  choiceStar: choiceStar,
  closedStar: closedStar
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Monad/index.js":"UIxr","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Control.Semigroupoid/index.js":"riRy","../Data.Distributive/index.js":"PTuN","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Functor.Invariant/index.js":"AXkC","../Data.Newtype/index.js":"lz8k","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Choice/index.js":"nkqb","../Data.Profunctor.Closed/index.js":"af4y","../Data.Profunctor.Strong/index.js":"w9p6","../Data.Tuple/index.js":"IIOM"}],"NR5l":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Compose = require("../Data.Functor.Compose/index.js");

var Data_Functor_Costar = require("../Data.Functor.Costar/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Ref = require("../Effect.Ref/index.js");

var Parallel = function Parallel(Applicative1, Monad0, parallel, sequential) {
  this.Applicative1 = Applicative1;
  this.Monad0 = Monad0;
  this.parallel = parallel;
  this.sequential = sequential;
};

var ParCont = function ParCont(x) {
  return x;
};

var sequential = function sequential(dict) {
  return dict.sequential;
};

var parallel = function parallel(dict) {
  return dict.parallel;
};

var newtypeParCont = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monadParWriterT = function monadParWriterT(dictMonoid) {
  return function (dictParallel) {
    return new Parallel(function () {
      return Control_Monad_Writer_Trans.applicativeWriterT(dictMonoid)(dictParallel.Applicative1());
    }, function () {
      return Control_Monad_Writer_Trans.monadWriterT(dictMonoid)(dictParallel.Monad0());
    }, Control_Monad_Writer_Trans.mapWriterT(parallel(dictParallel)), Control_Monad_Writer_Trans.mapWriterT(sequential(dictParallel)));
  };
};

var monadParStar = function monadParStar(dictParallel) {
  return new Parallel(function () {
    return Data_Profunctor_Star.applicativeStar(dictParallel.Applicative1());
  }, function () {
    return Data_Profunctor_Star.monadStar(dictParallel.Monad0());
  }, function (v) {
    return Data_Profunctor_Star.Star(function () {
      var $47 = parallel(dictParallel);
      return function ($48) {
        return $47(v($48));
      };
    }());
  }, function (v) {
    return Data_Profunctor_Star.Star(function () {
      var $49 = sequential(dictParallel);
      return function ($50) {
        return $49(v($50));
      };
    }());
  });
};

var monadParReaderT = function monadParReaderT(dictParallel) {
  return new Parallel(function () {
    return Control_Monad_Reader_Trans.applicativeReaderT(dictParallel.Applicative1());
  }, function () {
    return Control_Monad_Reader_Trans.monadReaderT(dictParallel.Monad0());
  }, Control_Monad_Reader_Trans.mapReaderT(parallel(dictParallel)), Control_Monad_Reader_Trans.mapReaderT(sequential(dictParallel)));
};

var monadParMaybeT = function monadParMaybeT(dictParallel) {
  return new Parallel(function () {
    return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Maybe.applicativeMaybe);
  }, function () {
    return Control_Monad_Maybe_Trans.monadMaybeT(dictParallel.Monad0());
  }, function (v) {
    return parallel(dictParallel)(v);
  }, function (v) {
    return sequential(dictParallel)(v);
  });
};

var monadParExceptT = function monadParExceptT(dictParallel) {
  return new Parallel(function () {
    return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
  }, function () {
    return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
  }, function (v) {
    return parallel(dictParallel)(v);
  }, function (v) {
    return sequential(dictParallel)(v);
  });
};

var monadParCostar = function monadParCostar(dictParallel) {
  return new Parallel(function () {
    return Data_Functor_Costar.applicativeCostar;
  }, function () {
    return Data_Functor_Costar.monadCostar;
  }, function (v) {
    return Data_Functor_Costar.Costar(function () {
      var $51 = sequential(dictParallel);
      return function ($52) {
        return v($51($52));
      };
    }());
  }, function (v) {
    return Data_Functor_Costar.Costar(function () {
      var $53 = parallel(dictParallel);
      return function ($54) {
        return v($53($54));
      };
    }());
  });
};

var monadParParCont = function monadParParCont(dictMonadEffect) {
  return new Parallel(function () {
    return applicativeParCont(dictMonadEffect);
  }, function () {
    return Control_Monad_Cont_Trans.monadContT(dictMonadEffect.Monad0());
  }, ParCont, function (v) {
    return v;
  });
};

var functorParCont = function functorParCont(dictMonadEffect) {
  return new Data_Functor.Functor(function (f) {
    var $55 = parallel(monadParParCont(dictMonadEffect));
    var $56 = Data_Functor.map(Control_Monad_Cont_Trans.functorContT(dictMonadEffect.Monad0().Bind1().Apply0().Functor0()))(f);
    var $57 = sequential(monadParParCont(dictMonadEffect));
    return function ($58) {
      return $55($56($57($58)));
    };
  });
};

var applyParCont = function applyParCont(dictMonadEffect) {
  return new Control_Apply.Apply(function () {
    return functorParCont(dictMonadEffect);
  }, function (v) {
    return function (v1) {
      return ParCont(function (k) {
        return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (ra) {
          return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (rb) {
            return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
              return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(rb)))(function (mb) {
                if (mb instanceof Data_Maybe.Nothing) {
                  return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(a))(ra));
                }

                ;

                if (mb instanceof Data_Maybe.Just) {
                  return k(a(mb.value0));
                }

                ;
                throw new Error("Failed pattern match at Control.Parallel.Class (line 82, column 7 - line 84, column 26): " + [mb.constructor.name]);
              });
            }))(function () {
              return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(ra)))(function (ma) {
                  if (ma instanceof Data_Maybe.Nothing) {
                    return Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(new Data_Maybe.Just(b))(rb));
                  }

                  ;

                  if (ma instanceof Data_Maybe.Just) {
                    return k(ma.value0(b));
                  }

                  ;
                  throw new Error("Failed pattern match at Control.Parallel.Class (line 88, column 7 - line 90, column 26): " + [ma.constructor.name]);
                });
              });
            });
          });
        });
      });
    };
  });
};

var applicativeParCont = function applicativeParCont(dictMonadEffect) {
  return new Control_Applicative.Applicative(function () {
    return applyParCont(dictMonadEffect);
  }, function () {
    var $59 = parallel(monadParParCont(dictMonadEffect));
    var $60 = Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT(dictMonadEffect.Monad0().Applicative0()));
    return function ($61) {
      return $59($60($61));
    };
  }());
};

var altParCont = function altParCont(dictMonadEffect) {
  return new Control_Alt.Alt(function () {
    return functorParCont(dictMonadEffect);
  }, function (v) {
    return function (v1) {
      return ParCont(function (k) {
        return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref["new"](false)))(function (done) {
          return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
            return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(done)))(function (b) {
              if (b) {
                return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
              }

              ;
              return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(done)))(function () {
                return k(a);
              });
            });
          }))(function () {
            return Control_Monad_Cont_Trans.runContT(v1)(function (a) {
              return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.read(done)))(function (b) {
                if (b) {
                  return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
                }

                ;
                return Control_Bind.discard(Control_Bind.discardUnit)(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_Ref.write(true)(done)))(function () {
                  return k(a);
                });
              });
            });
          });
        });
      });
    };
  });
};

var plusParCont = function plusParCont(dictMonadEffect) {
  return new Control_Plus.Plus(function () {
    return altParCont(dictMonadEffect);
  }, ParCont(function (v) {
    return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(Data_Unit.unit);
  }));
};

var alternativeParCont = function alternativeParCont(dictMonadEffect) {
  return new Control_Alternative.Alternative(function () {
    return applicativeParCont(dictMonadEffect);
  }, function () {
    return plusParCont(dictMonadEffect);
  });
};

module.exports = {
  parallel: parallel,
  sequential: sequential,
  Parallel: Parallel,
  ParCont: ParCont,
  monadParExceptT: monadParExceptT,
  monadParReaderT: monadParReaderT,
  monadParWriterT: monadParWriterT,
  monadParMaybeT: monadParMaybeT,
  monadParStar: monadParStar,
  monadParCostar: monadParCostar,
  newtypeParCont: newtypeParCont,
  functorParCont: functorParCont,
  applyParCont: applyParCont,
  applicativeParCont: applicativeParCont,
  altParCont: altParCont,
  plusParCont: plusParCont,
  alternativeParCont: alternativeParCont,
  monadParParCont: monadParParCont
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad.Cont.Trans/index.js":"XW2d","../Control.Monad.Except.Trans/index.js":"gr8B","../Control.Monad.Maybe.Trans/index.js":"UUIS","../Control.Monad.Reader.Trans/index.js":"uvht","../Control.Monad.Writer.Trans/index.js":"VAds","../Control.Plus/index.js":"oMBg","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Functor.Compose/index.js":"z8br","../Data.Functor.Costar/index.js":"XHlw","../Data.Maybe/index.js":"mN7T","../Data.Newtype/index.js":"lz8k","../Data.Profunctor.Star/index.js":"tj5E","../Data.Unit/index.js":"NhVk","../Effect.Class/index.js":"dWtH","../Effect.Ref/index.js":"Jajm"}],"qpZO":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var ShiftMap = function ShiftMap(shiftMap) {
  this.shiftMap = shiftMap;
};

var writerShiftMap = function writerShiftMap(dictMonoid) {
  return new ShiftMap(function (f) {
    return function (v) {
      return f(function (a) {
        return new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid));
      })(v);
    };
  });
};

var stateShiftMap = function stateShiftMap(dictMonad) {
  return new ShiftMap(function (f) {
    return function (v) {
      return function (s) {
        return f(function (a) {
          return new Data_Tuple.Tuple(a, s);
        })(v(s));
      };
    };
  });
};

var shiftMap = function shiftMap(dict) {
  return dict.shiftMap;
};

var rwsShiftMap = function rwsShiftMap(dictMonoid) {
  return new ShiftMap(function (f) {
    return function (v) {
      return function (r) {
        return function (s) {
          return f(function (a) {
            return new Control_Monad_RWS_Trans.RWSResult(s, a, Data_Monoid.mempty(dictMonoid));
          })(v(r)(s));
        };
      };
    };
  });
};

var readerShiftMap = new ShiftMap(function (f) {
  return function (v) {
    return function (r) {
      return f(Control_Category.identity(Control_Category.categoryFn))(v(r));
    };
  };
});
var exceptShiftMap = new ShiftMap(function (f) {
  return function (v) {
    return f(Data_Either.Right.create)(v);
  };
});
module.exports = {
  shiftMap: shiftMap,
  ShiftMap: ShiftMap,
  exceptShiftMap: exceptShiftMap,
  rwsShiftMap: rwsShiftMap,
  readerShiftMap: readerShiftMap,
  stateShiftMap: stateShiftMap,
  writerShiftMap: writerShiftMap
};
},{"../Control.Category/index.js":"IAi2","../Control.Monad.RWS.Trans/index.js":"Fynn","../Data.Either/index.js":"B2JL","../Data.Monoid/index.js":"TiEB","../Data.Tuple/index.js":"IIOM"}],"TZDL":[function(require,module,exports) {
"use strict"; //------------------------------------------------------------------------------
// Array creation --------------------------------------------------------------
//------------------------------------------------------------------------------

exports.range = function (start) {
  return function (end) {
    var step = start > end ? -1 : 1;
    var result = new Array(step * (end - start) + 1);
    var i = start,
        n = 0;

    while (i !== end) {
      result[n++] = i;
      i += step;
    }

    result[n] = i;
    return result;
  };
};

var replicateFill = function replicateFill(count) {
  return function (value) {
    if (count < 1) {
      return [];
    }

    var result = new Array(count);
    return result.fill(value);
  };
};

var replicatePolyfill = function replicatePolyfill(count) {
  return function (value) {
    var result = [];
    var n = 0;

    for (var i = 0; i < count; i++) {
      result[n++] = value;
    }

    return result;
  };
}; // In browsers that have Array.prototype.fill we use it, as it's faster.


exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

exports.fromFoldableImpl = function () {
  function Cons(head, tail) {
    this.head = head;
    this.tail = tail;
  }

  var emptyList = {};

  function curryCons(head) {
    return function (tail) {
      return new Cons(head, tail);
    };
  }

  function listToArray(list) {
    var result = [];
    var count = 0;
    var xs = list;

    while (xs !== emptyList) {
      result[count++] = xs.head;
      xs = xs.tail;
    }

    return result;
  }

  return function (foldr) {
    return function (xs) {
      return listToArray(foldr(curryCons)(emptyList)(xs));
    };
  };
}(); //------------------------------------------------------------------------------
// Array size ------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.length = function (xs) {
  return xs.length;
}; //------------------------------------------------------------------------------
// Non-indexed reads -----------------------------------------------------------
//------------------------------------------------------------------------------


exports.unconsImpl = function (empty) {
  return function (next) {
    return function (xs) {
      return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
    };
  };
}; //------------------------------------------------------------------------------
// Indexed operations ----------------------------------------------------------
//------------------------------------------------------------------------------


exports.indexImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function (i) {
        return i < 0 || i >= xs.length ? nothing : just(xs[i]);
      };
    };
  };
};

exports.findMapImpl = function (nothing) {
  return function (isJust) {
    return function (f) {
      return function (xs) {
        for (var i = 0; i < xs.length; i++) {
          var result = f(xs[i]);
          if (isJust(result)) return result;
        }

        return nothing;
      };
    };
  };
};

exports.findIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = 0, l = xs.length; i < l; i++) {
          if (f(xs[i])) return just(i);
        }

        return nothing;
      };
    };
  };
};

exports.findLastIndexImpl = function (just) {
  return function (nothing) {
    return function (f) {
      return function (xs) {
        for (var i = xs.length - 1; i >= 0; i--) {
          if (f(xs[i])) return just(i);
        }

        return nothing;
      };
    };
  };
};

exports._insertAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i > l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 0, a);
          return just(l1);
        };
      };
    };
  };
};

exports._deleteAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (l) {
        if (i < 0 || i >= l.length) return nothing;
        var l1 = l.slice();
        l1.splice(i, 1);
        return just(l1);
      };
    };
  };
};

exports._updateAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (a) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1[i] = a;
          return just(l1);
        };
      };
    };
  };
}; //------------------------------------------------------------------------------
// Transformations -------------------------------------------------------------
//------------------------------------------------------------------------------


exports.reverse = function (l) {
  return l.slice().reverse();
};

exports.concat = function (xss) {
  if (xss.length <= 10000) {
    // This method is faster, but it crashes on big arrays.
    // So we use it when can and fallback to simple variant otherwise.
    return Array.prototype.concat.apply([], xss);
  }

  var result = [];

  for (var i = 0, l = xss.length; i < l; i++) {
    var xs = xss[i];

    for (var j = 0, m = xs.length; j < m; j++) {
      result.push(xs[j]);
    }
  }

  return result;
};

exports.filter = function (f) {
  return function (xs) {
    return xs.filter(f);
  };
};

exports.partition = function (f) {
  return function (xs) {
    var yes = [];
    var no = [];

    for (var i = 0; i < xs.length; i++) {
      var x = xs[i];
      if (f(x)) yes.push(x);else no.push(x);
    }

    return {
      yes: yes,
      no: no
    };
  };
};

exports.scanl = function (f) {
  return function (b) {
    return function (xs) {
      var len = xs.length;
      var acc = b;
      var out = new Array(len);

      for (var i = 0; i < len; i++) {
        acc = f(acc)(xs[i]);
        out[i] = acc;
      }

      return out;
    };
  };
};

exports.scanr = function (f) {
  return function (b) {
    return function (xs) {
      var len = xs.length;
      var acc = b;
      var out = new Array(len);

      for (var i = len - 1; i >= 0; i--) {
        acc = f(xs[i])(acc);
        out[i] = acc;
      }

      return out;
    };
  };
}; //------------------------------------------------------------------------------
// Sorting ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.sortByImpl = function () {
  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
    var mid;
    var i;
    var j;
    var k;
    var x;
    var y;
    var c;
    mid = from + (to - from >> 1);
    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
    i = from;
    j = mid;
    k = from;

    while (i < mid && j < to) {
      x = xs2[i];
      y = xs2[j];
      c = fromOrdering(compare(x)(y));

      if (c > 0) {
        xs1[k++] = y;
        ++j;
      } else {
        xs1[k++] = x;
        ++i;
      }
    }

    while (i < mid) {
      xs1[k++] = xs2[i++];
    }

    while (j < to) {
      xs1[k++] = xs2[j++];
    }
  }

  return function (compare) {
    return function (fromOrdering) {
      return function (xs) {
        var out;
        if (xs.length < 2) return xs;
        out = xs.slice(0);
        mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);
        return out;
      };
    };
  };
}(); //------------------------------------------------------------------------------
// Subarrays -------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.slice = function (s) {
  return function (e) {
    return function (l) {
      return l.slice(s, e);
    };
  };
}; //------------------------------------------------------------------------------
// Zipping ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.zipWith = function (f) {
  return function (xs) {
    return function (ys) {
      var l = xs.length < ys.length ? xs.length : ys.length;
      var result = new Array(l);

      for (var i = 0; i < l; i++) {
        result[i] = f(xs[i])(ys[i]);
      }

      return result;
    };
  };
}; //------------------------------------------------------------------------------
// Folding ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.any = function (p) {
  return function (xs) {
    var len = xs.length;

    for (var i = 0; i < len; i++) {
      if (p(xs[i])) return true;
    }

    return false;
  };
};

exports.all = function (p) {
  return function (xs) {
    var len = xs.length;

    for (var i = 0; i < len; i++) {
      if (!p(xs[i])) return false;
    }

    return true;
  };
}; //------------------------------------------------------------------------------
// Partial ---------------------------------------------------------------------
//------------------------------------------------------------------------------


exports.unsafeIndexImpl = function (xs) {
  return function (n) {
    return xs[n];
  };
};
},{}],"sh7o":[function(require,module,exports) {
"use strict";

exports.map_ = function (f) {
  return function (a) {
    return function () {
      return f(a());
    };
  };
};

exports.pure_ = function (a) {
  return function () {
    return a;
  };
};

exports.bind_ = function (a) {
  return function (f) {
    return function () {
      return f(a())();
    };
  };
};

exports.run = function (f) {
  return f();
};

exports["while"] = function (f) {
  return function (a) {
    return function () {
      while (f()) {
        a();
      }
    };
  };
};

exports["for"] = function (lo) {
  return function (hi) {
    return function (f) {
      return function () {
        for (var i = lo; i < hi; i++) {
          f(i)();
        }
      };
    };
  };
};

exports.foreach = function (as) {
  return function (f) {
    return function () {
      for (var i = 0, l = as.length; i < l; i++) {
        f(as[i])();
      }
    };
  };
};

exports.new = function (val) {
  return function () {
    return {
      value: val
    };
  };
};

exports.read = function (ref) {
  return function () {
    return ref.value;
  };
};

exports.modifyImpl = function (f) {
  return function (ref) {
    return function () {
      var t = f(ref.value);
      ref.value = t.state;
      return t.value;
    };
  };
};

exports.write = function (a) {
  return function (ref) {
    return function () {
      return ref.value = a; // eslint-disable-line no-return-assign
    };
  };
};
},{}],"Sedc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var modify$prime = $foreign.modifyImpl;

var modify = function modify(f) {
  return modify$prime(function (s) {
    var s$prime = f(s);
    return {
      state: s$prime,
      value: s$prime
    };
  });
};

var functorST = new Data_Functor.Functor($foreign.map_);
var monadST = new Control_Monad.Monad(function () {
  return applicativeST;
}, function () {
  return bindST;
});
var bindST = new Control_Bind.Bind(function () {
  return applyST;
}, $foreign.bind_);
var applyST = new Control_Apply.Apply(function () {
  return functorST;
}, Control_Monad.ap(monadST));
var applicativeST = new Control_Applicative.Applicative(function () {
  return applyST;
}, $foreign.pure_);
var monadRecST = new Control_Monad_Rec_Class.MonadRec(function () {
  return monadST;
}, function (f) {
  return function (a) {
    var isLooping = function isLooping(v) {
      if (v instanceof Control_Monad_Rec_Class.Loop) {
        return true;
      }

      ;
      return false;
    };

    var fromDone = function fromDone(v) {
      if (v instanceof Control_Monad_Rec_Class.Done) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 69, column 32 - line 69, column 46): " + [v.constructor.name]);
    };

    return Control_Bind.bind(bindST)(Control_Bind.bindFlipped(bindST)($foreign["new"])(f(a)))(function (r) {
      return Control_Bind.discard(Control_Bind.discardUnit)(bindST)($foreign["while"](Data_Functor.map(functorST)(isLooping)($foreign.read(r)))(Control_Bind.bind(bindST)($foreign.read(r))(function (v) {
        if (v instanceof Control_Monad_Rec_Class.Loop) {
          return Control_Bind.bind(bindST)(f(v.value0))(function (e) {
            return Data_Functor["void"](functorST)($foreign.write(e)(r));
          });
        }

        ;

        if (v instanceof Control_Monad_Rec_Class.Done) {
          return Control_Applicative.pure(applicativeST)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 61, column 18 - line 65, column 28): " + [v.constructor.name]);
      })))(function () {
        return Data_Functor.map(functorST)(fromDone)($foreign.read(r));
      });
    });
  };
});
module.exports = {
  "modify'": modify$prime,
  modify: modify,
  functorST: functorST,
  applyST: applyST,
  applicativeST: applicativeST,
  bindST: bindST,
  monadST: monadST,
  monadRecST: monadRecST,
  run: $foreign.run,
  "while": $foreign["while"],
  "for": $foreign["for"],
  foreach: $foreign.foreach,
  "new": $foreign["new"],
  read: $foreign.read,
  write: $foreign.write
};
},{"./foreign.js":"sh7o","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Control.Monad.Rec.Class/index.js":"UVIy","../Data.Functor/index.js":"AEHo","../Data.Unit/index.js":"NhVk"}],"pEQc":[function(require,module,exports) {
"use strict";

exports["new"] = function () {
  return [];
};

exports.peekImpl = function (just) {
  return function (nothing) {
    return function (i) {
      return function (xs) {
        return function () {
          return i >= 0 && i < xs.length ? just(xs[i]) : nothing;
        };
      };
    };
  };
};

exports.poke = function (i) {
  return function (a) {
    return function (xs) {
      return function () {
        var ret = i >= 0 && i < xs.length;
        if (ret) xs[i] = a;
        return ret;
      };
    };
  };
};

exports.popImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function () {
        return xs.length > 0 ? just(xs.pop()) : nothing;
      };
    };
  };
};

exports.pushAll = function (as) {
  return function (xs) {
    return function () {
      return xs.push.apply(xs, as);
    };
  };
};

exports.shiftImpl = function (just) {
  return function (nothing) {
    return function (xs) {
      return function () {
        return xs.length > 0 ? just(xs.shift()) : nothing;
      };
    };
  };
};

exports.unshiftAll = function (as) {
  return function (xs) {
    return function () {
      return xs.unshift.apply(xs, as);
    };
  };
};

exports.splice = function (i) {
  return function (howMany) {
    return function (bs) {
      return function (xs) {
        return function () {
          return xs.splice.apply(xs, [i, howMany].concat(bs));
        };
      };
    };
  };
};

exports.unsafeFreeze = function (xs) {
  return function () {
    return xs;
  };
};

exports.unsafeThaw = function (xs) {
  return function () {
    return xs;
  };
};

function copyImpl(xs) {
  return function () {
    return xs.slice();
  };
}

exports.freeze = copyImpl;
exports.thaw = copyImpl;

exports.sortByImpl = function () {
  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
    var mid;
    var i;
    var j;
    var k;
    var x;
    var y;
    var c;
    mid = from + (to - from >> 1);
    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
    i = from;
    j = mid;
    k = from;

    while (i < mid && j < to) {
      x = xs2[i];
      y = xs2[j];
      c = fromOrdering(compare(x)(y));

      if (c > 0) {
        xs1[k++] = y;
        ++j;
      } else {
        xs1[k++] = x;
        ++i;
      }
    }

    while (i < mid) {
      xs1[k++] = xs2[i++];
    }

    while (j < to) {
      xs1[k++] = xs2[j++];
    }
  }

  return function (compare) {
    return function (fromOrdering) {
      return function (xs) {
        return function () {
          if (xs.length < 2) return xs;
          mergeFromTo(compare, fromOrdering, xs, xs.slice(0), 0, xs.length);
          return xs;
        };
      };
    };
  };
}();

exports.toAssocArray = function (xs) {
  return function () {
    var n = xs.length;
    var as = new Array(n);

    for (var i = 0; i < n; i++) {
      as[i] = {
        value: xs[i],
        index: i
      };
    }

    return as;
  };
};
},{}],"s8si":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var withArray = function withArray(f) {
  return function (xs) {
    return function __do() {
      var result = $foreign.thaw(xs)();
      f(result)();
      return $foreign.unsafeFreeze(result)();
    };
  };
};

var unshift = function unshift(a) {
  return $foreign.unshiftAll([a]);
};

var sortBy = function sortBy(comp) {
  return $foreign.sortByImpl(comp)(function (v) {
    if (v instanceof Data_Ordering.GT) {
      return 1;
    }

    ;

    if (v instanceof Data_Ordering.EQ) {
      return 0;
    }

    ;

    if (v instanceof Data_Ordering.LT) {
      return -1 | 0;
    }

    ;
    throw new Error("Failed pattern match at Data.Array.ST (line 113, column 31 - line 116, column 11): " + [v.constructor.name]);
  });
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return sortBy(Data_Ord.comparing(dictOrd)(f));
  };
};

var sort = function sort(dictOrd) {
  return sortBy(Data_Ord.compare(dictOrd));
};

var shift = $foreign.shiftImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var run = function run(st) {
  return Control_Bind.bind(Control_Monad_ST_Internal.bindST)(st)($foreign.unsafeFreeze)();
};

var push = function push(a) {
  return $foreign.pushAll([a]);
};

var pop = $foreign.popImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var peek = $foreign.peekImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var modify = function modify(i) {
  return function (f) {
    return function (xs) {
      return function __do() {
        var entry = peek(i)(xs)();

        if (entry instanceof Data_Maybe.Just) {
          return $foreign.poke(i)(f(entry.value0))(xs)();
        }

        ;

        if (entry instanceof Data_Maybe.Nothing) {
          return false;
        }

        ;
        throw new Error("Failed pattern match at Data.Array.ST (line 198, column 3 - line 200, column 26): " + [entry.constructor.name]);
      };
    };
  };
};

var empty = function empty(dictWarn) {
  return $foreign["new"];
};

module.exports = {
  run: run,
  withArray: withArray,
  empty: empty,
  peek: peek,
  modify: modify,
  pop: pop,
  push: push,
  shift: shift,
  unshift: unshift,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  "new": $foreign["new"],
  poke: $foreign.poke,
  pushAll: $foreign.pushAll,
  unshiftAll: $foreign.unshiftAll,
  splice: $foreign.splice,
  freeze: $foreign.freeze,
  thaw: $foreign.thaw,
  unsafeFreeze: $foreign.unsafeFreeze,
  unsafeThaw: $foreign.unsafeThaw,
  toAssocArray: $foreign.toAssocArray
};
},{"./foreign.js":"pEQc","../Control.Bind/index.js":"VcTy","../Control.Monad.ST.Internal/index.js":"Sedc","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj"}],"Wi7L":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Iterator = function () {
  function Iterator(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Iterator.create = function (value0) {
    return function (value1) {
      return new Iterator(value0, value1);
    };
  };

  return Iterator;
}();

var peek = function peek(v) {
  return function __do() {
    var i = Control_Monad_ST_Internal.read(v.value1)();
    return v.value0(i);
  };
};

var next = function next(v) {
  return function __do() {
    var i = Control_Monad_ST_Internal.read(v.value1)();
    Control_Monad_ST_Internal.modify(function (v1) {
      return v1 + 1 | 0;
    })(v.value1)();
    return v.value0(i);
  };
};

var pushWhile = function pushWhile(p) {
  return function (iter) {
    return function (array) {
      return function __do() {
        var $$break = Control_Monad_ST_Internal["new"](false)();

        while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
          (function __do() {
            var mx = peek(iter)();

            if (mx instanceof Data_Maybe.Just && p(mx.value0)) {
              Data_Array_ST.push(mx.value0)(array)();
              return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(next(iter))();
            }

            ;
            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
          })();
        }

        ;
        return {};
      };
    };
  };
};

var pushAll = pushWhile(Data_Function["const"](true));

var iterator = function iterator(f) {
  return Data_Functor.map(Control_Monad_ST_Internal.functorST)(Iterator.create(f))(Control_Monad_ST_Internal["new"](0));
};

var iterate = function iterate(iter) {
  return function (f) {
    return function __do() {
      var $$break = Control_Monad_ST_Internal["new"](false)();

      while (Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST_Internal.read($$break))()) {
        (function __do() {
          var mx = next(iter)();

          if (mx instanceof Data_Maybe.Just) {
            return f(mx.value0)();
          }

          ;

          if (mx instanceof Data_Maybe.Nothing) {
            return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Control_Monad_ST_Internal.write(true)($$break))();
          }

          ;
          throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
        })();
      }

      ;
      return {};
    };
  };
};

var exhausted = function () {
  var $13 = Data_Functor.map(Control_Monad_ST_Internal.functorST)(Data_Maybe.isNothing);
  return function ($14) {
    return $13(peek($14));
  };
}();

module.exports = {
  iterator: iterator,
  iterate: iterate,
  next: next,
  peek: peek,
  exhausted: exhausted,
  pushWhile: pushWhile,
  pushAll: pushAll
};
},{"../Control.Monad.ST.Internal/index.js":"Sedc","../Data.Array.ST/index.js":"s8si","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.HeytingAlgebra/index.js":"paZe","../Data.Maybe/index.js":"mN7T"}],"t4Co":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_ST_Internal = require("../Control.Monad.ST.Internal/index.js");

var Data_Array_ST = require("../Data.Array.ST/index.js");

var Data_Array_ST_Iterator = require("../Data.Array.ST.Iterator/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return Data_Traversable.sequence(Data_Traversable.traversableArray)(dictApplicative)($foreign.zipWith(f)(xs)(ys));
      };
    };
  };
};

var zip = $foreign.zipWith(Data_Tuple.Tuple.create);

var updateAtIndices = function updateAtIndices(dictFoldable) {
  return function (us) {
    return function (xs) {
      return Data_Array_ST.withArray(function (res) {
        return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (v) {
          return Data_Array_ST.poke(v.value0)(v.value1)(res);
        })(us);
      })(xs)();
    };
  };
};

var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var unsafeIndex = function unsafeIndex(dictPartial) {
  return $foreign.unsafeIndexImpl;
};

var uncons = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
  return function (xs) {
    return new Data_Maybe.Just({
      head: x,
      tail: xs
    });
  };
});

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return function (xs) {
    var len = $foreign.length(xs);

    var f = function f(i) {
      if (i < len) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Array (line 158, column 3 - line 160, column 26): " + [i.constructor.name]);
    };

    return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
  };
};

var take = function take(n) {
  return function (xs) {
    var $67 = n < 1;

    if ($67) {
      return [];
    }

    ;
    return $foreign.slice(0)(n)(xs);
  };
};

var tail = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
  return function (xs) {
    return new Data_Maybe.Just(xs);
  };
});

var splitAt = function splitAt(i) {
  return function (xs) {
    if (i <= 0) {
      return {
        before: [],
        after: xs
      };
    }

    ;
    return {
      before: $foreign.slice(0)(i)(xs),
      after: $foreign.slice(i)($foreign.length(xs))(xs)
    };
  };
};

var sortBy = function sortBy(comp) {
  return $foreign.sortByImpl(comp)(function (v) {
    if (v instanceof Data_Ordering.GT) {
      return 1;
    }

    ;

    if (v instanceof Data_Ordering.EQ) {
      return 0;
    }

    ;

    if (v instanceof Data_Ordering.LT) {
      return -1 | 0;
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): " + [v.constructor.name]);
  });
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return sortBy(Data_Ord.comparing(dictOrd)(f));
  };
};

var sort = function sort(dictOrd) {
  return function (xs) {
    return sortBy(Data_Ord.compare(dictOrd))(xs);
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();
  };
};

var singleton = function singleton(a) {
  return [a];
};

var $$null = function $$null(xs) {
  return $foreign.length(xs) === 0;
};

var nubByEq = function nubByEq(eq) {
  return function (xs) {
    return function __do() {
      var arr = Data_Array_ST["new"]();
      Control_Monad_ST_Internal.foreach(xs)(function (x) {
        return function __do() {
          var e = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function () {
            var $99 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
            var $100 = $foreign.any(function (v) {
              return eq(v)(x);
            });
            return function ($101) {
              return $99($100($101));
            };
          }())(Data_Array_ST.unsafeFreeze(arr))();
          return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(e)(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(x)(arr)))();
        };
      })();
      return Data_Array_ST.unsafeFreeze(arr)();
    }();
  };
};

var nubEq = function nubEq(dictEq) {
  return nubByEq(Data_Eq.eq(dictEq));
};

var modifyAtIndices = function modifyAtIndices(dictFoldable) {
  return function (is) {
    return function (f) {
      return function (xs) {
        return Data_Array_ST.withArray(function (res) {
          return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (i) {
            return Data_Array_ST.modify(i)(f)(res);
          })(is);
        })(xs)();
      };
    };
  };
};

var mapWithIndex = function mapWithIndex(f) {
  return function (xs) {
    return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
  };
};

var intersperse = function intersperse(a) {
  return function (arr) {
    var v = $foreign.length(arr);

    if (v < 2) {
      return arr;
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Array_ST.run(function () {
        var unsafeGetElem = function unsafeGetElem(idx) {
          return unsafeIndex()(arr)(idx);
        };

        return function __do() {
          var out = Data_Array_ST["new"]();
          Data_Array_ST.push(unsafeGetElem(0))(out)();
          Control_Monad_ST_Internal["for"](1)(v)(function (idx) {
            return function __do() {
              Data_Array_ST.push(a)(out)();
              return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(unsafeGetElem(idx))(out))();
            };
          })();
          return out;
        };
      }());
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 613, column 21 - line 622, column 19): " + [v.constructor.name]);
  };
};

var intercalate = function intercalate(dictMonoid) {
  return Data_Foldable.intercalate(Data_Foldable.foldableArray)(dictMonoid);
};

var insertAt = $foreign["_insertAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var init = function init(xs) {
  if ($$null(xs)) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (Data_Boolean.otherwise) {
    return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
  }

  ;
  throw new Error("Failed pattern match at Data.Array (line 340, column 1 - line 340, column 45): " + [xs.constructor.name]);
};

var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var last = function last(xs) {
  return index(xs)($foreign.length(xs) - 1 | 0);
};

var unsnoc = function unsnoc(xs) {
  return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return function (v1) {
      return {
        init: v,
        last: v1
      };
    };
  })(init(xs)))(last(xs));
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    return function (xs) {
      var go = function go(x) {
        return updateAt(i)(f(x))(xs);
      };

      return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
    };
  };
};

var span = function span(p) {
  return function (arr) {
    var go = function go($copy_i) {
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(i) {
        var v = index(arr)(i);

        if (v instanceof Data_Maybe.Just) {
          var $74 = p(v.value0);

          if ($74) {
            $copy_i = i + 1 | 0;
            return;
          }

          ;
          $tco_done = true;
          return new Data_Maybe.Just(i);
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 966, column 5 - line 968, column 25): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($copy_i);
      }

      ;
      return $tco_result;
    };

    var breakIndex = go(0);

    if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {
      return {
        init: [],
        rest: arr
      };
    }

    ;

    if (breakIndex instanceof Data_Maybe.Just) {
      return {
        init: $foreign.slice(0)(breakIndex.value0)(arr),
        rest: $foreign.slice(breakIndex.value0)($foreign.length(arr))(arr)
      };
    }

    ;

    if (breakIndex instanceof Data_Maybe.Nothing) {
      return {
        init: arr,
        rest: []
      };
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 953, column 3 - line 959, column 30): " + [breakIndex.constructor.name]);
  };
};

var takeWhile = function takeWhile(p) {
  return function (xs) {
    return span(p)(xs).init;
  };
};

var unzip = function unzip(xs) {
  return function __do() {
    var fsts = Data_Array_ST["new"]();
    var snds = Data_Array_ST["new"]();
    var iter = Data_Array_ST_Iterator.iterator(function (v) {
      return index(xs)(v);
    })();
    Data_Array_ST_Iterator.iterate(iter)(function (v) {
      return function __do() {
        Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v.value0)(fsts))();
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v.value1)(snds))();
      };
    })();
    var fsts$prime = Data_Array_ST.unsafeFreeze(fsts)();
    var snds$prime = Data_Array_ST.unsafeFreeze(snds)();
    return new Data_Tuple.Tuple(fsts$prime, snds$prime);
  }();
};

var head = function head(xs) {
  return index(xs)(0);
};

var nubBy = function nubBy(comp) {
  return function (xs) {
    var indexedAndSorted = sortBy(function (x) {
      return function (y) {
        return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
      };
    })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
    var v = head(indexedAndSorted);

    if (v instanceof Data_Maybe.Nothing) {
      return [];
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)(function __do() {
        var result = Data_Array_ST.unsafeThaw(singleton(v.value0))();
        Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v1) {
          return function __do() {
            var lst = Data_Functor.map(Control_Monad_ST_Internal.functorST)(function () {
              var $102 = function (dictPartial) {
                var $104 = Data_Maybe.fromJust();
                return function ($105) {
                  return $104(last($105));
                };
              }();

              return function ($103) {
                return Data_Tuple.snd($102($103));
              };
            }())(Data_Array_ST.unsafeFreeze(result))();
            return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(lst)(v1.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v1)(result)))();
          };
        })();
        return Data_Array_ST.unsafeFreeze(result)();
      }()));
    }

    ;
    throw new Error("Failed pattern match at Data.Array (line 1050, column 17 - line 1058, column 29): " + [v.constructor.name]);
  };
};

var nub = function nub(dictOrd) {
  return nubBy(Data_Ord.compare(dictOrd));
};

var groupBy = function groupBy(op) {
  return function (xs) {
    return function __do() {
      var result = Data_Array_ST["new"]();
      var iter = Data_Array_ST_Iterator.iterator(function (v) {
        return index(xs)(v);
      })();
      Data_Array_ST_Iterator.iterate(iter)(function (x) {
        return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(function __do() {
          var sub = Data_Array_ST["new"]();
          Data_Array_ST.push(x)(sub)();
          Data_Array_ST_Iterator.pushWhile(op(x))(iter)(sub)();
          var grp = Data_Array_ST.unsafeFreeze(sub)();
          return Data_Array_ST.push(grp)(result)();
        });
      })();
      return Data_Array_ST.unsafeFreeze(result)();
    }();
  };
};

var groupAllBy = function groupAllBy(cmp) {
  var $106 = groupBy(function (x) {
    return function (y) {
      return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.EQ.value);
    };
  });
  var $107 = sortBy(cmp);
  return function ($108) {
    return $106($107($108));
  };
};

var groupAll = function groupAll(dictOrd) {
  return groupAllBy(Data_Ord.compare(dictOrd));
};

var group$prime = function group$prime(dictWarn) {
  return function (dictOrd) {
    return groupAll(dictOrd);
  };
};

var group = function group(dictEq) {
  return function (xs) {
    return groupBy(Data_Eq.eq(dictEq))(xs);
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
};

var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
var foldl = Data_Foldable.foldl(Data_Foldable.foldableArray);

var foldRecM = function foldRecM(dictMonadRec) {
  return function (f) {
    return function (b) {
      return function (array) {
        var go = function go(res) {
          return function (i) {
            if (i >= $foreign.length(array)) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(res));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(res)(unsafeIndex()(array)(i)))(function (res$prime) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                  a: res$prime,
                  b: i + 1 | 0
                }));
              });
            }

            ;
            throw new Error("Failed pattern match at Data.Array (line 1269, column 3 - line 1273, column 42): " + [res.constructor.name, i.constructor.name]);
          };
        };

        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(go)(b)(0);
      };
    };
  };
};

var foldMap = function foldMap(dictMonoid) {
  return Data_Foldable.foldMap(Data_Foldable.foldableArray)(dictMonoid);
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (b) {
      return $foreign.unconsImpl(function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(b);
      })(function (a) {
        return function (as) {
          return Control_Bind.bind(dictMonad.Bind1())(f(b)(a))(function (b$prime) {
            return foldM(dictMonad)(f)(b$prime)(as);
          });
        };
      });
    };
  };
};

var fold = function fold(dictMonoid) {
  return Data_Foldable.fold(Data_Foldable.foldableArray)(dictMonoid);
};

var findMap = $foreign.findMapImpl(Data_Maybe.Nothing.value)(Data_Maybe.isJust);
var findLastIndex = $foreign.findLastIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var insertBy = function insertBy(cmp) {
  return function (x) {
    return function (ys) {
      var i = Data_Maybe.maybe(0)(function (v) {
        return v + 1 | 0;
      })(findLastIndex(function (y) {
        return Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(x)(y))(Data_Ordering.GT.value);
      })(ys));
      return Data_Maybe.fromJust()(insertAt(i)(x)(ys));
    };
  };
};

var insert = function insert(dictOrd) {
  return insertBy(Data_Ord.compare(dictOrd));
};

var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var intersectBy = function intersectBy(eq) {
  return function (xs) {
    return function (ys) {
      return $foreign.filter(function (x) {
        return Data_Maybe.isJust(findIndex(eq(x))(ys));
      })(xs);
    };
  };
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var find = function find(f) {
  return function (xs) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(unsafeIndex()(xs))(findIndex(f)(xs));
  };
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return findLastIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return findIndex(function (v) {
      return Data_Eq.eq(dictEq)(v)(x);
    });
  };
};

var notElem = function notElem(dictEq) {
  return function (a) {
    return function (arr) {
      return Data_Maybe.isNothing(elemIndex(dictEq)(a)(arr));
    };
  };
};

var elem = function elem(dictEq) {
  return function (a) {
    return function (arr) {
      return Data_Maybe.isJust(elemIndex(dictEq)(a)(arr));
    };
  };
};

var dropWhile = function dropWhile(p) {
  return function (xs) {
    return span(p)(xs).rest;
  };
};

var dropEnd = function dropEnd(n) {
  return function (xs) {
    return take($foreign.length(xs) - n | 0)(xs);
  };
};

var drop = function drop(n) {
  return function (xs) {
    var $89 = n < 1;

    if ($89) {
      return xs;
    }

    ;
    return $foreign.slice(n)($foreign.length(xs))(xs);
  };
};

var takeEnd = function takeEnd(n) {
  return function (xs) {
    return drop($foreign.length(xs) - n | 0)(xs);
  };
};

var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var deleteBy = function deleteBy(v) {
  return function (v1) {
    return function (v2) {
      if (v2.length === 0) {
        return [];
      }

      ;
      return Data_Maybe.maybe(v2)(function (i) {
        return Data_Maybe.fromJust()(deleteAt(i)(v2));
      })(findIndex(v(v1))(v2));
    };
  };
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    return function (ys) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(xs)(foldl(Data_Function.flip(deleteBy(eq)))(nubByEq(eq)(ys))(xs));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var $$delete = function $$delete(dictEq) {
  return deleteBy(Data_Eq.eq(dictEq));
};

var difference = function difference(dictEq) {
  return foldr($$delete(dictEq));
};

var cons = function cons(x) {
  return function (xs) {
    return Data_Semigroup.append(Data_Semigroup.semigroupArray)([x])(xs);
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Apply.apply(dictAlternative.Applicative0().Apply0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(cons)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
        return many(dictAlternative)(dictLazy)(v);
      }));
    };
  };
};

var many = function many(dictAlternative) {
  return function (dictLazy) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative.Applicative0())([]));
    };
  };
};

var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));

var mapMaybe = function mapMaybe(f) {
  return concatMap(function () {
    var $109 = Data_Maybe.maybe([])(singleton);
    return function ($110) {
      return $109(f($110));
    };
  }());
};

var filterA = function filterA(dictApplicative) {
  return function (p) {
    var $111 = Data_Functor.map(dictApplicative.Apply0().Functor0())(mapMaybe(function (v) {
      if (v.value1) {
        return new Data_Maybe.Just(v.value0);
      }

      ;
      return Data_Maybe.Nothing.value;
    }));
    var $112 = Data_Traversable.traverse(Data_Traversable.traversableArray)(dictApplicative)(function (x) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Tuple.Tuple.create(x))(p(x));
    });
    return function ($113) {
      return $111($112($113));
    };
  };
};

var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));

var alterAt = function alterAt(i) {
  return function (f) {
    return function (xs) {
      var go = function go(x) {
        var v = f(x);

        if (v instanceof Data_Maybe.Nothing) {
          return deleteAt(i)(xs);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return updateAt(i)(v.value0)(xs);
        }

        ;
        throw new Error("Failed pattern match at Data.Array (line 591, column 10 - line 593, column 32): " + [v.constructor.name]);
      };

      return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
    };
  };
};

module.exports = {
  fromFoldable: fromFoldable,
  toUnfoldable: toUnfoldable,
  singleton: singleton,
  some: some,
  many: many,
  "null": $$null,
  cons: cons,
  snoc: snoc,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elem: elem,
  notElem: notElem,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  find: find,
  findMap: findMap,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  updateAtIndices: updateAtIndices,
  modifyAt: modifyAt,
  modifyAtIndices: modifyAtIndices,
  alterAt: alterAt,
  intersperse: intersperse,
  concatMap: concatMap,
  splitAt: splitAt,
  filterA: filterA,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  foldl: foldl,
  foldr: foldr,
  foldMap: foldMap,
  fold: fold,
  intercalate: intercalate,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  take: take,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  drop: drop,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  groupAll: groupAll,
  "group'": group$prime,
  groupBy: groupBy,
  groupAllBy: groupAllBy,
  nub: nub,
  nubEq: nubEq,
  nubBy: nubBy,
  nubByEq: nubByEq,
  union: union,
  unionBy: unionBy,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  intersect: intersect,
  intersectBy: intersectBy,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  foldM: foldM,
  foldRecM: foldRecM,
  unsafeIndex: unsafeIndex,
  range: $foreign.range,
  replicate: $foreign.replicate,
  length: $foreign.length,
  reverse: $foreign.reverse,
  concat: $foreign.concat,
  filter: $foreign.filter,
  partition: $foreign.partition,
  scanl: $foreign.scanl,
  scanr: $foreign.scanr,
  slice: $foreign.slice,
  zipWith: $foreign.zipWith,
  any: $foreign.any,
  all: $foreign.all
};
},{"./foreign.js":"TZDL","../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Lazy/index.js":"y9cE","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.ST.Internal/index.js":"Sedc","../Data.Array.ST/index.js":"s8si","../Data.Array.ST.Iterator/index.js":"Wi7L","../Data.Boolean/index.js":"ObQr","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.HeytingAlgebra/index.js":"paZe","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW"}],"iQxY":[function(require,module,exports) {
"use strict";

exports.foldr1Impl = function (f) {
  return function (xs) {
    var acc = xs[xs.length - 1];

    for (var i = xs.length - 2; i >= 0; i--) {
      acc = f(xs[i])(acc);
    }

    return acc;
  };
};

exports.foldl1Impl = function (f) {
  return function (xs) {
    var acc = xs[0];
    var len = xs.length;

    for (var i = 1; i < len; i++) {
      acc = f(acc)(xs[i]);
    }

    return acc;
  };
};

exports.traverse1Impl = function () {
  function Cont(fn) {
    this.fn = fn;
  }

  var emptyList = {};

  var ConsCell = function ConsCell(head, tail) {
    this.head = head;
    this.tail = tail;
  };

  function finalCell(head) {
    return new ConsCell(head, emptyList);
  }

  function consList(x) {
    return function (xs) {
      return new ConsCell(x, xs);
    };
  }

  function listToArray(list) {
    var arr = [];
    var xs = list;

    while (xs !== emptyList) {
      arr.push(xs.head);
      xs = xs.tail;
    }

    return arr;
  }

  return function (apply) {
    return function (map) {
      return function (f) {
        var buildFrom = function buildFrom(x, ys) {
          return apply(map(consList)(f(x)))(ys);
        };

        var go = function go(acc, currentLen, xs) {
          if (currentLen === 0) {
            return acc;
          } else {
            var last = xs[currentLen - 1];
            return new Cont(function () {
              var built = go(buildFrom(last, acc), currentLen - 1, xs);
              return built;
            });
          }
        };

        return function (array) {
          var acc = map(finalCell)(f(array[array.length - 1]));
          var result = go(acc, array.length - 1, array);

          while (result instanceof Cont) {
            result = result.fn();
          }

          return map(listToArray)(result);
        };
      };
    };
  };
}();
},{}],"PmFL":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var NonEmptyArray = function NonEmptyArray(x) {
  return x;
};

var unfoldable1NonEmptyArray = Data_Unfoldable1.unfoldable1Array;
var traversableWithIndexNonEmptyArray = Data_TraversableWithIndex.traversableWithIndexArray;
var traversableNonEmptyArray = Data_Traversable.traversableArray;

var showNonEmptyArray = function showNonEmptyArray(dictShow) {
  return new Data_Show.Show(function (v) {
    return "(NonEmptyArray " + (Data_Show.show(Data_Show.showArray(dictShow))(v) + ")");
  });
};

var semigroupNonEmptyArray = Data_Semigroup.semigroupArray;

var ordNonEmptyArray = function ordNonEmptyArray(dictOrd) {
  return Data_Ord.ordArray(dictOrd);
};

var ord1NonEmptyArray = Data_Ord.ord1Array;
var monadNonEmptyArray = Control_Monad.monadArray;
var functorWithIndexNonEmptyArray = Data_FunctorWithIndex.functorWithIndexArray;
var functorNonEmptyArray = Data_Functor.functorArray;
var foldableWithIndexNonEmptyArray = Data_FoldableWithIndex.foldableWithIndexArray;
var foldableNonEmptyArray = Data_Foldable.foldableArray;
var foldable1NonEmptyArray = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableNonEmptyArray;
}, function (dictSemigroup) {
  return Data_Semigroup_Foldable.foldMap1DefaultL(foldable1NonEmptyArray)(functorNonEmptyArray)(dictSemigroup);
}, $foreign.foldl1Impl, $foreign.foldr1Impl);
var traversable1NonEmptyArray = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1NonEmptyArray;
}, function () {
  return traversableNonEmptyArray;
}, function (dictApply) {
  return Data_Semigroup_Traversable.sequence1Default(traversable1NonEmptyArray)(dictApply);
}, function (dictApply) {
  return $foreign.traverse1Impl(Control_Apply.apply(dictApply))(Data_Functor.map(dictApply.Functor0()));
});

var eqNonEmptyArray = function eqNonEmptyArray(dictEq) {
  return Data_Eq.eqArray(dictEq);
};

var eq1NonEmptyArray = Data_Eq.eq1Array;
var bindNonEmptyArray = Control_Bind.bindArray;
var applyNonEmptyArray = Control_Apply.applyArray;
var applicativeNonEmptyArray = Control_Applicative.applicativeArray;
var altNonEmptyArray = Control_Alt.altArray;
module.exports = {
  NonEmptyArray: NonEmptyArray,
  showNonEmptyArray: showNonEmptyArray,
  eqNonEmptyArray: eqNonEmptyArray,
  eq1NonEmptyArray: eq1NonEmptyArray,
  ordNonEmptyArray: ordNonEmptyArray,
  ord1NonEmptyArray: ord1NonEmptyArray,
  semigroupNonEmptyArray: semigroupNonEmptyArray,
  functorNonEmptyArray: functorNonEmptyArray,
  functorWithIndexNonEmptyArray: functorWithIndexNonEmptyArray,
  foldableNonEmptyArray: foldableNonEmptyArray,
  foldableWithIndexNonEmptyArray: foldableWithIndexNonEmptyArray,
  foldable1NonEmptyArray: foldable1NonEmptyArray,
  unfoldable1NonEmptyArray: unfoldable1NonEmptyArray,
  traversableNonEmptyArray: traversableNonEmptyArray,
  traversableWithIndexNonEmptyArray: traversableWithIndexNonEmptyArray,
  traversable1NonEmptyArray: traversable1NonEmptyArray,
  applyNonEmptyArray: applyNonEmptyArray,
  applicativeNonEmptyArray: applicativeNonEmptyArray,
  bindNonEmptyArray: bindNonEmptyArray,
  monadNonEmptyArray: monadNonEmptyArray,
  altNonEmptyArray: altNonEmptyArray
};
},{"./foreign.js":"iQxY","../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Monad/index.js":"UIxr","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.FoldableWithIndex/index.js":"Efib","../Data.Functor/index.js":"AEHo","../Data.FunctorWithIndex/index.js":"OHRN","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Semigroup.Foldable/index.js":"htAR","../Data.Semigroup.Traversable/index.js":"qkfi","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.TraversableWithIndex/index.js":"V4EF","../Data.Unfoldable1/index.js":"S0Nl"}],"eTKN":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var unsafeFromArrayF = Unsafe_Coerce.unsafeCoerce;
var unsafeFromArray = Data_Array_NonEmpty_Internal.NonEmptyArray;

var toArray = function toArray(v) {
  return v;
};

var unionBy$prime = function unionBy$prime(eq) {
  return function (xs) {
    var $50 = Data_Array.unionBy(eq)(toArray(xs));
    return function ($51) {
      return unsafeFromArray($50($51));
    };
  };
};

var union$prime = function union$prime(dictEq) {
  return unionBy$prime(Data_Eq.eq(dictEq));
};

var unionBy = function unionBy(eq) {
  return function (xs) {
    var $52 = unionBy$prime(eq)(xs);
    return function ($53) {
      return $52(toArray($53));
    };
  };
};

var union = function union(dictEq) {
  return unionBy(Data_Eq.eq(dictEq));
};

var unzip = function () {
  var $54 = Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple)(unsafeFromArray)(unsafeFromArray);
  return function ($55) {
    return $54(Data_Array.unzip(toArray($55)));
  };
}();

var updateAt = function updateAt(i) {
  return function (x) {
    var $56 = Data_Array.updateAt(i)(x);
    return function ($57) {
      return unsafeFromArrayF($56(toArray($57)));
    };
  };
};

var zip = function zip(xs) {
  return function (ys) {
    return unsafeFromArray(Data_Array.zip(toArray(xs))(toArray(ys)));
  };
};

var zipWith = function zipWith(f) {
  return function (xs) {
    return function (ys) {
      return unsafeFromArray(Data_Array.zipWith(f)(toArray(xs))(toArray(ys)));
    };
  };
};

var zipWithA = function zipWithA(dictApplicative) {
  return function (f) {
    return function (xs) {
      return function (ys) {
        return unsafeFromArrayF(Data_Array.zipWithA(dictApplicative)(f)(toArray(xs))(toArray(ys)));
      };
    };
  };
};

var splitAt = function splitAt(i) {
  return function (xs) {
    return Data_Array.splitAt(i)(toArray(xs));
  };
};

var some = function some(dictAlternative) {
  return function (dictLazy) {
    var $58 = Data_Array.some(dictAlternative)(dictLazy);
    return function ($59) {
      return unsafeFromArrayF($58($59));
    };
  };
};

var snoc$prime = function snoc$prime(xs) {
  return function (x) {
    return unsafeFromArray(Data_Array.snoc(xs)(x));
  };
};

var snoc = function snoc(xs) {
  return function (x) {
    return unsafeFromArray(Data_Array.snoc(toArray(xs))(x));
  };
};

var singleton = function singleton($60) {
  return unsafeFromArray(Data_Array.singleton($60));
};

var replicate = function replicate(i) {
  return function (x) {
    return unsafeFromArray(Data_Array.replicate(Data_Ord.max(Data_Ord.ordInt)(1)(i))(x));
  };
};

var range = function range(x) {
  return function (y) {
    return unsafeFromArray(Data_Array.range(x)(y));
  };
};

var modifyAt = function modifyAt(i) {
  return function (f) {
    var $61 = Data_Array.modifyAt(i)(f);
    return function ($62) {
      return unsafeFromArrayF($61(toArray($62)));
    };
  };
};

var intersectBy$prime = function intersectBy$prime(eq) {
  return function (xs) {
    return Data_Array.intersectBy(eq)(toArray(xs));
  };
};

var intersectBy = function intersectBy(eq) {
  return function (xs) {
    var $63 = intersectBy$prime(eq)(xs);
    return function ($64) {
      return $63(toArray($64));
    };
  };
};

var intersect$prime = function intersect$prime(dictEq) {
  return intersectBy$prime(Data_Eq.eq(dictEq));
};

var intersect = function intersect(dictEq) {
  return intersectBy(Data_Eq.eq(dictEq));
};

var intercalate = function intercalate(dictSemigroup) {
  return Data_Semigroup_Foldable.intercalate(Data_Array_NonEmpty_Internal.foldable1NonEmptyArray)(dictSemigroup);
};

var insertAt = function insertAt(i) {
  return function (x) {
    var $65 = Data_Array.insertAt(i)(x);
    return function ($66) {
      return unsafeFromArrayF($65(toArray($66)));
    };
  };
};

var fromFoldable1 = function fromFoldable1(dictFoldable1) {
  var $67 = Data_Array.fromFoldable(dictFoldable1.Foldable0());
  return function ($68) {
    return unsafeFromArray($67($68));
  };
};

var fromArray = function fromArray(xs) {
  if (Data_Array.length(xs) > 0) {
    return new Data_Maybe.Just(unsafeFromArray(xs));
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Array.NonEmpty (line 159, column 1 - line 159, column 58): " + [xs.constructor.name]);
};

var fromFoldable = function fromFoldable(dictFoldable) {
  var $69 = Data_Array.fromFoldable(dictFoldable);
  return function ($70) {
    return fromArray($69($70));
  };
};

var foldr1 = Data_Semigroup_Foldable.foldr1(Data_Array_NonEmpty_Internal.foldable1NonEmptyArray);
var foldl1 = Data_Semigroup_Foldable.foldl1(Data_Array_NonEmpty_Internal.foldable1NonEmptyArray);

var foldMap1 = function foldMap1(dictSemigroup) {
  return Data_Semigroup_Foldable.foldMap1(Data_Array_NonEmpty_Internal.foldable1NonEmptyArray)(dictSemigroup);
};

var fold1 = function fold1(dictSemigroup) {
  return Data_Semigroup_Foldable.fold1(Data_Array_NonEmpty_Internal.foldable1NonEmptyArray)(dictSemigroup);
};

var difference$prime = function difference$prime(dictEq) {
  return function (xs) {
    return Data_Array.difference(dictEq)(toArray(xs));
  };
};

var cons$prime = function cons$prime(x) {
  return function (xs) {
    return unsafeFromArray(Data_Array.cons(x)(xs));
  };
};

var fromNonEmpty = function fromNonEmpty(v) {
  return cons$prime(v.value0)(v.value1);
};

var concatMap = Data_Function.flip(Control_Bind.bind(Data_Array_NonEmpty_Internal.bindNonEmptyArray));

var concat = function () {
  var $71 = Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(toArray);
  return function ($72) {
    return unsafeFromArray(Data_Array.concat(toArray($71($72))));
  };
}();

var appendArray = function appendArray(xs) {
  return function (ys) {
    return unsafeFromArray(Data_Semigroup.append(Data_Semigroup.semigroupArray)(toArray(xs))(ys));
  };
};

var alterAt = function alterAt(i) {
  return function (f) {
    var $73 = Data_Array.alterAt(i)(f);
    return function ($74) {
      return $73(toArray($74));
    };
  };
};

var adaptMaybe = function adaptMaybe(f) {
  var $75 = Data_Maybe.fromJust();
  return function ($76) {
    return $75(f(toArray($76)));
  };
};

var head = adaptMaybe(Data_Array.head);
var init = adaptMaybe(Data_Array.init);
var last = adaptMaybe(Data_Array.last);
var tail = adaptMaybe(Data_Array.tail);
var uncons = adaptMaybe(Data_Array.uncons);

var toNonEmpty = function toNonEmpty($77) {
  return function (v) {
    return new Data_NonEmpty.NonEmpty(v.head, v.tail);
  }(uncons($77));
};

var unsnoc = adaptMaybe(Data_Array.unsnoc);

var adaptAny = function adaptAny(f) {
  return function ($78) {
    return f(toArray($78));
  };
};

var all = function all(p) {
  return adaptAny(Data_Array.all(p));
};

var any = function any(p) {
  return adaptAny(Data_Array.any(p));
};

var catMaybes = adaptAny(Data_Array.catMaybes);

var $$delete = function $$delete(dictEq) {
  return function (x) {
    return adaptAny(Data_Array["delete"](dictEq)(x));
  };
};

var deleteAt = function deleteAt(i) {
  return adaptAny(Data_Array.deleteAt(i));
};

var deleteBy = function deleteBy(f) {
  return function (x) {
    return adaptAny(Data_Array.deleteBy(f)(x));
  };
};

var difference = function difference(dictEq) {
  return function (xs) {
    return adaptAny(difference$prime(dictEq)(xs));
  };
};

var drop = function drop(i) {
  return adaptAny(Data_Array.drop(i));
};

var dropEnd = function dropEnd(i) {
  return adaptAny(Data_Array.dropEnd(i));
};

var dropWhile = function dropWhile(f) {
  return adaptAny(Data_Array.dropWhile(f));
};

var elem = function elem(dictEq) {
  return function (x) {
    return adaptAny(Data_Array.elem(dictEq)(x));
  };
};

var elemIndex = function elemIndex(dictEq) {
  return function (x) {
    return adaptAny(Data_Array.elemIndex(dictEq)(x));
  };
};

var elemLastIndex = function elemLastIndex(dictEq) {
  return function (x) {
    return adaptAny(Data_Array.elemLastIndex(dictEq)(x));
  };
};

var filter = function filter(f) {
  return adaptAny(Data_Array.filter(f));
};

var filterA = function filterA(dictApplicative) {
  return function (f) {
    return adaptAny(Data_Array.filterA(dictApplicative)(f));
  };
};

var find = function find(p) {
  return adaptAny(Data_Array.find(p));
};

var findIndex = function findIndex(p) {
  return adaptAny(Data_Array.findIndex(p));
};

var findLastIndex = function findLastIndex(x) {
  return adaptAny(Data_Array.findLastIndex(x));
};

var findMap = function findMap(p) {
  return adaptAny(Data_Array.findMap(p));
};

var foldM = function foldM(dictMonad) {
  return function (f) {
    return function (acc) {
      return adaptAny(Data_Array.foldM(dictMonad)(f)(acc));
    };
  };
};

var foldRecM = function foldRecM(dictMonadRec) {
  return function (f) {
    return function (acc) {
      return adaptAny(Data_Array.foldRecM(dictMonadRec)(f)(acc));
    };
  };
};

var index = adaptAny(Data_Array.index);
var length = adaptAny(Data_Array.length);

var mapMaybe = function mapMaybe(f) {
  return adaptAny(Data_Array.mapMaybe(f));
};

var notElem = function notElem(dictEq) {
  return function (x) {
    return adaptAny(Data_Array.notElem(dictEq)(x));
  };
};

var partition = function partition(f) {
  return adaptAny(Data_Array.partition(f));
};

var slice = function slice(start) {
  return function (end) {
    return adaptAny(Data_Array.slice(start)(end));
  };
};

var span = function span(f) {
  return adaptAny(Data_Array.span(f));
};

var take = function take(i) {
  return adaptAny(Data_Array.take(i));
};

var takeEnd = function takeEnd(i) {
  return adaptAny(Data_Array.takeEnd(i));
};

var takeWhile = function takeWhile(f) {
  return adaptAny(Data_Array.takeWhile(f));
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  return adaptAny(Data_Array.toUnfoldable(dictUnfoldable));
};

var unsafeAdapt = function unsafeAdapt(f) {
  var $79 = adaptAny(f);
  return function ($80) {
    return unsafeFromArray($79($80));
  };
};

var cons = function cons(x) {
  return unsafeAdapt(Data_Array.cons(x));
};

var group = function group(dictEq) {
  return unsafeAdapt(Data_Array.group(dictEq));
};

var group$prime = function group$prime(dictWarn) {
  return function (dictOrd) {
    return unsafeAdapt(Data_Array.groupAll(dictOrd));
  };
};

var groupAllBy = function groupAllBy(op) {
  return unsafeAdapt(Data_Array.groupAllBy(op));
};

var groupAll = function groupAll(dictOrd) {
  return groupAllBy(Data_Ord.compare(dictOrd));
};

var groupBy = function groupBy(op) {
  return unsafeAdapt(Data_Array.groupBy(op));
};

var insert = function insert(dictOrd) {
  return function (x) {
    return unsafeAdapt(Data_Array.insert(dictOrd)(x));
  };
};

var insertBy = function insertBy(f) {
  return function (x) {
    return unsafeAdapt(Data_Array.insertBy(f)(x));
  };
};

var intersperse = function intersperse(x) {
  return unsafeAdapt(Data_Array.intersperse(x));
};

var mapWithIndex = function mapWithIndex(f) {
  return unsafeAdapt(Data_Array.mapWithIndex(f));
};

var modifyAtIndices = function modifyAtIndices(dictFoldable) {
  return function (is) {
    return function (f) {
      return unsafeAdapt(Data_Array.modifyAtIndices(dictFoldable)(is)(f));
    };
  };
};

var nub = function nub(dictOrd) {
  return unsafeAdapt(Data_Array.nub(dictOrd));
};

var nubBy = function nubBy(f) {
  return unsafeAdapt(Data_Array.nubBy(f));
};

var nubByEq = function nubByEq(f) {
  return unsafeAdapt(Data_Array.nubByEq(f));
};

var nubEq = function nubEq(dictEq) {
  return unsafeAdapt(Data_Array.nubEq(dictEq));
};

var reverse = unsafeAdapt(Data_Array.reverse);

var scanl = function scanl(f) {
  return function (x) {
    return unsafeAdapt(Data_Array.scanl(f)(x));
  };
};

var scanr = function scanr(f) {
  return function (x) {
    return unsafeAdapt(Data_Array.scanr(f)(x));
  };
};

var sort = function sort(dictOrd) {
  return unsafeAdapt(Data_Array.sort(dictOrd));
};

var sortBy = function sortBy(f) {
  return unsafeAdapt(Data_Array.sortBy(f));
};

var sortWith = function sortWith(dictOrd) {
  return function (f) {
    return unsafeAdapt(Data_Array.sortWith(dictOrd)(f));
  };
};

var updateAtIndices = function updateAtIndices(dictFoldable) {
  return function (pairs) {
    return unsafeAdapt(Data_Array.updateAtIndices(dictFoldable)(pairs));
  };
};

var unsafeIndex = function unsafeIndex(dictPartial) {
  return adaptAny(Data_Array.unsafeIndex());
};

var toUnfoldable1 = function toUnfoldable1(dictUnfoldable1) {
  return function (xs) {
    var len = length(xs);

    var f = function f(i) {
      return Data_Tuple.Tuple.create(unsafeIndex()(xs)(i))(function () {
        var $49 = i < (len - 1 | 0);

        if ($49) {
          return new Data_Maybe.Just(i + 1 | 0);
        }

        ;
        return Data_Maybe.Nothing.value;
      }());
    };

    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(f)(0);
  };
};

module.exports = {
  fromArray: fromArray,
  fromNonEmpty: fromNonEmpty,
  toArray: toArray,
  toNonEmpty: toNonEmpty,
  fromFoldable: fromFoldable,
  fromFoldable1: fromFoldable1,
  toUnfoldable: toUnfoldable,
  toUnfoldable1: toUnfoldable1,
  singleton: singleton,
  range: range,
  replicate: replicate,
  some: some,
  length: length,
  cons: cons,
  "cons'": cons$prime,
  snoc: snoc,
  "snoc'": snoc$prime,
  appendArray: appendArray,
  insert: insert,
  insertBy: insertBy,
  head: head,
  last: last,
  tail: tail,
  init: init,
  uncons: uncons,
  unsnoc: unsnoc,
  index: index,
  elem: elem,
  notElem: notElem,
  elemIndex: elemIndex,
  elemLastIndex: elemLastIndex,
  find: find,
  findMap: findMap,
  findIndex: findIndex,
  findLastIndex: findLastIndex,
  insertAt: insertAt,
  deleteAt: deleteAt,
  updateAt: updateAt,
  updateAtIndices: updateAtIndices,
  modifyAt: modifyAt,
  modifyAtIndices: modifyAtIndices,
  alterAt: alterAt,
  intersperse: intersperse,
  reverse: reverse,
  concat: concat,
  concatMap: concatMap,
  filter: filter,
  partition: partition,
  splitAt: splitAt,
  filterA: filterA,
  mapMaybe: mapMaybe,
  catMaybes: catMaybes,
  mapWithIndex: mapWithIndex,
  foldl1: foldl1,
  foldr1: foldr1,
  foldMap1: foldMap1,
  fold1: fold1,
  intercalate: intercalate,
  scanl: scanl,
  scanr: scanr,
  sort: sort,
  sortBy: sortBy,
  sortWith: sortWith,
  slice: slice,
  take: take,
  takeEnd: takeEnd,
  takeWhile: takeWhile,
  drop: drop,
  dropEnd: dropEnd,
  dropWhile: dropWhile,
  span: span,
  group: group,
  groupAll: groupAll,
  "group'": group$prime,
  groupBy: groupBy,
  groupAllBy: groupAllBy,
  nub: nub,
  nubBy: nubBy,
  nubEq: nubEq,
  nubByEq: nubByEq,
  union: union,
  "union'": union$prime,
  unionBy: unionBy,
  "unionBy'": unionBy$prime,
  "delete": $$delete,
  deleteBy: deleteBy,
  difference: difference,
  "difference'": difference$prime,
  intersect: intersect,
  "intersect'": intersect$prime,
  intersectBy: intersectBy,
  "intersectBy'": intersectBy$prime,
  zipWith: zipWith,
  zipWithA: zipWithA,
  zip: zip,
  unzip: unzip,
  any: any,
  all: all,
  foldM: foldM,
  foldRecM: foldRecM,
  unsafeIndex: unsafeIndex
};
},{"../Control.Bind/index.js":"VcTy","../Data.Array/index.js":"t4Co","../Data.Array.NonEmpty.Internal/index.js":"PmFL","../Data.Bifunctor/index.js":"e2Wc","../Data.Boolean/index.js":"ObQr","../Data.Eq/index.js":"Pq4F","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.NonEmpty/index.js":"qF8i","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Semigroup.Foldable/index.js":"htAR","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable1/index.js":"S0Nl","../Unsafe.Coerce/index.js":"ETUV"}],"Lgnc":[function(require,module,exports) {
"use strict";

var AVar = function () {
  function MutableQueue() {
    this.head = null;
    this.last = null;
    this.size = 0;
  }

  function MutableCell(queue, value) {
    this.queue = queue;
    this.value = value;
    this.next = null;
    this.prev = null;
  }

  function AVar(value) {
    this.draining = false;
    this.error = null;
    this.value = value;
    this.takes = new MutableQueue();
    this.reads = new MutableQueue();
    this.puts = new MutableQueue();
  }

  var EMPTY = {};

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function putLast(queue, value) {
    var cell = new MutableCell(queue, value);

    switch (queue.size) {
      case 0:
        queue.head = cell;
        break;

      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;

      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
    }

    queue.size++;
    return cell;
  }

  function takeLast(queue) {
    var cell;

    switch (queue.size) {
      case 0:
        return null;

      case 1:
        cell = queue.head;
        queue.head = null;
        break;

      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;

      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
    }

    cell.prev = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function takeHead(queue) {
    var cell;

    switch (queue.size) {
      case 0:
        return null;

      case 1:
        cell = queue.head;
        queue.head = null;
        break;

      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;

      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
    }

    cell.next = null;
    cell.queue = null;
    queue.size--;
    return cell.value;
  }

  function deleteCell(cell) {
    if (cell.queue === null) {
      return;
    }

    if (cell.queue.last === cell) {
      takeLast(cell.queue);
      return;
    }

    if (cell.queue.head === cell) {
      takeHead(cell.queue);
      return;
    }

    if (cell.prev) {
      cell.prev.next = cell.next;
    }

    if (cell.next) {
      cell.next.prev = cell.prev;
    }

    cell.queue.size--;
    cell.queue = null;
    cell.value = null;
    cell.next = null;
    cell.prev = null;
  }

  function drainVar(util, avar) {
    if (avar.draining) {
      return;
    }

    var ps = avar.puts;
    var ts = avar.takes;
    var rs = avar.reads;
    var p, r, t, value, rsize;
    avar.draining = true;

    while (1) {
      // eslint-disable-line no-constant-condition
      p = null;
      r = null;
      t = null;
      value = avar.value;
      rsize = rs.size;

      if (avar.error !== null) {
        value = util.left(avar.error);

        while (p = takeHead(ps)) {
          // eslint-disable-line no-cond-assign
          runEff(p.cb(value));
        }

        while (r = takeHead(rs)) {
          // eslint-disable-line no-cond-assign
          runEff(r(value));
        }

        while (t = takeHead(ts)) {
          // eslint-disable-line no-cond-assign
          runEff(t(value));
        }

        break;
      } // Process the next put. We do not immediately invoke the callback
      // because we want to preserve ordering. If there are takes/reads
      // we want to run those first.


      if (value === EMPTY && (p = takeHead(ps))) {
        avar.value = value = p.value;
      }

      if (value !== EMPTY) {
        // We go ahead and queue up the next take for the same reasons as
        // above. Invoking the read callbacks can affect the mutable queue.
        t = takeHead(ts); // We only want to process the reads queued up before running these
        // callbacks so we guard on rsize.

        while (rsize-- && (r = takeHead(rs))) {
          runEff(r(util.right(value)));
        }

        if (t !== null) {
          avar.value = EMPTY;
          runEff(t(util.right(value)));
        }
      }

      if (p !== null) {
        runEff(p.cb(util.right(void 0)));
      } // Callbacks could have queued up more items so we need to guard on the
      // actual mutable properties.


      if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
        break;
      }
    }

    avar.draining = false;
  }

  AVar.EMPTY = EMPTY;
  AVar.putLast = putLast;
  AVar.takeLast = takeLast;
  AVar.takeHead = takeHead;
  AVar.deleteCell = deleteCell;
  AVar.drainVar = drainVar;
  return AVar;
}();

exports.empty = function () {
  return new AVar(AVar.EMPTY);
};

exports._newVar = function (value) {
  return function () {
    return new AVar(value);
  };
};

exports._killVar = function (util, error, avar) {
  return function () {
    if (avar.error === null) {
      avar.error = error;
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
    }
  };
};

exports._putVar = function (util, value, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.puts, {
      cb: cb,
      value: value
    });
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._takeVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.takes, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._readVar = function (util, avar, cb) {
  return function () {
    var cell = AVar.putLast(avar.reads, cb);
    AVar.drainVar(util, avar);
    return function () {
      AVar.deleteCell(cell);
    };
  };
};

exports._tryPutVar = function (util, value, avar) {
  return function () {
    if (avar.value === AVar.EMPTY && avar.error === null) {
      avar.value = value;
      AVar.drainVar(util, avar);
      return true;
    } else {
      return false;
    }
  };
};

exports._tryTakeVar = function (util, avar) {
  return function () {
    var value = avar.value;

    if (value === AVar.EMPTY) {
      return util.nothing;
    } else {
      avar.value = AVar.EMPTY;
      AVar.drainVar(util, avar);
      return util.just(value);
    }
  };
};

exports._tryReadVar = function (util, avar) {
  return function () {
    if (avar.value === AVar.EMPTY) {
      return util.nothing;
    } else {
      return util.just(avar.value);
    }
  };
};

exports._status = function (util, avar) {
  return function () {
    if (avar.error) {
      return util.killed(avar.error);
    }

    if (avar.value === AVar.EMPTY) {
      return util.empty;
    }

    return util.filled(avar.value);
  };
};
},{}],"XiHq":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Killed = function () {
  function Killed(value0) {
    this.value0 = value0;
  }

  ;

  Killed.create = function (value0) {
    return new Killed(value0);
  };

  return Killed;
}();

var Filled = function () {
  function Filled(value0) {
    this.value0 = value0;
  }

  ;

  Filled.create = function (value0) {
    return new Filled(value0);
  };

  return Filled;
}();

var Empty = function () {
  function Empty() {}

  ;
  Empty.value = new Empty();
  return Empty;
}();

var $$new = $foreign["_newVar"];

var isKilled = function isKilled(v) {
  if (v instanceof Killed) {
    return true;
  }

  ;
  return false;
};

var isFilled = function isFilled(v) {
  if (v instanceof Filled) {
    return true;
  }

  ;
  return false;
};

var isEmpty = function isEmpty(v) {
  if (v instanceof Empty) {
    return true;
  }

  ;
  return false;
};

var ffiUtil = {
  left: Data_Either.Left.create,
  right: Data_Either.Right.create,
  nothing: Data_Maybe.Nothing.value,
  just: Data_Maybe.Just.create,
  killed: Killed.create,
  filled: Filled.create,
  empty: Empty.value
};

var kill = function kill(err) {
  return function (avar) {
    return $foreign["_killVar"](ffiUtil, err, avar);
  };
};

var put = function put(value) {
  return function (avar) {
    return function (cb) {
      return $foreign["_putVar"](ffiUtil, value, avar, cb);
    };
  };
};

var read = function read(avar) {
  return function (cb) {
    return $foreign["_readVar"](ffiUtil, avar, cb);
  };
};

var status = function status(avar) {
  return $foreign["_status"](ffiUtil, avar);
};

var take = function take(avar) {
  return function (cb) {
    return $foreign["_takeVar"](ffiUtil, avar, cb);
  };
};

var tryPut = function tryPut(value) {
  return function (avar) {
    return $foreign["_tryPutVar"](ffiUtil, value, avar);
  };
};

var tryRead = function tryRead(avar) {
  return $foreign["_tryReadVar"](ffiUtil, avar);
};

var tryTake = function tryTake(avar) {
  return $foreign["_tryTakeVar"](ffiUtil, avar);
};

module.exports = {
  Killed: Killed,
  Filled: Filled,
  Empty: Empty,
  "new": $$new,
  take: take,
  tryTake: tryTake,
  put: put,
  tryPut: tryPut,
  read: read,
  tryRead: tryRead,
  kill: kill,
  status: status,
  isEmpty: isEmpty,
  isFilled: isFilled,
  isKilled: isKilled,
  empty: $foreign.empty
};
},{"./foreign.js":"Lgnc","../Data.Either/index.js":"B2JL","../Data.Maybe/index.js":"mN7T"}],"idq0":[function(require,module,exports) {
/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */

/* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */
"use strict";

var Aff = function () {
  // A unique value for empty.
  var EMPTY = {};
  /*
   An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.
   data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)
   */

  var PURE = "Pure";
  var THROW = "Throw";
  var CATCH = "Catch";
  var SYNC = "Sync";
  var ASYNC = "Async";
  var BIND = "Bind";
  var BRACKET = "Bracket";
  var FORK = "Fork";
  var SEQ = "Sequential";
  /*
   data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)
   */

  var MAP = "Map";
  var APPLY = "Apply";
  var ALT = "Alt"; // Various constructors used in interpretation

  var CONS = "Cons"; // Cons-list, for stacks

  var RESUME = "Resume"; // Continue indiscriminately

  var RELEASE = "Release"; // Continue with bracket finalizers

  var FINALIZER = "Finalizer"; // A non-interruptible effect

  var FINALIZED = "Finalized"; // Marker for finalization

  var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack

  var FIBER = "Fiber"; // Actual fiber reference

  var THUNK = "Thunk"; // Primed effect, ready to invoke

  function Aff(tag, _1, _2, _3) {
    this.tag = tag;
    this._1 = _1;
    this._2 = _2;
    this._3 = _3;
  }

  function AffCtr(tag) {
    var fn = function fn(_1, _2, _3) {
      return new Aff(tag, _1, _2, _3);
    };

    fn.tag = tag;
    return fn;
  }

  function nonCanceler(error) {
    return new Aff(PURE, void 0);
  }

  function runEff(eff) {
    try {
      eff();
    } catch (error) {
      setTimeout(function () {
        throw error;
      }, 0);
    }
  }

  function runSync(left, right, eff) {
    try {
      return right(eff());
    } catch (error) {
      return left(error);
    }
  }

  function runAsync(left, eff, k) {
    try {
      return eff(k)();
    } catch (error) {
      k(left(error))();
      return nonCanceler;
    }
  }

  var Scheduler = function () {
    var limit = 1024;
    var size = 0;
    var ix = 0;
    var queue = new Array(limit);
    var draining = false;

    function drain() {
      var thunk;
      draining = true;

      while (size !== 0) {
        size--;
        thunk = queue[ix];
        queue[ix] = void 0;
        ix = (ix + 1) % limit;
        thunk();
      }

      draining = false;
    }

    return {
      isDraining: function isDraining() {
        return draining;
      },
      enqueue: function enqueue(cb) {
        var i, tmp;

        if (size === limit) {
          tmp = draining;
          drain();
          draining = tmp;
        }

        queue[(ix + size) % limit] = cb;
        size++;

        if (!draining) {
          drain();
        }
      }
    };
  }();

  function Supervisor(util) {
    var fibers = {};
    var fiberId = 0;
    var count = 0;
    return {
      register: function register(fiber) {
        var fid = fiberId++;
        fiber.onComplete({
          rethrow: true,
          handler: function handler(result) {
            return function () {
              count--;
              delete fibers[fid];
            };
          }
        })();
        fibers[fid] = fiber;
        count++;
      },
      isEmpty: function isEmpty() {
        return count === 0;
      },
      killAll: function killAll(killError, cb) {
        return function () {
          if (count === 0) {
            return cb();
          }

          var killCount = 0;
          var kills = {};

          function kill(fid) {
            kills[fid] = fibers[fid].kill(killError, function (result) {
              return function () {
                delete kills[fid];
                killCount--;

                if (util.isLeft(result) && util.fromLeft(result)) {
                  setTimeout(function () {
                    throw util.fromLeft(result);
                  }, 0);
                }

                if (killCount === 0) {
                  cb();
                }
              };
            })();
          }

          for (var k in fibers) {
            if (fibers.hasOwnProperty(k)) {
              killCount++;
              kill(k);
            }
          }

          fibers = {};
          fiberId = 0;
          count = 0;
          return function (error) {
            return new Aff(SYNC, function () {
              for (var k in kills) {
                if (kills.hasOwnProperty(k)) {
                  kills[k]();
                }
              }
            });
          };
        };
      }
    };
  } // Fiber state machine


  var SUSPENDED = 0; // Suspended, pending a join.

  var CONTINUE = 1; // Interpret the next instruction.

  var STEP_BIND = 2; // Apply the next bind.

  var STEP_RESULT = 3; // Handle potential failure from a result.

  var PENDING = 4; // An async effect is running.

  var RETURN = 5; // The current stack has returned.

  var COMPLETED = 6; // The entire fiber has completed.

  function Fiber(util, supervisor, aff) {
    // Monotonically increasing tick, increased on each asynchronous turn.
    var runTick = 0; // The current branch of the state machine.

    var status = SUSPENDED; // The current point of interest for the state machine branch.

    var step = aff; // Successful step

    var fail = null; // Failure step

    var interrupt = null; // Asynchronous interrupt
    // Stack of continuations for the current fiber.

    var bhead = null;
    var btail = null; // Stack of attempts and finalizers for error recovery. Every `Cons` is also
    // tagged with current `interrupt` state. We use this to track which items
    // should be ignored or evaluated as a result of a kill.

    var attempts = null; // A special state is needed for Bracket, because it cannot be killed. When
    // we enter a bracket acquisition or finalizer, we increment the counter,
    // and then decrement once complete.

    var bracketCount = 0; // Each join gets a new id so they can be revoked.

    var joinId = 0;
    var joins = null;
    var rethrow = true; // Each invocation of `run` requires a tick. When an asynchronous effect is
    // resolved, we must check that the local tick coincides with the fiber
    // tick before resuming. This prevents multiple async continuations from
    // accidentally resuming the same fiber. A common example may be invoking
    // the provided callback in `makeAff` more than once, but it may also be an
    // async effect resuming after the fiber was already cancelled.

    function _run(localRunTick) {
      var tmp, result, attempt;

      while (true) {
        tmp = null;
        result = null;
        attempt = null;

        switch (status) {
          case STEP_BIND:
            status = CONTINUE;

            try {
              step = bhead(step);

              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail = util.left(e);
              step = null;
            }

            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail = step;
              step = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step = util.fromRight(step);
            }

            break;

          case CONTINUE:
            switch (step.tag) {
              case BIND:
                if (bhead) {
                  btail = new Aff(CONS, bhead, btail);
                }

                bhead = step._2;
                status = CONTINUE;
                step = step._1;
                break;

              case PURE:
                if (bhead === null) {
                  status = RETURN;
                  step = util.right(step._1);
                } else {
                  status = STEP_BIND;
                  step = step._1;
                }

                break;

              case SYNC:
                status = STEP_RESULT;
                step = runSync(util.left, util.right, step._1);
                break;

              case ASYNC:
                status = PENDING;
                step = runAsync(util.left, step._1, function (result) {
                  return function () {
                    if (runTick !== localRunTick) {
                      return;
                    }

                    runTick++;
                    Scheduler.enqueue(function () {
                      // It's possible to interrupt the fiber between enqueuing and
                      // resuming, so we need to check that the runTick is still
                      // valid.
                      if (runTick !== localRunTick + 1) {
                        return;
                      }

                      status = STEP_RESULT;
                      step = result;

                      _run(runTick);
                    });
                  };
                });
                return;

              case THROW:
                status = RETURN;
                fail = util.left(step._1);
                step = null;
                break;
              // Enqueue the Catch so that we can call the error handler later on
              // in case of an exception.

              case CATCH:
                if (bhead === null) {
                  attempts = new Aff(CONS, step, attempts, interrupt);
                } else {
                  attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }

                bhead = null;
                btail = null;
                status = CONTINUE;
                step = step._1;
                break;
              // Enqueue the Bracket so that we can call the appropriate handlers
              // after resource acquisition.

              case BRACKET:
                bracketCount++;

                if (bhead === null) {
                  attempts = new Aff(CONS, step, attempts, interrupt);
                } else {
                  attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                }

                bhead = null;
                btail = null;
                status = CONTINUE;
                step = step._1;
                break;

              case FORK:
                status = STEP_RESULT;
                tmp = Fiber(util, supervisor, step._2);

                if (supervisor) {
                  supervisor.register(tmp);
                }

                if (step._1) {
                  tmp.run();
                }

                step = util.right(tmp);
                break;

              case SEQ:
                status = CONTINUE;
                step = sequential(util, supervisor, step._1);
                break;
            }

            break;

          case RETURN:
            bhead = null;
            btail = null; // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.

            if (attempts === null) {
              status = COMPLETED;
              step = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp = attempts._3;
              attempt = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
                // We cannot recover from an unmasked interrupt. Otherwise we should
                // continue stepping, or run the exception handler if an exception
                // was raised.
                case CATCH:
                  // We should compare the interrupt status as well because we
                  // only want it to apply if there has been an interrupt since
                  // enqueuing the catch.
                  if (interrupt && interrupt !== tmp && bracketCount === 0) {
                    status = RETURN;
                  } else if (fail) {
                    status = CONTINUE;
                    step = attempt._2(util.fromLeft(fail));
                    fail = null;
                  }

                  break;
                // We cannot resume from an unmasked interrupt or exception.

                case RESUME:
                  // As with Catch, we only want to ignore in the case of an
                  // interrupt since enqueing the item.
                  if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                    status = RETURN;
                  } else {
                    bhead = attempt._1;
                    btail = attempt._2;
                    status = STEP_BIND;
                    step = util.fromRight(step);
                  }

                  break;
                // If we have a bracket, we should enqueue the handlers,
                // and continue with the success branch only if the fiber has
                // not been interrupted. If the bracket acquisition failed, we
                // should not run either.

                case BRACKET:
                  bracketCount--;

                  if (fail === null) {
                    result = util.fromRight(step); // We need to enqueue the Release with the same interrupt
                    // status as the Bracket that is initiating it.

                    attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp); // We should only coninue as long as the interrupt status has not changed or
                    // we are currently within a non-interruptable finalizer.

                    if (interrupt === tmp || bracketCount > 0) {
                      status = CONTINUE;
                      step = attempt._3(result);
                    }
                  }

                  break;
                // Enqueue the appropriate handler. We increase the bracket count
                // because it should not be cancelled.

                case RELEASE:
                  attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                  status = CONTINUE; // It has only been killed if the interrupt status has changed
                  // since we enqueued the item, and the bracket count is 0. If the
                  // bracket count is non-zero then we are in a masked state so it's
                  // impossible to be killed.

                  if (interrupt && interrupt !== tmp && bracketCount === 0) {
                    step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                  } else if (fail) {
                    step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                  } else {
                    step = attempt._1.completed(util.fromRight(step))(attempt._2);
                  }

                  fail = null;
                  bracketCount++;
                  break;

                case FINALIZER:
                  bracketCount++;
                  attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                  status = CONTINUE;
                  step = attempt._1;
                  break;

                case FINALIZED:
                  bracketCount--;
                  status = RETURN;
                  step = attempt._1;
                  fail = attempt._2;
                  break;
              }
            }

            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }

            joins = null; // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.

            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0); // If we have an unhandled exception, and no other fiber has joined
              // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }

            return;

          case SUSPENDED:
            status = CONTINUE;
            break;

          case PENDING:
            return;
        }
      }
    }

    function onComplete(join) {
      return function () {
        if (status === COMPLETED) {
          rethrow = rethrow && join.rethrow;
          join.handler(step)();
          return function () {};
        }

        var jid = joinId++;
        joins = joins || {};
        joins[jid] = join;
        return function () {
          if (joins !== null) {
            delete joins[jid];
          }
        };
      };
    }

    function kill(error, cb) {
      return function () {
        if (status === COMPLETED) {
          cb(util.right(void 0))();
          return function () {};
        }

        var canceler = onComplete({
          rethrow: false,
          handler: function handler() {
            return cb(util.right(void 0));
          }
        })();

        switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status = COMPLETED;
            step = interrupt;

            _run(runTick);

            break;

          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }

            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }

              status = RETURN;
              step = null;
              fail = null;

              _run(++runTick);
            }

            break;

          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }

            if (bracketCount === 0) {
              status = RETURN;
              step = null;
              fail = null;
            }

        }

        return canceler;
      };
    }

    function join(cb) {
      return function () {
        var canceler = onComplete({
          rethrow: false,
          handler: cb
        })();

        if (status === SUSPENDED) {
          _run(runTick);
        }

        return canceler;
      };
    }

    return {
      kill: kill,
      join: join,
      onComplete: onComplete,
      isSuspended: function isSuspended() {
        return status === SUSPENDED;
      },
      run: function run() {
        if (status === SUSPENDED) {
          if (!Scheduler.isDraining()) {
            Scheduler.enqueue(function () {
              _run(runTick);
            });
          } else {
            _run(runTick);
          }
        }
      }
    };
  }

  function runPar(util, supervisor, par, cb) {
    // Table of all forked fibers.
    var fiberId = 0;
    var fibers = {}; // Table of currently running cancelers, as a product of `Alt` behavior.

    var killId = 0;
    var kills = {}; // Error used for early cancelation on Alt branches.

    var early = new Error("[ParAff] Early exit"); // Error used to kill the entire tree.

    var interrupt = null; // The root pointer of the tree.

    var root = EMPTY; // Walks a tree, invoking all the cancelers. Returns the table of pending
    // cancellation fibers.

    function kill(error, par, cb) {
      var step = par;
      var head = null;
      var tail = null;
      var count = 0;
      var kills = {};
      var tmp, kid;

      loop: while (true) {
        tmp = null;

        switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;

                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            } // Terminal case.


            if (head === null) {
              break loop;
            } // Go down the right side of the tree.


            step = head._2;

            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }

            break;

          case MAP:
            step = step._2;
            break;

          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }

            head = step;
            step = step._1;
            break;
        }
      }

      if (count === 0) {
        cb(util.right(void 0))();
      } else {
        // Run the cancelation effects. We alias `count` because it's mutable.
        kid = 0;
        tmp = count;

        for (; kid < tmp; kid++) {
          kills[kid] = kills[kid]();
        }
      }

      return kills;
    } // When a fiber resolves, we need to bubble back up the tree with the
    // result, computing the applicative nodes.


    function join(result, head, tail) {
      var fail, step, lhs, rhs, tmp, kid;

      if (util.isLeft(result)) {
        fail = result;
        step = null;
      } else {
        step = result;
        fail = null;
      }

      loop: while (true) {
        lhs = null;
        rhs = null;
        tmp = null;
        kid = null; // We should never continue if the entire tree has been interrupted.

        if (interrupt !== null) {
          return;
        } // We've made it all the way to the root of the tree, which means
        // the tree has fully evaluated.


        if (head === null) {
          cb(fail || step)();
          return;
        } // The tree has already been computed, so we shouldn't try to do it
        // again. This should never happen.
        // TODO: Remove this?


        if (head._3 !== EMPTY) {
          return;
        }

        switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step = head._3;
            } else {
              head._3 = fail;
            }

            break;

          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3; // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.

            if (fail) {
              head._3 = fail;
              tmp = true;
              kid = killId++;
              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function () {
                return function () {
                  delete kills[kid];

                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }

            break;

          case ALT:
            lhs = head._1._3;
            rhs = head._2._3; // We can only proceed if both have resolved or we have a success

            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            } // If both sides resolve with an error, we should continue with the
            // first error


            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail = step === lhs ? rhs : lhs;
              step = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp = true;
              kid = killId++; // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.

              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function () {
                return function () {
                  delete kills[kid];

                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }

            break;
        }

        if (tail === null) {
          head = null;
        } else {
          head = tail._1;
          tail = tail._2;
        }
      }
    }

    function resolve(fiber) {
      return function (result) {
        return function () {
          delete fibers[fiber._1];
          fiber._3 = result;
          join(result, fiber._2._1, fiber._2._2);
        };
      };
    } // Walks the applicative tree, substituting non-applicative nodes with
    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
    // as a mutable slot for memoization. In an unresolved state, the `_3`
    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
    // the left side first, because both operations are left-associative. As
    // we `RETURN` from those branches, we then walk the right side.


    function run() {
      var status = CONTINUE;
      var step = par;
      var head = null;
      var tail = null;
      var tmp, fid;

      loop: while (true) {
        tmp = null;
        fid = null;

        switch (status) {
          case CONTINUE:
            switch (step.tag) {
              case MAP:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(MAP, step._1, EMPTY, EMPTY);
                step = step._2;
                break;

              case APPLY:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                step = step._1;
                break;

              case ALT:
                if (head) {
                  tail = new Aff(CONS, head, tail);
                }

                head = new Aff(ALT, EMPTY, step._2, EMPTY);
                step = step._1;
                break;

              default:
                // When we hit a leaf value, we suspend the stack in the `FORKED`.
                // When the fiber resolves, it can bubble back up the tree.
                fid = fiberId++;
                status = RETURN;
                tmp = step;
                step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                tmp = Fiber(util, supervisor, tmp);
                tmp.onComplete({
                  rethrow: false,
                  handler: resolve(step)
                })();
                fibers[fid] = tmp;

                if (supervisor) {
                  supervisor.register(tmp);
                }

            }

            break;

          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            } // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.


            if (head._1 === EMPTY) {
              head._1 = step;
              status = CONTINUE;
              step = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step = head;

              if (tail === null) {
                head = null;
              } else {
                head = tail._1;
                tail = tail._2;
              }
            }

        }
      } // Keep a reference to the tree root so it can be cancelled.


      root = step;

      for (fid = 0; fid < fiberId; fid++) {
        fibers[fid].run();
      }
    } // Cancels the entire tree. If there are already subtrees being canceled,
    // we need to first cancel those joins. We will then add fresh joins for
    // all pending branches including those that were in the process of being
    // canceled.


    function cancel(error, cb) {
      interrupt = util.left(error);
      var innerKills;

      for (var kid in kills) {
        if (kills.hasOwnProperty(kid)) {
          innerKills = kills[kid];

          for (kid in innerKills) {
            if (innerKills.hasOwnProperty(kid)) {
              innerKills[kid]();
            }
          }
        }
      }

      kills = null;
      var newKills = kill(error, root, cb);
      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            for (var kid in newKills) {
              if (newKills.hasOwnProperty(kid)) {
                newKills[kid]();
              }
            }

            return nonCanceler;
          };
        });
      };
    }

    run();
    return function (killError) {
      return new Aff(ASYNC, function (killCb) {
        return function () {
          return cancel(killError, killCb);
        };
      });
    };
  }

  function sequential(util, supervisor, par) {
    return new Aff(ASYNC, function (cb) {
      return function () {
        return runPar(util, supervisor, par, cb);
      };
    });
  }

  Aff.EMPTY = EMPTY;
  Aff.Pure = AffCtr(PURE);
  Aff.Throw = AffCtr(THROW);
  Aff.Catch = AffCtr(CATCH);
  Aff.Sync = AffCtr(SYNC);
  Aff.Async = AffCtr(ASYNC);
  Aff.Bind = AffCtr(BIND);
  Aff.Bracket = AffCtr(BRACKET);
  Aff.Fork = AffCtr(FORK);
  Aff.Seq = AffCtr(SEQ);
  Aff.ParMap = AffCtr(MAP);
  Aff.ParApply = AffCtr(APPLY);
  Aff.ParAlt = AffCtr(ALT);
  Aff.Fiber = Fiber;
  Aff.Supervisor = Supervisor;
  Aff.Scheduler = Scheduler;
  Aff.nonCanceler = nonCanceler;
  return Aff;
}();

exports._pure = Aff.Pure;
exports._throwError = Aff.Throw;

exports._catchError = function (aff) {
  return function (k) {
    return Aff.Catch(aff, k);
  };
};

exports._map = function (f) {
  return function (aff) {
    if (aff.tag === Aff.Pure.tag) {
      return Aff.Pure(f(aff._1));
    } else {
      return Aff.Bind(aff, function (value) {
        return Aff.Pure(f(value));
      });
    }
  };
};

exports._bind = function (aff) {
  return function (k) {
    return Aff.Bind(aff, k);
  };
};

exports._fork = function (immediate) {
  return function (aff) {
    return Aff.Fork(immediate, aff);
  };
};

exports._liftEffect = Aff.Sync;

exports._parAffMap = function (f) {
  return function (aff) {
    return Aff.ParMap(f, aff);
  };
};

exports._parAffApply = function (aff1) {
  return function (aff2) {
    return Aff.ParApply(aff1, aff2);
  };
};

exports._parAffAlt = function (aff1) {
  return function (aff2) {
    return Aff.ParAlt(aff1, aff2);
  };
};

exports.makeAff = Aff.Async;

exports.generalBracket = function (acquire) {
  return function (options) {
    return function (k) {
      return Aff.Bracket(acquire, options, k);
    };
  };
};

exports._makeFiber = function (util, aff) {
  return function () {
    return Aff.Fiber(util, null, aff);
  };
};

exports._makeSupervisedFiber = function (util, aff) {
  return function () {
    var supervisor = Aff.Supervisor(util);
    return {
      fiber: Aff.Fiber(util, supervisor, aff),
      supervisor: supervisor
    };
  };
};

exports._killAll = function (error, supervisor, cb) {
  return supervisor.killAll(error, cb);
};

exports._delay = function () {
  function setDelay(n, k) {
    if (n === 0 && typeof setImmediate !== "undefined") {
      return setImmediate(k);
    } else {
      return setTimeout(k, n);
    }
  }

  function clearDelay(n, t) {
    if (n === 0 && typeof clearImmediate !== "undefined") {
      return clearImmediate(t);
    } else {
      return clearTimeout(t);
    }
  }

  return function (right, ms) {
    return Aff.Async(function (cb) {
      return function () {
        var timer = setDelay(ms, cb(right()));
        return function () {
          return Aff.Sync(function () {
            return right(clearDelay(ms, timer));
          });
        };
      };
    });
  };
}();

exports._sequential = Aff.Seq;
},{}],"LNK1":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var parTraverse_ = function parTraverse_(dictParallel) {
  return function (dictFoldable) {
    return function (f) {
      var $17 = Control_Parallel_Class.sequential(dictParallel);
      var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function () {
        var $20 = Control_Parallel_Class.parallel(dictParallel);
        return function ($21) {
          return $20(f($21));
        };
      }());
      return function ($19) {
        return $17($18($19));
      };
    };
  };
};

var parTraverse = function parTraverse(dictParallel) {
  return function (dictTraversable) {
    return function (f) {
      var $22 = Control_Parallel_Class.sequential(dictParallel);
      var $23 = Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function () {
        var $25 = Control_Parallel_Class.parallel(dictParallel);
        return function ($26) {
          return $25(f($26));
        };
      }());
      return function ($24) {
        return $22($23($24));
      };
    };
  };
};

var parSequence_ = function parSequence_(dictParallel) {
  return function (dictFoldable) {
    return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var parSequence = function parSequence(dictParallel) {
  return function (dictTraversable) {
    return parTraverse(dictParallel)(dictTraversable)(Control_Category.identity(Control_Category.categoryFn));
  };
};

var parOneOfMap = function parOneOfMap(dictParallel) {
  return function (dictAlternative) {
    return function (dictFoldable) {
      return function (dictFunctor) {
        return function (f) {
          var $27 = Control_Parallel_Class.sequential(dictParallel);
          var $28 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(function () {
            var $30 = Control_Parallel_Class.parallel(dictParallel);
            return function ($31) {
              return $30(f($31));
            };
          }());
          return function ($29) {
            return $27($28($29));
          };
        };
      };
    };
  };
};

var parOneOf = function parOneOf(dictParallel) {
  return function (dictAlternative) {
    return function (dictFoldable) {
      return function (dictFunctor) {
        var $32 = Control_Parallel_Class.sequential(dictParallel);
        var $33 = Data_Foldable.oneOfMap(dictFoldable)(dictAlternative.Plus1())(Control_Parallel_Class.parallel(dictParallel));
        return function ($34) {
          return $32($33($34));
        };
      };
    };
  };
};

var parApply = function parApply(dictParallel) {
  return function (mf) {
    return function (ma) {
      return Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Control_Parallel_Class.parallel(dictParallel)(mf))(Control_Parallel_Class.parallel(dictParallel)(ma)));
    };
  };
};

module.exports = {
  parApply: parApply,
  parTraverse: parTraverse,
  parTraverse_: parTraverse_,
  parSequence: parSequence,
  parSequence_: parSequence_,
  parOneOf: parOneOf,
  parOneOfMap: parOneOfMap,
  ParCont: Control_Parallel_Class.ParCont,
  Parallel: Control_Parallel_Class.Parallel,
  parallel: Control_Parallel_Class.parallel,
  sequential: Control_Parallel_Class.sequential
};
},{"../Control.Apply/index.js":"QcLv","../Control.Category/index.js":"IAi2","../Control.Parallel.Class/index.js":"NR5l","../Data.Foldable/index.js":"eVDl","../Data.Traversable/index.js":"n7EE"}],"AnkF":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Seconds = function Seconds(x) {
  return x;
};

var Minutes = function Minutes(x) {
  return x;
};

var Milliseconds = function Milliseconds(x) {
  return x;
};

var Hours = function Hours(x) {
  return x;
};

var Duration = function Duration(fromDuration, toDuration) {
  this.fromDuration = fromDuration;
  this.toDuration = toDuration;
};

var Days = function Days(x) {
  return x;
};

var toDuration = function toDuration(dict) {
  return dict.toDuration;
};

var showSeconds = new Data_Show.Show(function (v) {
  return "(Seconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMinutes = new Data_Show.Show(function (v) {
  return "(Minutes " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showMilliseconds = new Data_Show.Show(function (v) {
  return "(Milliseconds " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showHours = new Data_Show.Show(function (v) {
  return "(Hours " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var showDays = new Data_Show.Show(function (v) {
  return "(Days " + (Data_Show.show(Data_Show.showNumber)(v) + ")");
});
var semigroupSeconds = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var semigroupMinutes = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var semigroupMilliseconds = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var semigroupHours = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var semigroupDays = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return v + v1;
  };
});
var ordSeconds = Data_Ord.ordNumber;
var ordMinutes = Data_Ord.ordNumber;
var ordMilliseconds = Data_Ord.ordNumber;
var ordHours = Data_Ord.ordNumber;
var ordDays = Data_Ord.ordNumber;
var newtypeSeconds = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeMinutes = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeMilliseconds = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeHours = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeDays = new Data_Newtype.Newtype(function () {
  return undefined;
});
var monoidSeconds = new Data_Monoid.Monoid(function () {
  return semigroupSeconds;
}, 0.0);
var monoidMinutes = new Data_Monoid.Monoid(function () {
  return semigroupMinutes;
}, 0.0);
var monoidMilliseconds = new Data_Monoid.Monoid(function () {
  return semigroupMilliseconds;
}, 0.0);
var monoidHours = new Data_Monoid.Monoid(function () {
  return semigroupHours;
}, 0.0);
var monoidDays = new Data_Monoid.Monoid(function () {
  return semigroupDays;
}, 0.0);

var fromDuration = function fromDuration(dict) {
  return dict.fromDuration;
};

var negateDuration = function negateDuration(dictDuration) {
  var $41 = toDuration(dictDuration);
  var $42 = Data_Newtype.over()()(Milliseconds)(Data_Ring.negate(Data_Ring.ringNumber));
  var $43 = fromDuration(dictDuration);
  return function ($44) {
    return $41($42($43($44)));
  };
};

var eqSeconds = Data_Eq.eqNumber;
var eqMinutes = Data_Eq.eqNumber;
var eqMilliseconds = Data_Eq.eqNumber;
var eqHours = Data_Eq.eqNumber;
var eqDays = Data_Eq.eqNumber;
var durationSeconds = new Duration(Data_Newtype.over()()(Seconds)(function (v) {
  return v * 1000.0;
}), Data_Newtype.over()()(Milliseconds)(function (v) {
  return v / 1000.0;
}));
var durationMinutes = new Duration(Data_Newtype.over()()(Minutes)(function (v) {
  return v * 60000.0;
}), Data_Newtype.over()()(Milliseconds)(function (v) {
  return v / 60000.0;
}));
var durationMilliseconds = new Duration(Control_Category.identity(Control_Category.categoryFn), Control_Category.identity(Control_Category.categoryFn));
var durationHours = new Duration(Data_Newtype.over()()(Hours)(function (v) {
  return v * 3600000.0;
}), Data_Newtype.over()()(Milliseconds)(function (v) {
  return v / 3600000.0;
}));
var durationDays = new Duration(Data_Newtype.over()()(Days)(function (v) {
  return v * 8.64e7;
}), Data_Newtype.over()()(Milliseconds)(function (v) {
  return v / 8.64e7;
}));

var convertDuration = function convertDuration(dictDuration) {
  return function (dictDuration1) {
    var $45 = toDuration(dictDuration1);
    var $46 = fromDuration(dictDuration);
    return function ($47) {
      return $45($46($47));
    };
  };
};

module.exports = {
  fromDuration: fromDuration,
  toDuration: toDuration,
  Milliseconds: Milliseconds,
  Seconds: Seconds,
  Minutes: Minutes,
  Hours: Hours,
  Days: Days,
  Duration: Duration,
  convertDuration: convertDuration,
  negateDuration: negateDuration,
  newtypeMilliseconds: newtypeMilliseconds,
  eqMilliseconds: eqMilliseconds,
  ordMilliseconds: ordMilliseconds,
  semigroupMilliseconds: semigroupMilliseconds,
  monoidMilliseconds: monoidMilliseconds,
  showMilliseconds: showMilliseconds,
  newtypeSeconds: newtypeSeconds,
  eqSeconds: eqSeconds,
  ordSeconds: ordSeconds,
  semigroupSeconds: semigroupSeconds,
  monoidSeconds: monoidSeconds,
  showSeconds: showSeconds,
  newtypeMinutes: newtypeMinutes,
  eqMinutes: eqMinutes,
  ordMinutes: ordMinutes,
  semigroupMinutes: semigroupMinutes,
  monoidMinutes: monoidMinutes,
  showMinutes: showMinutes,
  newtypeHours: newtypeHours,
  eqHours: eqHours,
  ordHours: ordHours,
  semigroupHours: semigroupHours,
  monoidHours: monoidHours,
  showHours: showHours,
  newtypeDays: newtypeDays,
  eqDays: eqDays,
  ordDays: ordDays,
  semigroupDays: semigroupDays,
  monoidDays: monoidDays,
  showDays: showDays,
  durationMilliseconds: durationMilliseconds,
  durationSeconds: durationSeconds,
  durationMinutes: durationMinutes,
  durationHours: durationHours,
  durationDays: durationDays
};
},{"../Control.Category/index.js":"IAi2","../Data.Eq/index.js":"Pq4F","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Ring/index.js":"E2qH","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7"}],"pd0V":[function(require,module,exports) {
"use strict";

exports.unsafePerformEffect = function (f) {
  return f();
};
},{}],"tPW2":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  unsafePerformEffect: $foreign.unsafePerformEffect
};
},{"./foreign.js":"pd0V"}],"f5O0":[function(require,module,exports) {
"use strict"; // module Partial.Unsafe

exports._unsafePartial = function (f) {
  return f();
};
},{}],"vcP9":[function(require,module,exports) {
"use strict"; // module Partial

exports._crashWith = function (msg) {
  throw new Error(msg);
};
},{}],"HAG3":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var crashWith = function crashWith(dictPartial) {
  return $foreign["_crashWith"];
};

var crash = function crash(dictPartial) {
  return crashWith()("Partial.crash: partial function");
};

module.exports = {
  crash: crash,
  crashWith: crashWith
};
},{"./foreign.js":"vcP9"}],"aoRM":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Partial = require("../Partial/index.js");

var unsafePartial = $foreign["_unsafePartial"];

var unsafeCrashWith = function unsafeCrashWith(msg) {
  return unsafePartial(function (dictPartial) {
    return Partial.crashWith()(msg);
  });
};

module.exports = {
  unsafePartial: unsafePartial,
  unsafeCrashWith: unsafeCrashWith
};
},{"./foreign.js":"f5O0","../Partial/index.js":"HAG3"}],"I7lu":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Parallel = require("../Control.Parallel/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Time_Duration = require("../Data.Time.Duration/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var Effect_Unsafe = require("../Effect.Unsafe/index.js");

var Partial_Unsafe = require("../Partial.Unsafe/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Fiber = function Fiber(x) {
  return x;
};

var FFIUtil = function FFIUtil(x) {
  return x;
};

var Canceler = function Canceler(x) {
  return x;
};

var suspendAff = $foreign["_fork"](false);
var newtypeCanceler = new Data_Newtype.Newtype(function () {
  return undefined;
});
var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
var functorAff = new Data_Functor.Functor($foreign["_map"]);
var forkAff = $foreign["_fork"](true);

var ffiUtil = function () {
  var unsafeFromRight = function unsafeFromRight(v) {
    if (v instanceof Data_Either.Right) {
      return v.value0;
    }

    ;

    if (v instanceof Data_Either.Left) {
      return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 404, column 21 - line 406, column 54): " + [v.constructor.name]);
  };

  var unsafeFromLeft = function unsafeFromLeft(v) {
    if (v instanceof Data_Either.Left) {
      return v.value0;
    }

    ;

    if (v instanceof Data_Either.Right) {
      return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 399, column 20 - line 401, column 54): " + [v.constructor.name]);
  };

  var isLeft = function isLeft(v) {
    if (v instanceof Data_Either.Left) {
      return true;
    }

    ;

    if (v instanceof Data_Either.Right) {
      return false;
    }

    ;
    throw new Error("Failed pattern match at Effect.Aff (line 394, column 12 - line 396, column 20): " + [v.constructor.name]);
  };

  return {
    isLeft: isLeft,
    fromLeft: unsafeFromLeft,
    fromRight: unsafeFromRight,
    left: Data_Either.Left.create,
    right: Data_Either.Right.create
  };
}();

var makeFiber = function makeFiber(aff) {
  return $foreign["_makeFiber"](ffiUtil, aff);
};

var launchAff = function launchAff(aff) {
  return function __do() {
    var fiber = makeFiber(aff)();
    fiber.run();
    return fiber;
  };
};

var launchAff_ = function () {
  var $40 = Data_Functor["void"](Effect.functorEffect);
  return function ($41) {
    return $40(launchAff($41));
  };
}();

var launchSuspendedAff = makeFiber;

var delay = function delay(v) {
  return $foreign["_delay"](Data_Either.Right.create, v);
};

var bracket = function bracket(acquire) {
  return function (completed) {
    return $foreign.generalBracket(acquire)({
      killed: Data_Function["const"](completed),
      failed: Data_Function["const"](completed),
      completed: Data_Function["const"](completed)
    });
  };
};

var applyParAff = new Control_Apply.Apply(function () {
  return functorParAff;
}, $foreign["_parAffApply"]);

var semigroupParAff = function semigroupParAff(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyParAff)(Data_Semigroup.append(dictSemigroup)));
};

var monadAff = new Control_Monad.Monad(function () {
  return applicativeAff;
}, function () {
  return bindAff;
});
var bindAff = new Control_Bind.Bind(function () {
  return applyAff;
}, $foreign["_bind"]);
var applyAff = new Control_Apply.Apply(function () {
  return functorAff;
}, Control_Monad.ap(monadAff));
var applicativeAff = new Control_Applicative.Applicative(function () {
  return applyAff;
}, $foreign["_pure"]);

var cancelWith = function cancelWith(aff) {
  return function (v) {
    return $foreign.generalBracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))({
      killed: function killed(e) {
        return function (v1) {
          return v(e);
        };
      },
      failed: Data_Function["const"](Control_Applicative.pure(applicativeAff)),
      completed: Data_Function["const"](Control_Applicative.pure(applicativeAff))
    })(Data_Function["const"](aff));
  };
};

var $$finally = function $$finally(fin) {
  return function (a) {
    return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
  };
};

var invincible = function invincible(a) {
  return bracket(a)(Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit)))(Control_Applicative.pure(applicativeAff));
};

var lazyAff = new Control_Lazy.Lazy(function (f) {
  return Control_Bind.bind(bindAff)(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(f);
});

var semigroupAff = function semigroupAff(dictSemigroup) {
  return new Data_Semigroup.Semigroup(Control_Apply.lift2(applyAff)(Data_Semigroup.append(dictSemigroup)));
};

var monadEffectAff = new Effect_Class.MonadEffect(function () {
  return monadAff;
}, $foreign["_liftEffect"]);

var effectCanceler = function () {
  var $42 = Effect_Class.liftEffect(monadEffectAff);
  return function ($43) {
    return Canceler(Data_Function["const"]($42($43)));
  };
}();

var joinFiber = function joinFiber(v) {
  return $foreign.makeAff(function (k) {
    return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
  });
};

var functorFiber = new Data_Functor.Functor(function (f) {
  return function (t) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
  };
});
var applyFiber = new Control_Apply.Apply(function () {
  return functorFiber;
}, function (t1) {
  return function (t2) {
    return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Apply.apply(applyAff)(joinFiber(t1))(joinFiber(t2))));
  };
});
var applicativeFiber = new Control_Applicative.Applicative(function () {
  return applyFiber;
}, function (a) {
  return Effect_Unsafe.unsafePerformEffect(makeFiber(Control_Applicative.pure(applicativeAff)(a)));
});

var killFiber = function killFiber(e) {
  return function (v) {
    return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
      if (v1) {
        return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
      }

      ;
      return $foreign.makeAff(function (k) {
        return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
      });
    });
  };
};

var fiberCanceler = function () {
  var $44 = Data_Function.flip(killFiber);
  return function ($45) {
    return Canceler($44($45));
  };
}();

var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
  return monadAff;
}, $foreign["_throwError"]);
var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
  return monadThrowAff;
}, $foreign["_catchError"]);
var attempt = Control_Monad_Error_Class["try"](monadErrorAff);

var runAff = function runAff(k) {
  return function (aff) {
    return launchAff(Control_Bind.bindFlipped(bindAff)(function () {
      var $46 = Effect_Class.liftEffect(monadEffectAff);
      return function ($47) {
        return $46(k($47));
      };
    }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
  };
};

var runAff_ = function runAff_(k) {
  return function (aff) {
    return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
  };
};

var runSuspendedAff = function runSuspendedAff(k) {
  return function (aff) {
    return launchSuspendedAff(Control_Bind.bindFlipped(bindAff)(function () {
      var $48 = Effect_Class.liftEffect(monadEffectAff);
      return function ($49) {
        return $48(k($49));
      };
    }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
  };
};

var parallelAff = new Control_Parallel_Class.Parallel(function () {
  return applicativeParAff;
}, function () {
  return monadAff;
}, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
var applicativeParAff = new Control_Applicative.Applicative(function () {
  return applyParAff;
}, function () {
  var $50 = Control_Parallel_Class.parallel(parallelAff);
  var $51 = Control_Applicative.pure(applicativeAff);
  return function ($52) {
    return $50($51($52));
  };
}());

var monoidParAff = function monoidParAff(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupParAff(dictMonoid.Semigroup0());
  }, Control_Applicative.pure(applicativeParAff)(Data_Monoid.mempty(dictMonoid)));
};

var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return function (err) {
      return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([v(err), v1(err)]);
    };
  };
});

var supervise = function supervise(aff) {
  var killError = Effect_Exception.error("[Aff] Child fiber outlived parent");

  var killAll = function killAll(err) {
    return function (sup) {
      return $foreign.makeAff(function (k) {
        return $foreign["_killAll"](err, sup.supervisor, k(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Unit.unit)));
      });
    };
  };

  var acquire = function __do() {
    var sup = $foreign["_makeSupervisedFiber"](ffiUtil, aff)();
    sup.fiber.run();
    return sup;
  };

  return $foreign.generalBracket(Effect_Class.liftEffect(monadEffectAff)(acquire))({
    killed: function killed(err) {
      return function (sup) {
        return Control_Parallel.parSequence_(parallelAff)(Data_Foldable.foldableArray)([killFiber(err)(sup.fiber), killAll(err)(sup)]);
      };
    },
    failed: Data_Function["const"](killAll(killError)),
    completed: Data_Function["const"](killAll(killError))
  })(function ($53) {
    return joinFiber(function (v) {
      return v.fiber;
    }($53));
  });
};

var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
  return monadAff;
}, function (k) {
  var go = function go(a) {
    return Control_Bind.bind(bindAff)(k(a))(function (res) {
      if (res instanceof Control_Monad_Rec_Class.Done) {
        return Control_Applicative.pure(applicativeAff)(res.value0);
      }

      ;

      if (res instanceof Control_Monad_Rec_Class.Loop) {
        return go(res.value0);
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 22): " + [res.constructor.name]);
    });
  };

  return go;
});

var monoidAff = function monoidAff(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupAff(dictMonoid.Semigroup0());
  }, Control_Applicative.pure(applicativeAff)(Data_Monoid.mempty(dictMonoid)));
};

var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
var monoidCanceler = new Data_Monoid.Monoid(function () {
  return semigroupCanceler;
}, nonCanceler);
var never = $foreign.makeAff(function (v) {
  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Monoid.mempty(monoidCanceler));
});

var apathize = function () {
  var $54 = Data_Functor.map(functorAff)(Data_Function["const"](Data_Unit.unit));
  return function ($55) {
    return $54(attempt($55));
  };
}();

var altParAff = new Control_Alt.Alt(function () {
  return functorParAff;
}, $foreign["_parAffAlt"]);
var altAff = new Control_Alt.Alt(function () {
  return functorAff;
}, function (a1) {
  return function (a2) {
    return Control_Monad_Error_Class.catchError(monadErrorAff)(a1)(Data_Function["const"](a2));
  };
});
var plusAff = new Control_Plus.Plus(function () {
  return altAff;
}, Control_Monad_Error_Class.throwError(monadThrowAff)(Effect_Exception.error("Always fails")));
var plusParAff = new Control_Plus.Plus(function () {
  return altParAff;
}, Control_Parallel_Class.parallel(parallelAff)(Control_Plus.empty(plusAff)));
var alternativeParAff = new Control_Alternative.Alternative(function () {
  return applicativeParAff;
}, function () {
  return plusParAff;
});
module.exports = {
  Canceler: Canceler,
  launchAff: launchAff,
  launchAff_: launchAff_,
  launchSuspendedAff: launchSuspendedAff,
  runAff: runAff,
  runAff_: runAff_,
  runSuspendedAff: runSuspendedAff,
  forkAff: forkAff,
  suspendAff: suspendAff,
  supervise: supervise,
  attempt: attempt,
  apathize: apathize,
  delay: delay,
  never: never,
  "finally": $$finally,
  invincible: invincible,
  killFiber: killFiber,
  joinFiber: joinFiber,
  cancelWith: cancelWith,
  bracket: bracket,
  nonCanceler: nonCanceler,
  effectCanceler: effectCanceler,
  fiberCanceler: fiberCanceler,
  functorAff: functorAff,
  applyAff: applyAff,
  applicativeAff: applicativeAff,
  bindAff: bindAff,
  monadAff: monadAff,
  semigroupAff: semigroupAff,
  monoidAff: monoidAff,
  altAff: altAff,
  plusAff: plusAff,
  monadRecAff: monadRecAff,
  monadThrowAff: monadThrowAff,
  monadErrorAff: monadErrorAff,
  monadEffectAff: monadEffectAff,
  lazyAff: lazyAff,
  functorParAff: functorParAff,
  applyParAff: applyParAff,
  applicativeParAff: applicativeParAff,
  semigroupParAff: semigroupParAff,
  monoidParAff: monoidParAff,
  altParAff: altParAff,
  plusParAff: plusParAff,
  alternativeParAff: alternativeParAff,
  parallelAff: parallelAff,
  functorFiber: functorFiber,
  applyFiber: applyFiber,
  applicativeFiber: applicativeFiber,
  newtypeCanceler: newtypeCanceler,
  semigroupCanceler: semigroupCanceler,
  monoidCanceler: monoidCanceler,
  makeAff: $foreign.makeAff,
  generalBracket: $foreign.generalBracket,
  catchError: Control_Monad_Error_Class.catchError,
  throwError: Control_Monad_Error_Class.throwError,
  "try": Control_Monad_Error_Class["try"],
  parallel: Control_Parallel_Class.parallel,
  sequential: Control_Parallel_Class.sequential,
  Milliseconds: Data_Time_Duration.Milliseconds,
  error: Effect_Exception.error,
  message: Effect_Exception.message
};
},{"./foreign.js":"idq0","../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Lazy/index.js":"y9cE","../Control.Monad/index.js":"UIxr","../Control.Monad.Error.Class/index.js":"L8Lk","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Parallel/index.js":"LNK1","../Control.Parallel.Class/index.js":"NR5l","../Control.Plus/index.js":"oMBg","../Data.Either/index.js":"B2JL","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Time.Duration/index.js":"AnkF","../Data.Unit/index.js":"NhVk","../Effect/index.js":"oTWB","../Effect.Class/index.js":"dWtH","../Effect.Exception/index.js":"OCWS","../Effect.Unsafe/index.js":"tPW2","../Partial.Unsafe/index.js":"aoRM","../Unsafe.Coerce/index.js":"ETUV"}],"hACG":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Effect_AVar = require("../Effect.AVar/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var tryTake = function () {
  var $0 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  return function ($1) {
    return $0(Effect_AVar.tryTake($1));
  };
}();

var tryRead = function () {
  var $2 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  return function ($3) {
    return $2(Effect_AVar.tryRead($3));
  };
}();

var tryPut = function tryPut(value) {
  var $4 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  var $5 = Effect_AVar.tryPut(value);
  return function ($6) {
    return $4($5($6));
  };
};

var take = function take(avar) {
  return Effect_Aff.makeAff(function (k) {
    return function __do() {
      var c = Effect_AVar.take(avar)(k)();
      return Effect_Aff.effectCanceler(c);
    };
  });
};

var status = function () {
  var $7 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  return function ($8) {
    return $7(Effect_AVar.status($8));
  };
}();

var read = function read(avar) {
  return Effect_Aff.makeAff(function (k) {
    return function __do() {
      var c = Effect_AVar.read(avar)(k)();
      return Effect_Aff.effectCanceler(c);
    };
  });
};

var put = function put(value) {
  return function (avar) {
    return Effect_Aff.makeAff(function (k) {
      return function __do() {
        var c = Effect_AVar.put(value)(avar)(k)();
        return Effect_Aff.effectCanceler(c);
      };
    });
  };
};

var $$new = function () {
  var $9 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  return function ($10) {
    return $9(Effect_AVar["new"]($10));
  };
}();

var kill = function kill(error) {
  var $11 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
  var $12 = Effect_AVar.kill(error);
  return function ($13) {
    return $11($12($13));
  };
};

var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
module.exports = {
  "new": $$new,
  empty: empty,
  status: status,
  take: take,
  tryTake: tryTake,
  put: put,
  tryPut: tryPut,
  read: read,
  tryRead: tryRead,
  kill: kill,
  Empty: Effect_AVar.Empty,
  Filled: Effect_AVar.Filled,
  Killed: Effect_AVar.Killed,
  isEmpty: Effect_AVar.isEmpty,
  isFilled: Effect_AVar.isFilled,
  isKilled: Effect_AVar.isKilled
};
},{"../Effect.AVar/index.js":"XiHq","../Effect.Aff/index.js":"I7lu","../Effect.Class/index.js":"dWtH"}],"xeJt":[function(require,module,exports) {
"use strict";

exports.defer = function (thunk) {
  var v = null;
  return function () {
    if (thunk === undefined) return v;
    v = thunk();
    thunk = undefined; // eslint-disable-line no-param-reassign

    return v;
  };
};

exports.force = function (l) {
  return l();
};
},{}],"aRUE":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Functor_Invariant = require("../Data.Functor.Invariant/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Semigroup_Traversable = require("../Data.Semigroup.Traversable/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var showLazy = function showLazy(dictShow) {
  return new Data_Show.Show(function (x) {
    return "(defer \\_ -> " + (Data_Show.show(dictShow)($foreign.force(x)) + ")");
  });
};

var semiringLazy = function semiringLazy(dictSemiring) {
  return new Data_Semiring.Semiring(function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semiring.add(dictSemiring)($foreign.force(a))($foreign.force(b));
      });
    };
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semiring.mul(dictSemiring)($foreign.force(a))($foreign.force(b));
      });
    };
  }, $foreign.defer(function (v) {
    return Data_Semiring.one(dictSemiring);
  }), $foreign.defer(function (v) {
    return Data_Semiring.zero(dictSemiring);
  }));
};

var semigroupLazy = function semigroupLazy(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Semigroup.append(dictSemigroup)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var ringLazy = function ringLazy(dictRing) {
  return new Data_Ring.Ring(function () {
    return semiringLazy(dictRing.Semiring0());
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_Ring.sub(dictRing)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var monoidLazy = function monoidLazy(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupLazy(dictMonoid.Semigroup0());
  }, $foreign.defer(function (v) {
    return Data_Monoid.mempty(dictMonoid);
  }));
};

var lazyLazy = new Control_Lazy.Lazy(function (f) {
  return $foreign.defer(function (v) {
    return $foreign.force(f(Data_Unit.unit));
  });
});
var functorLazy = new Data_Functor.Functor(function (f) {
  return function (l) {
    return $foreign.defer(function (v) {
      return f($foreign.force(l));
    });
  };
});
var functorWithIndexLazy = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorLazy;
}, function (f) {
  return Data_Functor.map(functorLazy)(f(Data_Unit.unit));
});
var invariantLazy = new Data_Functor_Invariant.Invariant(Data_Functor_Invariant.imapF(functorLazy));
var foldableLazy = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (l) {
      return f($foreign.force(l));
    };
  };
}, function (f) {
  return function (z) {
    return function (l) {
      return f(z)($foreign.force(l));
    };
  };
}, function (f) {
  return function (z) {
    return function (l) {
      return f($foreign.force(l))(z);
    };
  };
});
var foldableWithIndexLazy = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableLazy;
}, function (dictMonoid) {
  return function (f) {
    return Data_Foldable.foldMap(foldableLazy)(dictMonoid)(f(Data_Unit.unit));
  };
}, function (f) {
  return Data_Foldable.foldl(foldableLazy)(f(Data_Unit.unit));
}, function (f) {
  return Data_Foldable.foldr(foldableLazy)(f(Data_Unit.unit));
});
var traversableLazy = new Data_Traversable.Traversable(function () {
  return foldableLazy;
}, function () {
  return functorLazy;
}, function (dictApplicative) {
  return function (l) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($43) {
      return $foreign.defer(Data_Function["const"]($43));
    })($foreign.force(l));
  };
}, function (dictApplicative) {
  return function (f) {
    return function (l) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(function ($44) {
        return $foreign.defer(Data_Function["const"]($44));
      })(f($foreign.force(l)));
    };
  };
});
var traversableWithIndexLazy = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexLazy;
}, function () {
  return functorWithIndexLazy;
}, function () {
  return traversableLazy;
}, function (dictApplicative) {
  return function (f) {
    return Data_Traversable.traverse(traversableLazy)(dictApplicative)(f(Data_Unit.unit));
  };
});
var foldable1Lazy = new Data_Semigroup_Foldable.Foldable1(function () {
  return foldableLazy;
}, function (dictSemigroup) {
  return function (f) {
    return function (l) {
      return f($foreign.force(l));
    };
  };
}, function (v) {
  return function (l) {
    return $foreign.force(l);
  };
}, function (v) {
  return function (l) {
    return $foreign.force(l);
  };
});
var traversable1Lazy = new Data_Semigroup_Traversable.Traversable1(function () {
  return foldable1Lazy;
}, function () {
  return traversableLazy;
}, function (dictApply) {
  return function (l) {
    return Data_Functor.map(dictApply.Functor0())(function ($45) {
      return $foreign.defer(Data_Function["const"]($45));
    })($foreign.force(l));
  };
}, function (dictApply) {
  return function (f) {
    return function (l) {
      return Data_Functor.map(dictApply.Functor0())(function ($46) {
        return $foreign.defer(Data_Function["const"]($46));
      })(f($foreign.force(l)));
    };
  };
});
var extendLazy = new Control_Extend.Extend(function () {
  return functorLazy;
}, function (f) {
  return function (x) {
    return $foreign.defer(function (v) {
      return f(x);
    });
  };
});

var eqLazy = function eqLazy(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(dictEq)($foreign.force(x))($foreign.force(y));
    };
  });
};

var ordLazy = function ordLazy(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqLazy(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(dictOrd)($foreign.force(x))($foreign.force(y));
    };
  });
};

var eq1Lazy = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqLazy(dictEq));
});
var ord1Lazy = new Data_Ord.Ord1(function () {
  return eq1Lazy;
}, function (dictOrd) {
  return Data_Ord.compare(ordLazy(dictOrd));
});
var comonadLazy = new Control_Comonad.Comonad(function () {
  return extendLazy;
}, $foreign.force);

var commutativeRingLazy = function commutativeRingLazy(dictCommutativeRing) {
  return new Data_CommutativeRing.CommutativeRing(function () {
    return ringLazy(dictCommutativeRing.Ring0());
  });
};

var euclideanRingLazy = function euclideanRingLazy(dictEuclideanRing) {
  return new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingLazy(dictEuclideanRing.CommutativeRing0());
  }, function () {
    var $47 = Data_EuclideanRing.degree(dictEuclideanRing);
    return function ($48) {
      return $47($foreign.force($48));
    };
  }(), function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_EuclideanRing.div(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
      });
    };
  }, function (a) {
    return function (b) {
      return $foreign.defer(function (v) {
        return Data_EuclideanRing.mod(dictEuclideanRing)($foreign.force(a))($foreign.force(b));
      });
    };
  });
};

var boundedLazy = function boundedLazy(dictBounded) {
  return new Data_Bounded.Bounded(function () {
    return ordLazy(dictBounded.Ord0());
  }, $foreign.defer(function (v) {
    return Data_Bounded.bottom(dictBounded);
  }), $foreign.defer(function (v) {
    return Data_Bounded.top(dictBounded);
  }));
};

var applyLazy = new Control_Apply.Apply(function () {
  return functorLazy;
}, function (f) {
  return function (x) {
    return $foreign.defer(function (v) {
      return $foreign.force(f)($foreign.force(x));
    });
  };
});
var bindLazy = new Control_Bind.Bind(function () {
  return applyLazy;
}, function (l) {
  return function (f) {
    return $foreign.defer(function (v) {
      return $foreign.force(f($foreign.force(l)));
    });
  };
});

var heytingAlgebraLazy = function heytingAlgebraLazy(dictHeytingAlgebra) {
  return new Data_HeytingAlgebra.HeytingAlgebra(function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.conj(dictHeytingAlgebra))(a))(b);
    };
  }, function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.disj(dictHeytingAlgebra))(a))(b);
    };
  }, $foreign.defer(function (v) {
    return Data_HeytingAlgebra.ff(dictHeytingAlgebra);
  }), function (a) {
    return function (b) {
      return Control_Apply.apply(applyLazy)(Data_Functor.map(functorLazy)(Data_HeytingAlgebra.implies(dictHeytingAlgebra))(a))(b);
    };
  }, function (a) {
    return Data_Functor.map(functorLazy)(Data_HeytingAlgebra.not(dictHeytingAlgebra))(a);
  }, $foreign.defer(function (v) {
    return Data_HeytingAlgebra.tt(dictHeytingAlgebra);
  }));
};

var booleanAlgebraLazy = function booleanAlgebraLazy(dictBooleanAlgebra) {
  return new Data_BooleanAlgebra.BooleanAlgebra(function () {
    return heytingAlgebraLazy(dictBooleanAlgebra.HeytingAlgebra0());
  });
};

var applicativeLazy = new Control_Applicative.Applicative(function () {
  return applyLazy;
}, function (a) {
  return $foreign.defer(function (v) {
    return a;
  });
});
var monadLazy = new Control_Monad.Monad(function () {
  return applicativeLazy;
}, function () {
  return bindLazy;
});
module.exports = {
  semiringLazy: semiringLazy,
  ringLazy: ringLazy,
  commutativeRingLazy: commutativeRingLazy,
  euclideanRingLazy: euclideanRingLazy,
  eqLazy: eqLazy,
  eq1Lazy: eq1Lazy,
  ordLazy: ordLazy,
  ord1Lazy: ord1Lazy,
  boundedLazy: boundedLazy,
  semigroupLazy: semigroupLazy,
  monoidLazy: monoidLazy,
  heytingAlgebraLazy: heytingAlgebraLazy,
  booleanAlgebraLazy: booleanAlgebraLazy,
  functorLazy: functorLazy,
  functorWithIndexLazy: functorWithIndexLazy,
  foldableLazy: foldableLazy,
  foldableWithIndexLazy: foldableWithIndexLazy,
  foldable1Lazy: foldable1Lazy,
  traversableLazy: traversableLazy,
  traversableWithIndexLazy: traversableWithIndexLazy,
  traversable1Lazy: traversable1Lazy,
  invariantLazy: invariantLazy,
  applyLazy: applyLazy,
  applicativeLazy: applicativeLazy,
  bindLazy: bindLazy,
  monadLazy: monadLazy,
  extendLazy: extendLazy,
  comonadLazy: comonadLazy,
  showLazy: showLazy,
  lazyLazy: lazyLazy,
  defer: $foreign.defer,
  force: $foreign.force
};
},{"./foreign.js":"xeJt","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Comonad/index.js":"U0zO","../Control.Extend/index.js":"JIoJ","../Control.Lazy/index.js":"y9cE","../Control.Monad/index.js":"UIxr","../Data.BooleanAlgebra/index.js":"e7yH","../Data.Bounded/index.js":"kcUU","../Data.CommutativeRing/index.js":"TQxD","../Data.Eq/index.js":"Pq4F","../Data.EuclideanRing/index.js":"IRBO","../Data.Foldable/index.js":"eVDl","../Data.FoldableWithIndex/index.js":"Efib","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Functor.Invariant/index.js":"AXkC","../Data.FunctorWithIndex/index.js":"OHRN","../Data.HeytingAlgebra/index.js":"paZe","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Ring/index.js":"E2qH","../Data.Semigroup/index.js":"EsAJ","../Data.Semigroup.Foldable/index.js":"htAR","../Data.Semigroup.Traversable/index.js":"qkfi","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.TraversableWithIndex/index.js":"V4EF","../Data.Unit/index.js":"NhVk"}],"NCVa":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_MonadPlus = require("../Control.MonadPlus/index.js");

var Control_MonadZero = require("../Control.MonadZero/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Yield = function () {
  function Yield(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Yield.create = function (value0) {
    return function (value1) {
      return new Yield(value0, value1);
    };
  };

  return Yield;
}();

var Skip = function () {
  function Skip(value0) {
    this.value0 = value0;
  }

  ;

  Skip.create = function (value0) {
    return new Skip(value0);
  };

  return Skip;
}();

var Done = function () {
  function Done() {}

  ;
  Done.value = new Done();
  return Done;
}();

var ListT = function ListT(x) {
  return x;
};

var wrapLazy = function wrapLazy(dictApplicative) {
  return function (v) {
    return ListT(Control_Applicative.pure(dictApplicative)(new Skip(v)));
  };
};

var wrapEffect = function wrapEffect(dictFunctor) {
  return function (v) {
    return ListT(Data_Functor.map(dictFunctor)(function ($181) {
      return Skip.create(Data_Lazy.defer(Data_Function["const"]($181)));
    })(v));
  };
};

var unfold = function unfold(dictMonad) {
  return function (f) {
    return function (z) {
      var g = function g(v) {
        if (v instanceof Data_Maybe.Just) {
          return new Yield(v.value0.value1, Data_Lazy.defer(function (v1) {
            return unfold(dictMonad)(f)(v.value0.value0);
          }));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 130, column 3 - line 130, column 60): " + [v.constructor.name]);
      };

      return ListT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(g)(f(z)));
    };
  };
};

var uncons = function uncons(dictMonad) {
  return function (v) {
    var g = function g(v1) {
      if (v1 instanceof Yield) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Just.create(new Data_Tuple.Tuple(v1.value0, Data_Lazy.force(v1.value1))));
      }

      ;

      if (v1 instanceof Skip) {
        return uncons(dictMonad)(Data_Lazy.force(v1.value0));
      }

      ;

      if (v1 instanceof Done) {
        return Control_Applicative.pure(dictMonad.Applicative0())(Data_Maybe.Nothing.value);
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 195, column 3 - line 195, column 50): " + [v1.constructor.name]);
    };

    return Control_Bind.bind(dictMonad.Bind1())(v)(g);
  };
};

var tail = function tail(dictMonad) {
  return function (l) {
    return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(dictMonad)(l));
  };
};

var stepMap = function stepMap(dictFunctor) {
  return function (f) {
    return function (v) {
      return ListT(Data_Functor.map(dictFunctor)(f)(v));
    };
  };
};

var takeWhile = function takeWhile(dictApplicative) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var $98 = f(v.value0);

        if ($98) {
          return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value1));
        }

        ;
        return Done.value;
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(takeWhile(dictApplicative)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 154, column 3 - line 154, column 68): " + [v.constructor.name]);
    };

    return stepMap(dictApplicative.Apply0().Functor0())(g);
  };
};

var scanl = function scanl(dictMonad) {
  return function (f) {
    return function (b) {
      return function (l) {
        var g = function g(v) {
          var h = function h(v1) {
            if (v1 instanceof Yield) {
              var b$prime$prime = f(v.value0)(v1.value0);
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime$prime, Data_Lazy.force(v1.value1)), v.value0));
            }

            ;

            if (v1 instanceof Skip) {
              return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0, Data_Lazy.force(v1.value0)), v.value0));
            }

            ;

            if (v1 instanceof Done) {
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.List.Trans (line 248, column 5 - line 248, column 78): " + [v1.constructor.name]);
          };

          return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(h)(v.value1);
        };

        return unfold(dictMonad)(g)(new Data_Tuple.Tuple(b, l));
      };
    };
  };
};

var prepend$prime = function prepend$prime(dictApplicative) {
  return function (h) {
    return function (t) {
      return ListT(Control_Applicative.pure(dictApplicative)(new Yield(h, t)));
    };
  };
};

var prepend = function prepend(dictApplicative) {
  return function (h) {
    return function (t) {
      return prepend$prime(dictApplicative)(h)(Data_Lazy.defer(Data_Function["const"](t)));
    };
  };
};

var nil = function nil(dictApplicative) {
  return ListT(Control_Applicative.pure(dictApplicative)(Done.value));
};

var singleton = function singleton(dictApplicative) {
  return function (a) {
    return prepend(dictApplicative)(a)(nil(dictApplicative));
  };
};

var take = function take(dictApplicative) {
  return function (v) {
    return function (v1) {
      if (v === 0) {
        return nil(dictApplicative);
      }

      ;

      var f = function f(v2) {
        if (v2 instanceof Yield) {
          return new Yield(v2.value0, Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v - 1 | 0))(v2.value1));
        }

        ;

        if (v2 instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(take(dictApplicative)(v))(v2.value0));
        }

        ;

        if (v2 instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 147, column 3 - line 147, column 47): " + [v2.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(v1);
    };
  };
};

var zipWith$prime = function zipWith$prime(dictMonad) {
  return function (f) {
    var g = function g(v) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(dictMonad.Applicative0())(nil(dictMonad.Applicative0()));
        }

        ;

        if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
          return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Function.flip(prepend$prime(dictMonad.Applicative0()))(Data_Lazy.defer(function (v2) {
            return zipWith$prime(dictMonad)(f)(v.value0.value1)(v1.value0.value1);
          })))(f(v.value0.value0)(v1.value0.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 260, column 3 - line 260, column 25): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    var loop = function loop(fa) {
      return function (fb) {
        return wrapEffect(dictMonad.Bind1().Apply0().Functor0())(Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fa))(function (ua) {
          return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(fb))(function (ub) {
            return g(ua)(ub);
          });
        }));
      };
    };

    return loop;
  };
};

var zipWith = function zipWith(dictMonad) {
  return function (f) {
    var g = function g(a) {
      return function (b) {
        return Control_Applicative.pure(dictMonad.Applicative0())(f(a)(b));
      };
    };

    return zipWith$prime(dictMonad)(g);
  };
};

var newtypeListT = new Data_Newtype.Newtype(function () {
  return undefined;
});

var mapMaybe = function mapMaybe(dictFunctor) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        return Data_Maybe.fromMaybe(Skip.create)(Data_Functor.map(Data_Maybe.functorMaybe)(Yield.create)(f(v.value0)))(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value1));
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(mapMaybe(dictFunctor)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 183, column 3 - line 183, column 72): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  };
};

var iterate = function iterate(dictMonad) {
  return function (f) {
    return function (a) {
      var g = function g(x) {
        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(x), x)));
      };

      return unfold(dictMonad)(g)(a);
    };
  };
};

var repeat = function repeat(dictMonad) {
  return iterate(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
};

var head = function head(dictMonad) {
  return function (l) {
    return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(dictMonad)(l));
  };
};

var functorListT = function functorListT(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        return new Yield(f(v.value0), Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value1));
      }

      ;

      if (v instanceof Skip) {
        return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(functorListT(dictFunctor))(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 280, column 5 - line 280, column 48): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  });
};

var fromEffect = function fromEffect(dictApplicative) {
  return function (fa) {
    return ListT(Data_Functor.map(dictApplicative.Apply0().Functor0())(Data_Function.flip(Yield.create)(Data_Lazy.defer(function (v) {
      return nil(dictApplicative);
    })))(fa));
  };
};

var monadTransListT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
  return fromEffect(dictMonad.Applicative0());
});

var foldlRec$prime = function foldlRec$prime(dictMonadRec) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(b));
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(f(b)(v.value0.value0))(function (b$prime) {
              return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
                a: b$prime,
                b: v.value0.value1
              }));
            });
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 221, column 5 - line 221, column 45): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
      };
    };

    return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
  };
};

var runListTRec = function runListTRec(dictMonadRec) {
  return foldlRec$prime(dictMonadRec)(function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(Data_Unit.unit);
    };
  })(Data_Unit.unit);
};

var foldlRec = function foldlRec(dictMonadRec) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(b));
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop({
              a: f(b)(v.value0.value0),
              b: v.value0.value1
            }));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 239, column 7 - line 239, column 47): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(uncons(dictMonadRec.Monad0())(l))(g);
      };
    };

    return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(loop);
  };
};

var foldl$prime = function foldl$prime(dictMonad) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonad.Applicative0())(b);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Control_Bind.bind(dictMonad.Bind1())(f(b)(v.value0.value0))(Data_Function.flip(loop)(v.value0.value1));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 212, column 5 - line 212, column 35): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
      };
    };

    return loop;
  };
};

var runListT = function runListT(dictMonad) {
  return foldl$prime(dictMonad)(function (v) {
    return function (v1) {
      return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
    };
  })(Data_Unit.unit);
};

var foldl = function foldl(dictMonad) {
  return function (f) {
    var loop = function loop(b) {
      return function (l) {
        var g = function g(v) {
          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(dictMonad.Applicative0())(b);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return loop(f(b)(v.value0.value0))(v.value0.value1);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.List.Trans (line 229, column 5 - line 229, column 35): " + [v.constructor.name]);
        };

        return Control_Bind.bind(dictMonad.Bind1())(uncons(dictMonad)(l))(g);
      };
    };

    return loop;
  };
};

var filter = function filter(dictFunctor) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value1);
        var $148 = f(v.value0);

        if ($148) {
          return new Yield(v.value0, s$prime);
        }

        ;
        return new Skip(s$prime);
      }

      ;

      if (v instanceof Skip) {
        var s$prime = Data_Functor.map(Data_Lazy.functorLazy)(filter(dictFunctor)(f))(v.value0);
        return new Skip(s$prime);
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 176, column 3 - line 176, column 80): " + [v.constructor.name]);
    };

    return stepMap(dictFunctor)(g);
  };
};

var dropWhile = function dropWhile(dictApplicative) {
  return function (f) {
    var g = function g(v) {
      if (v instanceof Yield) {
        var $153 = f(v.value0);

        if ($153) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value1));
        }

        ;
        return new Yield(v.value0, v.value1);
      }

      ;

      if (v instanceof Skip) {
        return Skip.create(Data_Functor.map(Data_Lazy.functorLazy)(dropWhile(dictApplicative)(f))(v.value0));
      }

      ;

      if (v instanceof Done) {
        return Done.value;
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.List.Trans (line 169, column 3 - line 169, column 70): " + [v.constructor.name]);
    };

    return stepMap(dictApplicative.Apply0().Functor0())(g);
  };
};

var drop = function drop(dictApplicative) {
  return function (v) {
    return function (fa) {
      if (v === 0) {
        return fa;
      }

      ;

      var f = function f(v1) {
        if (v1 instanceof Yield) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v - 1 | 0))(v1.value1));
        }

        ;

        if (v1 instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(drop(dictApplicative)(v))(v1.value0));
        }

        ;

        if (v1 instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 162, column 3 - line 162, column 44): " + [v1.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(fa);
    };
  };
};

var cons = function cons(dictApplicative) {
  return function (lh) {
    return function (t) {
      return ListT(Control_Applicative.pure(dictApplicative)(new Yield(Data_Lazy.force(lh), t)));
    };
  };
};

var unfoldable1ListT = function unfoldable1ListT(dictMonad) {
  return new Data_Unfoldable1.Unfoldable1(function (f) {
    return function (b) {
      var go = function go(v) {
        if (v.value1 instanceof Data_Maybe.Nothing) {
          return singleton(dictMonad.Applicative0())(v.value0);
        }

        ;

        if (v.value1 instanceof Data_Maybe.Just) {
          return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0))(Data_Lazy.defer(function (v1) {
            return go(f(v.value1.value0));
          }));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 294, column 12 - line 296, column 67): " + [v.constructor.name]);
      };

      return go(f(b));
    };
  });
};

var unfoldableListT = function unfoldableListT(dictMonad) {
  return new Data_Unfoldable.Unfoldable(function () {
    return unfoldable1ListT(dictMonad);
  }, function (f) {
    return function (b) {
      var go = function go(v) {
        if (v instanceof Data_Maybe.Nothing) {
          return nil(dictMonad.Applicative0());
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return cons(dictMonad.Applicative0())(Control_Applicative.pure(Data_Lazy.applicativeLazy)(v.value0.value0))(Data_Lazy.defer(function (v1) {
            return go(f(v.value0.value1));
          }));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 287, column 12 - line 289, column 67): " + [v.constructor.name]);
      };

      return go(f(b));
    };
  });
};

var semigroupListT = function semigroupListT(dictApplicative) {
  return new Data_Semigroup.Semigroup(concat(dictApplicative));
};

var concat = function concat(dictApplicative) {
  return function (x) {
    return function (y) {
      var f = function f(v) {
        if (v instanceof Yield) {
          return new Yield(v.value0, Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
          })(v.value1));
        }

        ;

        if (v instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Data_Semigroup.append(semigroupListT(dictApplicative))(v1)(y);
          })(v.value0));
        }

        ;

        if (v instanceof Done) {
          return new Skip(Data_Lazy.defer(Data_Function["const"](y)));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 106, column 3 - line 106, column 43): " + [v.constructor.name]);
      };

      return stepMap(dictApplicative.Apply0().Functor0())(f)(x);
    };
  };
};

var monoidListT = function monoidListT(dictApplicative) {
  return new Data_Monoid.Monoid(function () {
    return semigroupListT(dictApplicative);
  }, nil(dictApplicative));
};

var catMaybes = function catMaybes(dictFunctor) {
  return mapMaybe(dictFunctor)(Control_Category.identity(Control_Category.categoryFn));
};

var monadListT = function monadListT(dictMonad) {
  return new Control_Monad.Monad(function () {
    return applicativeListT(dictMonad);
  }, function () {
    return bindListT(dictMonad);
  });
};

var bindListT = function bindListT(dictMonad) {
  return new Control_Bind.Bind(function () {
    return applyListT(dictMonad);
  }, function (fa) {
    return function (f) {
      var g = function g(v) {
        if (v instanceof Yield) {
          var h = function h(s$prime) {
            return Data_Semigroup.append(semigroupListT(dictMonad.Applicative0()))(f(v.value0))(Control_Bind.bind(bindListT(dictMonad))(s$prime)(f));
          };

          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(h)(v.value1));
        }

        ;

        if (v instanceof Skip) {
          return new Skip(Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
            return Control_Bind.bind(bindListT(dictMonad))(v1)(f);
          })(v.value0));
        }

        ;

        if (v instanceof Done) {
          return Done.value;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.List.Trans (line 306, column 5 - line 308, column 31): " + [v.constructor.name]);
      };

      return stepMap(dictMonad.Bind1().Apply0().Functor0())(g)(fa);
    };
  });
};

var applyListT = function applyListT(dictMonad) {
  return new Control_Apply.Apply(function () {
    return functorListT(dictMonad.Bind1().Apply0().Functor0());
  }, Control_Monad.ap(monadListT(dictMonad)));
};

var applicativeListT = function applicativeListT(dictMonad) {
  return new Control_Applicative.Applicative(function () {
    return applyListT(dictMonad);
  }, singleton(dictMonad.Applicative0()));
};

var monadEffectListT = function monadEffectListT(dictMonadEffect) {
  return new Effect_Class.MonadEffect(function () {
    return monadListT(dictMonadEffect.Monad0());
  }, function () {
    var $182 = Control_Monad_Trans_Class.lift(monadTransListT)(dictMonadEffect.Monad0());
    var $183 = Effect_Class.liftEffect(dictMonadEffect);
    return function ($184) {
      return $182($183($184));
    };
  }());
};

var altListT = function altListT(dictApplicative) {
  return new Control_Alt.Alt(function () {
    return functorListT(dictApplicative.Apply0().Functor0());
  }, concat(dictApplicative));
};

var plusListT = function plusListT(dictMonad) {
  return new Control_Plus.Plus(function () {
    return altListT(dictMonad.Applicative0());
  }, nil(dictMonad.Applicative0()));
};

var alternativeListT = function alternativeListT(dictMonad) {
  return new Control_Alternative.Alternative(function () {
    return applicativeListT(dictMonad);
  }, function () {
    return plusListT(dictMonad);
  });
};

var monadPlusListT = function monadPlusListT(dictMonad) {
  return new Control_MonadPlus.MonadPlus(function () {
    return alternativeListT(dictMonad);
  }, function () {
    return monadListT(dictMonad);
  });
};

var monadZeroListT = function monadZeroListT(dictMonad) {
  return new Control_MonadZero.MonadZero(function () {
    return alternativeListT(dictMonad);
  }, function () {
    return monadListT(dictMonad);
  }, function () {
    return undefined;
  });
};

module.exports = {
  ListT: ListT,
  Yield: Yield,
  Skip: Skip,
  Done: Done,
  catMaybes: catMaybes,
  cons: cons,
  drop: drop,
  dropWhile: dropWhile,
  filter: filter,
  foldl: foldl,
  foldlRec: foldlRec,
  "foldl'": foldl$prime,
  "foldlRec'": foldlRec$prime,
  fromEffect: fromEffect,
  head: head,
  iterate: iterate,
  mapMaybe: mapMaybe,
  nil: nil,
  prepend: prepend,
  "prepend'": prepend$prime,
  repeat: repeat,
  runListT: runListT,
  runListTRec: runListTRec,
  scanl: scanl,
  singleton: singleton,
  tail: tail,
  take: take,
  takeWhile: takeWhile,
  uncons: uncons,
  unfold: unfold,
  wrapEffect: wrapEffect,
  wrapLazy: wrapLazy,
  zipWith: zipWith,
  "zipWith'": zipWith$prime,
  newtypeListT: newtypeListT,
  semigroupListT: semigroupListT,
  monoidListT: monoidListT,
  functorListT: functorListT,
  unfoldableListT: unfoldableListT,
  unfoldable1ListT: unfoldable1ListT,
  applyListT: applyListT,
  applicativeListT: applicativeListT,
  bindListT: bindListT,
  monadListT: monadListT,
  monadTransListT: monadTransListT,
  altListT: altListT,
  plusListT: plusListT,
  alternativeListT: alternativeListT,
  monadZeroListT: monadZeroListT,
  monadPlusListT: monadPlusListT,
  monadEffectListT: monadEffectListT,
  MonadTrans: Control_Monad_Trans_Class.MonadTrans,
  lift: Control_Monad_Trans_Class.lift
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Monad/index.js":"UIxr","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.MonadPlus/index.js":"HkJx","../Control.MonadZero/index.js":"lD5R","../Control.Plus/index.js":"oMBg","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Lazy/index.js":"aRUE","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW","../Data.Unfoldable1/index.js":"S0Nl","../Data.Unit/index.js":"NhVk","../Effect.Class/index.js":"dWtH"}],"I4H2":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_List_Trans = require("../Control.Monad.List.Trans/index.js");

var Control_Monad_Maybe_Trans = require("../Control.Monad.Maybe.Trans/index.js");

var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var MonadAff = function MonadAff(MonadEffect0, liftAff) {
  this.MonadEffect0 = MonadEffect0;
  this.liftAff = liftAff;
};

var monadAffAff = new MonadAff(function () {
  return Effect_Aff.monadEffectAff;
}, Control_Category.identity(Control_Category.categoryFn));

var liftAff = function liftAff(dict) {
  return dict.liftAff;
};

var monadAffContT = function monadAffContT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Cont_Trans.monadEffectContT(dictMonadAff.MonadEffect0());
  }, function () {
    var $10 = Control_Monad_Trans_Class.lift(Control_Monad_Cont_Trans.monadTransContT)(dictMonadAff.MonadEffect0().Monad0());
    var $11 = liftAff(dictMonadAff);
    return function ($12) {
      return $10($11($12));
    };
  }());
};

var monadAffExceptT = function monadAffExceptT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Except_Trans.monadEffectExceptT(dictMonadAff.MonadEffect0());
  }, function () {
    var $13 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonadAff.MonadEffect0().Monad0());
    var $14 = liftAff(dictMonadAff);
    return function ($15) {
      return $13($14($15));
    };
  }());
};

var monadAffListT = function monadAffListT(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_List_Trans.monadEffectListT(dictMonadAff.MonadEffect0());
  }, function () {
    var $16 = Control_Monad_Trans_Class.lift(Control_Monad_List_Trans.monadTransListT)(dictMonadAff.MonadEffect0().Monad0());
    var $17 = liftAff(dictMonadAff);
    return function ($18) {
      return $16($17($18));
    };
  }());
};

var monadAffMaybe = function monadAffMaybe(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Maybe_Trans.monadEffectMaybe(dictMonadAff.MonadEffect0());
  }, function () {
    var $19 = Control_Monad_Trans_Class.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(dictMonadAff.MonadEffect0().Monad0());
    var $20 = liftAff(dictMonadAff);
    return function ($21) {
      return $19($20($21));
    };
  }());
};

var monadAffRWS = function monadAffRWS(dictMonadAff) {
  return function (dictMonoid) {
    return new MonadAff(function () {
      return Control_Monad_RWS_Trans.monadEffectRWS(dictMonoid)(dictMonadAff.MonadEffect0());
    }, function () {
      var $22 = Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonadAff.MonadEffect0().Monad0());
      var $23 = liftAff(dictMonadAff);
      return function ($24) {
        return $22($23($24));
      };
    }());
  };
};

var monadAffReader = function monadAffReader(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_Reader_Trans.monadEffectReader(dictMonadAff.MonadEffect0());
  }, function () {
    var $25 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonadAff.MonadEffect0().Monad0());
    var $26 = liftAff(dictMonadAff);
    return function ($27) {
      return $25($26($27));
    };
  }());
};

var monadAffState = function monadAffState(dictMonadAff) {
  return new MonadAff(function () {
    return Control_Monad_State_Trans.monadEffectState(dictMonadAff.MonadEffect0());
  }, function () {
    var $28 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonadAff.MonadEffect0().Monad0());
    var $29 = liftAff(dictMonadAff);
    return function ($30) {
      return $28($29($30));
    };
  }());
};

var monadAffWriter = function monadAffWriter(dictMonadAff) {
  return function (dictMonoid) {
    return new MonadAff(function () {
      return Control_Monad_Writer_Trans.monadEffectWriter(dictMonoid)(dictMonadAff.MonadEffect0());
    }, function () {
      var $31 = Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonadAff.MonadEffect0().Monad0());
      var $32 = liftAff(dictMonadAff);
      return function ($33) {
        return $31($32($33));
      };
    }());
  };
};

module.exports = {
  liftAff: liftAff,
  MonadAff: MonadAff,
  monadAffAff: monadAffAff,
  monadAffContT: monadAffContT,
  monadAffExceptT: monadAffExceptT,
  monadAffListT: monadAffListT,
  monadAffMaybe: monadAffMaybe,
  monadAffReader: monadAffReader,
  monadAffRWS: monadAffRWS,
  monadAffState: monadAffState,
  monadAffWriter: monadAffWriter
};
},{"../Control.Category/index.js":"IAi2","../Control.Monad.Cont.Trans/index.js":"XW2d","../Control.Monad.Except.Trans/index.js":"gr8B","../Control.Monad.List.Trans/index.js":"NCVa","../Control.Monad.Maybe.Trans/index.js":"UUIS","../Control.Monad.RWS.Trans/index.js":"Fynn","../Control.Monad.Reader.Trans/index.js":"uvht","../Control.Monad.State.Trans/index.js":"KpW9","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.Monad.Writer.Trans/index.js":"VAds","../Effect.Aff/index.js":"I7lu"}],"ty16":[function(require,module,exports) {
"use strict";

exports.log = function (s) {
  return function () {
    console.log(s);
  };
};

exports.warn = function (s) {
  return function () {
    console.warn(s);
  };
};

exports.error = function (s) {
  return function () {
    console.error(s);
  };
};

exports.info = function (s) {
  return function () {
    console.info(s);
  };
};

exports.time = function (s) {
  return function () {
    console.time(s);
  };
};

exports.timeLog = function (s) {
  return function () {
    console.timeLog(s);
  };
};

exports.timeEnd = function (s) {
  return function () {
    console.timeEnd(s);
  };
};

exports.clear = function () {
  console.clear();
};
},{}],"bpjQ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Show = require("../Data.Show/index.js");

var warnShow = function warnShow(dictShow) {
  return function (a) {
    return $foreign.warn(Data_Show.show(dictShow)(a));
  };
};

var logShow = function logShow(dictShow) {
  return function (a) {
    return $foreign.log(Data_Show.show(dictShow)(a));
  };
};

var infoShow = function infoShow(dictShow) {
  return function (a) {
    return $foreign.info(Data_Show.show(dictShow)(a));
  };
};

var errorShow = function errorShow(dictShow) {
  return function (a) {
    return $foreign.error(Data_Show.show(dictShow)(a));
  };
};

module.exports = {
  logShow: logShow,
  warnShow: warnShow,
  errorShow: errorShow,
  infoShow: infoShow,
  log: $foreign.log,
  warn: $foreign.warn,
  error: $foreign.error,
  info: $foreign.info,
  time: $foreign.time,
  timeLog: $foreign.timeLog,
  timeEnd: $foreign.timeEnd,
  clear: $foreign.clear
};
},{"./foreign.js":"ty16","../Data.Show/index.js":"mFY7"}],"qGwK":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Free = require("../Control.Monad.Free/index.js");

var Control_MultiAlternative = require("../Control.MultiAlternative/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_ShiftMap = require("../Control.ShiftMap/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Array_NonEmpty = require("../Data.Array.NonEmpty/index.js");

var Data_Array_NonEmpty_Internal = require("../Data.Array.NonEmpty.Internal/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semigroup_Foldable = require("../Data.Semigroup.Foldable/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_AVar = require("../Effect.AVar/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var WidgetStep = function WidgetStep(x) {
  return x;
};

var Widget = function Widget(x) {
  return x;
};

var widgetShiftMap = new Control_ShiftMap.ShiftMap(function (f) {
  return f(Control_Category.identity(Control_Category.categoryFn));
});
var widgetMonadRec = Control_Monad_Free.freeMonadRec;
var widgetFunctor = Control_Monad_Free.freeFunctor;
var widgetBind = Control_Monad_Free.freeBind;
var widgetApply = Control_Monad_Free.freeApply;
var widgetApplicative = Control_Monad_Free.freeApplicative;
var widgetMonad = new Control_Monad.Monad(function () {
  return widgetApplicative;
}, function () {
  return widgetBind;
});

var unWidgetStep = function unWidgetStep(v) {
  return v;
};

var unWidget = function unWidget(v) {
  return v;
};

var resume = function resume(dictFunctor) {
  return Control_Monad_Free["resume'"](function (g) {
    return function (i) {
      return new Data_Either.Right(Data_Functor.map(dictFunctor)(i)(g));
    };
  })(Data_Either.Left.create);
};

var mapViewStep = function mapViewStep(f) {
  return function (v) {
    var mod = function mod(ws$prime) {
      return {
        view: f(ws$prime.view),
        cont: ws$prime.cont
      };
    };

    return Data_Functor.map(Data_Either.functorEither)(mod)(v);
  };
};

var mapView = function mapView(f) {
  return function (v) {
    return Control_Monad_Free.hoistFree(mapViewStep(f))(v);
  };
};

var functorWidgetStep = new Data_Functor.Functor(function (f) {
  return function (v) {
    var mod = function mod(v1) {
      if (v1 instanceof Data_Either.Right) {
        return new Data_Either.Right({
          cont: Data_Functor.map(Effect_Aff.functorAff)(f)(v1.value0.cont),
          view: v1.value0.view
        });
      }

      ;

      if (v1 instanceof Data_Either.Left) {
        return new Data_Either.Left(Data_Functor.map(Effect.functorEffect)(f)(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at Concur.Core.Types (line 45, column 5 - line 45, column 57): " + [v1.constructor.name]);
    };

    return mod(v);
  };
});

var flipEither = function flipEither(v) {
  if (v instanceof Data_Either.Left) {
    return new Data_Either.Right(v.value0);
  }

  ;

  if (v instanceof Data_Either.Right) {
    return new Data_Either.Left(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Concur.Core.Types (line 73, column 1 - line 76, column 13): " + [v.constructor.name]);
};

var effAction = function effAction($82) {
  return Widget(Control_Monad_Free.liftF(WidgetStep(Data_Either.Left.create($82))));
};

var pulse = function pulse(dictMonoid) {
  return effAction(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
};

var widgetMonadEff = function widgetMonadEff(dictMonoid) {
  return new Effect_Class.MonadEffect(function () {
    return widgetMonad;
  }, effAction);
};

var displayStep = function displayStep(v) {
  return new Data_Either.Right({
    view: v,
    cont: Effect_Aff.never
  });
};

var display = function display(v) {
  return Control_Monad_Free.liftF(displayStep(v));
};

var widgetSemigroup = function widgetSemigroup(dictMonoid) {
  return new Data_Semigroup.Semigroup(function (w1) {
    return function (w2) {
      return Control_MultiAlternative.orr(widgetMultiAlternative(dictMonoid))([w1, w2]);
    };
  });
};

var widgetPlus = function widgetPlus(dictMonoid) {
  return new Control_Plus.Plus(function () {
    return widgetAlt(dictMonoid);
  }, display(Data_Monoid.mempty(dictMonoid)));
};

var widgetMultiAlternative = function widgetMultiAlternative(dictMonoid) {
  return new Control_MultiAlternative.MultiAlternative(function () {
    return widgetPlus(dictMonoid);
  }, function (wss) {
    var merge = function merge(dictMonoid1) {
      return function (ws) {
        return function (wscs) {
          var wsm = Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(function ($83) {
            return Control_Monad_Free.wrap(WidgetStep(Data_Either.Right.create($83)));
          })(ws);
          return Control_Bind.bind(Effect_Aff.bindAff)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Data_FoldableWithIndex.foldlWithIndex(Data_Array_NonEmpty_Internal.foldableWithIndexNonEmptyArray)(function (i) {
            return function (r) {
              return function (w) {
                return Control_Alt.alt(Effect_Aff.altParAff)(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Tuple.Tuple.create(i))(w)))(r);
              };
            };
          })(Control_Plus.empty(Effect_Aff.plusParAff))(wscs)))(function (v) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(combine(dictMonoid1)(Data_Maybe.fromMaybe(wsm)(Data_Array_NonEmpty.updateAt(v.value0)(v.value1)(wsm))));
          });
        };
      };
    };

    var combineViewsConts = function combineViewsConts(dictMonoid1) {
      return function (ws) {
        return Control_Monad_Free.wrap(WidgetStep(new Data_Either.Right({
          view: Data_Semigroup_Foldable.foldMap1(Data_Array_NonEmpty_Internal.foldable1NonEmptyArray)(dictMonoid1.Semigroup0())(function (v) {
            return v.view;
          })(ws),
          cont: merge(dictMonoid1)(ws)(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(function (v) {
            return v.cont;
          })(ws))
        })));
      };
    };

    var combineInner1 = function combineInner1(dictMonoid1) {
      return function (ws) {
        return function (freeNarr) {
          var x = Data_Array_NonEmpty.uncons(freeNarr);
          var v = resume(functorWidgetStep)(x.head);

          if (v instanceof Data_Either.Left) {
            return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v.value0);
          }

          ;

          if (v instanceof Data_Either.Right) {
            if (v.value0 instanceof Data_Either.Left) {
              return Control_Monad_Free.wrap(WidgetStep(new Data_Either.Left(function __do() {
                var w = v.value0.value0();
                return combineInner1(dictMonoid1)(ws)(Data_Array_NonEmpty["cons'"](w)(x.tail));
              })));
            }

            ;

            if (v.value0 instanceof Data_Either.Right) {
              return combineInner(dictMonoid1)(Data_Array_NonEmpty.snoc(ws)(v.value0.value0))(x.tail);
            }

            ;
            throw new Error("Failed pattern match at Concur.Core.Types (line 138, column 34 - line 142, column 61): " + [v.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Concur.Core.Types (line 136, column 10 - line 142, column 61): " + [v.constructor.name]);
        };
      };
    };

    var combineInner = function combineInner(dictMonoid1) {
      return function (ws) {
        return function (freeArr) {
          var v = Data_Array_NonEmpty.fromArray(freeArr);

          if (v instanceof Data_Maybe.Nothing) {
            return combineViewsConts(dictMonoid1)(ws);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return combineInner1(dictMonoid1)(ws)(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Concur.Core.Types (line 113, column 31 - line 116, column 49): " + [v.constructor.name]);
        };
      };
    };

    var combine = function combine(dictMonoid1) {
      return function (wfs) {
        var x = Data_Array_NonEmpty.uncons(wfs);
        var v = resume(functorWidgetStep)(x.head);

        if (v instanceof Data_Either.Left) {
          return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v.value0);
        }

        ;

        if (v instanceof Data_Either.Right) {
          if (v.value0 instanceof Data_Either.Left) {
            return Control_Monad_Free.wrap(WidgetStep(new Data_Either.Left(function __do() {
              var w = v.value0.value0();
              return combine(dictMonoid1)(Data_Array_NonEmpty["cons'"](w)(x.tail));
            })));
          }

          ;

          if (v.value0 instanceof Data_Either.Right) {
            return combineInner(dictMonoid1)(Data_Array_NonEmpty.singleton(v.value0.value0))(x.tail);
          }

          ;
          throw new Error("Failed pattern match at Concur.Core.Types (line 101, column 34 - line 105, column 63): " + [v.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Concur.Core.Types (line 99, column 10 - line 105, column 63): " + [v.constructor.name]);
      };
    };

    var v = Data_Array_NonEmpty.fromArray(wss);

    if (v instanceof Data_Maybe.Just) {
      return Widget(combine(dictMonoid)(Data_Functor.map(Data_Array_NonEmpty_Internal.functorNonEmptyArray)(unWidget)(v.value0)));
    }

    ;

    if (v instanceof Data_Maybe.Nothing) {
      return Control_Plus.empty(widgetPlus(dictMonoid));
    }

    ;
    throw new Error("Failed pattern match at Concur.Core.Types (line 88, column 13 - line 90, column 21): " + [v.constructor.name]);
  });
};

var widgetAlt = function widgetAlt(dictMonoid) {
  return new Control_Alt.Alt(function () {
    return widgetFunctor;
  }, Data_Semigroup.append(widgetSemigroup(dictMonoid)));
};

var widgetAlternative = function widgetAlternative(dictMonoid) {
  return new Control_Alternative.Alternative(function () {
    return widgetApplicative;
  }, function () {
    return widgetPlus(dictMonoid);
  });
};

var widgetMonoid = function widgetMonoid(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return widgetSemigroup(dictMonoid);
  }, Control_Plus.empty(widgetPlus(dictMonoid)));
};

var andd = function andd(dictMonoid) {
  return function (ws) {
    return Control_Bind.bind(widgetBind)(Data_FoldableWithIndex.foldrWithIndex(Data_FoldableWithIndex.foldableWithIndexArray)(function (i) {
      return function (w) {
        return function (r) {
          return Control_Alt.alt(widgetAlt(dictMonoid))(Data_Functor.map(widgetFunctor)(Data_Tuple.Tuple.create(i))(w))(r);
        };
      };
    })(Control_Plus.empty(widgetPlus(dictMonoid)))(ws))(function (v) {
      var ws$prime = Data_Maybe.fromMaybe(ws)(Data_Array.deleteAt(v.value0)(ws));
      var $73 = Data_Array.length(ws$prime) <= 0;

      if ($73) {
        return Control_Applicative.pure(widgetApplicative)([v.value1]);
      }

      ;
      return Control_Bind.bind(widgetBind)(andd(dictMonoid)(ws$prime))(function (rest) {
        return Control_Applicative.pure(widgetApplicative)(Data_Maybe.fromMaybe([])(Data_Array.insertAt(v.value0)(v.value1)(rest)));
      });
    });
  };
};

var affAction = function affAction(v) {
  return function (aff) {
    var handler = function handler(v1) {
      return function (v2) {
        if (v2 instanceof Data_Either.Left) {
          return Effect_Console.log("Aff failed - " + Data_Show.show(Effect_Exception.showError)(v2.value0));
        }

        ;

        if (v2 instanceof Data_Either.Right) {
          return Data_Functor["void"](Effect.functorEffect)(Effect_AVar.tryPut(v2.value0)(v1));
        }

        ;
        throw new Error("Failed pattern match at Concur.Core.Types (line 237, column 3 - line 237, column 55): " + [v1.constructor.name, v2.constructor.name]);
      };
    };

    return Widget(Control_Monad_Free.wrap(WidgetStep(new Data_Either.Left(function __do() {
      var $$var = Effect_AVar.empty();
      Effect_Aff.runAff_(handler($$var))(aff)();
      var ma = Effect_AVar.tryTake($$var)();

      if (ma instanceof Data_Maybe.Just) {
        return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(ma.value0);
      }

      ;

      if (ma instanceof Data_Maybe.Nothing) {
        return Control_Monad_Free.liftF(WidgetStep(new Data_Either.Right({
          view: v,
          cont: Effect_Aff_AVar.take($$var)
        })));
      }

      ;
      throw new Error("Failed pattern match at Concur.Core.Types (line 232, column 8 - line 234, column 75): " + [ma.constructor.name]);
    }))));
  };
};

var asyncAction = function asyncAction(v) {
  return function (handler) {
    return affAction(v)(Effect_Aff.makeAff(function () {
      var $84 = Data_Functor.map(Effect.functorEffect)(Effect_Aff.effectCanceler);
      return function ($85) {
        return $84(handler($85));
      };
    }()));
  };
};

var widgetMonadAff = function widgetMonadAff(dictMonoid) {
  return new Effect_Aff_Class.MonadAff(function () {
    return widgetMonadEff(dictMonoid);
  }, affAction(Data_Monoid.mempty(dictMonoid)));
};

module.exports = {
  WidgetStep: WidgetStep,
  unWidgetStep: unWidgetStep,
  displayStep: displayStep,
  Widget: Widget,
  unWidget: unWidget,
  flipEither: flipEither,
  resume: resume,
  andd: andd,
  pulse: pulse,
  mapView: mapView,
  mapViewStep: mapViewStep,
  display: display,
  effAction: effAction,
  affAction: affAction,
  asyncAction: asyncAction,
  functorWidgetStep: functorWidgetStep,
  widgetFunctor: widgetFunctor,
  widgetBind: widgetBind,
  widgetApplicative: widgetApplicative,
  widgetApply: widgetApply,
  widgetMonad: widgetMonad,
  widgetMonadRec: widgetMonadRec,
  widgetShiftMap: widgetShiftMap,
  widgetMultiAlternative: widgetMultiAlternative,
  widgetSemigroup: widgetSemigroup,
  widgetMonoid: widgetMonoid,
  widgetAlt: widgetAlt,
  widgetPlus: widgetPlus,
  widgetAlternative: widgetAlternative,
  widgetMonadEff: widgetMonadEff,
  widgetMonadAff: widgetMonadAff
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Monad/index.js":"UIxr","../Control.Monad.Free/index.js":"pVbB","../Control.MultiAlternative/index.js":"c2nd","../Control.Parallel.Class/index.js":"NR5l","../Control.Plus/index.js":"oMBg","../Control.ShiftMap/index.js":"qpZO","../Data.Array/index.js":"t4Co","../Data.Array.NonEmpty/index.js":"eTKN","../Data.Array.NonEmpty.Internal/index.js":"PmFL","../Data.Either/index.js":"B2JL","../Data.FoldableWithIndex/index.js":"Efib","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Semigroup/index.js":"EsAJ","../Data.Semigroup.Foldable/index.js":"htAR","../Data.Show/index.js":"mFY7","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk","../Effect/index.js":"oTWB","../Effect.AVar/index.js":"XiHq","../Effect.Aff/index.js":"I7lu","../Effect.Aff.AVar/index.js":"hACG","../Effect.Aff.Class/index.js":"I4H2","../Effect.Class/index.js":"dWtH","../Effect.Console/index.js":"bpjQ","../Effect.Exception/index.js":"OCWS"}],"bwbN":[function(require,module,exports) {
"use strict";

exports.resetTargetValue = function (s) {
  return function (event) {
    return function () {
      event.target.value = s;
    };
  };
};

exports.emptyProp_ = {};
},{}],"uj7M":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var PrimProp = function () {
  function PrimProp(value0) {
    this.value0 = value0;
  }

  ;

  PrimProp.create = function (value0) {
    return new PrimProp(value0);
  };

  return PrimProp;
}();

var Handler = function () {
  function Handler(value0) {
    this.value0 = value0;
  }

  ;

  Handler.create = function (value0) {
    return new Handler(value0);
  };

  return Handler;
}();

var mkProp = function mkProp(v) {
  return function (v1) {
    if (v1 instanceof PrimProp) {
      return v1.value0;
    }

    ;

    if (v1 instanceof Handler) {
      return v1.value0(v);
    }

    ;
    throw new Error("Failed pattern match at Concur.Core.Props (line 18, column 1 - line 22, column 7): " + [v.constructor.name, v1.constructor.name]);
  };
};

var handleProp = function handleProp(v) {
  return function (v1) {
    if (v1 instanceof PrimProp) {
      return new PrimProp(v1.value0);
    }

    ;

    if (v1 instanceof Handler) {
      return new PrimProp(v1.value0(v));
    }

    ;
    throw new Error("Failed pattern match at Concur.Core.Props (line 27, column 1 - line 31, column 15): " + [v.constructor.name, v1.constructor.name]);
  };
};

var functorProps = new Data_Functor.Functor(function (v) {
  return function (v1) {
    if (v1 instanceof PrimProp) {
      return new PrimProp(v1.value0);
    }

    ;

    if (v1 instanceof Handler) {
      return new Handler(function (k) {
        return v1.value0(function ($25) {
          return k(v($25));
        });
      });
    }

    ;
    throw new Error("Failed pattern match at Concur.Core.Props (line 13, column 1 - line 15, column 48): " + [v.constructor.name, v1.constructor.name]);
  };
});

var filterProp = function filterProp(v) {
  return function (v1) {
    if (v1 instanceof PrimProp) {
      return v1;
    }

    ;

    if (v1 instanceof Handler) {
      return new Handler(function (h) {
        return v1.value0(function (a) {
          var $23 = v(a);

          if ($23) {
            return h(a);
          }

          ;
          return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
        });
      });
    }

    ;
    throw new Error("Failed pattern match at Concur.Core.Props (line 37, column 1 - line 41, column 12): " + [v.constructor.name, v1.constructor.name]);
  };
};

module.exports = {
  PrimProp: PrimProp,
  Handler: Handler,
  mkProp: mkProp,
  handleProp: handleProp,
  filterProp: filterProp,
  functorProps: functorProps
};
},{"../Control.Applicative/index.js":"qYya","../Data.Functor/index.js":"AEHo","../Data.Unit/index.js":"NhVk","../Effect/index.js":"oTWB"}],"ViyF":[function(require,module,exports) {
"use strict";

exports.mkEffectFn1 = function mkEffectFn1(fn) {
  return function (x) {
    return fn(x)();
  };
};

exports.mkEffectFn2 = function mkEffectFn2(fn) {
  return function (a, b) {
    return fn(a)(b)();
  };
};

exports.mkEffectFn3 = function mkEffectFn3(fn) {
  return function (a, b, c) {
    return fn(a)(b)(c)();
  };
};

exports.mkEffectFn4 = function mkEffectFn4(fn) {
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d)();
  };
};

exports.mkEffectFn5 = function mkEffectFn5(fn) {
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e)();
  };
};

exports.mkEffectFn6 = function mkEffectFn6(fn) {
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f)();
  };
};

exports.mkEffectFn7 = function mkEffectFn7(fn) {
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g)();
  };
};

exports.mkEffectFn8 = function mkEffectFn8(fn) {
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)();
  };
};

exports.mkEffectFn9 = function mkEffectFn9(fn) {
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();
  };
};

exports.mkEffectFn10 = function mkEffectFn10(fn) {
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();
  };
};

exports.runEffectFn1 = function runEffectFn1(fn) {
  return function (a) {
    return function () {
      return fn(a);
    };
  };
};

exports.runEffectFn2 = function runEffectFn2(fn) {
  return function (a) {
    return function (b) {
      return function () {
        return fn(a, b);
      };
    };
  };
};

exports.runEffectFn3 = function runEffectFn3(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function () {
          return fn(a, b, c);
        };
      };
    };
  };
};

exports.runEffectFn4 = function runEffectFn4(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function () {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
};

exports.runEffectFn5 = function runEffectFn5(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function () {
              return fn(a, b, c, d, e);
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn6 = function runEffectFn6(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function () {
                return fn(a, b, c, d, e, f);
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn7 = function runEffectFn7(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function () {
                  return fn(a, b, c, d, e, f, g);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn8 = function runEffectFn8(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function () {
                    return fn(a, b, c, d, e, f, g, h);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn9 = function runEffectFn9(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function () {
                      return fn(a, b, c, d, e, f, g, h, i);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runEffectFn10 = function runEffectFn10(fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return function () {
                        return fn(a, b, c, d, e, f, g, h, i, j);
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};
},{}],"qn3Z":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Effect = require("../Effect/index.js");

var semigroupEffectFn9 = function semigroupEffectFn9(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn9(function (a) {
        return function (b) {
          return function (c) {
            return function (d) {
              return function (e) {
                return function (f) {
                  return function (g) {
                    return function (h) {
                      return function (i) {
                        return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn9(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i))($foreign.runEffectFn9(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i));
                      };
                    };
                  };
                };
              };
            };
          };
        };
      });
    };
  });
};

var semigroupEffectFn8 = function semigroupEffectFn8(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn8(function (a) {
        return function (b) {
          return function (c) {
            return function (d) {
              return function (e) {
                return function (f) {
                  return function (g) {
                    return function (h) {
                      return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn8(f1)(a)(b)(c)(d)(e)(f)(g)(h))($foreign.runEffectFn8(f2)(a)(b)(c)(d)(e)(f)(g)(h));
                    };
                  };
                };
              };
            };
          };
        };
      });
    };
  });
};

var semigroupEffectFn7 = function semigroupEffectFn7(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn7(function (a) {
        return function (b) {
          return function (c) {
            return function (d) {
              return function (e) {
                return function (f) {
                  return function (g) {
                    return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn7(f1)(a)(b)(c)(d)(e)(f)(g))($foreign.runEffectFn7(f2)(a)(b)(c)(d)(e)(f)(g));
                  };
                };
              };
            };
          };
        };
      });
    };
  });
};

var semigroupEffectFn6 = function semigroupEffectFn6(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn6(function (a) {
        return function (b) {
          return function (c) {
            return function (d) {
              return function (e) {
                return function (f) {
                  return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn6(f1)(a)(b)(c)(d)(e)(f))($foreign.runEffectFn6(f2)(a)(b)(c)(d)(e)(f));
                };
              };
            };
          };
        };
      });
    };
  });
};

var semigroupEffectFn5 = function semigroupEffectFn5(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn5(function (a) {
        return function (b) {
          return function (c) {
            return function (d) {
              return function (e) {
                return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn5(f1)(a)(b)(c)(d)(e))($foreign.runEffectFn5(f2)(a)(b)(c)(d)(e));
              };
            };
          };
        };
      });
    };
  });
};

var semigroupEffectFn4 = function semigroupEffectFn4(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn4(function (a) {
        return function (b) {
          return function (c) {
            return function (d) {
              return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn4(f1)(a)(b)(c)(d))($foreign.runEffectFn4(f2)(a)(b)(c)(d));
            };
          };
        };
      });
    };
  });
};

var semigroupEffectFn3 = function semigroupEffectFn3(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn3(function (a) {
        return function (b) {
          return function (c) {
            return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn3(f1)(a)(b)(c))($foreign.runEffectFn3(f2)(a)(b)(c));
          };
        };
      });
    };
  });
};

var semigroupEffectFn2 = function semigroupEffectFn2(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn2(function (a) {
        return function (b) {
          return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn2(f1)(a)(b))($foreign.runEffectFn2(f2)(a)(b));
        };
      });
    };
  });
};

var semigroupEffectFn10 = function semigroupEffectFn10(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn10(function (a) {
        return function (b) {
          return function (c) {
            return function (d) {
              return function (e) {
                return function (f) {
                  return function (g) {
                    return function (h) {
                      return function (i) {
                        return function (j) {
                          return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn10(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j))($foreign.runEffectFn10(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j));
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        };
      });
    };
  });
};

var semigroupEffectFn1 = function semigroupEffectFn1(dictSemigroup) {
  return new Data_Semigroup.Semigroup(function (f1) {
    return function (f2) {
      return $foreign.mkEffectFn1(function (a) {
        return Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup))($foreign.runEffectFn1(f1)(a))($foreign.runEffectFn1(f2)(a));
      });
    };
  });
};

var monoidEffectFn9 = function monoidEffectFn9(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn9(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn9(function (v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          return function (v4) {
            return function (v5) {
              return function (v6) {
                return function (v7) {
                  return function (v8) {
                    return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                  };
                };
              };
            };
          };
        };
      };
    };
  }));
};

var monoidEffectFn8 = function monoidEffectFn8(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn8(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn8(function (v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          return function (v4) {
            return function (v5) {
              return function (v6) {
                return function (v7) {
                  return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                };
              };
            };
          };
        };
      };
    };
  }));
};

var monoidEffectFn7 = function monoidEffectFn7(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn7(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn7(function (v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          return function (v4) {
            return function (v5) {
              return function (v6) {
                return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
              };
            };
          };
        };
      };
    };
  }));
};

var monoidEffectFn6 = function monoidEffectFn6(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn6(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn6(function (v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          return function (v4) {
            return function (v5) {
              return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
            };
          };
        };
      };
    };
  }));
};

var monoidEffectFn5 = function monoidEffectFn5(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn5(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn5(function (v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          return function (v4) {
            return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
          };
        };
      };
    };
  }));
};

var monoidEffectFn4 = function monoidEffectFn4(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn4(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn4(function (v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
        };
      };
    };
  }));
};

var monoidEffectFn3 = function monoidEffectFn3(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn3(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn3(function (v) {
    return function (v1) {
      return function (v2) {
        return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
      };
    };
  }));
};

var monoidEffectFn2 = function monoidEffectFn2(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn2(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn2(function (v) {
    return function (v1) {
      return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
    };
  }));
};

var monoidEffectFn10 = function monoidEffectFn10(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn10(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn10(function (v) {
    return function (v1) {
      return function (v2) {
        return function (v3) {
          return function (v4) {
            return function (v5) {
              return function (v6) {
                return function (v7) {
                  return function (v8) {
                    return function (v9) {
                      return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  }));
};

var monoidEffectFn1 = function monoidEffectFn1(dictMonoid) {
  return new Data_Monoid.Monoid(function () {
    return semigroupEffectFn1(dictMonoid.Semigroup0());
  }, $foreign.mkEffectFn1(function (v) {
    return Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));
  }));
};

module.exports = {
  semigroupEffectFn1: semigroupEffectFn1,
  semigroupEffectFn2: semigroupEffectFn2,
  semigroupEffectFn3: semigroupEffectFn3,
  semigroupEffectFn4: semigroupEffectFn4,
  semigroupEffectFn5: semigroupEffectFn5,
  semigroupEffectFn6: semigroupEffectFn6,
  semigroupEffectFn7: semigroupEffectFn7,
  semigroupEffectFn8: semigroupEffectFn8,
  semigroupEffectFn9: semigroupEffectFn9,
  semigroupEffectFn10: semigroupEffectFn10,
  monoidEffectFn1: monoidEffectFn1,
  monoidEffectFn2: monoidEffectFn2,
  monoidEffectFn3: monoidEffectFn3,
  monoidEffectFn4: monoidEffectFn4,
  monoidEffectFn5: monoidEffectFn5,
  monoidEffectFn6: monoidEffectFn6,
  monoidEffectFn7: monoidEffectFn7,
  monoidEffectFn8: monoidEffectFn8,
  monoidEffectFn9: monoidEffectFn9,
  monoidEffectFn10: monoidEffectFn10,
  mkEffectFn1: $foreign.mkEffectFn1,
  mkEffectFn2: $foreign.mkEffectFn2,
  mkEffectFn3: $foreign.mkEffectFn3,
  mkEffectFn4: $foreign.mkEffectFn4,
  mkEffectFn5: $foreign.mkEffectFn5,
  mkEffectFn6: $foreign.mkEffectFn6,
  mkEffectFn7: $foreign.mkEffectFn7,
  mkEffectFn8: $foreign.mkEffectFn8,
  mkEffectFn9: $foreign.mkEffectFn9,
  mkEffectFn10: $foreign.mkEffectFn10,
  runEffectFn1: $foreign.runEffectFn1,
  runEffectFn2: $foreign.runEffectFn2,
  runEffectFn3: $foreign.runEffectFn3,
  runEffectFn4: $foreign.runEffectFn4,
  runEffectFn5: $foreign.runEffectFn5,
  runEffectFn6: $foreign.runEffectFn6,
  runEffectFn7: $foreign.runEffectFn7,
  runEffectFn8: $foreign.runEffectFn8,
  runEffectFn9: $foreign.runEffectFn9,
  runEffectFn10: $foreign.runEffectFn10
};
},{"./foreign.js":"ViyF","../Data.Monoid/index.js":"TiEB","../Data.Semigroup/index.js":"EsAJ","../Effect/index.js":"oTWB"}],"YOwE":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
'use strict';
/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};
},{}],"pyFg":[function(require,module,exports) {
/** @license React v16.14.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';

var l = require("object-assign"),
    n = "function" === typeof Symbol && Symbol.for,
    p = n ? Symbol.for("react.element") : 60103,
    q = n ? Symbol.for("react.portal") : 60106,
    r = n ? Symbol.for("react.fragment") : 60107,
    t = n ? Symbol.for("react.strict_mode") : 60108,
    u = n ? Symbol.for("react.profiler") : 60114,
    v = n ? Symbol.for("react.provider") : 60109,
    w = n ? Symbol.for("react.context") : 60110,
    x = n ? Symbol.for("react.forward_ref") : 60112,
    y = n ? Symbol.for("react.suspense") : 60113,
    z = n ? Symbol.for("react.memo") : 60115,
    A = n ? Symbol.for("react.lazy") : 60116,
    B = "function" === typeof Symbol && Symbol.iterator;

function C(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

var D = {
  isMounted: function () {
    return !1;
  },
  enqueueForceUpdate: function () {},
  enqueueReplaceState: function () {},
  enqueueSetState: function () {}
},
    E = {};

function F(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = E;
  this.updater = c || D;
}

F.prototype.isReactComponent = {};

F.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error(C(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};

F.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};

function G() {}

G.prototype = F.prototype;

function H(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = E;
  this.updater = c || D;
}

var I = H.prototype = new G();
I.constructor = H;
l(I, F.prototype);
I.isPureReactComponent = !0;
var J = {
  current: null
},
    K = Object.prototype.hasOwnProperty,
    L = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function M(a, b, c) {
  var e,
      d = {},
      g = null,
      k = null;
  if (null != b) for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), b) K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);
  var f = arguments.length - 2;
  if (1 === f) d.children = c;else if (1 < f) {
    for (var h = Array(f), m = 0; m < f; m++) h[m] = arguments[m + 2];

    d.children = h;
  }
  if (a && a.defaultProps) for (e in f = a.defaultProps, f) void 0 === d[e] && (d[e] = f[e]);
  return {
    $$typeof: p,
    type: a,
    key: g,
    ref: k,
    props: d,
    _owner: J.current
  };
}

function N(a, b) {
  return {
    $$typeof: p,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}

function O(a) {
  return "object" === typeof a && null !== a && a.$$typeof === p;
}

function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + ("" + a).replace(/[=:]/g, function (a) {
    return b[a];
  });
}

var P = /\/+/g,
    Q = [];

function R(a, b, c, e) {
  if (Q.length) {
    var d = Q.pop();
    d.result = a;
    d.keyPrefix = b;
    d.func = c;
    d.context = e;
    d.count = 0;
    return d;
  }

  return {
    result: a,
    keyPrefix: b,
    func: c,
    context: e,
    count: 0
  };
}

function S(a) {
  a.result = null;
  a.keyPrefix = null;
  a.func = null;
  a.context = null;
  a.count = 0;
  10 > Q.length && Q.push(a);
}

function T(a, b, c, e) {
  var d = typeof a;
  if ("undefined" === d || "boolean" === d) a = null;
  var g = !1;
  if (null === a) g = !0;else switch (d) {
    case "string":
    case "number":
      g = !0;
      break;

    case "object":
      switch (a.$$typeof) {
        case p:
        case q:
          g = !0;
      }

  }
  if (g) return c(e, a, "" === b ? "." + U(a, 0) : b), 1;
  g = 0;
  b = "" === b ? "." : b + ":";
  if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {
    d = a[k];
    var f = b + U(d, k);
    g += T(d, f, c, e);
  } else if (null === a || "object" !== typeof a ? f = null : (f = B && a[B] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f) for (a = f.call(a), k = 0; !(d = a.next()).done;) d = d.value, f = b + U(d, k++), g += T(d, f, c, e);else if ("object" === d) throw c = "" + a, Error(C(31, "[object Object]" === c ? "object with keys {" + Object.keys(a).join(", ") + "}" : c, ""));
  return g;
}

function V(a, b, c) {
  return null == a ? 0 : T(a, "", b, c);
}

function U(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
}

function W(a, b) {
  a.func.call(a.context, b, a.count++);
}

function aa(a, b, c) {
  var e = a.result,
      d = a.keyPrefix;
  a = a.func.call(a.context, b, a.count++);
  Array.isArray(a) ? X(a, e, c, function (a) {
    return a;
  }) : null != a && (O(a) && (a = N(a, d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(P, "$&/") + "/") + c)), e.push(a));
}

function X(a, b, c, e, d) {
  var g = "";
  null != c && (g = ("" + c).replace(P, "$&/") + "/");
  b = R(b, g, e, d);
  V(a, aa, b);
  S(b);
}

var Y = {
  current: null
};

function Z() {
  var a = Y.current;
  if (null === a) throw Error(C(321));
  return a;
}

var ba = {
  ReactCurrentDispatcher: Y,
  ReactCurrentBatchConfig: {
    suspense: null
  },
  ReactCurrentOwner: J,
  IsSomeRendererActing: {
    current: !1
  },
  assign: l
};
exports.Children = {
  map: function (a, b, c) {
    if (null == a) return a;
    var e = [];
    X(a, e, null, b, c);
    return e;
  },
  forEach: function (a, b, c) {
    if (null == a) return a;
    b = R(null, null, b, c);
    V(a, W, b);
    S(b);
  },
  count: function (a) {
    return V(a, function () {
      return null;
    }, null);
  },
  toArray: function (a) {
    var b = [];
    X(a, b, null, function (a) {
      return a;
    });
    return b;
  },
  only: function (a) {
    if (!O(a)) throw Error(C(143));
    return a;
  }
};
exports.Component = F;
exports.Fragment = r;
exports.Profiler = u;
exports.PureComponent = H;
exports.StrictMode = t;
exports.Suspense = y;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ba;

exports.cloneElement = function (a, b, c) {
  if (null === a || void 0 === a) throw Error(C(267, a));
  var e = l({}, a.props),
      d = a.key,
      g = a.ref,
      k = a._owner;

  if (null != b) {
    void 0 !== b.ref && (g = b.ref, k = J.current);
    void 0 !== b.key && (d = "" + b.key);
    if (a.type && a.type.defaultProps) var f = a.type.defaultProps;

    for (h in b) K.call(b, h) && !L.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);
  }

  var h = arguments.length - 2;
  if (1 === h) e.children = c;else if (1 < h) {
    f = Array(h);

    for (var m = 0; m < h; m++) f[m] = arguments[m + 2];

    e.children = f;
  }
  return {
    $$typeof: p,
    type: a.type,
    key: d,
    ref: g,
    props: e,
    _owner: k
  };
};

exports.createContext = function (a, b) {
  void 0 === b && (b = null);
  a = {
    $$typeof: w,
    _calculateChangedBits: b,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null
  };
  a.Provider = {
    $$typeof: v,
    _context: a
  };
  return a.Consumer = a;
};

exports.createElement = M;

exports.createFactory = function (a) {
  var b = M.bind(null, a);
  b.type = a;
  return b;
};

exports.createRef = function () {
  return {
    current: null
  };
};

exports.forwardRef = function (a) {
  return {
    $$typeof: x,
    render: a
  };
};

exports.isValidElement = O;

exports.lazy = function (a) {
  return {
    $$typeof: A,
    _ctor: a,
    _status: -1,
    _result: null
  };
};

exports.memo = function (a, b) {
  return {
    $$typeof: z,
    type: a,
    compare: void 0 === b ? null : b
  };
};

exports.useCallback = function (a, b) {
  return Z().useCallback(a, b);
};

exports.useContext = function (a, b) {
  return Z().useContext(a, b);
};

exports.useDebugValue = function () {};

exports.useEffect = function (a, b) {
  return Z().useEffect(a, b);
};

exports.useImperativeHandle = function (a, b, c) {
  return Z().useImperativeHandle(a, b, c);
};

exports.useLayoutEffect = function (a, b) {
  return Z().useLayoutEffect(a, b);
};

exports.useMemo = function (a, b) {
  return Z().useMemo(a, b);
};

exports.useReducer = function (a, b, c) {
  return Z().useReducer(a, b, c);
};

exports.useRef = function (a) {
  return Z().useRef(a);
};

exports.useState = function (a) {
  return Z().useState(a);
};

exports.version = "16.14.0";
},{"object-assign":"YOwE"}],"HdMw":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/react.production.min.js');
} else {
  module.exports = require('./cjs/react.development.js');
}
},{"./cjs/react.production.min.js":"pyFg"}],"NnwC":[function(require,module,exports) {
/* global exports */
"use strict";

var React = require("react");

function unsafeMkProps(key) {
  return function (value) {
    var result = {};
    result[key] = value;
    return result;
  };
}

exports.unsafeMkProps = unsafeMkProps;

function unsafeUnfoldProps(key) {
  return function (value) {
    var result = {};
    var props = {};
    props[key] = result;

    for (var subprop in value) {
      if (value.hasOwnProperty(subprop)) {
        result[subprop] = value[subprop];
      }
    }

    return props;
  };
}

exports.unsafeUnfoldProps = unsafeUnfoldProps;

function unsafePrefixProps(prefix) {
  return function (value) {
    var result = {};

    for (var prop in value) {
      if (value.hasOwnProperty(prop)) {
        result[prefix + prop] = value[prop];
      }
    }

    return result;
  };
}

exports.unsafePrefixProps = unsafePrefixProps;

function unsafeFromPropsArray(props) {
  var result = {};

  for (var i = 0, len = props.length; i < len; i++) {
    var prop = props[i];

    for (var key in prop) {
      if (prop.hasOwnProperty(key)) {
        result[key] = prop[key];
      }
    }
  }

  return result;
}

;
exports.unsafeFromPropsArray = unsafeFromPropsArray;
},{"react":"HdMw"}],"KGuU":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var y = $foreign.unsafeMkProps("y");
var x = $foreign.unsafeMkProps("x");
var wrap = $foreign.unsafeMkProps("wrap");
var wmode = $foreign.unsafeMkProps("wmode");
var width = $foreign.unsafeMkProps("width");
var vocab = $foreign.unsafeMkProps("vocab");
var viewBox = $foreign.unsafeMkProps("viewBox");
var valueArray = $foreign.unsafeMkProps("value");
var value = $foreign.unsafeMkProps("value");
var useMap = $foreign.unsafeMkProps("useMap");
var unselectable = $foreign.unsafeMkProps("unselectable");
var $$typeof = $foreign.unsafeMkProps("typeof");
var title = $foreign.unsafeMkProps("title");
var target = $foreign.unsafeMkProps("target");
var tabIndex = $foreign.unsafeMkProps("tabIndex");
var suppressContentEditableWarning = $foreign.unsafeMkProps("suppressContentEditableWarning");
var summary = $foreign.unsafeMkProps("summary");
var style = $foreign.unsafeUnfoldProps("style");
var strokeWidth = $foreign.unsafeMkProps("strokeWidth");
var stroke = $foreign.unsafeMkProps("stroke");
var step = $foreign.unsafeMkProps("step");
var start = $foreign.unsafeMkProps("start");
var srcSet = $foreign.unsafeMkProps("srcSet");
var srcLang = $foreign.unsafeMkProps("srcLang");
var srcDoc = $foreign.unsafeMkProps("srcDoc");
var src = $foreign.unsafeMkProps("src");
var spellCheck = $foreign.unsafeMkProps("spellCheck");
var span = $foreign.unsafeMkProps("span");
var sizes = $foreign.unsafeMkProps("sizes");
var size = $foreign.unsafeMkProps("size");
var shape = $foreign.unsafeMkProps("shape");
var selected = $foreign.unsafeMkProps("selected");
var security = $foreign.unsafeMkProps("security");
var seamless = $foreign.unsafeMkProps("seamless");
var scrolling = $foreign.unsafeMkProps("scrolling");
var scoped = $foreign.unsafeMkProps("scoped");
var scope = $foreign.unsafeMkProps("scope");
var sandbox = $foreign.unsafeMkProps("sandbox");
var rows = $foreign.unsafeMkProps("rows");
var rowSpan = $foreign.unsafeMkProps("rowSpan");
var role = $foreign.unsafeMkProps("role");
var reversed = $foreign.unsafeMkProps("reversed");
var results = $foreign.unsafeMkProps("results");
var resource = $foreign.unsafeMkProps("resource");
var required = $foreign.unsafeMkProps("required");
var rel = $foreign.unsafeMkProps("rel");
var ref = $foreign.unsafeMkProps("ref");
var readOnly = $foreign.unsafeMkProps("readOnly");
var radioGroup = $foreign.unsafeMkProps("radioGroup");
var r = $foreign.unsafeMkProps("r");
var property = $foreign.unsafeMkProps("property");
var profile = $foreign.unsafeMkProps("profile");
var preload = $foreign.unsafeMkProps("preload");
var prefix = $foreign.unsafeMkProps("prefix");
var poster = $foreign.unsafeMkProps("poster");
var points = $foreign.unsafeMkProps("points");
var placeholder = $foreign.unsafeMkProps("placeholder");
var pattern = $foreign.unsafeMkProps("pattern");
var optimum = $foreign.unsafeMkProps("optimum");
var open = $foreign.unsafeMkProps("open");
var opacity = $foreign.unsafeMkProps("opacity");

var onWheelCapture = function onWheelCapture(f) {
  return $foreign.unsafeMkProps("onWheelCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onWheel = function onWheel(f) {
  return $foreign.unsafeMkProps("onWheel")(Effect_Uncurried.mkEffectFn1(f));
};

var onWaitingCapture = function onWaitingCapture(f) {
  return $foreign.unsafeMkProps("onWaitingCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onWaiting = function onWaiting(f) {
  return $foreign.unsafeMkProps("onWaiting")(Effect_Uncurried.mkEffectFn1(f));
};

var onVolumeChangeCapture = function onVolumeChangeCapture(f) {
  return $foreign.unsafeMkProps("onVolumeChangeCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onVolumeChange = function onVolumeChange(f) {
  return $foreign.unsafeMkProps("onVolumeChange")(Effect_Uncurried.mkEffectFn1(f));
};

var onTransitionEndCapture = function onTransitionEndCapture(f) {
  return $foreign.unsafeMkProps("onTransitionEndCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onTransitionEnd = function onTransitionEnd(f) {
  return $foreign.unsafeMkProps("onTransitionEnd")(Effect_Uncurried.mkEffectFn1(f));
};

var onTouchStartCapture = function onTouchStartCapture(f) {
  return $foreign.unsafeMkProps("onTouchStartCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onTouchStart = function onTouchStart(f) {
  return $foreign.unsafeMkProps("onTouchStart")(Effect_Uncurried.mkEffectFn1(f));
};

var onTouchMoveCapture = function onTouchMoveCapture(f) {
  return $foreign.unsafeMkProps("onTouchMoveCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onTouchMove = function onTouchMove(f) {
  return $foreign.unsafeMkProps("onTouchMove")(Effect_Uncurried.mkEffectFn1(f));
};

var onTouchEndCapture = function onTouchEndCapture(f) {
  return $foreign.unsafeMkProps("onTouchEndCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onTouchEnd = function onTouchEnd(f) {
  return $foreign.unsafeMkProps("onTouchEnd")(Effect_Uncurried.mkEffectFn1(f));
};

var onTouchCancelCapture = function onTouchCancelCapture(f) {
  return $foreign.unsafeMkProps("onTouchCancelCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onTouchCancel = function onTouchCancel(f) {
  return $foreign.unsafeMkProps("onTouchCancel")(Effect_Uncurried.mkEffectFn1(f));
};

var onToggleCapture = function onToggleCapture(f) {
  return $foreign.unsafeMkProps("onToggleCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onToggle = function onToggle(f) {
  return $foreign.unsafeMkProps("onToggle")(Effect_Uncurried.mkEffectFn1(f));
};

var onTimeUpdateCapture = function onTimeUpdateCapture(f) {
  return $foreign.unsafeMkProps("onTimeUpdateCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onTimeUpdate = function onTimeUpdate(f) {
  return $foreign.unsafeMkProps("onTimeUpdate")(Effect_Uncurried.mkEffectFn1(f));
};

var onSuspendCapture = function onSuspendCapture(f) {
  return $foreign.unsafeMkProps("onSuspendCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onSuspend = function onSuspend(f) {
  return $foreign.unsafeMkProps("onSuspend")(Effect_Uncurried.mkEffectFn1(f));
};

var onSubmitCapture = function onSubmitCapture(f) {
  return $foreign.unsafeMkProps("onSubmitCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onSubmit = function onSubmit(f) {
  return $foreign.unsafeMkProps("onSubmit")(Effect_Uncurried.mkEffectFn1(f));
};

var onStalledCapture = function onStalledCapture(f) {
  return $foreign.unsafeMkProps("onStalledCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onStalled = function onStalled(f) {
  return $foreign.unsafeMkProps("onStalled")(Effect_Uncurried.mkEffectFn1(f));
};

var onSelectCapture = function onSelectCapture(f) {
  return $foreign.unsafeMkProps("onSelectCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onSelect = function onSelect(f) {
  return $foreign.unsafeMkProps("onSelect")(Effect_Uncurried.mkEffectFn1(f));
};

var onSeekingCapture = function onSeekingCapture(f) {
  return $foreign.unsafeMkProps("onSeekingCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onSeeking = function onSeeking(f) {
  return $foreign.unsafeMkProps("onSeeking")(Effect_Uncurried.mkEffectFn1(f));
};

var onSeekedCapture = function onSeekedCapture(f) {
  return $foreign.unsafeMkProps("onSeekedCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onSeeked = function onSeeked(f) {
  return $foreign.unsafeMkProps("onSeeked")(Effect_Uncurried.mkEffectFn1(f));
};

var onScrollCapture = function onScrollCapture(f) {
  return $foreign.unsafeMkProps("onScrollCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onScroll = function onScroll(f) {
  return $foreign.unsafeMkProps("onScroll")(Effect_Uncurried.mkEffectFn1(f));
};

var onRateChangeCapture = function onRateChangeCapture(f) {
  return $foreign.unsafeMkProps("onRateChangeCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onRateChange = function onRateChange(f) {
  return $foreign.unsafeMkProps("onRateChange")(Effect_Uncurried.mkEffectFn1(f));
};

var onProgressCapture = function onProgressCapture(f) {
  return $foreign.unsafeMkProps("onProgressCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onProgress = function onProgress(f) {
  return $foreign.unsafeMkProps("onProgress")(Effect_Uncurried.mkEffectFn1(f));
};

var onPlayingCapture = function onPlayingCapture(f) {
  return $foreign.unsafeMkProps("onPlayingCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onPlaying = function onPlaying(f) {
  return $foreign.unsafeMkProps("onPlaying")(Effect_Uncurried.mkEffectFn1(f));
};

var onPlayCapture = function onPlayCapture(f) {
  return $foreign.unsafeMkProps("onPlayCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onPlay = function onPlay(f) {
  return $foreign.unsafeMkProps("onPlay")(Effect_Uncurried.mkEffectFn1(f));
};

var onPauseCapture = function onPauseCapture(f) {
  return $foreign.unsafeMkProps("onPauseCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onPause = function onPause(f) {
  return $foreign.unsafeMkProps("onPause")(Effect_Uncurried.mkEffectFn1(f));
};

var onPasteCapture = function onPasteCapture(f) {
  return $foreign.unsafeMkProps("onPasteCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onPaste = function onPaste(f) {
  return $foreign.unsafeMkProps("onPaste")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseUpCapture = function onMouseUpCapture(f) {
  return $foreign.unsafeMkProps("onMouseUpCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseUp = function onMouseUp(f) {
  return $foreign.unsafeMkProps("onMouseUp")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseOverCapture = function onMouseOverCapture(f) {
  return $foreign.unsafeMkProps("onMouseOverCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseOver = function onMouseOver(f) {
  return $foreign.unsafeMkProps("onMouseOver")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseOutCapture = function onMouseOutCapture(f) {
  return $foreign.unsafeMkProps("onMouseOutCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseOut = function onMouseOut(f) {
  return $foreign.unsafeMkProps("onMouseOut")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseMoveCapture = function onMouseMoveCapture(f) {
  return $foreign.unsafeMkProps("onMouseMoveCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseMove = function onMouseMove(f) {
  return $foreign.unsafeMkProps("onMouseMove")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseLeaveCapture = function onMouseLeaveCapture(f) {
  return $foreign.unsafeMkProps("onMouseLeaveCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseLeave = function onMouseLeave(f) {
  return $foreign.unsafeMkProps("onMouseLeave")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseEnterCapture = function onMouseEnterCapture(f) {
  return $foreign.unsafeMkProps("onMouseEnterCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseEnter = function onMouseEnter(f) {
  return $foreign.unsafeMkProps("onMouseEnter")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseDownCapture = function onMouseDownCapture(f) {
  return $foreign.unsafeMkProps("onMouseDownCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onMouseDown = function onMouseDown(f) {
  return $foreign.unsafeMkProps("onMouseDown")(Effect_Uncurried.mkEffectFn1(f));
};

var onLoadedMetadataCapture = function onLoadedMetadataCapture(f) {
  return $foreign.unsafeMkProps("onLoadedMetadataCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onLoadedMetadata = function onLoadedMetadata(f) {
  return $foreign.unsafeMkProps("onLoadedMetadata")(Effect_Uncurried.mkEffectFn1(f));
};

var onLoadedDataCapture = function onLoadedDataCapture(f) {
  return $foreign.unsafeMkProps("onLoadedDataCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onLoadedData = function onLoadedData(f) {
  return $foreign.unsafeMkProps("onLoadedData")(Effect_Uncurried.mkEffectFn1(f));
};

var onLoadStartCapture = function onLoadStartCapture(f) {
  return $foreign.unsafeMkProps("onLoadStartCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onLoadStart = function onLoadStart(f) {
  return $foreign.unsafeMkProps("onLoadStart")(Effect_Uncurried.mkEffectFn1(f));
};

var onLoadCapture = function onLoadCapture(f) {
  return $foreign.unsafeMkProps("onLoadCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onLoad = function onLoad(f) {
  return $foreign.unsafeMkProps("onLoad")(Effect_Uncurried.mkEffectFn1(f));
};

var onKeyUpCapture = function onKeyUpCapture(f) {
  return $foreign.unsafeMkProps("onKeyUpCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onKeyUp = function onKeyUp(f) {
  return $foreign.unsafeMkProps("onKeyUp")(Effect_Uncurried.mkEffectFn1(f));
};

var onKeyPressCapture = function onKeyPressCapture(f) {
  return $foreign.unsafeMkProps("onKeyPressCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onKeyPress = function onKeyPress(f) {
  return $foreign.unsafeMkProps("onKeyPress")(Effect_Uncurried.mkEffectFn1(f));
};

var onKeyDownCapture = function onKeyDownCapture(f) {
  return $foreign.unsafeMkProps("onKeyDownCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onKeyDown = function onKeyDown(f) {
  return $foreign.unsafeMkProps("onKeyDown")(Effect_Uncurried.mkEffectFn1(f));
};

var onInvalidCapture = function onInvalidCapture(f) {
  return $foreign.unsafeMkProps("onInvalidCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onInvalid = function onInvalid(f) {
  return $foreign.unsafeMkProps("onInvalid")(Effect_Uncurried.mkEffectFn1(f));
};

var onInputCapture = function onInputCapture(f) {
  return $foreign.unsafeMkProps("onInputCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onInput = function onInput(f) {
  return $foreign.unsafeMkProps("onInput")(Effect_Uncurried.mkEffectFn1(f));
};

var onFocusCapture = function onFocusCapture(f) {
  return $foreign.unsafeMkProps("onFocusCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onFocus = function onFocus(f) {
  return $foreign.unsafeMkProps("onFocus")(Effect_Uncurried.mkEffectFn1(f));
};

var onErrorCapture = function onErrorCapture(f) {
  return $foreign.unsafeMkProps("onErrorCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onError = function onError(f) {
  return $foreign.unsafeMkProps("onError")(Effect_Uncurried.mkEffectFn1(f));
};

var onEndedCapture = function onEndedCapture(f) {
  return $foreign.unsafeMkProps("onEndedCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onEnded = function onEnded(f) {
  return $foreign.unsafeMkProps("onEnded")(Effect_Uncurried.mkEffectFn1(f));
};

var onEncryptedCapture = function onEncryptedCapture(f) {
  return $foreign.unsafeMkProps("onEncryptedCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onEncrypted = function onEncrypted(f) {
  return $foreign.unsafeMkProps("onEncrypted")(Effect_Uncurried.mkEffectFn1(f));
};

var onEmptiedCapture = function onEmptiedCapture(f) {
  return $foreign.unsafeMkProps("onEmptiedCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onEmptied = function onEmptied(f) {
  return $foreign.unsafeMkProps("onEmptied")(Effect_Uncurried.mkEffectFn1(f));
};

var onDurationChangeCapture = function onDurationChangeCapture(f) {
  return $foreign.unsafeMkProps("onDurationChangeCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDurationChange = function onDurationChange(f) {
  return $foreign.unsafeMkProps("onDurationChange")(Effect_Uncurried.mkEffectFn1(f));
};

var onDropCapture = function onDropCapture(f) {
  return $foreign.unsafeMkProps("onDropCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDrop = function onDrop(f) {
  return $foreign.unsafeMkProps("onDrop")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragStartCapture = function onDragStartCapture(f) {
  return $foreign.unsafeMkProps("onDragStartCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragStart = function onDragStart(f) {
  return $foreign.unsafeMkProps("onDragStart")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragOverCapture = function onDragOverCapture(f) {
  return $foreign.unsafeMkProps("onDragOverCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragOver = function onDragOver(f) {
  return $foreign.unsafeMkProps("onDragOver")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragLeaveCapture = function onDragLeaveCapture(f) {
  return $foreign.unsafeMkProps("onDragLeaveCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragLeave = function onDragLeave(f) {
  return $foreign.unsafeMkProps("onDragLeave")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragExitCapture = function onDragExitCapture(f) {
  return $foreign.unsafeMkProps("onDragExitCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragExit = function onDragExit(f) {
  return $foreign.unsafeMkProps("onDragExit")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragEnterCapture = function onDragEnterCapture(f) {
  return $foreign.unsafeMkProps("onDragEnterCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragEnter = function onDragEnter(f) {
  return $foreign.unsafeMkProps("onDragEnter")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragEndCapture = function onDragEndCapture(f) {
  return $foreign.unsafeMkProps("onDragEndCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragEnd = function onDragEnd(f) {
  return $foreign.unsafeMkProps("onDragEnd")(Effect_Uncurried.mkEffectFn1(f));
};

var onDragCapture = function onDragCapture(f) {
  return $foreign.unsafeMkProps("onDragCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDrag = function onDrag(f) {
  return $foreign.unsafeMkProps("onDrag")(Effect_Uncurried.mkEffectFn1(f));
};

var onDoubleClickCapture = function onDoubleClickCapture(f) {
  return $foreign.unsafeMkProps("onDoubleClickCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onDoubleClick = function onDoubleClick(f) {
  return $foreign.unsafeMkProps("onDoubleClick")(Effect_Uncurried.mkEffectFn1(f));
};

var onCutCapture = function onCutCapture(f) {
  return $foreign.unsafeMkProps("onCutCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onCut = function onCut(f) {
  return $foreign.unsafeMkProps("onCut")(Effect_Uncurried.mkEffectFn1(f));
};

var onCopyCapture = function onCopyCapture(f) {
  return $foreign.unsafeMkProps("onCopyCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onCopy = function onCopy(f) {
  return $foreign.unsafeMkProps("onCopy")(Effect_Uncurried.mkEffectFn1(f));
};

var onContextMenuCapture = function onContextMenuCapture(f) {
  return $foreign.unsafeMkProps("onContextMenuCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onContextMenu = function onContextMenu(f) {
  return $foreign.unsafeMkProps("onContextMenu")(Effect_Uncurried.mkEffectFn1(f));
};

var onCompositionUpdateCapture = function onCompositionUpdateCapture(f) {
  return $foreign.unsafeMkProps("onCompositionUpdateCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onCompositionUpdate = function onCompositionUpdate(f) {
  return $foreign.unsafeMkProps("onCompositionUpdate")(Effect_Uncurried.mkEffectFn1(f));
};

var onCompositionStartCapture = function onCompositionStartCapture(f) {
  return $foreign.unsafeMkProps("onCompositionStartCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onCompositionStart = function onCompositionStart(f) {
  return $foreign.unsafeMkProps("onCompositionStart")(Effect_Uncurried.mkEffectFn1(f));
};

var onCompositionEndCapture = function onCompositionEndCapture(f) {
  return $foreign.unsafeMkProps("onCompositionEndCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onCompositionEnd = function onCompositionEnd(f) {
  return $foreign.unsafeMkProps("onCompositionEnd")(Effect_Uncurried.mkEffectFn1(f));
};

var onClickCapture = function onClickCapture(f) {
  return $foreign.unsafeMkProps("onClickCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onClick = function onClick(f) {
  return $foreign.unsafeMkProps("onClick")(Effect_Uncurried.mkEffectFn1(f));
};

var onChangeCapture = function onChangeCapture(f) {
  return $foreign.unsafeMkProps("onChangeCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onChange = function onChange(f) {
  return $foreign.unsafeMkProps("onChange")(Effect_Uncurried.mkEffectFn1(f));
};

var onCanPlayThroughCapture = function onCanPlayThroughCapture(f) {
  return $foreign.unsafeMkProps("onCanPlayThroughCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onCanPlayThrough = function onCanPlayThrough(f) {
  return $foreign.unsafeMkProps("onCanPlayThrough")(Effect_Uncurried.mkEffectFn1(f));
};

var onCanPlayCapture = function onCanPlayCapture(f) {
  return $foreign.unsafeMkProps("onCanPlayCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onCanPlay = function onCanPlay(f) {
  return $foreign.unsafeMkProps("onCanPlay")(Effect_Uncurried.mkEffectFn1(f));
};

var onBlurCapture = function onBlurCapture(f) {
  return $foreign.unsafeMkProps("onBlurCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onBlur = function onBlur(f) {
  return $foreign.unsafeMkProps("onBlur")(Effect_Uncurried.mkEffectFn1(f));
};

var onAnimationStartCapture = function onAnimationStartCapture(f) {
  return $foreign.unsafeMkProps("onAnimationStartCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onAnimationStart = function onAnimationStart(f) {
  return $foreign.unsafeMkProps("onAnimationStart")(Effect_Uncurried.mkEffectFn1(f));
};

var onAnimationIterationCapture = function onAnimationIterationCapture(f) {
  return $foreign.unsafeMkProps("onAnimationIterationCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onAnimationIteration = function onAnimationIteration(f) {
  return $foreign.unsafeMkProps("onAnimationIteration")(Effect_Uncurried.mkEffectFn1(f));
};

var onAnimationEndCapture = function onAnimationEndCapture(f) {
  return $foreign.unsafeMkProps("onAnimationEndCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onAnimationEnd = function onAnimationEnd(f) {
  return $foreign.unsafeMkProps("onAnimationEnd")(Effect_Uncurried.mkEffectFn1(f));
};

var onAbortCapture = function onAbortCapture(f) {
  return $foreign.unsafeMkProps("onAbortCapture")(Effect_Uncurried.mkEffectFn1(f));
};

var onAbort = function onAbort(f) {
  return $foreign.unsafeMkProps("onAbort")(Effect_Uncurried.mkEffectFn1(f));
};

var nonce = $foreign.unsafeMkProps("nonce");
var noValidate = $foreign.unsafeMkProps("noValidate");
var name = $foreign.unsafeMkProps("name");
var muted = $foreign.unsafeMkProps("muted");
var multiple = $foreign.unsafeMkProps("multiple");
var minLength = $foreign.unsafeMkProps("minLength");
var min = $foreign.unsafeMkProps("min");
var method = $foreign.unsafeMkProps("method");
var mediaGroup = $foreign.unsafeMkProps("mediaGroup");
var media = $foreign.unsafeMkProps("media");
var maxLength = $foreign.unsafeMkProps("maxLength");
var max = $foreign.unsafeMkProps("max");
var marginWidth = $foreign.unsafeMkProps("marginWidth");
var marginHeight = $foreign.unsafeMkProps("marginHeight");
var manifest = $foreign.unsafeMkProps("manifest");
var low = $foreign.unsafeMkProps("low");
var loop = $foreign.unsafeMkProps("loop");
var list = $foreign.unsafeMkProps("list");
var lang = $foreign.unsafeMkProps("lang");
var label = $foreign.unsafeMkProps("label");
var kind = $foreign.unsafeMkProps("kind");
var keyType = $foreign.unsafeMkProps("keyType");
var keyParams = $foreign.unsafeMkProps("keyParams");
var key = $foreign.unsafeMkProps("key");
var itemType = $foreign.unsafeMkProps("itemType");
var itemScope = $foreign.unsafeMkProps("itemScope");
var itemRef = $foreign.unsafeMkProps("itemRef");
var itemProp = $foreign.unsafeMkProps("itemProp");
var itemID = $foreign.unsafeMkProps("itemID");
var is = $foreign.unsafeMkProps("is");
var integrity = $foreign.unsafeMkProps("integrity");
var inputMode = $foreign.unsafeMkProps("inputMode");
var inlist = $foreign.unsafeMkProps("inlist");
var icon = $foreign.unsafeMkProps("icon");
var httpEquiv = $foreign.unsafeMkProps("httpEquiv");
var htmlFor = $foreign.unsafeMkProps("htmlFor");
var hrefLang = $foreign.unsafeMkProps("hrefLang");
var href = $foreign.unsafeMkProps("href");
var high = $foreign.unsafeMkProps("high");
var hidden = $foreign.unsafeMkProps("hidden");
var height = $foreign.unsafeMkProps("height");
var headers = $foreign.unsafeMkProps("headers");
var frameBorder = $foreign.unsafeMkProps("frameBorder");
var formTarget = $foreign.unsafeMkProps("formTarget");
var formNoValidate = $foreign.unsafeMkProps("formNoValidate");
var formMethod = $foreign.unsafeMkProps("formMethod");
var formEncType = $foreign.unsafeMkProps("formEncType");
var formAction = $foreign.unsafeMkProps("formAction");
var form = $foreign.unsafeMkProps("form");
var fillOpacity = $foreign.unsafeMkProps("fillOpacity");
var fill = $foreign.unsafeMkProps("fill");
var encType = $foreign.unsafeMkProps("encType");
var draggable = $foreign.unsafeMkProps("draggable");
var download = $foreign.unsafeMkProps("download");
var disabled = $foreign.unsafeMkProps("disabled");
var dir = $foreign.unsafeMkProps("dir");
var defer = $foreign.unsafeMkProps("defer");
var defaultValue = $foreign.unsafeMkProps("defaultValue");
var defaultChecked = $foreign.unsafeMkProps("defaultChecked");
var $$default = $foreign.unsafeMkProps("default");
var dateTime = $foreign.unsafeMkProps("dateTime");
var datatype = $foreign.unsafeMkProps("datatype");
var dangerouslySetInnerHTML = $foreign.unsafeMkProps("dangerouslySetInnerHTML");
var d = $foreign.unsafeMkProps("d");
var cy = $foreign.unsafeMkProps("cy");
var cx = $foreign.unsafeMkProps("cx");
var crossOrigin = $foreign.unsafeMkProps("crossOrigin");
var coords = $foreign.unsafeMkProps("coords");
var controls = $foreign.unsafeMkProps("controls");
var contextMenu = $foreign.unsafeMkProps("contextMenu");
var contentEditable = $foreign.unsafeMkProps("contentEditable");
var content = $foreign.unsafeMkProps("content");
var cols = $foreign.unsafeMkProps("cols");
var color = $foreign.unsafeMkProps("color");
var colSpan = $foreign.unsafeMkProps("colSpan");
var className = $foreign.unsafeMkProps("className");
var classID = $foreign.unsafeMkProps("classID");
var cite = $foreign.unsafeMkProps("cite");
var checked = $foreign.unsafeMkProps("checked");
var charSet = $foreign.unsafeMkProps("charSet");
var challenge = $foreign.unsafeMkProps("checked");
var cellSpacing = $foreign.unsafeMkProps("cellSpacing");
var cellPadding = $foreign.unsafeMkProps("cellPadding");
var capture = $foreign.unsafeMkProps("capture");
var autoSave = $foreign.unsafeMkProps("autoSave");
var autoPlay = $foreign.unsafeMkProps("autoPlay");
var autoFocus = $foreign.unsafeMkProps("autoFocus");
var autoCorrect = $foreign.unsafeMkProps("autoCorrect");
var autoComplete = $foreign.unsafeMkProps("autoComplete");
var autoCapitalize = $foreign.unsafeMkProps("autoCapitalize");
var async = $foreign.unsafeMkProps("async");
var aria = $foreign.unsafePrefixProps("aria-");
var alt = $foreign.unsafeMkProps("alt");
var allowTransparency = $foreign.unsafeMkProps("allowTransparency");
var allowFullScreen = $foreign.unsafeMkProps("allowFullScreen");
var action = $foreign.unsafeMkProps("action");
var accessKey = $foreign.unsafeMkProps("accessKey");
var acceptCharset = $foreign.unsafeMkProps("acceptCharset");
var accept = $foreign.unsafeMkProps("accept");
var about = $foreign.unsafeMkProps("about");

var _type = $foreign.unsafeMkProps("type");

var _id = $foreign.unsafeMkProps("id");

var _data = $foreign.unsafePrefixProps("data-");

module.exports = {
  aria: aria,
  "_data": _data,
  style: style,
  dangerouslySetInnerHTML: dangerouslySetInnerHTML,
  accept: accept,
  acceptCharset: acceptCharset,
  accessKey: accessKey,
  action: action,
  allowFullScreen: allowFullScreen,
  allowTransparency: allowTransparency,
  alt: alt,
  async: async,
  autoComplete: autoComplete,
  autoFocus: autoFocus,
  autoPlay: autoPlay,
  capture: capture,
  cellPadding: cellPadding,
  cellSpacing: cellSpacing,
  charSet: charSet,
  challenge: challenge,
  checked: checked,
  cite: cite,
  classID: classID,
  className: className,
  cols: cols,
  colSpan: colSpan,
  content: content,
  contentEditable: contentEditable,
  contextMenu: contextMenu,
  controls: controls,
  coords: coords,
  crossOrigin: crossOrigin,
  dateTime: dateTime,
  "default": $$default,
  defaultChecked: defaultChecked,
  defaultValue: defaultValue,
  defer: defer,
  dir: dir,
  disabled: disabled,
  download: download,
  draggable: draggable,
  encType: encType,
  form: form,
  formAction: formAction,
  formEncType: formEncType,
  formMethod: formMethod,
  formNoValidate: formNoValidate,
  formTarget: formTarget,
  frameBorder: frameBorder,
  headers: headers,
  height: height,
  hidden: hidden,
  high: high,
  href: href,
  hrefLang: hrefLang,
  htmlFor: htmlFor,
  httpEquiv: httpEquiv,
  icon: icon,
  "_id": _id,
  inputMode: inputMode,
  integrity: integrity,
  is: is,
  key: key,
  keyParams: keyParams,
  keyType: keyType,
  kind: kind,
  label: label,
  lang: lang,
  list: list,
  loop: loop,
  low: low,
  manifest: manifest,
  marginHeight: marginHeight,
  marginWidth: marginWidth,
  max: max,
  maxLength: maxLength,
  media: media,
  mediaGroup: mediaGroup,
  method: method,
  min: min,
  minLength: minLength,
  multiple: multiple,
  muted: muted,
  name: name,
  nonce: nonce,
  noValidate: noValidate,
  open: open,
  optimum: optimum,
  pattern: pattern,
  placeholder: placeholder,
  poster: poster,
  preload: preload,
  profile: profile,
  radioGroup: radioGroup,
  readOnly: readOnly,
  rel: rel,
  required: required,
  reversed: reversed,
  role: role,
  rows: rows,
  rowSpan: rowSpan,
  sandbox: sandbox,
  scope: scope,
  scoped: scoped,
  scrolling: scrolling,
  seamless: seamless,
  selected: selected,
  shape: shape,
  size: size,
  sizes: sizes,
  span: span,
  spellCheck: spellCheck,
  src: src,
  srcDoc: srcDoc,
  srcLang: srcLang,
  srcSet: srcSet,
  start: start,
  step: step,
  summary: summary,
  tabIndex: tabIndex,
  target: target,
  title: title,
  "_type": _type,
  useMap: useMap,
  value: value,
  valueArray: valueArray,
  width: width,
  wmode: wmode,
  wrap: wrap,
  about: about,
  datatype: datatype,
  inlist: inlist,
  prefix: prefix,
  property: property,
  resource: resource,
  "typeof": $$typeof,
  vocab: vocab,
  autoCapitalize: autoCapitalize,
  autoCorrect: autoCorrect,
  autoSave: autoSave,
  color: color,
  itemProp: itemProp,
  itemScope: itemScope,
  itemType: itemType,
  itemID: itemID,
  itemRef: itemRef,
  results: results,
  security: security,
  unselectable: unselectable,
  onAnimationStart: onAnimationStart,
  onAnimationEnd: onAnimationEnd,
  onAnimationIteration: onAnimationIteration,
  onTransitionEnd: onTransitionEnd,
  onToggle: onToggle,
  onError: onError,
  onLoad: onLoad,
  onAbort: onAbort,
  onCanPlay: onCanPlay,
  onCanPlayThrough: onCanPlayThrough,
  onDurationChange: onDurationChange,
  onEmptied: onEmptied,
  onEncrypted: onEncrypted,
  onEnded: onEnded,
  onLoadedData: onLoadedData,
  onLoadedMetadata: onLoadedMetadata,
  onLoadStart: onLoadStart,
  onPause: onPause,
  onPlay: onPlay,
  onPlaying: onPlaying,
  onProgress: onProgress,
  onRateChange: onRateChange,
  onSeeked: onSeeked,
  onSeeking: onSeeking,
  onStalled: onStalled,
  onSuspend: onSuspend,
  onTimeUpdate: onTimeUpdate,
  onVolumeChange: onVolumeChange,
  onWaiting: onWaiting,
  onCopy: onCopy,
  onCut: onCut,
  onPaste: onPaste,
  onCompositionEnd: onCompositionEnd,
  onCompositionStart: onCompositionStart,
  onCompositionUpdate: onCompositionUpdate,
  onKeyDown: onKeyDown,
  onKeyPress: onKeyPress,
  onKeyUp: onKeyUp,
  onFocus: onFocus,
  onBlur: onBlur,
  onChange: onChange,
  onInput: onInput,
  onInvalid: onInvalid,
  onSubmit: onSubmit,
  onClick: onClick,
  onContextMenu: onContextMenu,
  onDoubleClick: onDoubleClick,
  onDrag: onDrag,
  onDragEnd: onDragEnd,
  onDragEnter: onDragEnter,
  onDragExit: onDragExit,
  onDragLeave: onDragLeave,
  onDragOver: onDragOver,
  onDragStart: onDragStart,
  onDrop: onDrop,
  onMouseDown: onMouseDown,
  onMouseEnter: onMouseEnter,
  onMouseLeave: onMouseLeave,
  onMouseMove: onMouseMove,
  onMouseOut: onMouseOut,
  onMouseOver: onMouseOver,
  onMouseUp: onMouseUp,
  onSelect: onSelect,
  onTouchCancel: onTouchCancel,
  onTouchEnd: onTouchEnd,
  onTouchMove: onTouchMove,
  onTouchStart: onTouchStart,
  onScroll: onScroll,
  onWheel: onWheel,
  onAnimationStartCapture: onAnimationStartCapture,
  onAnimationEndCapture: onAnimationEndCapture,
  onAnimationIterationCapture: onAnimationIterationCapture,
  onTransitionEndCapture: onTransitionEndCapture,
  onToggleCapture: onToggleCapture,
  onErrorCapture: onErrorCapture,
  onLoadCapture: onLoadCapture,
  onAbortCapture: onAbortCapture,
  onCanPlayCapture: onCanPlayCapture,
  onCanPlayThroughCapture: onCanPlayThroughCapture,
  onDurationChangeCapture: onDurationChangeCapture,
  onEmptiedCapture: onEmptiedCapture,
  onEncryptedCapture: onEncryptedCapture,
  onEndedCapture: onEndedCapture,
  onLoadedDataCapture: onLoadedDataCapture,
  onLoadedMetadataCapture: onLoadedMetadataCapture,
  onLoadStartCapture: onLoadStartCapture,
  onPauseCapture: onPauseCapture,
  onPlayCapture: onPlayCapture,
  onPlayingCapture: onPlayingCapture,
  onProgressCapture: onProgressCapture,
  onRateChangeCapture: onRateChangeCapture,
  onSeekedCapture: onSeekedCapture,
  onSeekingCapture: onSeekingCapture,
  onStalledCapture: onStalledCapture,
  onSuspendCapture: onSuspendCapture,
  onTimeUpdateCapture: onTimeUpdateCapture,
  onVolumeChangeCapture: onVolumeChangeCapture,
  onWaitingCapture: onWaitingCapture,
  onCopyCapture: onCopyCapture,
  onCutCapture: onCutCapture,
  onPasteCapture: onPasteCapture,
  onCompositionEndCapture: onCompositionEndCapture,
  onCompositionStartCapture: onCompositionStartCapture,
  onCompositionUpdateCapture: onCompositionUpdateCapture,
  onKeyDownCapture: onKeyDownCapture,
  onKeyPressCapture: onKeyPressCapture,
  onKeyUpCapture: onKeyUpCapture,
  onFocusCapture: onFocusCapture,
  onBlurCapture: onBlurCapture,
  onChangeCapture: onChangeCapture,
  onInputCapture: onInputCapture,
  onInvalidCapture: onInvalidCapture,
  onSubmitCapture: onSubmitCapture,
  onClickCapture: onClickCapture,
  onContextMenuCapture: onContextMenuCapture,
  onDoubleClickCapture: onDoubleClickCapture,
  onDragCapture: onDragCapture,
  onDragEndCapture: onDragEndCapture,
  onDragEnterCapture: onDragEnterCapture,
  onDragExitCapture: onDragExitCapture,
  onDragLeaveCapture: onDragLeaveCapture,
  onDragOverCapture: onDragOverCapture,
  onDragStartCapture: onDragStartCapture,
  onDropCapture: onDropCapture,
  onMouseDownCapture: onMouseDownCapture,
  onMouseEnterCapture: onMouseEnterCapture,
  onMouseLeaveCapture: onMouseLeaveCapture,
  onMouseMoveCapture: onMouseMoveCapture,
  onMouseOutCapture: onMouseOutCapture,
  onMouseOverCapture: onMouseOverCapture,
  onMouseUpCapture: onMouseUpCapture,
  onSelectCapture: onSelectCapture,
  onTouchCancelCapture: onTouchCancelCapture,
  onTouchEndCapture: onTouchEndCapture,
  onTouchMoveCapture: onTouchMoveCapture,
  onTouchStartCapture: onTouchStartCapture,
  onScrollCapture: onScrollCapture,
  onWheelCapture: onWheelCapture,
  ref: ref,
  suppressContentEditableWarning: suppressContentEditableWarning,
  x: x,
  y: y,
  cx: cx,
  cy: cy,
  r: r,
  fill: fill,
  opacity: opacity,
  fillOpacity: fillOpacity,
  stroke: stroke,
  strokeWidth: strokeWidth,
  points: points,
  d: d,
  viewBox: viewBox,
  unsafeMkProps: $foreign.unsafeMkProps,
  unsafeUnfoldProps: $foreign.unsafeUnfoldProps,
  unsafePrefixProps: $foreign.unsafePrefixProps,
  unsafeFromPropsArray: $foreign.unsafeFromPropsArray
};
},{"./foreign.js":"NnwC","../Effect.Uncurried/index.js":"qn3Z"}],"twSw":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Concur_Core_Props = require("../Concur.Core.Props/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var React_DOM_Props = require("../React.DOM.Props/index.js");

var y = function y($0) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.y($0));
};

var x = function x($1) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.x($1));
};

var wrap = function wrap($2) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.wrap($2));
};

var wmode = function wmode($3) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.wmode($3));
};

var width = function width($4) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.width($4));
};

var vocab = function vocab($5) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.vocab($5));
};

var viewBox = function viewBox($6) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.viewBox($6));
};

var valueArray = function valueArray($7) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.valueArray($7));
};

var value = function value($8) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.value($8));
};

var useMap = function useMap($9) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.useMap($9));
};

var unselectable = function unselectable($10) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.unselectable($10));
};

var unsafeTargetValue = function unsafeTargetValue(e) {
  return e.target.value;
};

var unsafeMkPropHandler = function unsafeMkPropHandler(s) {
  return new Concur_Core_Props.Handler(function (f) {
    return React_DOM_Props.unsafeMkProps(s)(Effect_Uncurried.mkEffectFn1(f));
  });
};

var unsafeMkProp = function unsafeMkProp(s) {
  return function (v) {
    return new Concur_Core_Props.PrimProp(React_DOM_Props.unsafeMkProps(s)(v));
  };
};

var $$typeof = function $$typeof($11) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props["typeof"]($11));
};

var title = function title($12) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.title($12));
};

var target = function target($13) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.target($13));
};

var tabIndex = function tabIndex($14) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.tabIndex($14));
};

var suppressContentEditableWarning = function suppressContentEditableWarning($15) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.suppressContentEditableWarning($15));
};

var summary = function summary($16) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.summary($16));
};

var style = function style($17) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.style($17));
};

var strokeWidth = function strokeWidth($18) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.strokeWidth($18));
};

var stroke = function stroke($19) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.stroke($19));
};

var step = function step($20) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.step($20));
};

var start = function start($21) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.start($21));
};

var srcSet = function srcSet($22) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.srcSet($22));
};

var srcLang = function srcLang($23) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.srcLang($23));
};

var srcDoc = function srcDoc($24) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.srcDoc($24));
};

var src = function src($25) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.src($25));
};

var spellCheck = function spellCheck($26) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.spellCheck($26));
};

var span = function span($27) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.span($27));
};

var sizes = function sizes($28) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.sizes($28));
};

var size = function size($29) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.size($29));
};

var shape = function shape($30) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.shape($30));
};

var selected = function selected($31) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.selected($31));
};

var security = function security($32) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.security($32));
};

var seamless = function seamless($33) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.seamless($33));
};

var scrolling = function scrolling($34) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.scrolling($34));
};

var scoped = function scoped($35) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.scoped($35));
};

var scope = function scope($36) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.scope($36));
};

var sandbox = function sandbox($37) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.sandbox($37));
};

var rows = function rows($38) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.rows($38));
};

var rowSpan = function rowSpan($39) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.rowSpan($39));
};

var role = function role($40) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.role($40));
};

var reversed = function reversed($41) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.reversed($41));
};

var results = function results($42) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.results($42));
};

var resource = function resource($43) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.resource($43));
};

var required = function required($44) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.required($44));
};

var rel = function rel($45) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.rel($45));
};

var ref = function ref($46) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.ref($46));
};

var readOnly = function readOnly($47) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.readOnly($47));
};

var radioGroup = function radioGroup($48) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.radioGroup($48));
};

var r = function r($49) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.r($49));
};

var property = function property($50) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.property($50));
};

var profile = function profile($51) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.profile($51));
};

var preload = function preload($52) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.preload($52));
};

var prefix = function prefix($53) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.prefix($53));
};

var poster = function poster($54) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.poster($54));
};

var points = function points($55) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.points($55));
};

var placeholder = function placeholder($56) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.placeholder($56));
};

var pattern = function pattern($57) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.pattern($57));
};

var optimum = function optimum($58) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.optimum($58));
};

var open = function open($59) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.open($59));
};

var opacity = function opacity($60) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.opacity($60));
};

var onWheelCapture = new Concur_Core_Props.Handler(React_DOM_Props.onWheelCapture);
var onWheel = new Concur_Core_Props.Handler(React_DOM_Props.onWheel);
var onWaitingCapture = new Concur_Core_Props.Handler(React_DOM_Props.onWaitingCapture);
var onWaiting = new Concur_Core_Props.Handler(React_DOM_Props.onWaiting);
var onVolumeChangeCapture = new Concur_Core_Props.Handler(React_DOM_Props.onVolumeChangeCapture);
var onVolumeChange = new Concur_Core_Props.Handler(React_DOM_Props.onVolumeChange);
var onTransitionEndCapture = new Concur_Core_Props.Handler(React_DOM_Props.onTransitionEndCapture);
var onTransitionEnd = new Concur_Core_Props.Handler(React_DOM_Props.onTransitionEnd);
var onTouchStartCapture = new Concur_Core_Props.Handler(React_DOM_Props.onTouchStartCapture);
var onTouchStart = new Concur_Core_Props.Handler(React_DOM_Props.onTouchStart);
var onTouchMoveCapture = new Concur_Core_Props.Handler(React_DOM_Props.onTouchMoveCapture);
var onTouchMove = new Concur_Core_Props.Handler(React_DOM_Props.onTouchMove);
var onTouchEndCapture = new Concur_Core_Props.Handler(React_DOM_Props.onTouchEndCapture);
var onTouchEnd = new Concur_Core_Props.Handler(React_DOM_Props.onTouchEnd);
var onTouchCancelCapture = new Concur_Core_Props.Handler(React_DOM_Props.onTouchCancelCapture);
var onTouchCancel = new Concur_Core_Props.Handler(React_DOM_Props.onTouchCancel);
var onToggleCapture = new Concur_Core_Props.Handler(React_DOM_Props.onToggleCapture);
var onToggle = new Concur_Core_Props.Handler(React_DOM_Props.onToggle);
var onTimeUpdateCapture = new Concur_Core_Props.Handler(React_DOM_Props.onTimeUpdateCapture);
var onTimeUpdate = new Concur_Core_Props.Handler(React_DOM_Props.onTimeUpdate);
var onSuspendCapture = new Concur_Core_Props.Handler(React_DOM_Props.onSuspendCapture);
var onSuspend = new Concur_Core_Props.Handler(React_DOM_Props.onSuspend);
var onSubmitCapture = new Concur_Core_Props.Handler(React_DOM_Props.onSubmitCapture);
var onSubmit = new Concur_Core_Props.Handler(React_DOM_Props.onSubmit);
var onStalledCapture = new Concur_Core_Props.Handler(React_DOM_Props.onStalledCapture);
var onStalled = new Concur_Core_Props.Handler(React_DOM_Props.onStalled);
var onSelectCapture = new Concur_Core_Props.Handler(React_DOM_Props.onSelectCapture);
var onSelect = new Concur_Core_Props.Handler(React_DOM_Props.onSelect);
var onSeekingCapture = new Concur_Core_Props.Handler(React_DOM_Props.onSeekingCapture);
var onSeeking = new Concur_Core_Props.Handler(React_DOM_Props.onSeeking);
var onSeekedCapture = new Concur_Core_Props.Handler(React_DOM_Props.onSeekedCapture);
var onSeeked = new Concur_Core_Props.Handler(React_DOM_Props.onSeeked);
var onScrollCapture = new Concur_Core_Props.Handler(React_DOM_Props.onScrollCapture);
var onScroll = new Concur_Core_Props.Handler(React_DOM_Props.onScroll);
var onRateChangeCapture = new Concur_Core_Props.Handler(React_DOM_Props.onRateChangeCapture);
var onRateChange = new Concur_Core_Props.Handler(React_DOM_Props.onRateChange);
var onProgressCapture = new Concur_Core_Props.Handler(React_DOM_Props.onProgressCapture);
var onProgress = new Concur_Core_Props.Handler(React_DOM_Props.onProgress);
var onPlayingCapture = new Concur_Core_Props.Handler(React_DOM_Props.onPlayingCapture);
var onPlaying = new Concur_Core_Props.Handler(React_DOM_Props.onPlaying);
var onPlayCapture = new Concur_Core_Props.Handler(React_DOM_Props.onPlayCapture);
var onPlay = new Concur_Core_Props.Handler(React_DOM_Props.onPlay);
var onPauseCapture = new Concur_Core_Props.Handler(React_DOM_Props.onPauseCapture);
var onPause = new Concur_Core_Props.Handler(React_DOM_Props.onPause);
var onPasteCapture = new Concur_Core_Props.Handler(React_DOM_Props.onPasteCapture);
var onPaste = new Concur_Core_Props.Handler(React_DOM_Props.onPaste);
var onMouseUpCapture = new Concur_Core_Props.Handler(React_DOM_Props.onMouseUpCapture);
var onMouseUp = new Concur_Core_Props.Handler(React_DOM_Props.onMouseUp);
var onMouseOverCapture = new Concur_Core_Props.Handler(React_DOM_Props.onMouseOverCapture);
var onMouseOver = new Concur_Core_Props.Handler(React_DOM_Props.onMouseOver);
var onMouseOutCapture = new Concur_Core_Props.Handler(React_DOM_Props.onMouseOutCapture);
var onMouseOut = new Concur_Core_Props.Handler(React_DOM_Props.onMouseOut);
var onMouseMoveCapture = new Concur_Core_Props.Handler(React_DOM_Props.onMouseMoveCapture);
var onMouseMove = new Concur_Core_Props.Handler(React_DOM_Props.onMouseMove);
var onMouseLeaveCapture = new Concur_Core_Props.Handler(React_DOM_Props.onMouseLeaveCapture);
var onMouseLeave = new Concur_Core_Props.Handler(React_DOM_Props.onMouseLeave);
var onMouseEnterCapture = new Concur_Core_Props.Handler(React_DOM_Props.onMouseEnterCapture);
var onMouseEnter = new Concur_Core_Props.Handler(React_DOM_Props.onMouseEnter);
var onMouseDownCapture = new Concur_Core_Props.Handler(React_DOM_Props.onMouseDownCapture);
var onMouseDown = new Concur_Core_Props.Handler(React_DOM_Props.onMouseDown);
var onLoadedMetadataCapture = new Concur_Core_Props.Handler(React_DOM_Props.onLoadedMetadataCapture);
var onLoadedMetadata = new Concur_Core_Props.Handler(React_DOM_Props.onLoadedMetadata);
var onLoadedDataCapture = new Concur_Core_Props.Handler(React_DOM_Props.onLoadedDataCapture);
var onLoadedData = new Concur_Core_Props.Handler(React_DOM_Props.onLoadedData);
var onLoadStartCapture = new Concur_Core_Props.Handler(React_DOM_Props.onLoadStartCapture);
var onLoadStart = new Concur_Core_Props.Handler(React_DOM_Props.onLoadStart);
var onLoadCapture = new Concur_Core_Props.Handler(React_DOM_Props.onLoadCapture);
var onLoad = new Concur_Core_Props.Handler(React_DOM_Props.onLoad);
var onKeyUpCapture = new Concur_Core_Props.Handler(React_DOM_Props.onKeyUpCapture);
var onKeyUp = new Concur_Core_Props.Handler(React_DOM_Props.onKeyUp);
var onKeyPressCapture = new Concur_Core_Props.Handler(React_DOM_Props.onKeyPressCapture);
var onKeyPress = new Concur_Core_Props.Handler(React_DOM_Props.onKeyPress);
var onKeyDownCapture = new Concur_Core_Props.Handler(React_DOM_Props.onKeyDownCapture);
var onKeyDown = new Concur_Core_Props.Handler(React_DOM_Props.onKeyDown);
var onInvalidCapture = new Concur_Core_Props.Handler(React_DOM_Props.onInvalidCapture);
var onInvalid = new Concur_Core_Props.Handler(React_DOM_Props.onInvalid);
var onInputCapture = new Concur_Core_Props.Handler(React_DOM_Props.onInputCapture);
var onInput = new Concur_Core_Props.Handler(React_DOM_Props.onInput);
var onFocusCapture = new Concur_Core_Props.Handler(React_DOM_Props.onFocusCapture);
var onFocus = new Concur_Core_Props.Handler(React_DOM_Props.onFocus);
var onErrorCapture = new Concur_Core_Props.Handler(React_DOM_Props.onErrorCapture);
var onError = new Concur_Core_Props.Handler(React_DOM_Props.onError);
var onEndedCapture = new Concur_Core_Props.Handler(React_DOM_Props.onEndedCapture);
var onEnded = new Concur_Core_Props.Handler(React_DOM_Props.onEnded);
var onEncryptedCapture = new Concur_Core_Props.Handler(React_DOM_Props.onEncryptedCapture);
var onEncrypted = new Concur_Core_Props.Handler(React_DOM_Props.onEncrypted);
var onEmptiedCapture = new Concur_Core_Props.Handler(React_DOM_Props.onEmptiedCapture);
var onEmptied = new Concur_Core_Props.Handler(React_DOM_Props.onEmptied);
var onDurationChangeCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDurationChangeCapture);
var onDurationChange = new Concur_Core_Props.Handler(React_DOM_Props.onDurationChange);
var onDropCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDropCapture);
var onDrop = new Concur_Core_Props.Handler(React_DOM_Props.onDrop);
var onDragStartCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDragStartCapture);
var onDragStart = new Concur_Core_Props.Handler(React_DOM_Props.onDragStart);
var onDragOverCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDragOverCapture);
var onDragOver = new Concur_Core_Props.Handler(React_DOM_Props.onDragOver);
var onDragLeaveCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDragLeaveCapture);
var onDragLeave = new Concur_Core_Props.Handler(React_DOM_Props.onDragLeave);
var onDragExitCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDragExitCapture);
var onDragExit = new Concur_Core_Props.Handler(React_DOM_Props.onDragExit);
var onDragEnterCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDragEnterCapture);
var onDragEnter = new Concur_Core_Props.Handler(React_DOM_Props.onDragEnter);
var onDragEndCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDragEndCapture);
var onDragEnd = new Concur_Core_Props.Handler(React_DOM_Props.onDragEnd);
var onDragCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDragCapture);
var onDrag = new Concur_Core_Props.Handler(React_DOM_Props.onDrag);
var onDoubleClickCapture = new Concur_Core_Props.Handler(React_DOM_Props.onDoubleClickCapture);
var onDoubleClick = new Concur_Core_Props.Handler(React_DOM_Props.onDoubleClick);
var onCutCapture = new Concur_Core_Props.Handler(React_DOM_Props.onCutCapture);
var onCut = new Concur_Core_Props.Handler(React_DOM_Props.onCut);
var onCopyCapture = new Concur_Core_Props.Handler(React_DOM_Props.onCopyCapture);
var onCopy = new Concur_Core_Props.Handler(React_DOM_Props.onCopy);
var onContextMenuCapture = new Concur_Core_Props.Handler(React_DOM_Props.onContextMenuCapture);
var onContextMenu = new Concur_Core_Props.Handler(React_DOM_Props.onContextMenu);
var onCompositionUpdateCapture = new Concur_Core_Props.Handler(React_DOM_Props.onCompositionUpdateCapture);
var onCompositionUpdate = new Concur_Core_Props.Handler(React_DOM_Props.onCompositionUpdate);
var onCompositionStartCapture = new Concur_Core_Props.Handler(React_DOM_Props.onCompositionStartCapture);
var onCompositionStart = new Concur_Core_Props.Handler(React_DOM_Props.onCompositionStart);
var onCompositionEndCapture = new Concur_Core_Props.Handler(React_DOM_Props.onCompositionEndCapture);
var onCompositionEnd = new Concur_Core_Props.Handler(React_DOM_Props.onCompositionEnd);
var onClickCapture = new Concur_Core_Props.Handler(React_DOM_Props.onClickCapture);
var onClick = new Concur_Core_Props.Handler(React_DOM_Props.onClick);
var onChangeCapture = new Concur_Core_Props.Handler(React_DOM_Props.onChangeCapture);
var onChange = new Concur_Core_Props.Handler(React_DOM_Props.onChange);
var onCanPlayThroughCapture = new Concur_Core_Props.Handler(React_DOM_Props.onCanPlayThroughCapture);
var onCanPlayThrough = new Concur_Core_Props.Handler(React_DOM_Props.onCanPlayThrough);
var onCanPlayCapture = new Concur_Core_Props.Handler(React_DOM_Props.onCanPlayCapture);
var onCanPlay = new Concur_Core_Props.Handler(React_DOM_Props.onCanPlay);
var onBlurCapture = new Concur_Core_Props.Handler(React_DOM_Props.onBlurCapture);
var onBlur = new Concur_Core_Props.Handler(React_DOM_Props.onBlur);
var onAnimationStartCapture = new Concur_Core_Props.Handler(React_DOM_Props.onAnimationStartCapture);
var onAnimationStart = new Concur_Core_Props.Handler(React_DOM_Props.onAnimationStart);
var onAnimationIterationCapture = new Concur_Core_Props.Handler(React_DOM_Props.onAnimationIterationCapture);
var onAnimationIteration = new Concur_Core_Props.Handler(React_DOM_Props.onAnimationIteration);
var onAnimationEndCapture = new Concur_Core_Props.Handler(React_DOM_Props.onAnimationEndCapture);
var onAnimationEnd = new Concur_Core_Props.Handler(React_DOM_Props.onAnimationEnd);
var onAbortCapture = new Concur_Core_Props.Handler(React_DOM_Props.onAbortCapture);
var onAbort = new Concur_Core_Props.Handler(React_DOM_Props.onAbort);

var nonce = function nonce($61) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.nonce($61));
};

var noValidate = function noValidate($62) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.noValidate($62));
};

var name = function name($63) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.name($63));
};

var muted = function muted($64) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.muted($64));
};

var multiple = function multiple($65) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.multiple($65));
};

var minLength = function minLength($66) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.minLength($66));
};

var min = function min($67) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.min($67));
};

var method = function method($68) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.method($68));
};

var mediaGroup = function mediaGroup($69) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.mediaGroup($69));
};

var media = function media($70) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.media($70));
};

var maxLength = function maxLength($71) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.maxLength($71));
};

var max = function max($72) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.max($72));
};

var marginWidth = function marginWidth($73) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.marginWidth($73));
};

var marginHeight = function marginHeight($74) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.marginHeight($74));
};

var manifest = function manifest($75) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.manifest($75));
};

var low = function low($76) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.low($76));
};

var loop = function loop($77) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.loop($77));
};

var list = function list($78) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.list($78));
};

var lang = function lang($79) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.lang($79));
};

var label = function label($80) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.label($80));
};

var kind = function kind($81) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.kind($81));
};

var keyType = function keyType($82) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.keyType($82));
};

var keyParams = function keyParams($83) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.keyParams($83));
};

var key = function key($84) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.key($84));
};

var itemType = function itemType($85) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.itemType($85));
};

var itemScope = function itemScope($86) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.itemScope($86));
};

var itemRef = function itemRef($87) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.itemRef($87));
};

var itemProp = function itemProp($88) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.itemProp($88));
};

var itemID = function itemID($89) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.itemID($89));
};

var isEnterEvent = function isEnterEvent(e) {
  return e.which === 13 || e.keyCode === 13;
};

var onKeyEnter = Concur_Core_Props.filterProp(isEnterEvent)(onKeyDown);

var is = function is($90) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.is($90));
};

var integrity = function integrity($91) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.integrity($91));
};

var inputMode = function inputMode($92) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.inputMode($92));
};

var inlist = function inlist($93) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.inlist($93));
};

var icon = function icon($94) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.icon($94));
};

var httpEquiv = function httpEquiv($95) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.httpEquiv($95));
};

var htmlFor = function htmlFor($96) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.htmlFor($96));
};

var hrefLang = function hrefLang($97) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.hrefLang($97));
};

var href = function href($98) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.href($98));
};

var high = function high($99) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.high($99));
};

var hidden = function hidden($100) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.hidden($100));
};

var height = function height($101) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.height($101));
};

var headers = function headers($102) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.headers($102));
};

var frameBorder = function frameBorder($103) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.frameBorder($103));
};

var formTarget = function formTarget($104) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.formTarget($104));
};

var formNoValidate = function formNoValidate($105) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.formNoValidate($105));
};

var formMethod = function formMethod($106) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.formMethod($106));
};

var formEncType = function formEncType($107) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.formEncType($107));
};

var formAction = function formAction($108) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.formAction($108));
};

var form = function form($109) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.form($109));
};

var fillOpacity = function fillOpacity($110) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.fillOpacity($110));
};

var fill = function fill($111) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.fill($111));
};

var encType = function encType($112) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.encType($112));
};

var emptyProp = new Concur_Core_Props.PrimProp($foreign.emptyProp_);

var draggable = function draggable($113) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.draggable($113));
};

var download = function download($114) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.download($114));
};

var disabled = function disabled($115) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.disabled($115));
};

var dir = function dir($116) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.dir($116));
};

var defer = function defer($117) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.defer($117));
};

var defaultValue = function defaultValue($118) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.defaultValue($118));
};

var defaultChecked = function defaultChecked($119) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.defaultChecked($119));
};

var $$default = function $$default($120) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props["default"]($120));
};

var dateTime = function dateTime($121) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.dateTime($121));
};

var datatype = function datatype($122) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.datatype($122));
};

var dangerouslySetInnerHTML = function dangerouslySetInnerHTML($123) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.dangerouslySetInnerHTML($123));
};

var d = function d($124) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.d($124));
};

var cy = function cy($125) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.cy($125));
};

var cx = function cx($126) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.cx($126));
};

var crossOrigin = function crossOrigin($127) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.crossOrigin($127));
};

var coords = function coords($128) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.coords($128));
};

var controls = function controls($129) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.controls($129));
};

var contextMenu = function contextMenu($130) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.contextMenu($130));
};

var contentEditable = function contentEditable($131) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.contentEditable($131));
};

var content = function content($132) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.content($132));
};

var cols = function cols($133) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.cols($133));
};

var color = function color($134) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.color($134));
};

var colSpan = function colSpan($135) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.colSpan($135));
};

var className = function className($136) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.className($136));
};

var classList = function () {
  var $137 = Data_Array.intercalate(Data_Monoid.monoidString)(" ");
  var $138 = Data_Array.concatMap(Data_Maybe.maybe([])(function (s) {
    return [s];
  }));
  return function ($139) {
    return className($137($138($139)));
  };
}();

var classID = function classID($140) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.classID($140));
};

var cite = function cite($141) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.cite($141));
};

var checked = function checked($142) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.checked($142));
};

var charSet = function charSet($143) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.charSet($143));
};

var challenge = function challenge($144) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.challenge($144));
};

var cellSpacing = function cellSpacing($145) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.cellSpacing($145));
};

var cellPadding = function cellPadding($146) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.cellPadding($146));
};

var capture = function capture($147) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.capture($147));
};

var autoSave = function autoSave($148) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.autoSave($148));
};

var autoPlay = function autoPlay($149) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.autoPlay($149));
};

var autoFocus = function autoFocus($150) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.autoFocus($150));
};

var autoCorrect = function autoCorrect($151) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.autoCorrect($151));
};

var autoComplete = function autoComplete($152) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.autoComplete($152));
};

var autoCapitalize = function autoCapitalize($153) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.autoCapitalize($153));
};

var async = function async($154) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.async($154));
};

var aria = function aria($155) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.aria($155));
};

var alt = function alt($156) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.alt($156));
};

var allowTransparency = function allowTransparency($157) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.allowTransparency($157));
};

var allowFullScreen = function allowFullScreen($158) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.allowFullScreen($158));
};

var action = function action($159) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.action($159));
};

var accessKey = function accessKey($160) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.accessKey($160));
};

var acceptCharset = function acceptCharset($161) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.acceptCharset($161));
};

var accept = function accept($162) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.accept($162));
};

var about = function about($163) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props.about($163));
};

var _type = function _type($164) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props["_type"]($164));
};

var _id = function _id($165) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props["_id"]($165));
};

var _data = function _data($166) {
  return Concur_Core_Props.PrimProp.create(React_DOM_Props["_data"]($166));
};

module.exports = {
  emptyProp: emptyProp,
  unsafeMkPropHandler: unsafeMkPropHandler,
  unsafeMkProp: unsafeMkProp,
  classList: classList,
  unsafeTargetValue: unsafeTargetValue,
  isEnterEvent: isEnterEvent,
  aria: aria,
  "_data": _data,
  style: style,
  dangerouslySetInnerHTML: dangerouslySetInnerHTML,
  accept: accept,
  acceptCharset: acceptCharset,
  accessKey: accessKey,
  action: action,
  allowFullScreen: allowFullScreen,
  allowTransparency: allowTransparency,
  alt: alt,
  async: async,
  autoComplete: autoComplete,
  autoFocus: autoFocus,
  autoPlay: autoPlay,
  capture: capture,
  cellPadding: cellPadding,
  cellSpacing: cellSpacing,
  charSet: charSet,
  challenge: challenge,
  checked: checked,
  cite: cite,
  classID: classID,
  className: className,
  cols: cols,
  colSpan: colSpan,
  content: content,
  contentEditable: contentEditable,
  contextMenu: contextMenu,
  controls: controls,
  coords: coords,
  crossOrigin: crossOrigin,
  dateTime: dateTime,
  "default": $$default,
  defaultChecked: defaultChecked,
  defaultValue: defaultValue,
  defer: defer,
  dir: dir,
  disabled: disabled,
  download: download,
  draggable: draggable,
  encType: encType,
  form: form,
  formAction: formAction,
  formEncType: formEncType,
  formMethod: formMethod,
  formNoValidate: formNoValidate,
  formTarget: formTarget,
  frameBorder: frameBorder,
  headers: headers,
  height: height,
  hidden: hidden,
  high: high,
  href: href,
  hrefLang: hrefLang,
  htmlFor: htmlFor,
  httpEquiv: httpEquiv,
  icon: icon,
  "_id": _id,
  inputMode: inputMode,
  integrity: integrity,
  is: is,
  key: key,
  keyParams: keyParams,
  keyType: keyType,
  kind: kind,
  label: label,
  lang: lang,
  list: list,
  loop: loop,
  low: low,
  manifest: manifest,
  marginHeight: marginHeight,
  marginWidth: marginWidth,
  max: max,
  maxLength: maxLength,
  media: media,
  mediaGroup: mediaGroup,
  method: method,
  min: min,
  minLength: minLength,
  multiple: multiple,
  muted: muted,
  name: name,
  nonce: nonce,
  noValidate: noValidate,
  open: open,
  optimum: optimum,
  pattern: pattern,
  placeholder: placeholder,
  poster: poster,
  preload: preload,
  profile: profile,
  radioGroup: radioGroup,
  readOnly: readOnly,
  rel: rel,
  required: required,
  reversed: reversed,
  role: role,
  rows: rows,
  rowSpan: rowSpan,
  sandbox: sandbox,
  scope: scope,
  scoped: scoped,
  scrolling: scrolling,
  seamless: seamless,
  selected: selected,
  shape: shape,
  size: size,
  sizes: sizes,
  span: span,
  spellCheck: spellCheck,
  src: src,
  srcDoc: srcDoc,
  srcLang: srcLang,
  srcSet: srcSet,
  start: start,
  step: step,
  summary: summary,
  tabIndex: tabIndex,
  target: target,
  title: title,
  "_type": _type,
  useMap: useMap,
  value: value,
  valueArray: valueArray,
  width: width,
  wmode: wmode,
  wrap: wrap,
  about: about,
  datatype: datatype,
  inlist: inlist,
  prefix: prefix,
  property: property,
  resource: resource,
  "typeof": $$typeof,
  vocab: vocab,
  autoCapitalize: autoCapitalize,
  autoCorrect: autoCorrect,
  autoSave: autoSave,
  color: color,
  itemProp: itemProp,
  itemScope: itemScope,
  itemType: itemType,
  itemID: itemID,
  itemRef: itemRef,
  results: results,
  security: security,
  unselectable: unselectable,
  onAnimationStart: onAnimationStart,
  onAnimationEnd: onAnimationEnd,
  onAnimationIteration: onAnimationIteration,
  onTransitionEnd: onTransitionEnd,
  onToggle: onToggle,
  onError: onError,
  onLoad: onLoad,
  onAbort: onAbort,
  onCanPlay: onCanPlay,
  onCanPlayThrough: onCanPlayThrough,
  onDurationChange: onDurationChange,
  onEmptied: onEmptied,
  onEncrypted: onEncrypted,
  onEnded: onEnded,
  onLoadedData: onLoadedData,
  onLoadedMetadata: onLoadedMetadata,
  onLoadStart: onLoadStart,
  onPause: onPause,
  onPlay: onPlay,
  onPlaying: onPlaying,
  onProgress: onProgress,
  onRateChange: onRateChange,
  onSeeked: onSeeked,
  onSeeking: onSeeking,
  onStalled: onStalled,
  onSuspend: onSuspend,
  onTimeUpdate: onTimeUpdate,
  onVolumeChange: onVolumeChange,
  onWaiting: onWaiting,
  onCopy: onCopy,
  onCut: onCut,
  onPaste: onPaste,
  onCompositionEnd: onCompositionEnd,
  onCompositionStart: onCompositionStart,
  onCompositionUpdate: onCompositionUpdate,
  onKeyDown: onKeyDown,
  onKeyPress: onKeyPress,
  onKeyUp: onKeyUp,
  onKeyEnter: onKeyEnter,
  onFocus: onFocus,
  onBlur: onBlur,
  onChange: onChange,
  onInput: onInput,
  onInvalid: onInvalid,
  onSubmit: onSubmit,
  onClick: onClick,
  onContextMenu: onContextMenu,
  onDoubleClick: onDoubleClick,
  onDrag: onDrag,
  onDragEnd: onDragEnd,
  onDragEnter: onDragEnter,
  onDragExit: onDragExit,
  onDragLeave: onDragLeave,
  onDragOver: onDragOver,
  onDragStart: onDragStart,
  onDrop: onDrop,
  onMouseDown: onMouseDown,
  onMouseEnter: onMouseEnter,
  onMouseLeave: onMouseLeave,
  onMouseMove: onMouseMove,
  onMouseOut: onMouseOut,
  onMouseOver: onMouseOver,
  onMouseUp: onMouseUp,
  onSelect: onSelect,
  onTouchCancel: onTouchCancel,
  onTouchEnd: onTouchEnd,
  onTouchMove: onTouchMove,
  onTouchStart: onTouchStart,
  onScroll: onScroll,
  onWheel: onWheel,
  onAnimationStartCapture: onAnimationStartCapture,
  onAnimationEndCapture: onAnimationEndCapture,
  onAnimationIterationCapture: onAnimationIterationCapture,
  onTransitionEndCapture: onTransitionEndCapture,
  onToggleCapture: onToggleCapture,
  onErrorCapture: onErrorCapture,
  onLoadCapture: onLoadCapture,
  onAbortCapture: onAbortCapture,
  onCanPlayCapture: onCanPlayCapture,
  onCanPlayThroughCapture: onCanPlayThroughCapture,
  onDurationChangeCapture: onDurationChangeCapture,
  onEmptiedCapture: onEmptiedCapture,
  onEncryptedCapture: onEncryptedCapture,
  onEndedCapture: onEndedCapture,
  onLoadedDataCapture: onLoadedDataCapture,
  onLoadedMetadataCapture: onLoadedMetadataCapture,
  onLoadStartCapture: onLoadStartCapture,
  onPauseCapture: onPauseCapture,
  onPlayCapture: onPlayCapture,
  onPlayingCapture: onPlayingCapture,
  onProgressCapture: onProgressCapture,
  onRateChangeCapture: onRateChangeCapture,
  onSeekedCapture: onSeekedCapture,
  onSeekingCapture: onSeekingCapture,
  onStalledCapture: onStalledCapture,
  onSuspendCapture: onSuspendCapture,
  onTimeUpdateCapture: onTimeUpdateCapture,
  onVolumeChangeCapture: onVolumeChangeCapture,
  onWaitingCapture: onWaitingCapture,
  onCopyCapture: onCopyCapture,
  onCutCapture: onCutCapture,
  onPasteCapture: onPasteCapture,
  onCompositionEndCapture: onCompositionEndCapture,
  onCompositionStartCapture: onCompositionStartCapture,
  onCompositionUpdateCapture: onCompositionUpdateCapture,
  onKeyDownCapture: onKeyDownCapture,
  onKeyPressCapture: onKeyPressCapture,
  onKeyUpCapture: onKeyUpCapture,
  onFocusCapture: onFocusCapture,
  onBlurCapture: onBlurCapture,
  onChangeCapture: onChangeCapture,
  onInputCapture: onInputCapture,
  onInvalidCapture: onInvalidCapture,
  onSubmitCapture: onSubmitCapture,
  onClickCapture: onClickCapture,
  onContextMenuCapture: onContextMenuCapture,
  onDoubleClickCapture: onDoubleClickCapture,
  onDragCapture: onDragCapture,
  onDragEndCapture: onDragEndCapture,
  onDragEnterCapture: onDragEnterCapture,
  onDragExitCapture: onDragExitCapture,
  onDragLeaveCapture: onDragLeaveCapture,
  onDragOverCapture: onDragOverCapture,
  onDragStartCapture: onDragStartCapture,
  onDropCapture: onDropCapture,
  onMouseDownCapture: onMouseDownCapture,
  onMouseEnterCapture: onMouseEnterCapture,
  onMouseLeaveCapture: onMouseLeaveCapture,
  onMouseMoveCapture: onMouseMoveCapture,
  onMouseOutCapture: onMouseOutCapture,
  onMouseOverCapture: onMouseOverCapture,
  onMouseUpCapture: onMouseUpCapture,
  onSelectCapture: onSelectCapture,
  onTouchCancelCapture: onTouchCancelCapture,
  onTouchEndCapture: onTouchEndCapture,
  onTouchMoveCapture: onTouchMoveCapture,
  onTouchStartCapture: onTouchStartCapture,
  onScrollCapture: onScrollCapture,
  onWheelCapture: onWheelCapture,
  ref: ref,
  suppressContentEditableWarning: suppressContentEditableWarning,
  x: x,
  y: y,
  cx: cx,
  cy: cy,
  r: r,
  fill: fill,
  opacity: opacity,
  fillOpacity: fillOpacity,
  stroke: stroke,
  strokeWidth: strokeWidth,
  points: points,
  d: d,
  viewBox: viewBox,
  emptyProp_: $foreign.emptyProp_,
  resetTargetValue: $foreign.resetTargetValue
};
},{"./foreign.js":"bwbN","../Concur.Core.Props/index.js":"uj7M","../Data.Array/index.js":"t4Co","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Effect.Uncurried/index.js":"qn3Z","../React.DOM.Props/index.js":"KGuU"}],"wrur":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_React_Props = require("../Concur.React.Props/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var classes = function classes(dictFoldable) {
  var $1 = Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(" ");
  return function ($2) {
    return Concur_React_Props.className($1($2));
  };
};

module.exports = {
  classes: classes,
  "_data": Concur_React_Props["_data"],
  "_id": Concur_React_Props["_id"],
  "_type": Concur_React_Props["_type"],
  about: Concur_React_Props.about,
  accept: Concur_React_Props.accept,
  acceptCharset: Concur_React_Props.acceptCharset,
  accessKey: Concur_React_Props.accessKey,
  action: Concur_React_Props.action,
  allowFullScreen: Concur_React_Props.allowFullScreen,
  allowTransparency: Concur_React_Props.allowTransparency,
  alt: Concur_React_Props.alt,
  aria: Concur_React_Props.aria,
  async: Concur_React_Props.async,
  autoCapitalize: Concur_React_Props.autoCapitalize,
  autoComplete: Concur_React_Props.autoComplete,
  autoCorrect: Concur_React_Props.autoCorrect,
  autoFocus: Concur_React_Props.autoFocus,
  autoPlay: Concur_React_Props.autoPlay,
  autoSave: Concur_React_Props.autoSave,
  capture: Concur_React_Props.capture,
  cellPadding: Concur_React_Props.cellPadding,
  cellSpacing: Concur_React_Props.cellSpacing,
  challenge: Concur_React_Props.challenge,
  charSet: Concur_React_Props.charSet,
  checked: Concur_React_Props.checked,
  cite: Concur_React_Props.cite,
  classID: Concur_React_Props.classID,
  classList: Concur_React_Props.classList,
  className: Concur_React_Props.className,
  colSpan: Concur_React_Props.colSpan,
  color: Concur_React_Props.color,
  cols: Concur_React_Props.cols,
  content: Concur_React_Props.content,
  contentEditable: Concur_React_Props.contentEditable,
  contextMenu: Concur_React_Props.contextMenu,
  controls: Concur_React_Props.controls,
  coords: Concur_React_Props.coords,
  crossOrigin: Concur_React_Props.crossOrigin,
  cx: Concur_React_Props.cx,
  cy: Concur_React_Props.cy,
  d: Concur_React_Props.d,
  dangerouslySetInnerHTML: Concur_React_Props.dangerouslySetInnerHTML,
  datatype: Concur_React_Props.datatype,
  dateTime: Concur_React_Props.dateTime,
  "default": Concur_React_Props["default"],
  defaultChecked: Concur_React_Props.defaultChecked,
  defaultValue: Concur_React_Props.defaultValue,
  defer: Concur_React_Props.defer,
  dir: Concur_React_Props.dir,
  disabled: Concur_React_Props.disabled,
  download: Concur_React_Props.download,
  draggable: Concur_React_Props.draggable,
  emptyProp: Concur_React_Props.emptyProp,
  emptyProp_: Concur_React_Props.emptyProp_,
  encType: Concur_React_Props.encType,
  fill: Concur_React_Props.fill,
  fillOpacity: Concur_React_Props.fillOpacity,
  form: Concur_React_Props.form,
  formAction: Concur_React_Props.formAction,
  formEncType: Concur_React_Props.formEncType,
  formMethod: Concur_React_Props.formMethod,
  formNoValidate: Concur_React_Props.formNoValidate,
  formTarget: Concur_React_Props.formTarget,
  frameBorder: Concur_React_Props.frameBorder,
  headers: Concur_React_Props.headers,
  height: Concur_React_Props.height,
  hidden: Concur_React_Props.hidden,
  high: Concur_React_Props.high,
  href: Concur_React_Props.href,
  hrefLang: Concur_React_Props.hrefLang,
  htmlFor: Concur_React_Props.htmlFor,
  httpEquiv: Concur_React_Props.httpEquiv,
  icon: Concur_React_Props.icon,
  inlist: Concur_React_Props.inlist,
  inputMode: Concur_React_Props.inputMode,
  integrity: Concur_React_Props.integrity,
  is: Concur_React_Props.is,
  isEnterEvent: Concur_React_Props.isEnterEvent,
  itemID: Concur_React_Props.itemID,
  itemProp: Concur_React_Props.itemProp,
  itemRef: Concur_React_Props.itemRef,
  itemScope: Concur_React_Props.itemScope,
  itemType: Concur_React_Props.itemType,
  key: Concur_React_Props.key,
  keyParams: Concur_React_Props.keyParams,
  keyType: Concur_React_Props.keyType,
  kind: Concur_React_Props.kind,
  label: Concur_React_Props.label,
  lang: Concur_React_Props.lang,
  list: Concur_React_Props.list,
  loop: Concur_React_Props.loop,
  low: Concur_React_Props.low,
  manifest: Concur_React_Props.manifest,
  marginHeight: Concur_React_Props.marginHeight,
  marginWidth: Concur_React_Props.marginWidth,
  max: Concur_React_Props.max,
  maxLength: Concur_React_Props.maxLength,
  media: Concur_React_Props.media,
  mediaGroup: Concur_React_Props.mediaGroup,
  method: Concur_React_Props.method,
  min: Concur_React_Props.min,
  minLength: Concur_React_Props.minLength,
  multiple: Concur_React_Props.multiple,
  muted: Concur_React_Props.muted,
  name: Concur_React_Props.name,
  noValidate: Concur_React_Props.noValidate,
  nonce: Concur_React_Props.nonce,
  onAbort: Concur_React_Props.onAbort,
  onAbortCapture: Concur_React_Props.onAbortCapture,
  onAnimationEnd: Concur_React_Props.onAnimationEnd,
  onAnimationEndCapture: Concur_React_Props.onAnimationEndCapture,
  onAnimationIteration: Concur_React_Props.onAnimationIteration,
  onAnimationIterationCapture: Concur_React_Props.onAnimationIterationCapture,
  onAnimationStart: Concur_React_Props.onAnimationStart,
  onAnimationStartCapture: Concur_React_Props.onAnimationStartCapture,
  onBlur: Concur_React_Props.onBlur,
  onBlurCapture: Concur_React_Props.onBlurCapture,
  onCanPlay: Concur_React_Props.onCanPlay,
  onCanPlayCapture: Concur_React_Props.onCanPlayCapture,
  onCanPlayThrough: Concur_React_Props.onCanPlayThrough,
  onCanPlayThroughCapture: Concur_React_Props.onCanPlayThroughCapture,
  onChange: Concur_React_Props.onChange,
  onChangeCapture: Concur_React_Props.onChangeCapture,
  onClick: Concur_React_Props.onClick,
  onClickCapture: Concur_React_Props.onClickCapture,
  onCompositionEnd: Concur_React_Props.onCompositionEnd,
  onCompositionEndCapture: Concur_React_Props.onCompositionEndCapture,
  onCompositionStart: Concur_React_Props.onCompositionStart,
  onCompositionStartCapture: Concur_React_Props.onCompositionStartCapture,
  onCompositionUpdate: Concur_React_Props.onCompositionUpdate,
  onCompositionUpdateCapture: Concur_React_Props.onCompositionUpdateCapture,
  onContextMenu: Concur_React_Props.onContextMenu,
  onContextMenuCapture: Concur_React_Props.onContextMenuCapture,
  onCopy: Concur_React_Props.onCopy,
  onCopyCapture: Concur_React_Props.onCopyCapture,
  onCut: Concur_React_Props.onCut,
  onCutCapture: Concur_React_Props.onCutCapture,
  onDoubleClick: Concur_React_Props.onDoubleClick,
  onDoubleClickCapture: Concur_React_Props.onDoubleClickCapture,
  onDrag: Concur_React_Props.onDrag,
  onDragCapture: Concur_React_Props.onDragCapture,
  onDragEnd: Concur_React_Props.onDragEnd,
  onDragEndCapture: Concur_React_Props.onDragEndCapture,
  onDragEnter: Concur_React_Props.onDragEnter,
  onDragEnterCapture: Concur_React_Props.onDragEnterCapture,
  onDragExit: Concur_React_Props.onDragExit,
  onDragExitCapture: Concur_React_Props.onDragExitCapture,
  onDragLeave: Concur_React_Props.onDragLeave,
  onDragLeaveCapture: Concur_React_Props.onDragLeaveCapture,
  onDragOver: Concur_React_Props.onDragOver,
  onDragOverCapture: Concur_React_Props.onDragOverCapture,
  onDragStart: Concur_React_Props.onDragStart,
  onDragStartCapture: Concur_React_Props.onDragStartCapture,
  onDrop: Concur_React_Props.onDrop,
  onDropCapture: Concur_React_Props.onDropCapture,
  onDurationChange: Concur_React_Props.onDurationChange,
  onDurationChangeCapture: Concur_React_Props.onDurationChangeCapture,
  onEmptied: Concur_React_Props.onEmptied,
  onEmptiedCapture: Concur_React_Props.onEmptiedCapture,
  onEncrypted: Concur_React_Props.onEncrypted,
  onEncryptedCapture: Concur_React_Props.onEncryptedCapture,
  onEnded: Concur_React_Props.onEnded,
  onEndedCapture: Concur_React_Props.onEndedCapture,
  onError: Concur_React_Props.onError,
  onErrorCapture: Concur_React_Props.onErrorCapture,
  onFocus: Concur_React_Props.onFocus,
  onFocusCapture: Concur_React_Props.onFocusCapture,
  onInput: Concur_React_Props.onInput,
  onInputCapture: Concur_React_Props.onInputCapture,
  onInvalid: Concur_React_Props.onInvalid,
  onInvalidCapture: Concur_React_Props.onInvalidCapture,
  onKeyDown: Concur_React_Props.onKeyDown,
  onKeyDownCapture: Concur_React_Props.onKeyDownCapture,
  onKeyEnter: Concur_React_Props.onKeyEnter,
  onKeyPress: Concur_React_Props.onKeyPress,
  onKeyPressCapture: Concur_React_Props.onKeyPressCapture,
  onKeyUp: Concur_React_Props.onKeyUp,
  onKeyUpCapture: Concur_React_Props.onKeyUpCapture,
  onLoad: Concur_React_Props.onLoad,
  onLoadCapture: Concur_React_Props.onLoadCapture,
  onLoadStart: Concur_React_Props.onLoadStart,
  onLoadStartCapture: Concur_React_Props.onLoadStartCapture,
  onLoadedData: Concur_React_Props.onLoadedData,
  onLoadedDataCapture: Concur_React_Props.onLoadedDataCapture,
  onLoadedMetadata: Concur_React_Props.onLoadedMetadata,
  onLoadedMetadataCapture: Concur_React_Props.onLoadedMetadataCapture,
  onMouseDown: Concur_React_Props.onMouseDown,
  onMouseDownCapture: Concur_React_Props.onMouseDownCapture,
  onMouseEnter: Concur_React_Props.onMouseEnter,
  onMouseEnterCapture: Concur_React_Props.onMouseEnterCapture,
  onMouseLeave: Concur_React_Props.onMouseLeave,
  onMouseLeaveCapture: Concur_React_Props.onMouseLeaveCapture,
  onMouseMove: Concur_React_Props.onMouseMove,
  onMouseMoveCapture: Concur_React_Props.onMouseMoveCapture,
  onMouseOut: Concur_React_Props.onMouseOut,
  onMouseOutCapture: Concur_React_Props.onMouseOutCapture,
  onMouseOver: Concur_React_Props.onMouseOver,
  onMouseOverCapture: Concur_React_Props.onMouseOverCapture,
  onMouseUp: Concur_React_Props.onMouseUp,
  onMouseUpCapture: Concur_React_Props.onMouseUpCapture,
  onPaste: Concur_React_Props.onPaste,
  onPasteCapture: Concur_React_Props.onPasteCapture,
  onPause: Concur_React_Props.onPause,
  onPauseCapture: Concur_React_Props.onPauseCapture,
  onPlay: Concur_React_Props.onPlay,
  onPlayCapture: Concur_React_Props.onPlayCapture,
  onPlaying: Concur_React_Props.onPlaying,
  onPlayingCapture: Concur_React_Props.onPlayingCapture,
  onProgress: Concur_React_Props.onProgress,
  onProgressCapture: Concur_React_Props.onProgressCapture,
  onRateChange: Concur_React_Props.onRateChange,
  onRateChangeCapture: Concur_React_Props.onRateChangeCapture,
  onScroll: Concur_React_Props.onScroll,
  onScrollCapture: Concur_React_Props.onScrollCapture,
  onSeeked: Concur_React_Props.onSeeked,
  onSeekedCapture: Concur_React_Props.onSeekedCapture,
  onSeeking: Concur_React_Props.onSeeking,
  onSeekingCapture: Concur_React_Props.onSeekingCapture,
  onSelect: Concur_React_Props.onSelect,
  onSelectCapture: Concur_React_Props.onSelectCapture,
  onStalled: Concur_React_Props.onStalled,
  onStalledCapture: Concur_React_Props.onStalledCapture,
  onSubmit: Concur_React_Props.onSubmit,
  onSubmitCapture: Concur_React_Props.onSubmitCapture,
  onSuspend: Concur_React_Props.onSuspend,
  onSuspendCapture: Concur_React_Props.onSuspendCapture,
  onTimeUpdate: Concur_React_Props.onTimeUpdate,
  onTimeUpdateCapture: Concur_React_Props.onTimeUpdateCapture,
  onToggle: Concur_React_Props.onToggle,
  onToggleCapture: Concur_React_Props.onToggleCapture,
  onTouchCancel: Concur_React_Props.onTouchCancel,
  onTouchCancelCapture: Concur_React_Props.onTouchCancelCapture,
  onTouchEnd: Concur_React_Props.onTouchEnd,
  onTouchEndCapture: Concur_React_Props.onTouchEndCapture,
  onTouchMove: Concur_React_Props.onTouchMove,
  onTouchMoveCapture: Concur_React_Props.onTouchMoveCapture,
  onTouchStart: Concur_React_Props.onTouchStart,
  onTouchStartCapture: Concur_React_Props.onTouchStartCapture,
  onTransitionEnd: Concur_React_Props.onTransitionEnd,
  onTransitionEndCapture: Concur_React_Props.onTransitionEndCapture,
  onVolumeChange: Concur_React_Props.onVolumeChange,
  onVolumeChangeCapture: Concur_React_Props.onVolumeChangeCapture,
  onWaiting: Concur_React_Props.onWaiting,
  onWaitingCapture: Concur_React_Props.onWaitingCapture,
  onWheel: Concur_React_Props.onWheel,
  onWheelCapture: Concur_React_Props.onWheelCapture,
  opacity: Concur_React_Props.opacity,
  open: Concur_React_Props.open,
  optimum: Concur_React_Props.optimum,
  pattern: Concur_React_Props.pattern,
  placeholder: Concur_React_Props.placeholder,
  points: Concur_React_Props.points,
  poster: Concur_React_Props.poster,
  prefix: Concur_React_Props.prefix,
  preload: Concur_React_Props.preload,
  profile: Concur_React_Props.profile,
  property: Concur_React_Props.property,
  r: Concur_React_Props.r,
  radioGroup: Concur_React_Props.radioGroup,
  readOnly: Concur_React_Props.readOnly,
  ref: Concur_React_Props.ref,
  rel: Concur_React_Props.rel,
  required: Concur_React_Props.required,
  resetTargetValue: Concur_React_Props.resetTargetValue,
  resource: Concur_React_Props.resource,
  results: Concur_React_Props.results,
  reversed: Concur_React_Props.reversed,
  role: Concur_React_Props.role,
  rowSpan: Concur_React_Props.rowSpan,
  rows: Concur_React_Props.rows,
  sandbox: Concur_React_Props.sandbox,
  scope: Concur_React_Props.scope,
  scoped: Concur_React_Props.scoped,
  scrolling: Concur_React_Props.scrolling,
  seamless: Concur_React_Props.seamless,
  security: Concur_React_Props.security,
  selected: Concur_React_Props.selected,
  shape: Concur_React_Props.shape,
  size: Concur_React_Props.size,
  sizes: Concur_React_Props.sizes,
  span: Concur_React_Props.span,
  spellCheck: Concur_React_Props.spellCheck,
  src: Concur_React_Props.src,
  srcDoc: Concur_React_Props.srcDoc,
  srcLang: Concur_React_Props.srcLang,
  srcSet: Concur_React_Props.srcSet,
  start: Concur_React_Props.start,
  step: Concur_React_Props.step,
  stroke: Concur_React_Props.stroke,
  strokeWidth: Concur_React_Props.strokeWidth,
  style: Concur_React_Props.style,
  summary: Concur_React_Props.summary,
  suppressContentEditableWarning: Concur_React_Props.suppressContentEditableWarning,
  tabIndex: Concur_React_Props.tabIndex,
  target: Concur_React_Props.target,
  title: Concur_React_Props.title,
  "typeof": Concur_React_Props["typeof"],
  unsafeMkProp: Concur_React_Props.unsafeMkProp,
  unsafeMkPropHandler: Concur_React_Props.unsafeMkPropHandler,
  unsafeTargetValue: Concur_React_Props.unsafeTargetValue,
  unselectable: Concur_React_Props.unselectable,
  useMap: Concur_React_Props.useMap,
  value: Concur_React_Props.value,
  valueArray: Concur_React_Props.valueArray,
  viewBox: Concur_React_Props.viewBox,
  vocab: Concur_React_Props.vocab,
  width: Concur_React_Props.width,
  wmode: Concur_React_Props.wmode,
  wrap: Concur_React_Props.wrap,
  x: Concur_React_Props.x,
  y: Concur_React_Props.y
};
},{"../Concur.React.Props/index.js":"twSw","../Data.Foldable/index.js":"eVDl","../Data.Monoid/index.js":"TiEB"}],"sFj5":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans/index.js");

var Control_Monad_RWS_Trans = require("../Control.Monad.RWS.Trans/index.js");

var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class/index.js");

var Control_Monad_Writer_Trans = require("../Control.Monad.Writer.Trans/index.js");

var LiftWidget = function LiftWidget(liftWidget) {
  this.liftWidget = liftWidget;
};

var widgetLiftWidget = new LiftWidget(Control_Category.identity(Control_Category.categoryFn));

var liftWidget = function liftWidget(dict) {
  return dict.liftWidget;
};

var readerLiftWidget = function readerLiftWidget(dictMonad) {
  return function (dictLiftWidget) {
    return new LiftWidget(function () {
      var $12 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(dictMonad);
      var $13 = liftWidget(dictLiftWidget);
      return function ($14) {
        return $12($13($14));
      };
    }());
  };
};

var rwsLiftWidget = function rwsLiftWidget(dictMonoid) {
  return function (dictMonad) {
    return function (dictLiftWidget) {
      return new LiftWidget(function () {
        var $15 = Control_Monad_Trans_Class.lift(Control_Monad_RWS_Trans.monadTransRWST(dictMonoid))(dictMonad);
        var $16 = liftWidget(dictLiftWidget);
        return function ($17) {
          return $15($16($17));
        };
      }());
    };
  };
};

var stateLiftWidget = function stateLiftWidget(dictMonad) {
  return function (dictLiftWidget) {
    return new LiftWidget(function () {
      var $18 = Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(dictMonad);
      var $19 = liftWidget(dictLiftWidget);
      return function ($20) {
        return $18($19($20));
      };
    }());
  };
};

var writerLiftWidget = function writerLiftWidget(dictMonoid) {
  return function (dictMonad) {
    return function (dictLiftWidget) {
      return new LiftWidget(function () {
        var $21 = Control_Monad_Trans_Class.lift(Control_Monad_Writer_Trans.monadTransWriterT(dictMonoid))(dictMonad);
        var $22 = liftWidget(dictLiftWidget);
        return function ($23) {
          return $21($22($23));
        };
      }());
    };
  };
};

var exceptLiftWidget = function exceptLiftWidget(dictMonad) {
  return function (dictLiftWidget) {
    return new LiftWidget(function () {
      var $24 = Control_Monad_Trans_Class.lift(Control_Monad_Except_Trans.monadTransExceptT)(dictMonad);
      var $25 = liftWidget(dictLiftWidget);
      return function ($26) {
        return $24($25($26));
      };
    }());
  };
};

module.exports = {
  liftWidget: liftWidget,
  LiftWidget: LiftWidget,
  widgetLiftWidget: widgetLiftWidget,
  exceptLiftWidget: exceptLiftWidget,
  rwsLiftWidget: rwsLiftWidget,
  readerLiftWidget: readerLiftWidget,
  stateLiftWidget: stateLiftWidget,
  writerLiftWidget: writerLiftWidget
};
},{"../Control.Category/index.js":"IAi2","../Control.Monad.Except.Trans/index.js":"gr8B","../Control.Monad.RWS.Trans/index.js":"Fynn","../Control.Monad.Reader.Trans/index.js":"uvht","../Control.Monad.State.Trans/index.js":"KpW9","../Control.Monad.Trans.Class/index.js":"tIRA","../Control.Monad.Writer.Trans/index.js":"VAds"}],"uHev":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_LiftWidget = require("../Concur.Core.LiftWidget/index.js");

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var IsWidget = function IsWidget(LiftWidget3, Monad0, Monoid1, MultiAlternative4, ShiftMap2) {
  this.LiftWidget3 = LiftWidget3;
  this.Monad0 = Monad0;
  this.Monoid1 = Monoid1;
  this.MultiAlternative4 = MultiAlternative4;
  this.ShiftMap2 = ShiftMap2;
};

var widgetIsWidget = function widgetIsWidget(dictMonoid) {
  return new IsWidget(function () {
    return Concur_Core_LiftWidget.widgetLiftWidget;
  }, function () {
    return Concur_Core_Types.widgetMonad;
  }, function () {
    return dictMonoid;
  }, function () {
    return Concur_Core_Types.widgetMultiAlternative(dictMonoid);
  }, function () {
    return Concur_Core_Types.widgetShiftMap;
  });
};

module.exports = {
  IsWidget: IsWidget,
  widgetIsWidget: widgetIsWidget
};
},{"../Concur.Core.LiftWidget/index.js":"sFj5","../Concur.Core.Types/index.js":"qGwK"}],"Edvc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_IsWidget = require("../Concur.Core.IsWidget/index.js");

var Concur_Core_LiftWidget = require("../Concur.Core.LiftWidget/index.js");

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Monad_Free = require("../Control.Monad.Free/index.js");

var Control_Parallel_Class = require("../Control.Parallel.Class/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Effect = require("../Effect/index.js");

var Effect_AVar = require("../Effect.AVar/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var mkNodeWidget$prime = function mkNodeWidget$prime(mkView) {
  return function (w) {
    var v = Concur_Core_Types.resume(Concur_Core_Types.functorWidgetStep)(w);

    if (v instanceof Data_Either.Left) {
      return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(v.value0);
    }

    ;

    if (v instanceof Data_Either.Right) {
      if (v.value0 instanceof Data_Either.Left) {
        return Control_Monad_Free.wrap(Concur_Core_Types.WidgetStep(new Data_Either.Left(function __do() {
          var w$prime = v.value0.value0();
          return mkNodeWidget$prime(mkView)(w$prime);
        })));
      }

      ;

      if (v.value0 instanceof Data_Either.Right) {
        return Control_Monad_Free.wrap(Concur_Core_Types.WidgetStep(new Data_Either.Left(function __do() {
          var $$var = Effect_AVar.empty();

          var eventHandler = function eventHandler(a) {
            return Data_Functor["void"](Effect.functorEffect)(Effect_AVar.tryPut(Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a))($$var));
          };

          var cont$prime = Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Alt.alt(Effect_Aff.altParAff)(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffAff)(Effect_Aff_AVar.take($$var))))(Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Data_Functor.map(Effect_Aff.functorAff)(mkNodeWidget$prime(mkView))(v.value0.value0.cont))));
          return Control_Monad_Free.wrap(Concur_Core_Types.WidgetStep(new Data_Either.Right({
            view: mkView(eventHandler)(v.value0.value0.view),
            cont: cont$prime
          })));
        })));
      }

      ;
      throw new Error("Failed pattern match at Concur.Core (line 36, column 28 - line 49, column 10): " + [v.value0.constructor.name]);
    }

    ;
    throw new Error("Failed pattern match at Concur.Core (line 34, column 26 - line 49, column 10): " + [v.constructor.name]);
  };
};

var mkNodeWidget = function mkNodeWidget(mkView) {
  return function (v) {
    return mkNodeWidget$prime(mkView)(v);
  };
};

var mkLeafWidget = function mkLeafWidget(mkView) {
  return Concur_Core_Types.Widget(Control_Monad_Free.wrap(Concur_Core_Types.WidgetStep(new Data_Either.Left(function __do() {
    var $$var = Effect_AVar.empty();
    return Control_Monad_Free.wrap(Concur_Core_Types.WidgetStep(new Data_Either.Right({
      view: mkView(function (a) {
        return Data_Functor["void"](Effect.functorEffect)(Effect_AVar.tryPut(Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a))($$var));
      }),
      cont: Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffAff)(Effect_Aff_AVar.take($$var))
    })));
  }))));
};

module.exports = {
  mkLeafWidget: mkLeafWidget,
  mkNodeWidget: mkNodeWidget,
  "mkNodeWidget'": mkNodeWidget$prime,
  IsWidget: Concur_Core_IsWidget.IsWidget,
  LiftWidget: Concur_Core_LiftWidget.LiftWidget,
  liftWidget: Concur_Core_LiftWidget.liftWidget,
  Widget: Concur_Core_Types.Widget,
  WidgetStep: Concur_Core_Types.WidgetStep,
  resume: Concur_Core_Types.resume,
  unWidget: Concur_Core_Types.unWidget
};
},{"../Concur.Core.IsWidget/index.js":"uHev","../Concur.Core.LiftWidget/index.js":"sFj5","../Concur.Core.Types/index.js":"qGwK","../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Monad.Free/index.js":"pVbB","../Control.Parallel.Class/index.js":"NR5l","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Effect/index.js":"oTWB","../Effect.AVar/index.js":"XiHq","../Effect.Aff/index.js":"I7lu","../Effect.Aff.AVar/index.js":"hACG","../Effect.Aff.Class/index.js":"I4H2"}],"Z5WR":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core = require("../Concur.Core/index.js");

var Concur_Core_LiftWidget = require("../Concur.Core.LiftWidget/index.js");

var Concur_Core_Props = require("../Concur.Core.Props/index.js");

var Control_MultiAlternative = require("../Control.MultiAlternative/index.js");

var Control_ShiftMap = require("../Control.ShiftMap/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var elLeaf = function elLeaf(dictLiftWidget) {
  return function (dictFunctor) {
    return function (e) {
      return function (props) {
        return Concur_Core_LiftWidget.liftWidget(dictLiftWidget)(Concur_Core.mkLeafWidget(function (h) {
          return e(Data_Functor.map(dictFunctor)(Concur_Core_Props.mkProp(h))(props));
        }));
      };
    };
  };
};

var el = function el(dictShiftMap) {
  return function (dictFunctor) {
    return function (e) {
      return function (props) {
        return Control_ShiftMap.shiftMap(dictShiftMap)(function (f) {
          return function (w) {
            return Concur_Core.mkNodeWidget(function (h) {
              return function (v) {
                return e(Data_Functor.map(dictFunctor)(function () {
                  var $7 = Concur_Core_Props.mkProp(h);
                  var $8 = Data_Functor.map(Concur_Core_Props.functorProps)(f);
                  return function ($9) {
                    return $7($8($9));
                  };
                }())(props))(v);
              };
            })(w);
          };
        });
      };
    };
  };
};

var el$prime = function el$prime(dictShiftMap) {
  return function (dictMultiAlternative) {
    return function (dictFunctor) {
      return function (e) {
        return function (props) {
          var $10 = el(dictShiftMap)(dictFunctor)(e)(props);
          var $11 = Control_MultiAlternative.orr(dictMultiAlternative);
          return function ($12) {
            return $10($11($12));
          };
        };
      };
    };
  };
};

module.exports = {
  el: el,
  elLeaf: elLeaf,
  "el'": el$prime
};
},{"../Concur.Core/index.js":"Edvc","../Concur.Core.LiftWidget/index.js":"sFj5","../Concur.Core.Props/index.js":"uj7M","../Control.MultiAlternative/index.js":"c2nd","../Control.ShiftMap/index.js":"qpZO","../Data.Functor/index.js":"AEHo"}],"Gkse":[function(require,module,exports) {
/* global exports */
"use strict";

var React = require("react");

function createClass(baseClass) {
  function bindProperty(instance, prop, value) {
    switch (prop) {
      case 'state':
      case 'render':
      case 'componentDidMount':
      case 'componentWillUnmount':
        instance[prop] = value;
        break;

      case 'componentDidCatch':
      case 'componentWillUpdate':
      case 'shouldComponentUpdate':
      case 'getSnapshotBeforeUpdate':
        instance[prop] = function (a, b) {
          return value(a)(b)();
        };

        break;

      case 'componentDidUpdate':
        instance[prop] = function (a, b, c) {
          return value(a)(b)(c)();
        };

        break;

      case 'unsafeComponentWillMount':
        instance['UNSAFE_componentWillMount'] = value;
        break;

      case 'unsafeComponentWillReceiveProps':
        instance['UNSAFE_componentWillReceiveProps'] = function (a) {
          return value(a)();
        };

        break;

      case 'unsafeComponentWillUpdate':
        instance['UNSAFE_componentWillUpdate'] = function (a, b) {
          return value(a)(b)();
        };

        break;

      default:
        throw new Error('[purescript-react] Not a component property: ' + prop);
    }
  }

  return function (displayName) {
    return function (ctrFn) {
      var Constructor = function Constructor(props) {
        baseClass.call(this, props);
        var spec = ctrFn(this)();

        for (var k in spec) {
          bindProperty(this, k, spec[k]);
        }
      };

      Constructor.displayName = displayName;
      Constructor.prototype = Object.create(baseClass.prototype);
      Constructor.prototype.constructor = Constructor;
      return Constructor;
    };
  };
}

function createClassWithDerivedState(classCtr) {
  return function (displayName) {
    return function (getDerivedStateFromProps) {
      return function (ctrFn) {
        var Constructor = componentImpl(displayName)(ctrFn);

        Constructor.getDerivedStateFromProps = function (a, b) {
          return getDerivedStateFromProps(a)(b);
        };

        return Constructor;
      };
    };
  };
}

var componentImpl = createClass(React.Component);
exports.componentImpl = componentImpl;
exports.componentWithDerivedStateImpl = createClassWithDerivedState(componentImpl);
var pureComponentImpl = createClass(React.PureComponent);
exports.pureComponentImpl = pureComponentImpl;
exports.pureComponentWithDerivedStateImpl = createClassWithDerivedState(pureComponentImpl);

exports.statelessComponent = function (x) {
  return x;
};

exports.fragment = React.Fragment;

function getProps(this_) {
  return function () {
    return this_.props;
  };
}

exports.getProps = getProps;
exports.childrenToArray = React.Children.toArray;
exports.childrenCount = React.Children.count;

function setStateImpl(this_) {
  return function (state) {
    return function () {
      this_.setState(state);
    };
  };
}

exports.setStateImpl = setStateImpl;

function setStateWithCallbackImpl(this_) {
  return function (state) {
    return function (cb) {
      return function () {
        this_.setState(state, cb);
      };
    };
  };
}

exports.setStateWithCallbackImpl = setStateWithCallbackImpl;

function getState(this_) {
  return function () {
    if (!this_.state) {
      throw new Error('[purescript-react] Cannot get state within constructor');
    }

    return this_.state;
  };
}

exports.getState = getState;

function forceUpdateWithCallback(this_) {
  return function (cb) {
    return function () {
      this_.forceUpdate(cb);
    };
  };
}

exports.forceUpdateWithCallback = forceUpdateWithCallback;

function createElement(class_) {
  return function (props) {
    return function (children) {
      return React.createElement.apply(React, [class_, props].concat(children));
    };
  };
}

exports.createElementImpl = createElement;
exports.createElementTagName = createElement;

function createLeafElement(class_) {
  return function (props) {
    return React.createElement(class_, props);
  };
}

exports.createLeafElementImpl = createLeafElement;

function createElementDynamic(class_) {
  return function (props) {
    return function (children) {
      return React.createElement(class_, props, children);
    };
  };
}

;
exports.createElementDynamicImpl = createElementDynamic;
exports.createElementTagNameDynamic = createElementDynamic;

function createContext(defaultValue) {
  var context = React.createContext(defaultValue);
  return {
    consumer: context.Consumer,
    provider: context.Provider
  };
}

exports.createContext = createContext;
},{"react":"HdMw"}],"kNrb":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var ReactPureComponentSpec = {};
var ReactPropFields = {};
var ReactComponentSpec = {};

var IsReactElement = function IsReactElement(toElement) {
  this.toElement = toElement;
};

var writeStateWithCallback = $foreign.setStateWithCallbackImpl;
var writeState = $foreign.setStateImpl;
var unsafeCreateLeafElement = $foreign.createLeafElementImpl;
var unsafeCreateElementDynamic = $foreign.createElementDynamicImpl;
var unsafeCreateElement = $foreign.createElementImpl;

var toElement = function toElement(dict) {
  return dict.toElement;
};

var setStateWithCallback = function setStateWithCallback(dictUnion) {
  return $foreign.setStateWithCallbackImpl;
};

var setState = function setState(dictUnion) {
  return $foreign.setStateImpl;
};

var reactPureComponentSpec = function reactPureComponentSpec(dictUnion) {
  return function (dictNub) {
    return ReactPureComponentSpec;
  };
};

var reactPropFields = function reactPropFields(dictUnion) {
  return function (dictUnion1) {
    return ReactPropFields;
  };
};

var reactComponentSpec = function reactComponentSpec(dictUnion) {
  return function (dictNub) {
    return ReactComponentSpec;
  };
};

var pureComponentWithDerivedState = function pureComponentWithDerivedState(dictReactPureComponentSpec) {
  return $foreign.componentWithDerivedStateImpl;
};

var pureComponent = function pureComponent(dictReactPureComponentSpec) {
  return $foreign.pureComponentImpl;
};

var modifyStateWithCallback = $foreign.setStateWithCallbackImpl;
var modifyState = $foreign.setStateImpl;
var isReactElementString = new IsReactElement(Unsafe_Coerce.unsafeCoerce);
var isReactElementReactElement = new IsReactElement(Control_Category.identity(Control_Category.categoryFn));
var isReactElementNumber = new IsReactElement(Unsafe_Coerce.unsafeCoerce);
var isReactElementInt = new IsReactElement(Unsafe_Coerce.unsafeCoerce);
var isReactElementChildren = new IsReactElement(Unsafe_Coerce.unsafeCoerce);

var forceUpdate = function forceUpdate($$this) {
  return $foreign.forceUpdateWithCallback($$this)(Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit));
};

var createLeafElement = function createLeafElement(dictReactPropFields) {
  return $foreign.createLeafElementImpl;
};

var createElementDynamic = function createElementDynamic(dictReactPropFields) {
  return $foreign.createElementDynamicImpl;
};

var createElement = function createElement(dictReactPropFields) {
  return $foreign.createElementImpl;
};

var fragmentWithKey = function () {
  var $16 = createElement()($foreign.fragment);
  return function ($17) {
    return $16(function (v) {
      return {
        key: v
      };
    }($17));
  };
}();

var isReactElementArray = new IsReactElement(createElement()($foreign.fragment)({}));
var semigroupReactElement = new Data_Semigroup.Semigroup(function (a) {
  return function (b) {
    return toElement(isReactElementArray)([a, b]);
  };
});
var monoidReactElement = new Data_Monoid.Monoid(function () {
  return semigroupReactElement;
}, toElement(isReactElementArray)([]));

var componentWithDerivedState = function componentWithDerivedState(dictReactComponentSpec) {
  return $foreign.componentWithDerivedStateImpl;
};

var component = function component(dictReactComponentSpec) {
  return $foreign.componentImpl;
};

module.exports = {
  ReactComponentSpec: ReactComponentSpec,
  ReactPureComponentSpec: ReactPureComponentSpec,
  component: component,
  componentWithDerivedState: componentWithDerivedState,
  pureComponent: pureComponent,
  pureComponentWithDerivedState: pureComponentWithDerivedState,
  setState: setState,
  setStateWithCallback: setStateWithCallback,
  writeState: writeState,
  writeStateWithCallback: writeStateWithCallback,
  modifyState: modifyState,
  modifyStateWithCallback: modifyStateWithCallback,
  forceUpdate: forceUpdate,
  ReactPropFields: ReactPropFields,
  createElement: createElement,
  unsafeCreateElement: unsafeCreateElement,
  createElementDynamic: createElementDynamic,
  unsafeCreateElementDynamic: unsafeCreateElementDynamic,
  createLeafElement: createLeafElement,
  unsafeCreateLeafElement: unsafeCreateLeafElement,
  IsReactElement: IsReactElement,
  toElement: toElement,
  fragmentWithKey: fragmentWithKey,
  semigroupReactElement: semigroupReactElement,
  monoidReactElement: monoidReactElement,
  reactComponentSpec: reactComponentSpec,
  reactPureComponentSpec: reactPureComponentSpec,
  reactPropFields: reactPropFields,
  isReactElementString: isReactElementString,
  isReactElementNumber: isReactElementNumber,
  isReactElementInt: isReactElementInt,
  isReactElementChildren: isReactElementChildren,
  isReactElementReactElement: isReactElementReactElement,
  isReactElementArray: isReactElementArray,
  statelessComponent: $foreign.statelessComponent,
  getProps: $foreign.getProps,
  getState: $foreign.getState,
  forceUpdateWithCallback: $foreign.forceUpdateWithCallback,
  createElementTagName: $foreign.createElementTagName,
  createElementTagNameDynamic: $foreign.createElementTagNameDynamic,
  childrenToArray: $foreign.childrenToArray,
  childrenCount: $foreign.childrenCount,
  fragment: $foreign.fragment,
  createContext: $foreign.createContext
};
},{"./foreign.js":"Gkse","../Control.Applicative/index.js":"qYya","../Control.Category/index.js":"IAi2","../Data.Monoid/index.js":"TiEB","../Data.Semigroup/index.js":"EsAJ","../Data.Unit/index.js":"NhVk","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV"}],"dbqM":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var React = require("../React/index.js");

var React_DOM_Props = require("../React.DOM.Props/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var IsDynamic = function IsDynamic(x) {
  return x;
};

var text = Unsafe_Coerce.unsafeCoerce;
var number = Unsafe_Coerce.unsafeCoerce;

var mkDOM = function mkDOM(dynamic) {
  return function (tag) {
    return function (props) {
      var createElement = function () {
        if (!dynamic) {
          return React.createElementTagName;
        }

        ;

        if (dynamic) {
          return React.createElementTagNameDynamic;
        }

        ;
        throw new Error("Failed pattern match at React.DOM (line 15, column 5 - line 17, column 55): " + [dynamic.constructor.name]);
      }();

      return createElement(tag)(React_DOM_Props.unsafeFromPropsArray(props));
    };
  };
};

var nav = mkDOM(false)("nav");
var nav$prime = nav([]);
var noscript = mkDOM(false)("noscript");
var noscript$prime = noscript([]);
var object = mkDOM(false)("object");
var object$prime = object([]);
var ol = mkDOM(false)("ol");
var ol$prime = ol([]);
var optgroup = mkDOM(false)("optgroup");
var optgroup$prime = optgroup([]);
var option = mkDOM(false)("option");
var option$prime = option([]);
var output = mkDOM(false)("output");
var output$prime = output([]);
var p = mkDOM(false)("p");
var p$prime = p([]);

var param = function param(props) {
  return mkDOM(false)("param")(props)([]);
};

var param$prime = param([]);
var picture = mkDOM(false)("picture");
var picture$prime = picture([]);
var pre = mkDOM(false)("pre");
var pre$prime = pre([]);
var progress = mkDOM(false)("progress");
var progress$prime = progress([]);
var q = mkDOM(false)("q");
var q$prime = q([]);
var rp = mkDOM(false)("rp");
var rp$prime = rp([]);
var rt = mkDOM(false)("rt");
var rt$prime = rt([]);
var ruby = mkDOM(false)("ruby");
var ruby$prime = ruby([]);
var s = mkDOM(false)("s");
var s$prime = s([]);
var samp = mkDOM(false)("samp");
var samp$prime = samp([]);
var script = mkDOM(false)("script");
var script$prime = script([]);
var section = mkDOM(false)("section");
var section$prime = section([]);
var select = mkDOM(false)("select");
var select$prime = select([]);
var small = mkDOM(false)("small");
var small$prime = small([]);

var source = function source(props) {
  return mkDOM(false)("source")(props)([]);
};

var source$prime = source([]);
var span = mkDOM(false)("span");
var span$prime = span([]);
var strong = mkDOM(false)("strong");
var strong$prime = strong([]);
var style = mkDOM(false)("style");
var style$prime = style([]);
var sub = mkDOM(false)("sub");
var sub$prime = sub([]);
var summary = mkDOM(false)("summary");
var summary$prime = summary([]);
var sup = mkDOM(false)("sup");
var sup$prime = sup([]);
var table = mkDOM(false)("table");
var table$prime = table([]);
var tbody = mkDOM(false)("tbody");
var tbody$prime = tbody([]);
var td = mkDOM(false)("td");
var td$prime = td([]);
var textarea = mkDOM(false)("textarea");
var textarea$prime = textarea([]);
var tfoot = mkDOM(false)("tfoot");
var tfoot$prime = tfoot([]);
var th = mkDOM(false)("th");
var th$prime = th([]);
var thead = mkDOM(false)("thead");
var thead$prime = thead([]);
var time = mkDOM(false)("time");
var time$prime = time([]);
var title = mkDOM(false)("title");
var title$prime = title([]);
var tr = mkDOM(false)("tr");
var tr$prime = tr([]);

var track = function track(props) {
  return mkDOM(false)("track")(props)([]);
};

var track$prime = track([]);
var u = mkDOM(false)("u");
var u$prime = u([]);
var ul = mkDOM(false)("ul");
var ul$prime = ul([]);
var $$var = mkDOM(false)("var");
var var$prime = $$var([]);
var video = mkDOM(false)("video");
var video$prime = video([]);

var wbr = function wbr(props) {
  return mkDOM(false)("wbr")(props)([]);
};

var wbr$prime = wbr([]);
var meter = mkDOM(false)("meter");
var meter$prime = meter([]);

var meta = function meta(props) {
  return mkDOM(false)("meta")(props)([]);
};

var meta$prime = meta([]);

var menuitem = function menuitem(props) {
  return mkDOM(false)("menuitem")(props)([]);
};

var menuitem$prime = menuitem([]);
var menu = mkDOM(false)("menu");
var menu$prime = menu([]);
var mark = mkDOM(false)("mark");
var mark$prime = mark([]);
var map = mkDOM(false)("map");
var map$prime = map([]);
var main = mkDOM(false)("main");
var main$prime = main([]);

var link = function link(props) {
  return mkDOM(false)("link")(props)([]);
};

var link$prime = link([]);
var li = mkDOM(false)("li");
var li$prime = li([]);
var legend = mkDOM(false)("legend");
var legend$prime = legend([]);
var label = mkDOM(false)("label");
var label$prime = label([]);

var keygen = function keygen(props) {
  return mkDOM(false)("keygen")(props)([]);
};

var keygen$prime = keygen([]);
var kbd = mkDOM(false)("kbd");
var kbd$prime = kbd([]);
var $$int = Unsafe_Coerce.unsafeCoerce;
var ins = mkDOM(false)("ins");
var ins$prime = ins([]);

var input = function input(props) {
  return mkDOM(false)("input")(props)([]);
};

var input$prime = input([]);

var img = function img(props) {
  return mkDOM(false)("img")(props)([]);
};

var img$prime = img([]);
var iframe = mkDOM(false)("iframe");
var iframe$prime = iframe([]);
var i = mkDOM(false)("i");
var i$prime = i([]);
var html = mkDOM(false)("html");
var html$prime = html([]);

var hr = function hr(props) {
  return mkDOM(false)("hr")(props)([]);
};

var hr$prime = hr([]);
var header = mkDOM(false)("header");
var header$prime = header([]);
var head = mkDOM(false)("head");
var head$prime = head([]);
var h6 = mkDOM(false)("h6");
var h6$prime = h6([]);
var h5 = mkDOM(false)("h5");
var h5$prime = h5([]);
var h4 = mkDOM(false)("h4");
var h4$prime = h4([]);
var h3 = mkDOM(false)("h3");
var h3$prime = h3([]);
var h2 = mkDOM(false)("h2");
var h2$prime = h2([]);
var h1 = mkDOM(false)("h1");
var h1$prime = h1([]);
var form = mkDOM(false)("form");
var form$prime = form([]);
var footer = mkDOM(false)("footer");
var footer$prime = footer([]);
var figure = mkDOM(false)("figure");
var figure$prime = figure([]);
var figcaption = mkDOM(false)("figcaption");
var figcaption$prime = figcaption([]);
var fieldset = mkDOM(false)("fieldset");
var fieldset$prime = fieldset([]);

var embed = function embed(props) {
  return mkDOM(false)("embed")(props)([]);
};

var embed$prime = embed([]);
var em = mkDOM(false)("em");
var em$prime = em([]);
var dt = mkDOM(false)("dt");
var dt$prime = dt([]);
var dl = mkDOM(false)("dl");
var dl$prime = dl([]);
var div = mkDOM(false)("div");
var div$prime = div([]);
var dialog = mkDOM(false)("dialog");
var dialog$prime = dialog([]);
var dfn = mkDOM(false)("dfn");
var dfn$prime = dfn([]);
var details = mkDOM(false)("details");
var details$prime = details([]);
var del = mkDOM(false)("del");
var del$prime = del([]);
var dd = mkDOM(false)("dd");
var dd$prime = dd([]);
var datalist = mkDOM(false)("datalist");
var datalist$prime = datalist([]);
var colgroup = mkDOM(false)("colgroup");
var colgroup$prime = colgroup([]);

var col = function col(props) {
  return mkDOM(false)("col")(props)([]);
};

var col$prime = col([]);
var code = mkDOM(false)("code");
var code$prime = code([]);
var cite = mkDOM(false)("cite");
var cite$prime = cite([]);
var caption = mkDOM(false)("caption");
var caption$prime = caption([]);
var canvas = mkDOM(false)("canvas");
var canvas$prime = canvas([]);
var button = mkDOM(false)("button");
var button$prime = button([]);

var br = function br(props) {
  return mkDOM(false)("br")(props)([]);
};

var br$prime = br([]);
var body = mkDOM(false)("body");
var body$prime = body([]);
var blockquote = mkDOM(false)("blockquote");
var blockquote$prime = blockquote([]);
var big = mkDOM(false)("big");
var big$prime = big([]);
var bdo = mkDOM(false)("bdo");
var bdo$prime = bdo([]);
var bdi = mkDOM(false)("bdi");
var bdi$prime = bdi([]);

var base = function base(props) {
  return mkDOM(false)("base")(props)([]);
};

var base$prime = base([]);
var b = mkDOM(false)("b");
var b$prime = b([]);
var audio = mkDOM(false)("audio");
var audio$prime = audio([]);
var aside = mkDOM(false)("aside");
var aside$prime = aside([]);
var article = mkDOM(false)("article");
var article$prime = article([]);

var area = function area(props) {
  return mkDOM(false)("area")(props)([]);
};

var area$prime = area([]);
var address = mkDOM(false)("address");
var address$prime = address([]);
var abbr = mkDOM(false)("abbr");
var abbr$prime = abbr([]);
var a = mkDOM(false)("a");
var a$prime = a([]);

var _data = mkDOM(false)("data");

var _data$prime = _data([]);

module.exports = {
  IsDynamic: IsDynamic,
  mkDOM: mkDOM,
  text: text,
  "int": $$int,
  number: number,
  a: a,
  "a'": a$prime,
  abbr: abbr,
  "abbr'": abbr$prime,
  address: address,
  "address'": address$prime,
  area: area,
  "area'": area$prime,
  article: article,
  "article'": article$prime,
  aside: aside,
  "aside'": aside$prime,
  audio: audio,
  "audio'": audio$prime,
  b: b,
  "b'": b$prime,
  base: base,
  "base'": base$prime,
  bdi: bdi,
  "bdi'": bdi$prime,
  bdo: bdo,
  "bdo'": bdo$prime,
  big: big,
  "big'": big$prime,
  blockquote: blockquote,
  "blockquote'": blockquote$prime,
  body: body,
  "body'": body$prime,
  br: br,
  "br'": br$prime,
  button: button,
  "button'": button$prime,
  canvas: canvas,
  "canvas'": canvas$prime,
  caption: caption,
  "caption'": caption$prime,
  cite: cite,
  "cite'": cite$prime,
  code: code,
  "code'": code$prime,
  col: col,
  "col'": col$prime,
  colgroup: colgroup,
  "colgroup'": colgroup$prime,
  "_data": _data,
  "_data'": _data$prime,
  datalist: datalist,
  "datalist'": datalist$prime,
  dd: dd,
  "dd'": dd$prime,
  del: del,
  "del'": del$prime,
  details: details,
  "details'": details$prime,
  dfn: dfn,
  "dfn'": dfn$prime,
  dialog: dialog,
  "dialog'": dialog$prime,
  div: div,
  "div'": div$prime,
  dl: dl,
  "dl'": dl$prime,
  dt: dt,
  "dt'": dt$prime,
  em: em,
  "em'": em$prime,
  embed: embed,
  "embed'": embed$prime,
  fieldset: fieldset,
  "fieldset'": fieldset$prime,
  figcaption: figcaption,
  "figcaption'": figcaption$prime,
  figure: figure,
  "figure'": figure$prime,
  footer: footer,
  "footer'": footer$prime,
  form: form,
  "form'": form$prime,
  h1: h1,
  "h1'": h1$prime,
  h2: h2,
  "h2'": h2$prime,
  h3: h3,
  "h3'": h3$prime,
  h4: h4,
  "h4'": h4$prime,
  h5: h5,
  "h5'": h5$prime,
  h6: h6,
  "h6'": h6$prime,
  head: head,
  "head'": head$prime,
  header: header,
  "header'": header$prime,
  hr: hr,
  "hr'": hr$prime,
  html: html,
  "html'": html$prime,
  i: i,
  "i'": i$prime,
  iframe: iframe,
  "iframe'": iframe$prime,
  img: img,
  "img'": img$prime,
  input: input,
  "input'": input$prime,
  ins: ins,
  "ins'": ins$prime,
  kbd: kbd,
  "kbd'": kbd$prime,
  keygen: keygen,
  "keygen'": keygen$prime,
  label: label,
  "label'": label$prime,
  legend: legend,
  "legend'": legend$prime,
  li: li,
  "li'": li$prime,
  link: link,
  "link'": link$prime,
  main: main,
  "main'": main$prime,
  map: map,
  "map'": map$prime,
  mark: mark,
  "mark'": mark$prime,
  menu: menu,
  "menu'": menu$prime,
  menuitem: menuitem,
  "menuitem'": menuitem$prime,
  meta: meta,
  "meta'": meta$prime,
  meter: meter,
  "meter'": meter$prime,
  nav: nav,
  "nav'": nav$prime,
  noscript: noscript,
  "noscript'": noscript$prime,
  object: object,
  "object'": object$prime,
  ol: ol,
  "ol'": ol$prime,
  optgroup: optgroup,
  "optgroup'": optgroup$prime,
  option: option,
  "option'": option$prime,
  output: output,
  "output'": output$prime,
  p: p,
  "p'": p$prime,
  param: param,
  "param'": param$prime,
  picture: picture,
  "picture'": picture$prime,
  pre: pre,
  "pre'": pre$prime,
  progress: progress,
  "progress'": progress$prime,
  q: q,
  "q'": q$prime,
  rp: rp,
  "rp'": rp$prime,
  rt: rt,
  "rt'": rt$prime,
  ruby: ruby,
  "ruby'": ruby$prime,
  s: s,
  "s'": s$prime,
  samp: samp,
  "samp'": samp$prime,
  script: script,
  "script'": script$prime,
  section: section,
  "section'": section$prime,
  select: select,
  "select'": select$prime,
  small: small,
  "small'": small$prime,
  source: source,
  "source'": source$prime,
  span: span,
  "span'": span$prime,
  strong: strong,
  "strong'": strong$prime,
  style: style,
  "style'": style$prime,
  sub: sub,
  "sub'": sub$prime,
  summary: summary,
  "summary'": summary$prime,
  sup: sup,
  "sup'": sup$prime,
  table: table,
  "table'": table$prime,
  tbody: tbody,
  "tbody'": tbody$prime,
  td: td,
  "td'": td$prime,
  textarea: textarea,
  "textarea'": textarea$prime,
  tfoot: tfoot,
  "tfoot'": tfoot$prime,
  th: th,
  "th'": th$prime,
  thead: thead,
  "thead'": thead$prime,
  time: time,
  "time'": time$prime,
  title: title,
  "title'": title$prime,
  tr: tr,
  "tr'": tr$prime,
  track: track,
  "track'": track$prime,
  u: u,
  "u'": u$prime,
  ul: ul,
  "ul'": ul$prime,
  "var": $$var,
  "var'": var$prime,
  video: video,
  "video'": video$prime,
  wbr: wbr,
  "wbr'": wbr$prime
};
},{"../React/index.js":"kNrb","../React.DOM.Props/index.js":"KGuU","../Unsafe.Coerce/index.js":"ETUV"}],"Lx0R":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_DOM = require("../Concur.Core.DOM/index.js");

var Concur_Core_LiftWidget = require("../Concur.Core.LiftWidget/index.js");

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var React_DOM = require("../React.DOM/index.js");

var viewAdapter = function viewAdapter(f) {
  return function (ps) {
    return function (vs) {
      return [f(ps)(vs)];
    };
  };
};

var text = function text(dictLiftWidget) {
  return function (str) {
    return Concur_Core_LiftWidget.liftWidget(dictLiftWidget)(Concur_Core_Types.display([React_DOM.text(str)]));
  };
};

var number = function number(dictLiftWidget) {
  return function (x) {
    return Concur_Core_LiftWidget.liftWidget(dictLiftWidget)(Concur_Core_Types.display([React_DOM.number(x)]));
  };
};

var $$int = function $$int(dictLiftWidget) {
  return function (x) {
    return Concur_Core_LiftWidget.liftWidget(dictLiftWidget)(Concur_Core_Types.display([React_DOM["int"](x)]));
  };
};

var elLeaf = function elLeaf(dictLiftWidget) {
  return function (f) {
    return Concur_Core_DOM.elLeaf(dictLiftWidget)(Data_Functor.functorArray)(function (ps) {
      return [f(ps)];
    });
  };
};

var embed = function embed(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.embed);
};

var embed$prime = function embed$prime(dictLiftWidget) {
  return embed(dictLiftWidget)([]);
};

var hr = function hr(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.hr);
};

var hr$prime = function hr$prime(dictLiftWidget) {
  return hr(dictLiftWidget)([]);
};

var img = function img(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.img);
};

var img$prime = function img$prime(dictLiftWidget) {
  return img(dictLiftWidget)([]);
};

var input = function input(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.input);
};

var input$prime = function input$prime(dictLiftWidget) {
  return input(dictLiftWidget)([]);
};

var keygen = function keygen(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.keygen);
};

var keygen$prime = function keygen$prime(dictLiftWidget) {
  return keygen(dictLiftWidget)([]);
};

var link = function link(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.link);
};

var link$prime = function link$prime(dictLiftWidget) {
  return link(dictLiftWidget)([]);
};

var menuitem = function menuitem(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.menuitem);
};

var menuitem$prime = function menuitem$prime(dictLiftWidget) {
  return menuitem(dictLiftWidget)([]);
};

var meta = function meta(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.meta);
};

var meta$prime = function meta$prime(dictLiftWidget) {
  return meta(dictLiftWidget)([]);
};

var param = function param(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.param);
};

var param$prime = function param$prime(dictLiftWidget) {
  return param(dictLiftWidget)([]);
};

var source = function source(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.source);
};

var source$prime = function source$prime(dictLiftWidget) {
  return source(dictLiftWidget)([]);
};

var track = function track(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.track);
};

var track$prime = function track$prime(dictLiftWidget) {
  return track(dictLiftWidget)([]);
};

var wbr = function wbr(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.wbr);
};

var wbr$prime = function wbr$prime(dictLiftWidget) {
  return wbr(dictLiftWidget)([]);
};

var el$prime = function el$prime(dictShiftMap) {
  return function (dictMultiAlternative) {
    return function (f) {
      return Concur_Core_DOM["el'"](dictShiftMap)(dictMultiAlternative)(Data_Functor.functorArray)(viewAdapter(f));
    };
  };
};

var em = function em(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.em);
  };
};

var em$prime = function em$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return em(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var fieldset = function fieldset(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.fieldset);
  };
};

var fieldset$prime = function fieldset$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return fieldset(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var figcaption = function figcaption(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.figcaption);
  };
};

var figcaption$prime = function figcaption$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return figcaption(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var figure = function figure(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.figure);
  };
};

var figure$prime = function figure$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return figure(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var footer = function footer(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.footer);
  };
};

var footer$prime = function footer$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return footer(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var form = function form(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.form);
  };
};

var form$prime = function form$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return form(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var h1 = function h1(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.h1);
  };
};

var h1$prime = function h1$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return h1(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var h2 = function h2(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.h2);
  };
};

var h2$prime = function h2$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return h2(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var h3 = function h3(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.h3);
  };
};

var h3$prime = function h3$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return h3(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var h4 = function h4(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.h4);
  };
};

var h4$prime = function h4$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return h4(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var h5 = function h5(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.h5);
  };
};

var h5$prime = function h5$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return h5(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var h6 = function h6(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.h6);
  };
};

var h6$prime = function h6$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return h6(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var head = function head(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.head);
  };
};

var head$prime = function head$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return head(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var header = function header(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.header);
  };
};

var header$prime = function header$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return header(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var html = function html(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.html);
  };
};

var html$prime = function html$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return html(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var i = function i(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.i);
  };
};

var i$prime = function i$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return i(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var iframe = function iframe(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.iframe);
  };
};

var iframe$prime = function iframe$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return iframe(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var ins = function ins(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.ins);
  };
};

var ins$prime = function ins$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return ins(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var kbd = function kbd(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.kbd);
  };
};

var kbd$prime = function kbd$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return kbd(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var label = function label(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.label);
  };
};

var label$prime = function label$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return label(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var legend = function legend(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.legend);
  };
};

var legend$prime = function legend$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return legend(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var li = function li(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.li);
  };
};

var li$prime = function li$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return li(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var main = function main(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.main);
  };
};

var main$prime = function main$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return main(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var mark = function mark(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.mark);
  };
};

var mark$prime = function mark$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return mark(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var menu = function menu(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.menu);
  };
};

var menu$prime = function menu$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return menu(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var meter = function meter(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.meter);
  };
};

var meter$prime = function meter$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return meter(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var nav = function nav(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.nav);
  };
};

var nav$prime = function nav$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return nav(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var noscript = function noscript(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.noscript);
  };
};

var noscript$prime = function noscript$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return noscript(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var object = function object(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.object);
  };
};

var object$prime = function object$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return object(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var ol = function ol(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.ol);
  };
};

var ol$prime = function ol$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return ol(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var optgroup = function optgroup(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.optgroup);
  };
};

var optgroup$prime = function optgroup$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return optgroup(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var option = function option(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.option);
  };
};

var option$prime = function option$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return option(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var output = function output(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.output);
  };
};

var output$prime = function output$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return output(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var p = function p(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.p);
  };
};

var p$prime = function p$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return p(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var picture = function picture(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.picture);
  };
};

var picture$prime = function picture$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return picture(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var pre = function pre(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.pre);
  };
};

var pre$prime = function pre$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return pre(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var progress = function progress(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.progress);
  };
};

var progress$prime = function progress$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return progress(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var q = function q(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.q);
  };
};

var q$prime = function q$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return q(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var rp = function rp(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.rp);
  };
};

var rp$prime = function rp$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return rp(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var rt = function rt(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.rt);
  };
};

var rt$prime = function rt$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return rt(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var ruby = function ruby(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.ruby);
  };
};

var ruby$prime = function ruby$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return ruby(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var s = function s(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.s);
  };
};

var s$prime = function s$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return s(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var samp = function samp(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.samp);
  };
};

var samp$prime = function samp$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return samp(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var script = function script(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.script);
  };
};

var script$prime = function script$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return script(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var section = function section(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.section);
  };
};

var section$prime = function section$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return section(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var select = function select(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.select);
  };
};

var select$prime = function select$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return select(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var small = function small(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.small);
  };
};

var small$prime = function small$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return small(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var span = function span(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.span);
  };
};

var span$prime = function span$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return span(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var strong = function strong(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.strong);
  };
};

var strong$prime = function strong$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return strong(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var style = function style(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.style);
  };
};

var style$prime = function style$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return style(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var sub = function sub(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.sub);
  };
};

var sub$prime = function sub$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return sub(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var summary = function summary(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.summary);
  };
};

var summary$prime = function summary$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return summary(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var sup = function sup(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.sup);
  };
};

var sup$prime = function sup$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return sup(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var table = function table(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.table);
  };
};

var table$prime = function table$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return table(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var tbody = function tbody(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.tbody);
  };
};

var tbody$prime = function tbody$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return tbody(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var td = function td(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.td);
  };
};

var td$prime = function td$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return td(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var textarea = function textarea(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.textarea);
  };
};

var textarea$prime = function textarea$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return textarea(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var tfoot = function tfoot(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.tfoot);
  };
};

var tfoot$prime = function tfoot$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return tfoot(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var th = function th(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.th);
  };
};

var th$prime = function th$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return th(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var thead = function thead(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.thead);
  };
};

var thead$prime = function thead$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return thead(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var time = function time(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.time);
  };
};

var time$prime = function time$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return time(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var title = function title(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.title);
  };
};

var title$prime = function title$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return title(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var tr = function tr(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.tr);
  };
};

var tr$prime = function tr$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return tr(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var u = function u(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.u);
  };
};

var u$prime = function u$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return u(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var ul = function ul(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.ul);
  };
};

var ul$prime = function ul$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return ul(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var $$var = function $$var(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM["var"]);
  };
};

var var$prime = function var$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return $$var(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var video = function video(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.video);
  };
};

var video$prime = function video$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return video(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var el = function el(dictShiftMap) {
  return function (f) {
    return Concur_Core_DOM.el(dictShiftMap)(Data_Functor.functorArray)(viewAdapter(f));
  };
};

var em_ = function em_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.em);
};

var fieldset_ = function fieldset_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.fieldset);
};

var figcaption_ = function figcaption_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.figcaption);
};

var figure_ = function figure_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.figure);
};

var footer_ = function footer_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.footer);
};

var form_ = function form_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.form);
};

var h1_ = function h1_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.h1);
};

var h2_ = function h2_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.h2);
};

var h3_ = function h3_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.h3);
};

var h4_ = function h4_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.h4);
};

var h5_ = function h5_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.h5);
};

var h6_ = function h6_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.h6);
};

var head_ = function head_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.head);
};

var header_ = function header_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.header);
};

var html_ = function html_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.html);
};

var i_ = function i_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.i);
};

var iframe_ = function iframe_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.iframe);
};

var ins_ = function ins_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.ins);
};

var kbd_ = function kbd_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.kbd);
};

var label_ = function label_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.label);
};

var legend_ = function legend_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.legend);
};

var li_ = function li_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.li);
};

var main_ = function main_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.main);
};

var mark_ = function mark_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.mark);
};

var menu_ = function menu_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.menu);
};

var meter_ = function meter_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.meter);
};

var nav_ = function nav_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.nav);
};

var noscript_ = function noscript_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.noscript);
};

var object_ = function object_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.object);
};

var ol_ = function ol_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.ol);
};

var optgroup_ = function optgroup_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.optgroup);
};

var option_ = function option_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.option);
};

var output_ = function output_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.output);
};

var p_ = function p_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.p);
};

var picture_ = function picture_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.picture);
};

var pre_ = function pre_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.pre);
};

var progress_ = function progress_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.progress);
};

var q_ = function q_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.q);
};

var rp_ = function rp_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.rp);
};

var rt_ = function rt_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.rt);
};

var ruby_ = function ruby_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.ruby);
};

var s_ = function s_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.s);
};

var samp_ = function samp_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.samp);
};

var script_ = function script_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.script);
};

var section_ = function section_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.section);
};

var select_ = function select_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.select);
};

var small_ = function small_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.small);
};

var span_ = function span_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.span);
};

var strong_ = function strong_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.strong);
};

var style_ = function style_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.style);
};

var sub_ = function sub_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.sub);
};

var summary_ = function summary_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.summary);
};

var sup_ = function sup_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.sup);
};

var table_ = function table_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.table);
};

var tbody_ = function tbody_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.tbody);
};

var td_ = function td_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.td);
};

var textarea_ = function textarea_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.textarea);
};

var tfoot_ = function tfoot_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.tfoot);
};

var th_ = function th_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.th);
};

var thead_ = function thead_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.thead);
};

var time_ = function time_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.time);
};

var title_ = function title_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.title);
};

var tr_ = function tr_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.tr);
};

var u_ = function u_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.u);
};

var ul_ = function ul_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.ul);
};

var var_ = function var_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM["var"]);
};

var video_ = function video_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.video);
};

var dt_ = function dt_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.dt);
};

var dt = function dt(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.dt);
  };
};

var dt$prime = function dt$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return dt(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var dl_ = function dl_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.dl);
};

var dl = function dl(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.dl);
  };
};

var dl$prime = function dl$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return dl(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var div_ = function div_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.div);
};

var div = function div(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.div);
  };
};

var div$prime = function div$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return div(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var dialog_ = function dialog_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.dialog);
};

var dialog = function dialog(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.dialog);
  };
};

var dialog$prime = function dialog$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return dialog(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var dfn_ = function dfn_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.dfn);
};

var dfn = function dfn(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.dfn);
  };
};

var dfn$prime = function dfn$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return dfn(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var details_ = function details_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.details);
};

var details = function details(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.details);
  };
};

var details$prime = function details$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return details(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var del_ = function del_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.del);
};

var del = function del(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.del);
  };
};

var del$prime = function del$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return del(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var dd_ = function dd_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.dd);
};

var dd = function dd(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.dd);
  };
};

var dd$prime = function dd$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return dd(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var datalist_ = function datalist_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.datalist);
};

var datalist = function datalist(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.datalist);
  };
};

var datalist$prime = function datalist$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return datalist(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var colgroup_ = function colgroup_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.colgroup);
};

var colgroup = function colgroup(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.colgroup);
  };
};

var colgroup$prime = function colgroup$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return colgroup(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var col = function col(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.col);
};

var col$prime = function col$prime(dictLiftWidget) {
  return col(dictLiftWidget)([]);
};

var code_ = function code_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.code);
};

var code = function code(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.code);
  };
};

var code$prime = function code$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return code(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var cite_ = function cite_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.cite);
};

var cite = function cite(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.cite);
  };
};

var cite$prime = function cite$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return cite(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var caption_ = function caption_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.caption);
};

var caption = function caption(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.caption);
  };
};

var caption$prime = function caption$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return caption(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var canvas_ = function canvas_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.canvas);
};

var canvas = function canvas(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.canvas);
  };
};

var canvas$prime = function canvas$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return canvas(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var button_ = function button_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.button);
};

var button = function button(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.button);
  };
};

var button$prime = function button$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return button(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var br = function br(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.br);
};

var br$prime = function br$prime(dictLiftWidget) {
  return br(dictLiftWidget)([]);
};

var body_ = function body_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.body);
};

var body = function body(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.body);
  };
};

var body$prime = function body$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return body(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var blockquote_ = function blockquote_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.blockquote);
};

var blockquote = function blockquote(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.blockquote);
  };
};

var blockquote$prime = function blockquote$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return blockquote(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var big_ = function big_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.big);
};

var big = function big(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.big);
  };
};

var big$prime = function big$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return big(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var bdo_ = function bdo_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.bdo);
};

var bdo = function bdo(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.bdo);
  };
};

var bdo$prime = function bdo$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return bdo(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var bdi_ = function bdi_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.bdi);
};

var bdi = function bdi(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.bdi);
  };
};

var bdi$prime = function bdi$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return bdi(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var base = function base(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.base);
};

var base$prime = function base$prime(dictLiftWidget) {
  return base(dictLiftWidget)([]);
};

var b_ = function b_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.b);
};

var b = function b(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.b);
  };
};

var b$prime = function b$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return b(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var audio_ = function audio_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.audio);
};

var audio = function audio(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.audio);
  };
};

var audio$prime = function audio$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return audio(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var aside_ = function aside_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.aside);
};

var aside = function aside(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.aside);
  };
};

var aside$prime = function aside$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return aside(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var article_ = function article_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.article);
};

var article = function article(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.article);
  };
};

var article$prime = function article$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return article(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var area = function area(dictLiftWidget) {
  return elLeaf(dictLiftWidget)(React_DOM.area);
};

var area$prime = function area$prime(dictLiftWidget) {
  return area(dictLiftWidget)([]);
};

var address_ = function address_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.address);
};

var address = function address(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.address);
  };
};

var address$prime = function address$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return address(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var abbr_ = function abbr_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.abbr);
};

var abbr = function abbr(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.abbr);
  };
};

var abbr$prime = function abbr$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return abbr(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var a_ = function a_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.a);
};

var a = function a(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.a);
  };
};

var a$prime = function a$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return a(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var _map_ = function _map_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM.map);
};

var _map = function _map(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM.map);
  };
};

var _map$prime = function _map$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return _map(dictMultiAlternative)(dictShiftMap)([]);
  };
};

var _data_ = function _data_(dictShiftMap) {
  return el(dictShiftMap)(React_DOM["_data"]);
};

var _data = function _data(dictMultiAlternative) {
  return function (dictShiftMap) {
    return el$prime(dictShiftMap)(dictMultiAlternative)(React_DOM["_data"]);
  };
};

var _data$prime = function _data$prime(dictMultiAlternative) {
  return function (dictShiftMap) {
    return _data(dictMultiAlternative)(dictShiftMap)([]);
  };
};

module.exports = {
  viewAdapter: viewAdapter,
  el: el,
  "el'": el$prime,
  elLeaf: elLeaf,
  text: text,
  "int": $$int,
  number: number,
  a_: a_,
  a: a,
  "a'": a$prime,
  abbr_: abbr_,
  abbr: abbr,
  "abbr'": abbr$prime,
  address_: address_,
  address: address,
  "address'": address$prime,
  area: area,
  "area'": area$prime,
  article_: article_,
  article: article,
  "article'": article$prime,
  aside_: aside_,
  aside: aside,
  "aside'": aside$prime,
  audio_: audio_,
  audio: audio,
  "audio'": audio$prime,
  b_: b_,
  b: b,
  "b'": b$prime,
  base: base,
  "base'": base$prime,
  bdi_: bdi_,
  bdi: bdi,
  "bdi'": bdi$prime,
  bdo_: bdo_,
  bdo: bdo,
  "bdo'": bdo$prime,
  big_: big_,
  big: big,
  "big'": big$prime,
  blockquote_: blockquote_,
  blockquote: blockquote,
  "blockquote'": blockquote$prime,
  body_: body_,
  body: body,
  "body'": body$prime,
  br: br,
  "br'": br$prime,
  button_: button_,
  button: button,
  "button'": button$prime,
  canvas_: canvas_,
  canvas: canvas,
  "canvas'": canvas$prime,
  caption_: caption_,
  caption: caption,
  "caption'": caption$prime,
  cite_: cite_,
  cite: cite,
  "cite'": cite$prime,
  code_: code_,
  code: code,
  "code'": code$prime,
  col: col,
  "col'": col$prime,
  colgroup_: colgroup_,
  colgroup: colgroup,
  "colgroup'": colgroup$prime,
  "_data_": _data_,
  "_data": _data,
  "_data'": _data$prime,
  datalist_: datalist_,
  datalist: datalist,
  "datalist'": datalist$prime,
  dd_: dd_,
  dd: dd,
  "dd'": dd$prime,
  del_: del_,
  del: del,
  "del'": del$prime,
  details_: details_,
  details: details,
  "details'": details$prime,
  dfn_: dfn_,
  dfn: dfn,
  "dfn'": dfn$prime,
  dialog_: dialog_,
  dialog: dialog,
  "dialog'": dialog$prime,
  div_: div_,
  div: div,
  "div'": div$prime,
  dl_: dl_,
  dl: dl,
  "dl'": dl$prime,
  dt_: dt_,
  dt: dt,
  "dt'": dt$prime,
  em_: em_,
  em: em,
  "em'": em$prime,
  embed: embed,
  "embed'": embed$prime,
  fieldset_: fieldset_,
  fieldset: fieldset,
  "fieldset'": fieldset$prime,
  figcaption_: figcaption_,
  figcaption: figcaption,
  "figcaption'": figcaption$prime,
  figure_: figure_,
  figure: figure,
  "figure'": figure$prime,
  footer_: footer_,
  footer: footer,
  "footer'": footer$prime,
  form_: form_,
  form: form,
  "form'": form$prime,
  h1_: h1_,
  h1: h1,
  "h1'": h1$prime,
  h2_: h2_,
  h2: h2,
  "h2'": h2$prime,
  h3_: h3_,
  h3: h3,
  "h3'": h3$prime,
  h4_: h4_,
  h4: h4,
  "h4'": h4$prime,
  h5_: h5_,
  h5: h5,
  "h5'": h5$prime,
  h6_: h6_,
  h6: h6,
  "h6'": h6$prime,
  head_: head_,
  head: head,
  "head'": head$prime,
  header_: header_,
  header: header,
  "header'": header$prime,
  hr: hr,
  "hr'": hr$prime,
  html_: html_,
  html: html,
  "html'": html$prime,
  i_: i_,
  i: i,
  "i'": i$prime,
  iframe_: iframe_,
  iframe: iframe,
  "iframe'": iframe$prime,
  img: img,
  "img'": img$prime,
  input: input,
  "input'": input$prime,
  ins_: ins_,
  ins: ins,
  "ins'": ins$prime,
  kbd_: kbd_,
  kbd: kbd,
  "kbd'": kbd$prime,
  keygen: keygen,
  "keygen'": keygen$prime,
  label_: label_,
  label: label,
  "label'": label$prime,
  legend_: legend_,
  legend: legend,
  "legend'": legend$prime,
  li_: li_,
  li: li,
  "li'": li$prime,
  link: link,
  "link'": link$prime,
  main_: main_,
  main: main,
  "main'": main$prime,
  "_map_": _map_,
  "_map": _map,
  "_map'": _map$prime,
  mark_: mark_,
  mark: mark,
  "mark'": mark$prime,
  menu_: menu_,
  menu: menu,
  "menu'": menu$prime,
  menuitem: menuitem,
  "menuitem'": menuitem$prime,
  meta: meta,
  "meta'": meta$prime,
  meter_: meter_,
  meter: meter,
  "meter'": meter$prime,
  nav_: nav_,
  nav: nav,
  "nav'": nav$prime,
  noscript_: noscript_,
  noscript: noscript,
  "noscript'": noscript$prime,
  object_: object_,
  object: object,
  "object'": object$prime,
  ol_: ol_,
  ol: ol,
  "ol'": ol$prime,
  optgroup_: optgroup_,
  optgroup: optgroup,
  "optgroup'": optgroup$prime,
  option_: option_,
  option: option,
  "option'": option$prime,
  output_: output_,
  output: output,
  "output'": output$prime,
  p_: p_,
  p: p,
  "p'": p$prime,
  param: param,
  "param'": param$prime,
  picture_: picture_,
  picture: picture,
  "picture'": picture$prime,
  pre_: pre_,
  pre: pre,
  "pre'": pre$prime,
  progress_: progress_,
  progress: progress,
  "progress'": progress$prime,
  q_: q_,
  q: q,
  "q'": q$prime,
  rp_: rp_,
  rp: rp,
  "rp'": rp$prime,
  rt_: rt_,
  rt: rt,
  "rt'": rt$prime,
  ruby_: ruby_,
  ruby: ruby,
  "ruby'": ruby$prime,
  s_: s_,
  s: s,
  "s'": s$prime,
  samp_: samp_,
  samp: samp,
  "samp'": samp$prime,
  script_: script_,
  script: script,
  "script'": script$prime,
  section_: section_,
  section: section,
  "section'": section$prime,
  select_: select_,
  select: select,
  "select'": select$prime,
  small_: small_,
  small: small,
  "small'": small$prime,
  source: source,
  "source'": source$prime,
  span_: span_,
  span: span,
  "span'": span$prime,
  strong_: strong_,
  strong: strong,
  "strong'": strong$prime,
  style_: style_,
  style: style,
  "style'": style$prime,
  sub_: sub_,
  sub: sub,
  "sub'": sub$prime,
  summary_: summary_,
  summary: summary,
  "summary'": summary$prime,
  sup_: sup_,
  sup: sup,
  "sup'": sup$prime,
  table_: table_,
  table: table,
  "table'": table$prime,
  tbody_: tbody_,
  tbody: tbody,
  "tbody'": tbody$prime,
  td_: td_,
  td: td,
  "td'": td$prime,
  textarea_: textarea_,
  textarea: textarea,
  "textarea'": textarea$prime,
  tfoot_: tfoot_,
  tfoot: tfoot,
  "tfoot'": tfoot$prime,
  th_: th_,
  th: th,
  "th'": th$prime,
  thead_: thead_,
  thead: thead,
  "thead'": thead$prime,
  time_: time_,
  time: time,
  "time'": time$prime,
  title_: title_,
  title: title,
  "title'": title$prime,
  tr_: tr_,
  tr: tr,
  "tr'": tr$prime,
  track: track,
  "track'": track$prime,
  u_: u_,
  u: u,
  "u'": u$prime,
  ul_: ul_,
  ul: ul,
  "ul'": ul$prime,
  var_: var_,
  "var": $$var,
  "var'": var$prime,
  video_: video_,
  video: video,
  "video'": video$prime,
  wbr: wbr,
  "wbr'": wbr$prime
};
},{"../Concur.Core.DOM/index.js":"Z5WR","../Concur.Core.LiftWidget/index.js":"sFj5","../Concur.Core.Types/index.js":"qGwK","../Data.Functor/index.js":"AEHo","../React.DOM/index.js":"dbqM"}],"WCH2":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Monad_Free = require("../Control.Monad.Free/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect = require("../Effect/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var dischargePartialEffect = function dischargePartialEffect(dictMonoid) {
  return function (w) {
    var v = Control_Monad_Free.resume(Concur_Core_Types.functorWidgetStep)(Concur_Core_Types.unWidget(w));

    if (v instanceof Data_Either.Right) {
      return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Tuple.Tuple(w, Data_Monoid.mempty(dictMonoid)));
    }

    ;

    if (v instanceof Data_Either.Left) {
      if (v.value0 instanceof Data_Either.Left) {
        return function __do() {
          var w$prime = v.value0.value0();
          return dischargePartialEffect(dictMonoid)(w$prime)();
        };
      }

      ;

      if (v.value0 instanceof Data_Either.Right) {
        return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Tuple.Tuple(Control_Monad_Free.wrap(new Data_Either.Right(v.value0.value0)), v.value0.value0.view));
      }

      ;
      throw new Error("Failed pattern match at Concur.Core.Discharge (line 43, column 27 - line 47, column 77): " + [v.value0.constructor.name]);
    }

    ;
    throw new Error("Failed pattern match at Concur.Core.Discharge (line 41, column 28 - line 47, column 77): " + [v.constructor.name]);
  };
};

var discharge = function discharge(dictMonoid) {
  return function (handler) {
    return function (v) {
      var v1 = Control_Monad_Free.resume(Concur_Core_Types.functorWidgetStep)(v);

      if (v1 instanceof Data_Either.Right) {
        return Control_Applicative.pure(Effect.applicativeEffect)(Data_Monoid.mempty(dictMonoid));
      }

      ;

      if (v1 instanceof Data_Either.Left) {
        if (v1.value0 instanceof Data_Either.Left) {
          return function __do() {
            var w$prime = v1.value0.value0();
            return discharge(dictMonoid)(handler)(w$prime)();
          };
        }

        ;

        if (v1.value0 instanceof Data_Either.Right) {
          return function __do() {
            Effect_Aff.runAff_(function () {
              var $19 = Data_Functor.map(Data_Either.functorEither)(Concur_Core_Types.Widget);
              return function ($20) {
                return handler($19($20));
              };
            }())(v1.value0.value0.cont)();
            return v1.value0.value0.view;
          };
        }

        ;
        throw new Error("Failed pattern match at Concur.Core.Discharge (line 26, column 28 - line 32, column 19): " + [v1.value0.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Concur.Core.Discharge (line 24, column 32 - line 32, column 19): " + [v1.constructor.name]);
    };
  };
};

module.exports = {
  discharge: discharge,
  dischargePartialEffect: dischargePartialEffect
};
},{"../Concur.Core.Types/index.js":"qGwK","../Control.Applicative/index.js":"qYya","../Control.Monad.Free/index.js":"pVbB","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Tuple/index.js":"IIOM","../Effect/index.js":"oTWB","../Effect.Aff/index.js":"I7lu"}],"MGzD":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_Discharge = require("../Concur.Core.Discharge/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var Effect_Console = require("../Effect.Console/index.js");

var Effect_Exception = require("../Effect.Exception/index.js");

var React = require("../React/index.js");

var mkComponentState = function mkComponentState(v) {
  return {
    view: v
  };
};

var componentClassWithMount = function componentClassWithMount(onMount) {
  return function (winit) {
    var render = function render(st) {
      return React.toElement(React.isReactElementArray)(st.view);
    };

    var handler = function handler(v) {
      return function (v1) {
        if (v1 instanceof Data_Either.Right) {
          return function __do() {
            var v2 = Concur_Core_Discharge.discharge(Data_Monoid.monoidArray)(handler(v))(v1.value0)();
            return Data_Functor["void"](Effect.functorEffect)(React.writeState(v)(mkComponentState(v2)))();
          };
        }

        ;

        if (v1 instanceof Data_Either.Left) {
          return function __do() {
            Effect_Console.log("FAILED! " + Data_Show.show(Effect_Exception.showError)(v1.value0))();
            return Data_Unit.unit;
          };
        }

        ;
        throw new Error("Failed pattern match at Concur.React (line 32, column 5 - line 34, column 52): " + [v.constructor.name, v1.constructor.name]);
      };
    };

    var component = function component($$this) {
      return function __do() {
        var v = Concur_Core_Discharge.dischargePartialEffect(Data_Monoid.monoidArray)(winit)();
        return {
          state: mkComponentState(v.value1),
          render: Data_Functor.map(Effect.functorEffect)(render)(React.getState($$this)),
          componentDidMount: Control_Apply.applySecond(Effect.applyEffect)(onMount)(handler($$this)(new Data_Either.Right(v.value0)))
        };
      };
    };

    return React.component()("Concur")(component);
  };
};

var componentClass = componentClassWithMount(Data_Monoid.mempty(Effect.monoidEffect(Data_Monoid.monoidUnit)));

var renderComponent = function renderComponent(init) {
  return React.createLeafElement()(componentClass(init))({});
};

module.exports = {
  mkComponentState: mkComponentState,
  componentClassWithMount: componentClassWithMount,
  componentClass: componentClass,
  renderComponent: renderComponent
};
},{"../Concur.Core.Discharge/index.js":"WCH2","../Control.Apply/index.js":"QcLv","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Show/index.js":"mFY7","../Data.Unit/index.js":"NhVk","../Effect/index.js":"oTWB","../Effect.Console/index.js":"bpjQ","../Effect.Exception/index.js":"OCWS","../React/index.js":"kNrb"}],"x9cO":[function(require,module,exports) {
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';var f,g,h,k,l;
if("undefined"===typeof window||"function"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,
y=window.setTimeout,z=window.clearTimeout;if("undefined"!==typeof console){var A=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");"function"!==typeof A&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===
typeof w&&"function"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=
function(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}
function M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;
function V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}
function X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();"function"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}
function Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};
exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=Z;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};
exports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if("object"===typeof c&&null!==c){var e=c.delay;e="number"===typeof e&&0<e?d+e:d;c="number"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};
exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};

},{}],"IGIl":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/scheduler.production.min.js');
} else {
  module.exports = require('./cjs/scheduler.development.js');
}
},{"./cjs/scheduler.production.min.js":"x9cO"}],"jF7N":[function(require,module,exports) {
/** @license React v16.14.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
'use strict';var aa=require("react"),n=require("object-assign"),r=require("scheduler");function u(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!aa)throw Error(u(227));
function ba(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,k){da=!1;ea=null;ba.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,k){ja.apply(this,arguments);if(da){if(da){var l=ea;da=!1;ea=null}else throw Error(u(198));fa||(fa=!0,ha=l)}}var la=null,ma=null,na=null;
function oa(a,b,c){var d=a.type||"unknown-event";a.currentTarget=na(c);ka(d,b,void 0,a);a.currentTarget=null}var pa=null,qa={};
function ra(){if(pa)for(var a in qa){var b=qa[a],c=pa.indexOf(a);if(!(-1<c))throw Error(u(96,a));if(!sa[c]){if(!b.extractEvents)throw Error(u(97,a));sa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;if(ta.hasOwnProperty(h))throw Error(u(99,h));ta[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ua(k[e],g,h);e=!0}else f.registrationName?(ua(f.registrationName,g,h),e=!0):e=!1;if(!e)throw Error(u(98,d,a));}}}}
function ua(a,b,c){if(va[a])throw Error(u(100,a));va[a]=b;wa[a]=b.eventTypes[c].dependencies}var sa=[],ta={},va={},wa={};function xa(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];if(!qa.hasOwnProperty(c)||qa[c]!==d){if(qa[c])throw Error(u(102,c));qa[c]=d;b=!0}}b&&ra()}var ya=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),za=null,Aa=null,Ba=null;
function Ca(a){if(a=ma(a)){if("function"!==typeof za)throw Error(u(280));var b=a.stateNode;b&&(b=la(b),za(a.stateNode,a.type,b))}}function Da(a){Aa?Ba?Ba.push(a):Ba=[a]:Aa=a}function Ea(){if(Aa){var a=Aa,b=Ba;Ba=Aa=null;Ca(a);if(b)for(a=0;a<b.length;a++)Ca(b[a])}}function Fa(a,b){return a(b)}function Ga(a,b,c,d,e){return a(b,c,d,e)}function Ha(){}var Ia=Fa,Ja=!1,Ka=!1;function La(){if(null!==Aa||null!==Ba)Ha(),Ea()}
function Ma(a,b,c){if(Ka)return a(b,c);Ka=!0;try{return Ia(a,b,c)}finally{Ka=!1,La()}}var Na=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Oa=Object.prototype.hasOwnProperty,Pa={},Qa={};
function Ra(a){if(Oa.call(Qa,a))return!0;if(Oa.call(Pa,a))return!1;if(Na.test(a))return Qa[a]=!0;Pa[a]=!0;return!1}function Sa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function Ta(a,b,c,d){if(null===b||"undefined"===typeof b||Sa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f}var C={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){C[a]=new v(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];C[b]=new v(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){C[a]=new v(a,2,!1,a.toLowerCase(),null,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){C[a]=new v(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){C[a]=new v(a,3,!1,a.toLowerCase(),null,!1)});
["checked","multiple","muted","selected"].forEach(function(a){C[a]=new v(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){C[a]=new v(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){C[a]=new v(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){C[a]=new v(a,5,!1,a.toLowerCase(),null,!1)});var Ua=/[\-:]([a-z])/g;function Va(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Ua,
Va);C[b]=new v(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Ua,Va);C[b]=new v(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!1)});
C.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){C[a]=new v(a,1,!1,a.toLowerCase(),null,!0)});var Wa=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Wa.hasOwnProperty("ReactCurrentDispatcher")||(Wa.ReactCurrentDispatcher={current:null});Wa.hasOwnProperty("ReactCurrentBatchConfig")||(Wa.ReactCurrentBatchConfig={suspense:null});
function Xa(a,b,c,d){var e=C.hasOwnProperty(b)?C[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Ta(b,c,e,d)&&(c=null),d||null===e?Ra(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
var Ya=/^(.*)[\\\/]/,E="function"===typeof Symbol&&Symbol.for,Za=E?Symbol.for("react.element"):60103,$a=E?Symbol.for("react.portal"):60106,ab=E?Symbol.for("react.fragment"):60107,bb=E?Symbol.for("react.strict_mode"):60108,cb=E?Symbol.for("react.profiler"):60114,db=E?Symbol.for("react.provider"):60109,eb=E?Symbol.for("react.context"):60110,fb=E?Symbol.for("react.concurrent_mode"):60111,gb=E?Symbol.for("react.forward_ref"):60112,hb=E?Symbol.for("react.suspense"):60113,ib=E?Symbol.for("react.suspense_list"):
60120,jb=E?Symbol.for("react.memo"):60115,kb=E?Symbol.for("react.lazy"):60116,lb=E?Symbol.for("react.block"):60121,mb="function"===typeof Symbol&&Symbol.iterator;function nb(a){if(null===a||"object"!==typeof a)return null;a=mb&&a[mb]||a["@@iterator"];return"function"===typeof a?a:null}function ob(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}}
function pb(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case ab:return"Fragment";case $a:return"Portal";case cb:return"Profiler";case bb:return"StrictMode";case hb:return"Suspense";case ib:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case eb:return"Context.Consumer";case db:return"Context.Provider";case gb:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":
"ForwardRef");case jb:return pb(a.type);case lb:return pb(a.render);case kb:if(a=1===a._status?a._result:null)return pb(a)}return null}function qb(a){var b="";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c="";break a;default:var d=a._debugOwner,e=a._debugSource,f=pb(a.type);c=null;d&&(c=pb(d.type));d=f;f="";e?f=" (at "+e.fileName.replace(Ya,"")+":"+e.lineNumber+")":c&&(f=" (created by "+c+")");c="\n    in "+(d||"Unknown")+f}b+=c;a=a.return}while(a);return b}
function rb(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}function sb(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function tb(a){var b=sb(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
null;delete a[b]}}}}function xb(a){a._valueTracker||(a._valueTracker=tb(a))}function yb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=sb(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function zb(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}
function Ab(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=rb(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Bb(a,b){b=b.checked;null!=b&&Xa(a,"checked",b,!1)}
function Cb(a,b){Bb(a,b);var c=rb(b.value),d=b.type;if(null!=c)if("number"===d){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else if("submit"===d||"reset"===d){a.removeAttribute("value");return}b.hasOwnProperty("value")?Db(a,b.type,c):b.hasOwnProperty("defaultValue")&&Db(a,b.type,rb(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Eb(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){var d=b.type;if(!("submit"!==d&&"reset"!==d||void 0!==b.value&&null!==b.value))return;b=""+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!!a._wrapperState.initialChecked;""!==c&&(a.name=c)}
function Db(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}function Fb(a){var b="";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function Gb(a,b){a=n({children:void 0},b);if(b=Fb(b.children))a.children=b;return a}
function Hb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+rb(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Ib(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(u(91));return n({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Jb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(u(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(u(93));c=c[0]}b=c}null==b&&(b="");c=b}a._wrapperState={initialValue:rb(c)}}
function Kb(a,b){var c=rb(b.value),d=rb(b.defaultValue);null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=""+d)}function Lb(a){var b=a.textContent;b===a._wrapperState.initialValue&&""!==b&&null!==b&&(a.value=b)}var Mb={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Nb(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ob(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Nb(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Pb,Qb=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Mb.svg||"innerHTML"in a)a.innerHTML=b;else{Pb=Pb||document.createElement("div");Pb.innerHTML="<svg>"+b.valueOf().toString()+"</svg>";for(b=Pb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
function Rb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}function Sb(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;return c}var Tb={animationend:Sb("Animation","AnimationEnd"),animationiteration:Sb("Animation","AnimationIteration"),animationstart:Sb("Animation","AnimationStart"),transitionend:Sb("Transition","TransitionEnd")},Ub={},Vb={};
ya&&(Vb=document.createElement("div").style,"AnimationEvent"in window||(delete Tb.animationend.animation,delete Tb.animationiteration.animation,delete Tb.animationstart.animation),"TransitionEvent"in window||delete Tb.transitionend.transition);function Wb(a){if(Ub[a])return Ub[a];if(!Tb[a])return a;var b=Tb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Vb)return Ub[a]=b[c];return a}
var Xb=Wb("animationend"),Yb=Wb("animationiteration"),Zb=Wb("animationstart"),$b=Wb("transitionend"),ac="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),bc=new ("function"===typeof WeakMap?WeakMap:Map);function cc(a){var b=bc.get(a);void 0===b&&(b=new Map,bc.set(a,b));return b}
function dc(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.effectTag&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function ec(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function fc(a){if(dc(a)!==a)throw Error(u(188));}
function gc(a){var b=a.alternate;if(!b){b=dc(a);if(null===b)throw Error(u(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return fc(e),a;if(f===d)return fc(e),b;f=f.sibling}throw Error(u(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===
c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(u(189));}}if(c.alternate!==d)throw Error(u(190));}if(3!==c.tag)throw Error(u(188));return c.stateNode.current===c?a:b}function hc(a){a=gc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
function ic(a,b){if(null==b)throw Error(u(30));if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function jc(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var kc=null;
function lc(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)oa(a,b[d],c[d]);else b&&oa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function mc(a){null!==a&&(kc=ic(kc,a));a=kc;kc=null;if(a){jc(a,lc);if(kc)throw Error(u(95));if(fa)throw a=ha,fa=!1,ha=null,a;}}
function nc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function oc(a){if(!ya)return!1;a="on"+a;var b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}var pc=[];function qc(a){a.topLevelType=null;a.nativeEvent=null;a.targetInst=null;a.ancestors.length=0;10>pc.length&&pc.push(a)}
function rc(a,b,c,d){if(pc.length){var e=pc.pop();e.topLevelType=a;e.eventSystemFlags=d;e.nativeEvent=b;e.targetInst=c;return e}return{topLevelType:a,eventSystemFlags:d,nativeEvent:b,targetInst:c,ancestors:[]}}
function sc(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d=c;if(3===d.tag)d=d.stateNode.containerInfo;else{for(;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo}if(!d)break;b=c.tag;5!==b&&6!==b||a.ancestors.push(c);c=tc(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=nc(a.nativeEvent);d=a.topLevelType;var f=a.nativeEvent,g=a.eventSystemFlags;0===c&&(g|=64);for(var h=null,k=0;k<sa.length;k++){var l=sa[k];l&&(l=l.extractEvents(d,b,f,e,g))&&(h=
ic(h,l))}mc(h)}}function uc(a,b,c){if(!c.has(a)){switch(a){case "scroll":vc(b,"scroll",!0);break;case "focus":case "blur":vc(b,"focus",!0);vc(b,"blur",!0);c.set("blur",null);c.set("focus",null);break;case "cancel":case "close":oc(a)&&vc(b,a,!0);break;case "invalid":case "submit":case "reset":break;default:-1===ac.indexOf(a)&&F(a,b)}c.set(a,null)}}
var wc,xc,yc,zc=!1,Ac=[],Bc=null,Cc=null,Dc=null,Ec=new Map,Fc=new Map,Gc=[],Hc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ic="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
function Jc(a,b){var c=cc(b);Hc.forEach(function(a){uc(a,b,c)});Ic.forEach(function(a){uc(a,b,c)})}function Kc(a,b,c,d,e){return{blockedOn:a,topLevelType:b,eventSystemFlags:c|32,nativeEvent:e,container:d}}
function Lc(a,b){switch(a){case "focus":case "blur":Bc=null;break;case "dragenter":case "dragleave":Cc=null;break;case "mouseover":case "mouseout":Dc=null;break;case "pointerover":case "pointerout":Ec.delete(b.pointerId);break;case "gotpointercapture":case "lostpointercapture":Fc.delete(b.pointerId)}}function Mc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=Kc(b,c,d,e,f),null!==b&&(b=Nc(b),null!==b&&xc(b)),a;a.eventSystemFlags|=d;return a}
function Oc(a,b,c,d,e){switch(b){case "focus":return Bc=Mc(Bc,a,b,c,d,e),!0;case "dragenter":return Cc=Mc(Cc,a,b,c,d,e),!0;case "mouseover":return Dc=Mc(Dc,a,b,c,d,e),!0;case "pointerover":var f=e.pointerId;Ec.set(f,Mc(Ec.get(f)||null,a,b,c,d,e));return!0;case "gotpointercapture":return f=e.pointerId,Fc.set(f,Mc(Fc.get(f)||null,a,b,c,d,e)),!0}return!1}
function Pc(a){var b=tc(a.target);if(null!==b){var c=dc(b);if(null!==c)if(b=c.tag,13===b){if(b=ec(c),null!==b){a.blockedOn=b;r.unstable_runWithPriority(a.priority,function(){yc(c)});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Qc(a){if(null!==a.blockedOn)return!1;var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);if(null!==b){var c=Nc(b);null!==c&&xc(c);a.blockedOn=b;return!1}return!0}
function Sc(a,b,c){Qc(a)&&c.delete(b)}function Tc(){for(zc=!1;0<Ac.length;){var a=Ac[0];if(null!==a.blockedOn){a=Nc(a.blockedOn);null!==a&&wc(a);break}var b=Rc(a.topLevelType,a.eventSystemFlags,a.container,a.nativeEvent);null!==b?a.blockedOn=b:Ac.shift()}null!==Bc&&Qc(Bc)&&(Bc=null);null!==Cc&&Qc(Cc)&&(Cc=null);null!==Dc&&Qc(Dc)&&(Dc=null);Ec.forEach(Sc);Fc.forEach(Sc)}function Uc(a,b){a.blockedOn===b&&(a.blockedOn=null,zc||(zc=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Tc)))}
function Vc(a){function b(b){return Uc(b,a)}if(0<Ac.length){Uc(Ac[0],a);for(var c=1;c<Ac.length;c++){var d=Ac[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Bc&&Uc(Bc,a);null!==Cc&&Uc(Cc,a);null!==Dc&&Uc(Dc,a);Ec.forEach(b);Fc.forEach(b);for(c=0;c<Gc.length;c++)d=Gc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Gc.length&&(c=Gc[0],null===c.blockedOn);)Pc(c),null===c.blockedOn&&Gc.shift()}
var Wc={},Yc=new Map,Zc=new Map,$c=["abort","abort",Xb,"animationEnd",Yb,"animationIteration",Zb,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking",
"seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",$b,"transitionEnd","waiting","waiting"];function ad(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1],f="on"+(e[0].toUpperCase()+e.slice(1));f={phasedRegistrationNames:{bubbled:f,captured:f+"Capture"},dependencies:[d],eventPriority:b};Zc.set(d,b);Yc.set(d,f);Wc[e]=f}}
ad("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0);
ad("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);ad($c,2);for(var bd="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),cd=0;cd<bd.length;cd++)Zc.set(bd[cd],0);
var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function F(a,b){vc(b,a,!1)}function vc(a,b,c){var d=Zc.get(b);switch(void 0===d?2:d){case 0:d=gd.bind(null,b,1,a);break;case 1:d=hd.bind(null,b,1,a);break;default:d=id.bind(null,b,1,a)}c?a.addEventListener(b,d,!0):a.addEventListener(b,d,!1)}function gd(a,b,c,d){Ja||Ha();var e=id,f=Ja;Ja=!0;try{Ga(e,a,b,c,d)}finally{(Ja=f)||La()}}function hd(a,b,c,d){ed(dd,id.bind(null,a,b,c,d))}
function id(a,b,c,d){if(fd)if(0<Ac.length&&-1<Hc.indexOf(a))a=Kc(null,a,b,c,d),Ac.push(a);else{var e=Rc(a,b,c,d);if(null===e)Lc(a,d);else if(-1<Hc.indexOf(a))a=Kc(e,a,b,c,d),Ac.push(a);else if(!Oc(e,a,b,c,d)){Lc(a,d);a=rc(a,d,null,b);try{Ma(sc,a)}finally{qc(a)}}}}
function Rc(a,b,c,d){c=nc(d);c=tc(c);if(null!==c){var e=dc(c);if(null===e)c=null;else{var f=e.tag;if(13===f){c=ec(e);if(null!==c)return c;c=null}else if(3===f){if(e.stateNode.hydrate)return 3===e.tag?e.stateNode.containerInfo:null;c=null}else e!==c&&(c=null)}}a=rc(a,d,c,b);try{Ma(sc,a)}finally{qc(a)}return null}
var jd={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kd=["Webkit","ms","Moz","O"];Object.keys(jd).forEach(function(a){kd.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);jd[b]=jd[a]})});function ld(a,b,c){return null==b||"boolean"===typeof b||""===b?"":c||"number"!==typeof b||0===b||jd.hasOwnProperty(a)&&jd[a]?(""+b).trim():b+"px"}
function md(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--"),e=ld(c,b[c],d);"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var nd=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function od(a,b){if(b){if(nd[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(u(137,a,""));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(u(60));if(!("object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML))throw Error(u(61));}if(null!=b.style&&"object"!==typeof b.style)throw Error(u(62,""));}}
function pd(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var qd=Mb.html;function rd(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=cc(a);b=wa[b];for(var d=0;d<b.length;d++)uc(b[d],a,c)}function sd(){}
function td(a){a=a||("undefined"!==typeof document?document:void 0);if("undefined"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function ud(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function vd(a,b){var c=ud(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ud(c)}}
function wd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wd(a,b.parentNode):"contains"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xd(){for(var a=window,b=td();b instanceof a.HTMLIFrameElement;){try{var c="string"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=td(a.document)}return b}
function yd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}var zd="$",Ad="/$",Bd="$?",Cd="$!",Dd=null,Ed=null;function Fd(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
function Gd(a,b){return"textarea"===a||"option"===a||"noscript"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var Hd="function"===typeof setTimeout?setTimeout:void 0,Id="function"===typeof clearTimeout?clearTimeout:void 0;function Jd(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}
function Kd(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(c===zd||c===Cd||c===Bd){if(0===b)return a;b--}else c===Ad&&b++}a=a.previousSibling}return null}var Ld=Math.random().toString(36).slice(2),Md="__reactInternalInstance$"+Ld,Nd="__reactEventHandlers$"+Ld,Od="__reactContainere$"+Ld;
function tc(a){var b=a[Md];if(b)return b;for(var c=a.parentNode;c;){if(b=c[Od]||c[Md]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Kd(a);null!==a;){if(c=a[Md])return c;a=Kd(a)}return b}a=c;c=a.parentNode}return null}function Nc(a){a=a[Md]||a[Od];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function Pd(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(u(33));}function Qd(a){return a[Nd]||null}
function Rd(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}
function Sd(a,b){var c=a.stateNode;if(!c)return null;var d=la(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":case "onMouseEnter":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&"function"!==typeof c)throw Error(u(231,
b,typeof c));return c}function Td(a,b,c){if(b=Sd(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a)}function Ud(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Rd(b);for(b=c.length;0<b--;)Td(c[b],"captured",a);for(b=0;b<c.length;b++)Td(c[b],"bubbled",a)}}
function Vd(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Sd(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ic(c._dispatchListeners,b),c._dispatchInstances=ic(c._dispatchInstances,a))}function Wd(a){a&&a.dispatchConfig.registrationName&&Vd(a._targetInst,null,a)}function Xd(a){jc(a,Ud)}var Yd=null,Zd=null,$d=null;
function ae(){if($d)return $d;var a,b=Zd,c=b.length,d,e="value"in Yd?Yd.value:Yd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return $d=e.slice(a,1<d?1-d:void 0)}function be(){return!0}function ce(){return!1}
function G(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?be:ce;this.isPropagationStopped=ce;return this}
n(G.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=be)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=be)},persist:function(){this.isPersistent=be},isPersistent:ce,destructor:function(){var a=this.constructor.Interface,
b;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=ce;this._dispatchInstances=this._dispatchListeners=null}});G.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
G.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;de(c);return c};de(G);function ee(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
function fe(a){if(!(a instanceof this))throw Error(u(279));a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function de(a){a.eventPool=[];a.getPooled=ee;a.release=fe}var ge=G.extend({data:null}),he=G.extend({data:null}),ie=[9,13,27,32],je=ya&&"CompositionEvent"in window,ke=null;ya&&"documentMode"in document&&(ke=document.documentMode);
var le=ya&&"TextEvent"in window&&!ke,me=ya&&(!je||ke&&8<ke&&11>=ke),ne=String.fromCharCode(32),oe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},pe=!1;
function qe(a,b){switch(a){case "keyup":return-1!==ie.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function re(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var se=!1;function te(a,b){switch(a){case "compositionend":return re(b);case "keypress":if(32!==b.which)return null;pe=!0;return ne;case "textInput":return a=b.data,a===ne&&pe?null:a;default:return null}}
function ue(a,b){if(se)return"compositionend"===a||!je&&qe(a,b)?(a=ae(),$d=Zd=Yd=null,se=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return me&&"ko"!==b.locale?null:b.data;default:return null}}
var ve={eventTypes:oe,extractEvents:function(a,b,c,d){var e;if(je)b:{switch(a){case "compositionstart":var f=oe.compositionStart;break b;case "compositionend":f=oe.compositionEnd;break b;case "compositionupdate":f=oe.compositionUpdate;break b}f=void 0}else se?qe(a,c)&&(f=oe.compositionEnd):"keydown"===a&&229===c.keyCode&&(f=oe.compositionStart);f?(me&&"ko"!==c.locale&&(se||f!==oe.compositionStart?f===oe.compositionEnd&&se&&(e=ae()):(Yd=d,Zd="value"in Yd?Yd.value:Yd.textContent,se=!0)),f=ge.getPooled(f,
b,c,d),e?f.data=e:(e=re(c),null!==e&&(f.data=e)),Xd(f),e=f):e=null;(a=le?te(a,c):ue(a,c))?(b=he.getPooled(oe.beforeInput,b,c,d),b.data=a,Xd(b)):b=null;return null===e?b:null===b?e:[e,b]}},we={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!we[a.type]:"textarea"===b?!0:!1}
var ye={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function ze(a,b,c){a=G.getPooled(ye.change,a,b,c);a.type="change";Da(c);Xd(a);return a}var Ae=null,Be=null;function Ce(a){mc(a)}function De(a){var b=Pd(a);if(yb(b))return a}function Ee(a,b){if("change"===a)return b}var Fe=!1;ya&&(Fe=oc("input")&&(!document.documentMode||9<document.documentMode));
function Ge(){Ae&&(Ae.detachEvent("onpropertychange",He),Be=Ae=null)}function He(a){if("value"===a.propertyName&&De(Be))if(a=ze(Be,a,nc(a)),Ja)mc(a);else{Ja=!0;try{Fa(Ce,a)}finally{Ja=!1,La()}}}function Ie(a,b,c){"focus"===a?(Ge(),Ae=b,Be=c,Ae.attachEvent("onpropertychange",He)):"blur"===a&&Ge()}function Je(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return De(Be)}function Ke(a,b){if("click"===a)return De(b)}function Le(a,b){if("input"===a||"change"===a)return De(b)}
var Me={eventTypes:ye,_isInputEventSupported:Fe,extractEvents:function(a,b,c,d){var e=b?Pd(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Ee;else if(xe(e))if(Fe)g=Le;else{g=Je;var h=Ie}else(f=e.nodeName)&&"input"===f.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(g=Ke);if(g&&(g=g(a,b)))return ze(g,c,d);h&&h(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Db(e,"number",e.value)}},Ne=G.extend({view:null,detail:null}),
Oe={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pe(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Oe[a])?!!b[a]:!1}function Qe(){return Pe}
var Re=0,Se=0,Te=!1,Ue=!1,Ve=Ne.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Qe,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if("movementX"in a)return a.movementX;var b=Re;Re=a.screenX;return Te?"mousemove"===a.type?a.screenX-b:0:(Te=!0,0)},movementY:function(a){if("movementY"in a)return a.movementY;
var b=Se;Se=a.screenY;return Ue?"mousemove"===a.type?a.screenY-b:0:(Ue=!0,0)}}),We=Ve.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Xe={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",
dependencies:["pointerout","pointerover"]}},Ye={eventTypes:Xe,extractEvents:function(a,b,c,d,e){var f="mouseover"===a||"pointerover"===a,g="mouseout"===a||"pointerout"===a;if(f&&0===(e&32)&&(c.relatedTarget||c.fromElement)||!g&&!f)return null;f=d.window===d?d:(f=d.ownerDocument)?f.defaultView||f.parentWindow:window;if(g){if(g=b,b=(b=c.relatedTarget||c.toElement)?tc(b):null,null!==b){var h=dc(b);if(b!==h||5!==b.tag&&6!==b.tag)b=null}}else g=null;if(g===b)return null;if("mouseout"===a||"mouseover"===
a){var k=Ve;var l=Xe.mouseLeave;var m=Xe.mouseEnter;var p="mouse"}else if("pointerout"===a||"pointerover"===a)k=We,l=Xe.pointerLeave,m=Xe.pointerEnter,p="pointer";a=null==g?f:Pd(g);f=null==b?f:Pd(b);l=k.getPooled(l,g,c,d);l.type=p+"leave";l.target=a;l.relatedTarget=f;c=k.getPooled(m,b,c,d);c.type=p+"enter";c.target=f;c.relatedTarget=a;d=g;p=b;if(d&&p)a:{k=d;m=p;g=0;for(a=k;a;a=Rd(a))g++;a=0;for(b=m;b;b=Rd(b))a++;for(;0<g-a;)k=Rd(k),g--;for(;0<a-g;)m=Rd(m),a--;for(;g--;){if(k===m||k===m.alternate)break a;
k=Rd(k);m=Rd(m)}k=null}else k=null;m=k;for(k=[];d&&d!==m;){g=d.alternate;if(null!==g&&g===m)break;k.push(d);d=Rd(d)}for(d=[];p&&p!==m;){g=p.alternate;if(null!==g&&g===m)break;d.push(p);p=Rd(p)}for(p=0;p<k.length;p++)Vd(k[p],"bubbled",l);for(p=d.length;0<p--;)Vd(d[p],"captured",c);return 0===(e&64)?[l]:[l,c]}};function Ze(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var $e="function"===typeof Object.is?Object.is:Ze,af=Object.prototype.hasOwnProperty;
function bf(a,b){if($e(a,b))return!0;if("object"!==typeof a||null===a||"object"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!af.call(b,c[d])||!$e(a[c[d]],b[c[d]]))return!1;return!0}
var cf=ya&&"documentMode"in document&&11>=document.documentMode,df={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},ef=null,ff=null,gf=null,hf=!1;
function jf(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(hf||null==ef||ef!==td(c))return null;c=ef;"selectionStart"in c&&yd(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return gf&&bf(gf,c)?null:(gf=c,a=G.getPooled(df.select,ff,a,b),a.type="select",a.target=ef,Xd(a),a)}
var kf={eventTypes:df,extractEvents:function(a,b,c,d,e,f){e=f||(d.window===d?d.document:9===d.nodeType?d:d.ownerDocument);if(!(f=!e)){a:{e=cc(e);f=wa.onSelect;for(var g=0;g<f.length;g++)if(!e.has(f[g])){e=!1;break a}e=!0}f=!e}if(f)return null;e=b?Pd(b):window;switch(a){case "focus":if(xe(e)||"true"===e.contentEditable)ef=e,ff=b,gf=null;break;case "blur":gf=ff=ef=null;break;case "mousedown":hf=!0;break;case "contextmenu":case "mouseup":case "dragend":return hf=!1,jf(c,d);case "selectionchange":if(cf)break;
case "keydown":case "keyup":return jf(c,d)}return null}},lf=G.extend({animationName:null,elapsedTime:null,pseudoElement:null}),mf=G.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),nf=Ne.extend({relatedTarget:null});function of(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
var pf={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},qf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rf=Ne.extend({key:function(a){if(a.key){var b=pf[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=of(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?qf[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Qe,charCode:function(a){return"keypress"===
a.type?of(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?of(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),sf=Ve.extend({dataTransfer:null}),tf=Ne.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Qe}),uf=G.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),vf=Ve.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),wf={eventTypes:Wc,extractEvents:function(a,b,c,d){var e=Yc.get(a);if(!e)return null;switch(a){case "keypress":if(0===of(c))return null;case "keydown":case "keyup":a=rf;break;case "blur":case "focus":a=nf;break;case "click":if(2===c.button)return null;case "auxclick":case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=
Ve;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=sf;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=tf;break;case Xb:case Yb:case Zb:a=lf;break;case $b:a=uf;break;case "scroll":a=Ne;break;case "wheel":a=vf;break;case "copy":case "cut":case "paste":a=mf;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=
We;break;default:a=G}b=a.getPooled(e,b,c,d);Xd(b);return b}};if(pa)throw Error(u(101));pa=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));ra();var xf=Nc;la=Qd;ma=xf;na=Pd;xa({SimpleEventPlugin:wf,EnterLeaveEventPlugin:Ye,ChangeEventPlugin:Me,SelectEventPlugin:kf,BeforeInputEventPlugin:ve});var yf=[],zf=-1;function H(a){0>zf||(a.current=yf[zf],yf[zf]=null,zf--)}
function I(a,b){zf++;yf[zf]=a.current;a.current=b}var Af={},J={current:Af},K={current:!1},Bf=Af;function Cf(a,b){var c=a.type.contextTypes;if(!c)return Af;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function L(a){a=a.childContextTypes;return null!==a&&void 0!==a}
function Df(){H(K);H(J)}function Ef(a,b,c){if(J.current!==Af)throw Error(u(168));I(J,b);I(K,c)}function Ff(a,b,c){var d=a.stateNode;a=b.childContextTypes;if("function"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(u(108,pb(b)||"Unknown",e));return n({},c,{},d)}function Gf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Af;Bf=J.current;I(J,a);I(K,K.current);return!0}
function Hf(a,b,c){var d=a.stateNode;if(!d)throw Error(u(169));c?(a=Ff(a,b,Bf),d.__reactInternalMemoizedMergedChildContext=a,H(K),H(J),I(J,a)):H(K);I(K,c)}
var If=r.unstable_runWithPriority,Jf=r.unstable_scheduleCallback,Kf=r.unstable_cancelCallback,Lf=r.unstable_requestPaint,Mf=r.unstable_now,Nf=r.unstable_getCurrentPriorityLevel,Of=r.unstable_ImmediatePriority,Pf=r.unstable_UserBlockingPriority,Qf=r.unstable_NormalPriority,Rf=r.unstable_LowPriority,Sf=r.unstable_IdlePriority,Tf={},Uf=r.unstable_shouldYield,Vf=void 0!==Lf?Lf:function(){},Wf=null,Xf=null,Yf=!1,Zf=Mf(),$f=1E4>Zf?Mf:function(){return Mf()-Zf};
function ag(){switch(Nf()){case Of:return 99;case Pf:return 98;case Qf:return 97;case Rf:return 96;case Sf:return 95;default:throw Error(u(332));}}function bg(a){switch(a){case 99:return Of;case 98:return Pf;case 97:return Qf;case 96:return Rf;case 95:return Sf;default:throw Error(u(332));}}function cg(a,b){a=bg(a);return If(a,b)}function dg(a,b,c){a=bg(a);return Jf(a,b,c)}function eg(a){null===Wf?(Wf=[a],Xf=Jf(Of,fg)):Wf.push(a);return Tf}function gg(){if(null!==Xf){var a=Xf;Xf=null;Kf(a)}fg()}
function fg(){if(!Yf&&null!==Wf){Yf=!0;var a=0;try{var b=Wf;cg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});Wf=null}catch(c){throw null!==Wf&&(Wf=Wf.slice(a+1)),Jf(Of,gg),c;}finally{Yf=!1}}}function hg(a,b,c){c/=10;return 1073741821-(((1073741821-a+b/10)/c|0)+1)*c}function ig(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}var jg={current:null},kg=null,lg=null,mg=null;function ng(){mg=lg=kg=null}
function og(a){var b=jg.current;H(jg);a.type._context._currentValue=b}function pg(a,b){for(;null!==a;){var c=a.alternate;if(a.childExpirationTime<b)a.childExpirationTime=b,null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);else if(null!==c&&c.childExpirationTime<b)c.childExpirationTime=b;else break;a=a.return}}function qg(a,b){kg=a;mg=lg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(a.expirationTime>=b&&(rg=!0),a.firstContext=null)}
function sg(a,b){if(mg!==a&&!1!==b&&0!==b){if("number"!==typeof b||1073741823===b)mg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===lg){if(null===kg)throw Error(u(308));lg=b;kg.dependencies={expirationTime:0,firstContext:b,responders:null}}else lg=lg.next=b}return a._currentValue}var tg=!1;function ug(a){a.updateQueue={baseState:a.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}
function vg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,baseQueue:a.baseQueue,shared:a.shared,effects:a.effects})}function wg(a,b){a={expirationTime:a,suspenseConfig:b,tag:0,payload:null,callback:null,next:null};return a.next=a}function xg(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}
function yg(a,b){var c=a.alternate;null!==c&&vg(c,a);a=a.updateQueue;c=a.baseQueue;null===c?(a.baseQueue=b.next=b,b.next=b):(b.next=c.next,c.next=b)}
function zg(a,b,c,d){var e=a.updateQueue;tg=!1;var f=e.baseQueue,g=e.shared.pending;if(null!==g){if(null!==f){var h=f.next;f.next=g.next;g.next=h}f=g;e.shared.pending=null;h=a.alternate;null!==h&&(h=h.updateQueue,null!==h&&(h.baseQueue=g))}if(null!==f){h=f.next;var k=e.baseState,l=0,m=null,p=null,x=null;if(null!==h){var z=h;do{g=z.expirationTime;if(g<d){var ca={expirationTime:z.expirationTime,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null};null===x?(p=x=
ca,m=k):x=x.next=ca;g>l&&(l=g)}else{null!==x&&(x=x.next={expirationTime:1073741823,suspenseConfig:z.suspenseConfig,tag:z.tag,payload:z.payload,callback:z.callback,next:null});Ag(g,z.suspenseConfig);a:{var D=a,t=z;g=b;ca=c;switch(t.tag){case 1:D=t.payload;if("function"===typeof D){k=D.call(ca,k,g);break a}k=D;break a;case 3:D.effectTag=D.effectTag&-4097|64;case 0:D=t.payload;g="function"===typeof D?D.call(ca,k,g):D;if(null===g||void 0===g)break a;k=n({},k,g);break a;case 2:tg=!0}}null!==z.callback&&
(a.effectTag|=32,g=e.effects,null===g?e.effects=[z]:g.push(z))}z=z.next;if(null===z||z===h)if(g=e.shared.pending,null===g)break;else z=f.next=g.next,g.next=h,e.baseQueue=f=g,e.shared.pending=null}while(1)}null===x?m=k:x.next=p;e.baseState=m;e.baseQueue=x;Bg(l);a.expirationTime=l;a.memoizedState=k}}
function Cg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=e;e=c;if("function"!==typeof d)throw Error(u(191,d));d.call(e)}}}var Dg=Wa.ReactCurrentBatchConfig,Eg=(new aa.Component).refs;function Fg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;0===a.expirationTime&&(a.updateQueue.baseState=c)}
var Jg={isMounted:function(a){return(a=a._reactInternalFiber)?dc(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e=wg(d,e);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);xg(a,e);Ig(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gg(),d=Dg.suspense;
c=Hg(c,a,d);d=wg(c,d);d.tag=2;void 0!==b&&null!==b&&(d.callback=b);xg(a,d);Ig(a,c)}};function Kg(a,b,c,d,e,f,g){a=a.stateNode;return"function"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!bf(c,d)||!bf(e,f):!0}
function Lg(a,b,c){var d=!1,e=Af;var f=b.contextType;"object"===typeof f&&null!==f?f=sg(f):(e=L(b)?Bf:J.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Cf(a,e):Af);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Jg;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}
function Mg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jg.enqueueReplaceState(b,b.state,null)}
function Ng(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Eg;ug(a);var f=b.contextType;"object"===typeof f&&null!==f?e.context=sg(f):(f=L(b)?Bf:J.current,e.context=Cf(a,f));zg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;"function"===typeof f&&(Fg(a,b,f,c),e.state=a.memoizedState);"function"===typeof b.getDerivedStateFromProps||"function"===typeof e.getSnapshotBeforeUpdate||"function"!==typeof e.UNSAFE_componentWillMount&&"function"!==typeof e.componentWillMount||
(b=e.state,"function"===typeof e.componentWillMount&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jg.enqueueReplaceState(e,e.state,null),zg(a,c,e,d),e.state=a.memoizedState);"function"===typeof e.componentDidMount&&(a.effectTag|=4)}var Og=Array.isArray;
function Pg(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(u(309));var d=c.stateNode}if(!d)throw Error(u(147,a));var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Eg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if("string"!==typeof a)throw Error(u(284));if(!c._owner)throw Error(u(290,a));}return a}
function Qg(a,b){if("textarea"!==a.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,""));}
function Rg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Sg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Tg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Pg(a,b,c),d.return=a,d;d=Ug(c.type,c.key,c.props,null,a.mode,d);d.ref=Pg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==
c.implementation)return b=Vg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Wg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function p(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Tg(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Za:return c=Ug(b.type,b.key,b.props,null,a.mode,c),c.ref=Pg(a,null,b),c.return=a,c;case $a:return b=Vg(b,a.mode,c),b.return=a,b}if(Og(b)||
nb(b))return b=Wg(b,a.mode,c,null),b.return=a,b;Qg(a,b)}return null}function x(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Za:return c.key===e?c.type===ab?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case $a:return c.key===e?l(a,b,c,d):null}if(Og(c)||nb(c))return null!==e?null:m(a,b,c,d,null);Qg(a,c)}return null}function z(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=
a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Za:return a=a.get(null===d.key?c:d.key)||null,d.type===ab?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case $a:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Og(d)||nb(d))return a=a.get(c)||null,m(b,a,d,e,null);Qg(b,d)}return null}function ca(e,g,h,k){for(var l=null,t=null,m=g,y=g=0,A=null;null!==m&&y<h.length;y++){m.index>y?(A=m,m=null):A=m.sibling;var q=x(e,m,h[y],k);if(null===q){null===m&&(m=A);break}a&&
m&&null===q.alternate&&b(e,m);g=f(q,g,y);null===t?l=q:t.sibling=q;t=q;m=A}if(y===h.length)return c(e,m),l;if(null===m){for(;y<h.length;y++)m=p(e,h[y],k),null!==m&&(g=f(m,g,y),null===t?l=m:t.sibling=m,t=m);return l}for(m=d(e,m);y<h.length;y++)A=z(m,e,y,h[y],k),null!==A&&(a&&null!==A.alternate&&m.delete(null===A.key?y:A.key),g=f(A,g,y),null===t?l=A:t.sibling=A,t=A);a&&m.forEach(function(a){return b(e,a)});return l}function D(e,g,h,l){var k=nb(h);if("function"!==typeof k)throw Error(u(150));h=k.call(h);
if(null==h)throw Error(u(151));for(var m=k=null,t=g,y=g=0,A=null,q=h.next();null!==t&&!q.done;y++,q=h.next()){t.index>y?(A=t,t=null):A=t.sibling;var D=x(e,t,q.value,l);if(null===D){null===t&&(t=A);break}a&&t&&null===D.alternate&&b(e,t);g=f(D,g,y);null===m?k=D:m.sibling=D;m=D;t=A}if(q.done)return c(e,t),k;if(null===t){for(;!q.done;y++,q=h.next())q=p(e,q.value,l),null!==q&&(g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);return k}for(t=d(e,t);!q.done;y++,q=h.next())q=z(t,e,y,q.value,l),null!==q&&(a&&null!==
q.alternate&&t.delete(null===q.key?y:q.key),g=f(q,g,y),null===m?k=q:m.sibling=q,m=q);a&&t.forEach(function(a){return b(e,a)});return k}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ab&&null===f.key;k&&(f=f.props.children);var l="object"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Za:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ab){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,
k.sibling);d=e(k,f.props);d.ref=Pg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ab?(d=Wg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ug(f.type,f.key,f.props,null,a.mode,h),h.ref=Pg(a,d,f),h.return=a,a=h)}return g(a);case $a:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=
d.sibling}d=Vg(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Tg(f,a.mode,h),d.return=a,a=d),g(a);if(Og(f))return ca(a,d,f,h);if(nb(f))return D(a,d,f,h);l&&Qg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 1:case 0:throw a=a.type,Error(u(152,a.displayName||a.name||"Component"));}return c(a,d)}}var Xg=Rg(!0),Yg=Rg(!1),Zg={},$g={current:Zg},ah={current:Zg},bh={current:Zg};
function ch(a){if(a===Zg)throw Error(u(174));return a}function dh(a,b){I(bh,b);I(ah,a);I($g,Zg);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Ob(null,"");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Ob(b,a)}H($g);I($g,b)}function eh(){H($g);H(ah);H(bh)}function fh(a){ch(bh.current);var b=ch($g.current);var c=Ob(b,a.type);b!==c&&(I(ah,a),I($g,c))}function gh(a){ah.current===a&&(H($g),H(ah))}var M={current:0};
function hh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||c.data===Bd||c.data===Cd))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.effectTag&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function ih(a,b){return{responder:a,props:b}}
var jh=Wa.ReactCurrentDispatcher,kh=Wa.ReactCurrentBatchConfig,lh=0,N=null,O=null,P=null,mh=!1;function Q(){throw Error(u(321));}function nh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!$e(a[c],b[c]))return!1;return!0}
function oh(a,b,c,d,e,f){lh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.expirationTime=0;jh.current=null===a||null===a.memoizedState?ph:qh;a=c(d,e);if(b.expirationTime===lh){f=0;do{b.expirationTime=0;if(!(25>f))throw Error(u(301));f+=1;P=O=null;b.updateQueue=null;jh.current=rh;a=c(d,e)}while(b.expirationTime===lh)}jh.current=sh;b=null!==O&&null!==O.next;lh=0;P=O=N=null;mh=!1;if(b)throw Error(u(300));return a}
function th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function uh(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(u(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}
function vh(a,b){return"function"===typeof b?b(a):b}
function wh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.expirationTime;if(l<lh){var m={expirationTime:k.expirationTime,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=m,f=d):h=h.next=m;l>N.expirationTime&&
(N.expirationTime=l,Bg(l))}else null!==h&&(h=h.next={expirationTime:1073741823,suspenseConfig:k.suspenseConfig,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),Ag(l,k.suspenseConfig),d=k.eagerReducer===a?k.eagerState:a(d,k.action);k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;$e(d,b.memoizedState)||(rg=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}
function xh(a){var b=uh(),c=b.queue;if(null===c)throw Error(u(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);$e(f,b.memoizedState)||(rg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}
function yh(a){var b=th();"function"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:vh,lastRenderedState:a};a=a.dispatch=zh.bind(null,N,a);return[b.memoizedState,a]}function Ah(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}
function Bh(){return uh().memoizedState}function Ch(a,b,c,d){var e=th();N.effectTag|=a;e.memoizedState=Ah(1|b,c,void 0,void 0===d?null:d)}function Dh(a,b,c,d){var e=uh();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&nh(d,g.deps)){Ah(b,c,f,d);return}}N.effectTag|=a;e.memoizedState=Ah(1|b,c,f,d)}function Eh(a,b){return Ch(516,4,a,b)}function Fh(a,b){return Dh(516,4,a,b)}function Gh(a,b){return Dh(4,2,a,b)}
function Hh(a,b){if("function"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function Ih(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Dh(4,2,Hh.bind(null,b,a),c)}function Jh(){}function Kh(a,b){th().memoizedState=[a,void 0===b?null:b];return a}function Lh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}
function Mh(a,b){var c=uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&nh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Nh(a,b,c){var d=ag();cg(98>d?98:d,function(){a(!0)});cg(97<d?97:d,function(){var d=kh.suspense;kh.suspense=void 0===b?null:b;try{a(!1),c()}finally{kh.suspense=d}})}
function zh(a,b,c){var d=Gg(),e=Dg.suspense;d=Hg(d,a,e);e={expirationTime:d,suspenseConfig:e,action:c,eagerReducer:null,eagerState:null,next:null};var f=b.pending;null===f?e.next=e:(e.next=f.next,f.next=e);b.pending=e;f=a.alternate;if(a===N||null!==f&&f===N)mh=!0,e.expirationTime=lh,N.expirationTime=lh;else{if(0===a.expirationTime&&(null===f||0===f.expirationTime)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.eagerReducer=f;e.eagerState=h;if($e(h,g))return}catch(k){}finally{}Ig(a,
d)}}
var sh={readContext:sg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useResponder:Q,useDeferredValue:Q,useTransition:Q},ph={readContext:sg,useCallback:Kh,useContext:sg,useEffect:Eh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ch(4,2,Hh.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ch(4,2,a,b)},useMemo:function(a,b){var c=th();b=void 0===b?null:b;a=a();c.memoizedState=[a,
b];return a},useReducer:function(a,b,c){var d=th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=zh.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=th();a={current:a};return b.memoizedState=a},useState:yh,useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=yh(a),d=c[0],e=c[1];Eh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=
c}},[a,b]);return d},useTransition:function(a){var b=yh(!1),c=b[0];b=b[1];return[Kh(Nh.bind(null,b,a),[b,a]),c]}},qh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:wh,useRef:Bh,useState:function(){return wh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=wh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=
wh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,b,a),[b,a]),c]}},rh={readContext:sg,useCallback:Lh,useContext:sg,useEffect:Fh,useImperativeHandle:Ih,useLayoutEffect:Gh,useMemo:Mh,useReducer:xh,useRef:Bh,useState:function(){return xh(vh)},useDebugValue:Jh,useResponder:ih,useDeferredValue:function(a,b){var c=xh(vh),d=c[0],e=c[1];Fh(function(){var c=kh.suspense;kh.suspense=void 0===b?null:b;try{e(a)}finally{kh.suspense=c}},[a,b]);return d},useTransition:function(a){var b=xh(vh),c=b[0];b=b[1];return[Lh(Nh.bind(null,
b,a),[b,a]),c]}},Oh=null,Ph=null,Qh=!1;function Rh(a,b){var c=Sh(5,null,null,0);c.elementType="DELETED";c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
function Th(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}
function Uh(a){if(Qh){var b=Ph;if(b){var c=b;if(!Th(a,b)){b=Jd(c.nextSibling);if(!b||!Th(a,b)){a.effectTag=a.effectTag&-1025|2;Qh=!1;Oh=a;return}Rh(Oh,c)}Oh=a;Ph=Jd(b.firstChild)}else a.effectTag=a.effectTag&-1025|2,Qh=!1,Oh=a}}function Vh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;Oh=a}
function Wh(a){if(a!==Oh)return!1;if(!Qh)return Vh(a),Qh=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!Gd(b,a.memoizedProps))for(b=Ph;b;)Rh(a,b),b=Jd(b.nextSibling);Vh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(u(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(c===Ad){if(0===b){Ph=Jd(a.nextSibling);break a}b--}else c!==zd&&c!==Cd&&c!==Bd||b++}a=a.nextSibling}Ph=null}}else Ph=Oh?Jd(a.stateNode.nextSibling):null;return!0}
function Xh(){Ph=Oh=null;Qh=!1}var Yh=Wa.ReactCurrentOwner,rg=!1;function R(a,b,c,d){b.child=null===a?Yg(b,null,c,d):Xg(b,a.child,c,d)}function Zh(a,b,c,d,e){c=c.render;var f=b.ref;qg(b,e);d=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,d,e);return b.child}
function ai(a,b,c,d,e,f){if(null===a){var g=c.type;if("function"===typeof g&&!bi(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ci(a,b,g,d,e,f);a=Ug(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:bf,c(e,d)&&a.ref===b.ref))return $h(a,b,f);b.effectTag|=1;a=Sg(g,d);a.ref=b.ref;a.return=b;return b.child=a}
function ci(a,b,c,d,e,f){return null!==a&&bf(a.memoizedProps,d)&&a.ref===b.ref&&(rg=!1,e<f)?(b.expirationTime=a.expirationTime,$h(a,b,f)):di(a,b,c,d,f)}function ei(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function di(a,b,c,d,e){var f=L(c)?Bf:J.current;f=Cf(b,f);qg(b,e);c=oh(a,b,c,d,f,e);if(null!==a&&!rg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),$h(a,b,e);b.effectTag|=1;R(a,b,c,e);return b.child}
function fi(a,b,c,d,e){if(L(c)){var f=!0;Gf(b)}else f=!1;qg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),Lg(b,c,d),Ng(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l));var m=c.getDerivedStateFromProps,p="function"===typeof m||"function"===typeof g.getSnapshotBeforeUpdate;p||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&
"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l);tg=!1;var x=b.memoizedState;g.state=x;zg(b,d,g,e);k=b.memoizedState;h!==d||x!==k||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),k=b.memoizedState),(h=tg||Kg(b,c,h,d,x,k,l))?(p||"function"!==typeof g.UNSAFE_componentWillMount&&"function"!==typeof g.componentWillMount||("function"===typeof g.componentWillMount&&g.componentWillMount(),"function"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),"function"===
typeof g.componentDidMount&&(b.effectTag|=4)):("function"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):("function"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,vg(a,b),h=b.memoizedProps,g.props=b.type===b.elementType?h:ig(b.type,h),k=g.context,l=c.contextType,"object"===typeof l&&null!==l?l=sg(l):(l=L(c)?Bf:J.current,l=Cf(b,l)),m=c.getDerivedStateFromProps,(p="function"===typeof m||"function"===
typeof g.getSnapshotBeforeUpdate)||"function"!==typeof g.UNSAFE_componentWillReceiveProps&&"function"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Mg(b,g,d,l),tg=!1,k=b.memoizedState,g.state=k,zg(b,d,g,e),x=b.memoizedState,h!==d||k!==x||K.current||tg?("function"===typeof m&&(Fg(b,c,m,d),x=b.memoizedState),(m=tg||Kg(b,c,h,d,k,x,l))?(p||"function"!==typeof g.UNSAFE_componentWillUpdate&&"function"!==typeof g.componentWillUpdate||("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,
x,l),"function"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,l)),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4),"function"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=l,d=m):
("function"!==typeof g.componentDidUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=4),"function"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&k===a.memoizedState||(b.effectTag|=256),d=!1);return gi(a,b,c,d,f,e)}
function gi(a,b,c,d,e,f){ei(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Hf(b,c,!1),$h(a,b,f);d=b.stateNode;Yh.current=b;var h=g&&"function"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Xg(b,a.child,null,f),b.child=Xg(b,null,h,f)):R(a,b,h,f);b.memoizedState=d.state;e&&Hf(b,c,!0);return b.child}function hi(a){var b=a.stateNode;b.pendingContext?Ef(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ef(a,b.context,!1);dh(a,b.containerInfo)}
var ii={dehydrated:null,retryTime:0};
function ji(a,b,c){var d=b.mode,e=b.pendingProps,f=M.current,g=!1,h;(h=0!==(b.effectTag&64))||(h=0!==(f&2)&&(null===a||null!==a.memoizedState));h?(g=!0,b.effectTag&=-65):null!==a&&null===a.memoizedState||void 0===e.fallback||!0===e.unstable_avoidThisFallback||(f|=1);I(M,f&1);if(null===a){void 0!==e.fallback&&Uh(b);if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=
b;e.sibling=c;b.memoizedState=ii;b.child=e;return c}d=e.children;b.memoizedState=null;return b.child=Yg(b,null,d,c)}if(null!==a.memoizedState){a=a.child;d=a.sibling;if(g){e=e.fallback;c=Sg(a,a.pendingProps);c.return=b;if(0===(b.mode&2)&&(g=null!==b.memoizedState?b.child.child:b.child,g!==a.child))for(c.child=g;null!==g;)g.return=c,g=g.sibling;d=Sg(d,e);d.return=b;c.sibling=d;c.childExpirationTime=0;b.memoizedState=ii;b.child=c;return d}c=Xg(b,a.child,e.children,c);b.memoizedState=null;return b.child=
c}a=a.child;if(g){g=e.fallback;e=Wg(null,d,0,null);e.return=b;e.child=a;null!==a&&(a.return=e);if(0===(b.mode&2))for(a=null!==b.memoizedState?b.child.child:b.child,e.child=a;null!==a;)a.return=e,a=a.sibling;c=Wg(g,d,c,null);c.return=b;e.sibling=c;c.effectTag|=2;e.childExpirationTime=0;b.memoizedState=ii;b.child=e;return c}b.memoizedState=null;return b.child=Xg(b,a,e.children,c)}
function ki(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);pg(a.return,b)}function li(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailExpiration:0,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailExpiration=0,g.tailMode=e,g.lastEffect=f)}
function mi(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;R(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.effectTag|=64;else{if(null!==a&&0!==(a.effectTag&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&ki(a,c);else if(19===a.tag)ki(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(M,d);if(0===(b.mode&2))b.memoizedState=
null;else switch(e){case "forwards":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===hh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);li(b,!1,e,c,f,b.lastEffect);break;case "backwards":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}li(b,!0,c,null,f,b.lastEffect);break;case "together":li(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}
function $h(a,b,c){null!==a&&(b.dependencies=a.dependencies);var d=b.expirationTime;0!==d&&Bg(d);if(b.childExpirationTime<c)return null;if(null!==a&&b.child!==a.child)throw Error(u(153));if(null!==b.child){a=b.child;c=Sg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Sg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}var ni,oi,pi,qi;
ni=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};oi=function(){};
pi=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;ch($g.current);a=null;switch(c){case "input":f=zb(g,f);d=zb(g,d);a=[];break;case "option":f=Gb(g,f);d=Gb(g,d);a=[];break;case "select":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case "textarea":f=Ib(g,f);d=Ib(g,d);a=[];break;default:"function"!==typeof f.onClick&&"function"===typeof d.onClick&&(g.onclick=sd)}od(c,d);var h,k;c=null;for(h in f)if(!d.hasOwnProperty(h)&&f.hasOwnProperty(h)&&null!=f[h])if("style"===
h)for(k in g=f[h],g)g.hasOwnProperty(k)&&(c||(c={}),c[k]="");else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(va.hasOwnProperty(h)?a||(a=[]):(a=a||[]).push(h,null));for(h in d){var l=d[h];g=null!=f?f[h]:void 0;if(d.hasOwnProperty(h)&&l!==g&&(null!=l||null!=g))if("style"===h)if(g){for(k in g)!g.hasOwnProperty(k)||l&&l.hasOwnProperty(k)||(c||(c={}),c[k]="");for(k in l)l.hasOwnProperty(k)&&g[k]!==l[k]&&(c||(c={}),
c[k]=l[k])}else c||(a||(a=[]),a.push(h,c)),c=l;else"dangerouslySetInnerHTML"===h?(l=l?l.__html:void 0,g=g?g.__html:void 0,null!=l&&g!==l&&(a=a||[]).push(h,l)):"children"===h?g===l||"string"!==typeof l&&"number"!==typeof l||(a=a||[]).push(h,""+l):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(va.hasOwnProperty(h)?(null!=l&&rd(e,h),a||g===l||(a=[])):(a=a||[]).push(h,l))}c&&(a=a||[]).push("style",c);e=a;if(b.updateQueue=e)b.effectTag|=4}};
qi=function(a,b,c,d){c!==d&&(b.effectTag|=4)};function ri(a,b){switch(a.tailMode){case "hidden":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case "collapsed":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}
function si(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return L(b.type)&&Df(),null;case 3:return eh(),H(K),H(J),c=b.stateNode,c.pendingContext&&(c.context=c.pendingContext,c.pendingContext=null),null!==a&&null!==a.child||!Wh(b)||(b.effectTag|=4),oi(b),null;case 5:gh(b);c=ch(bh.current);var e=b.type;if(null!==a&&null!=b.stateNode)pi(a,b,e,d,c),a.ref!==b.ref&&(b.effectTag|=128);else{if(!d){if(null===b.stateNode)throw Error(u(166));
return null}a=ch($g.current);if(Wh(b)){d=b.stateNode;e=b.type;var f=b.memoizedProps;d[Md]=b;d[Nd]=f;switch(e){case "iframe":case "object":case "embed":F("load",d);break;case "video":case "audio":for(a=0;a<ac.length;a++)F(ac[a],d);break;case "source":F("error",d);break;case "img":case "image":case "link":F("error",d);F("load",d);break;case "form":F("reset",d);F("submit",d);break;case "details":F("toggle",d);break;case "input":Ab(d,f);F("invalid",d);rd(c,"onChange");break;case "select":d._wrapperState=
{wasMultiple:!!f.multiple};F("invalid",d);rd(c,"onChange");break;case "textarea":Jb(d,f),F("invalid",d),rd(c,"onChange")}od(e,f);a=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];"children"===g?"string"===typeof h?d.textContent!==h&&(a=["children",h]):"number"===typeof h&&d.textContent!==""+h&&(a=["children",""+h]):va.hasOwnProperty(g)&&null!=h&&rd(c,g)}switch(e){case "input":xb(d);Eb(d,f,!0);break;case "textarea":xb(d);Lb(d);break;case "select":case "option":break;default:"function"===typeof f.onClick&&
(d.onclick=sd)}c=a;b.updateQueue=c;null!==c&&(b.effectTag|=4)}else{g=9===c.nodeType?c:c.ownerDocument;a===qd&&(a=Nb(e));a===qd?"script"===e?(a=g.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):"string"===typeof d.is?a=g.createElement(e,{is:d.is}):(a=g.createElement(e),"select"===e&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,e);a[Md]=b;a[Nd]=d;ni(a,b,!1,!1);b.stateNode=a;g=pd(e,d);switch(e){case "iframe":case "object":case "embed":F("load",
a);h=d;break;case "video":case "audio":for(h=0;h<ac.length;h++)F(ac[h],a);h=d;break;case "source":F("error",a);h=d;break;case "img":case "image":case "link":F("error",a);F("load",a);h=d;break;case "form":F("reset",a);F("submit",a);h=d;break;case "details":F("toggle",a);h=d;break;case "input":Ab(a,d);h=zb(a,d);F("invalid",a);rd(c,"onChange");break;case "option":h=Gb(a,d);break;case "select":a._wrapperState={wasMultiple:!!d.multiple};h=n({},d,{value:void 0});F("invalid",a);rd(c,"onChange");break;case "textarea":Jb(a,
d);h=Ib(a,d);F("invalid",a);rd(c,"onChange");break;default:h=d}od(e,h);var k=h;for(f in k)if(k.hasOwnProperty(f)){var l=k[f];"style"===f?md(a,l):"dangerouslySetInnerHTML"===f?(l=l?l.__html:void 0,null!=l&&Qb(a,l)):"children"===f?"string"===typeof l?("textarea"!==e||""!==l)&&Rb(a,l):"number"===typeof l&&Rb(a,""+l):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(va.hasOwnProperty(f)?null!=l&&rd(c,f):null!=l&&Xa(a,f,l,g))}switch(e){case "input":xb(a);Eb(a,d,!1);
break;case "textarea":xb(a);Lb(a);break;case "option":null!=d.value&&a.setAttribute("value",""+rb(d.value));break;case "select":a.multiple=!!d.multiple;c=d.value;null!=c?Hb(a,!!d.multiple,c,!1):null!=d.defaultValue&&Hb(a,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof h.onClick&&(a.onclick=sd)}Fd(e,d)&&(b.effectTag|=4)}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)qi(a,b,a.memoizedProps,d);else{if("string"!==typeof d&&null===b.stateNode)throw Error(u(166));
c=ch(bh.current);ch($g.current);Wh(b)?(c=b.stateNode,d=b.memoizedProps,c[Md]=b,c.nodeValue!==d&&(b.effectTag|=4)):(c=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),c[Md]=b,b.stateNode=c)}return null;case 13:H(M);d=b.memoizedState;if(0!==(b.effectTag&64))return b.expirationTime=c,b;c=null!==d;d=!1;null===a?void 0!==b.memoizedProps.fallback&&Wh(b):(e=a.memoizedState,d=null!==e,c||null===e||(e=a.child.sibling,null!==e&&(f=b.firstEffect,null!==f?(b.firstEffect=e,e.nextEffect=f):(b.firstEffect=b.lastEffect=
e,e.nextEffect=null),e.effectTag=8)));if(c&&!d&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(M.current&1))S===ti&&(S=ui);else{if(S===ti||S===ui)S=vi;0!==wi&&null!==T&&(xi(T,U),yi(T,wi))}if(c||d)b.effectTag|=4;return null;case 4:return eh(),oi(b),null;case 10:return og(b),null;case 17:return L(b.type)&&Df(),null;case 19:H(M);d=b.memoizedState;if(null===d)return null;e=0!==(b.effectTag&64);f=d.rendering;if(null===f)if(e)ri(d,!1);else{if(S!==ti||null!==a&&0!==(a.effectTag&
64))for(f=b.child;null!==f;){a=hh(f);if(null!==a){b.effectTag|=64;ri(d,!1);e=a.updateQueue;null!==e&&(b.updateQueue=e,b.effectTag|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;for(d=b.child;null!==d;)e=d,f=c,e.effectTag&=2,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null,a=e.alternate,null===a?(e.childExpirationTime=0,e.expirationTime=f,e.child=null,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null):(e.childExpirationTime=a.childExpirationTime,
e.expirationTime=a.expirationTime,e.child=a.child,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,f=a.dependencies,e.dependencies=null===f?null:{expirationTime:f.expirationTime,firstContext:f.firstContext,responders:f.responders}),d=d.sibling;I(M,M.current&1|2);return b.child}f=f.sibling}}else{if(!e)if(a=hh(f),null!==a){if(b.effectTag|=64,e=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.effectTag|=4),ri(d,!0),null===d.tail&&"hidden"===d.tailMode&&!f.alternate)return b=
b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*$f()-d.renderingStartTime>d.tailExpiration&&1<c&&(b.effectTag|=64,e=!0,ri(d,!1),b.expirationTime=b.childExpirationTime=c-1);d.isBackwards?(f.sibling=b.child,b.child=f):(c=d.last,null!==c?c.sibling=f:b.child=f,d.last=f)}return null!==d.tail?(0===d.tailExpiration&&(d.tailExpiration=$f()+500),c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=$f(),c.sibling=null,b=M.current,I(M,e?b&1|2:b&1),c):null}throw Error(u(156,
b.tag));}function zi(a){switch(a.tag){case 1:L(a.type)&&Df();var b=a.effectTag;return b&4096?(a.effectTag=b&-4097|64,a):null;case 3:eh();H(K);H(J);b=a.effectTag;if(0!==(b&64))throw Error(u(285));a.effectTag=b&-4097|64;return a;case 5:return gh(a),null;case 13:return H(M),b=a.effectTag,b&4096?(a.effectTag=b&-4097|64,a):null;case 19:return H(M),null;case 4:return eh(),null;case 10:return og(a),null;default:return null}}function Ai(a,b){return{value:a,source:b,stack:qb(b)}}
var Bi="function"===typeof WeakSet?WeakSet:Set;function Ci(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=qb(c));null!==c&&pb(c.type);b=b.value;null!==a&&1===a.tag&&pb(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function Di(a,b){try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Ei(a,c)}}function Fi(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Ei(a,c)}else b.current=null}
function Gi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ig(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163));}
function Hi(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.destroy;c.destroy=void 0;void 0!==d&&d()}c=c.next}while(c!==b)}}function Ii(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}
function Ji(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:Ii(3,c);return;case 1:a=c.stateNode;if(c.effectTag&4)if(null===b)a.componentDidMount();else{var d=c.elementType===c.type?b.memoizedProps:ig(c.type,b.memoizedProps);a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}b=c.updateQueue;null!==b&&Cg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Cg(c,b,a)}return;
case 5:a=c.stateNode;null===b&&c.effectTag&4&&Fd(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Vc(c))));return;case 19:case 17:case 20:case 21:return}throw Error(u(163));}
function Ki(a,b,c){"function"===typeof Li&&Li(b);switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var d=a.next;cg(97<c?97:c,function(){var a=d;do{var c=a.destroy;if(void 0!==c){var g=b;try{c()}catch(h){Ei(g,h)}}a=a.next}while(a!==d)})}break;case 1:Fi(b);c=b.stateNode;"function"===typeof c.componentWillUnmount&&Di(b,c);break;case 5:Fi(b);break;case 4:Mi(a,b,c)}}
function Ni(a){var b=a.alternate;a.return=null;a.child=null;a.memoizedState=null;a.updateQueue=null;a.dependencies=null;a.alternate=null;a.firstEffect=null;a.lastEffect=null;a.pendingProps=null;a.memoizedProps=null;a.stateNode=null;null!==b&&Ni(b)}function Oi(a){return 5===a.tag||3===a.tag||4===a.tag}
function Pi(a){a:{for(var b=a.return;null!==b;){if(Oi(b)){var c=b;break a}b=b.return}throw Error(u(160));}b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(u(161));}c.effectTag&16&&(Rb(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Oi(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&2)continue b;
if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}d?Qi(a,c,b):Ri(a,c,b)}
function Qi(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=sd));else if(4!==d&&(a=a.child,null!==a))for(Qi(a,b,c),a=a.sibling;null!==a;)Qi(a,b,c),a=a.sibling}
function Ri(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Ri(a,b,c),a=a.sibling;null!==a;)Ri(a,b,c),a=a.sibling}
function Mi(a,b,c){for(var d=b,e=!1,f,g;;){if(!e){e=d.return;a:for(;;){if(null===e)throw Error(u(160));f=e.stateNode;switch(e.tag){case 5:g=!1;break a;case 3:f=f.containerInfo;g=!0;break a;case 4:f=f.containerInfo;g=!0;break a}e=e.return}e=!0}if(5===d.tag||6===d.tag){a:for(var h=a,k=d,l=c,m=k;;)if(Ki(h,m,l),null!==m.child&&4!==m.tag)m.child.return=m,m=m.child;else{if(m===k)break a;for(;null===m.sibling;){if(null===m.return||m.return===k)break a;m=m.return}m.sibling.return=m.return;m=m.sibling}g?(h=
f,k=d.stateNode,8===h.nodeType?h.parentNode.removeChild(k):h.removeChild(k)):f.removeChild(d.stateNode)}else if(4===d.tag){if(null!==d.child){f=d.stateNode.containerInfo;g=!0;d.child.return=d;d=d.child;continue}}else if(Ki(a,d,c),null!==d.child){d.child.return=d;d=d.child;continue}if(d===b)break;for(;null===d.sibling;){if(null===d.return||d.return===b)return;d=d.return;4===d.tag&&(e=!1)}d.sibling.return=d.return;d=d.sibling}}
function Si(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:Hi(3,b);return;case 1:return;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Nd]=d;"input"===a&&"radio"===d.type&&null!=d.name&&Bb(c,d);pd(a,e);b=pd(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];"style"===g?md(c,h):"dangerouslySetInnerHTML"===g?Qb(c,h):"children"===g?Rb(c,h):Xa(c,g,h,b)}switch(a){case "input":Cb(c,d);break;
case "textarea":Kb(c,d);break;case "select":b=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,a=d.value,null!=a?Hb(c,!!d.multiple,a,!1):b!==!!d.multiple&&(null!=d.defaultValue?Hb(c,!!d.multiple,d.defaultValue,!0):Hb(c,!!d.multiple,d.multiple?[]:"",!1))}}}return;case 6:if(null===b.stateNode)throw Error(u(162));b.stateNode.nodeValue=b.memoizedProps;return;case 3:b=b.stateNode;b.hydrate&&(b.hydrate=!1,Vc(b.containerInfo));return;case 12:return;case 13:c=b;null===b.memoizedState?
d=!1:(d=!0,c=b.child,Ti=$f());if(null!==c)a:for(a=c;;){if(5===a.tag)f=a.stateNode,d?(f=f.style,"function"===typeof f.setProperty?f.setProperty("display","none","important"):f.display="none"):(f=a.stateNode,e=a.memoizedProps.style,e=void 0!==e&&null!==e&&e.hasOwnProperty("display")?e.display:null,f.style.display=ld("display",e));else if(6===a.tag)a.stateNode.nodeValue=d?"":a.memoizedProps;else if(13===a.tag&&null!==a.memoizedState&&null===a.memoizedState.dehydrated){f=a.child.sibling;f.return=a;a=
f;continue}else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===c)break;for(;null===a.sibling;){if(null===a.return||a.return===c)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}Ui(b);return;case 19:Ui(b);return;case 17:return}throw Error(u(163));}function Ui(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Bi);b.forEach(function(b){var d=Vi.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}
var Wi="function"===typeof WeakMap?WeakMap:Map;function Xi(a,b,c){c=wg(c,null);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Yi||(Yi=!0,Zi=d);Ci(a,b)};return c}
function $i(a,b,c){c=wg(c,null);c.tag=3;var d=a.type.getDerivedStateFromError;if("function"===typeof d){var e=b.value;c.payload=function(){Ci(a,b);return d(e)}}var f=a.stateNode;null!==f&&"function"===typeof f.componentDidCatch&&(c.callback=function(){"function"!==typeof d&&(null===aj?aj=new Set([this]):aj.add(this),Ci(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:""})});return c}
var bj=Math.ceil,cj=Wa.ReactCurrentDispatcher,dj=Wa.ReactCurrentOwner,V=0,ej=8,fj=16,gj=32,ti=0,hj=1,ij=2,ui=3,vi=4,jj=5,W=V,T=null,X=null,U=0,S=ti,kj=null,lj=1073741823,mj=1073741823,nj=null,wi=0,oj=!1,Ti=0,pj=500,Y=null,Yi=!1,Zi=null,aj=null,qj=!1,rj=null,sj=90,tj=null,uj=0,vj=null,wj=0;function Gg(){return(W&(fj|gj))!==V?1073741821-($f()/10|0):0!==wj?wj:wj=1073741821-($f()/10|0)}
function Hg(a,b,c){b=b.mode;if(0===(b&2))return 1073741823;var d=ag();if(0===(b&4))return 99===d?1073741823:1073741822;if((W&fj)!==V)return U;if(null!==c)a=hg(a,c.timeoutMs|0||5E3,250);else switch(d){case 99:a=1073741823;break;case 98:a=hg(a,150,100);break;case 97:case 96:a=hg(a,5E3,250);break;case 95:a=2;break;default:throw Error(u(326));}null!==T&&a===U&&--a;return a}
function Ig(a,b){if(50<uj)throw uj=0,vj=null,Error(u(185));a=xj(a,b);if(null!==a){var c=ag();1073741823===b?(W&ej)!==V&&(W&(fj|gj))===V?yj(a):(Z(a),W===V&&gg()):Z(a);(W&4)===V||98!==c&&99!==c||(null===tj?tj=new Map([[a,b]]):(c=tj.get(a),(void 0===c||c>b)&&tj.set(a,b)))}}
function xj(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}null!==e&&(T===e&&(Bg(b),S===vi&&xi(e,U)),yi(e,b));return e}
function zj(a){var b=a.lastExpiredTime;if(0!==b)return b;b=a.firstPendingTime;if(!Aj(a,b))return b;var c=a.lastPingedTime;a=a.nextKnownPendingLevel;a=c>a?c:a;return 2>=a&&b!==a?0:a}
function Z(a){if(0!==a.lastExpiredTime)a.callbackExpirationTime=1073741823,a.callbackPriority=99,a.callbackNode=eg(yj.bind(null,a));else{var b=zj(a),c=a.callbackNode;if(0===b)null!==c&&(a.callbackNode=null,a.callbackExpirationTime=0,a.callbackPriority=90);else{var d=Gg();1073741823===b?d=99:1===b||2===b?d=95:(d=10*(1073741821-b)-10*(1073741821-d),d=0>=d?99:250>=d?98:5250>=d?97:95);if(null!==c){var e=a.callbackPriority;if(a.callbackExpirationTime===b&&e>=d)return;c!==Tf&&Kf(c)}a.callbackExpirationTime=
b;a.callbackPriority=d;b=1073741823===b?eg(yj.bind(null,a)):dg(d,Bj.bind(null,a),{timeout:10*(1073741821-b)-$f()});a.callbackNode=b}}}
function Bj(a,b){wj=0;if(b)return b=Gg(),Cj(a,b),Z(a),null;var c=zj(a);if(0!==c){b=a.callbackNode;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&c===U||Ej(a,c);if(null!==X){var d=W;W|=fj;var e=Fj();do try{Gj();break}catch(h){Hj(a,h)}while(1);ng();W=d;cj.current=e;if(S===hj)throw b=kj,Ej(a,c),xi(a,c),Z(a),b;if(null===X)switch(e=a.finishedWork=a.current.alternate,a.finishedExpirationTime=c,d=S,T=null,d){case ti:case hj:throw Error(u(345));case ij:Cj(a,2<c?2:c);break;case ui:xi(a,c);d=a.lastSuspendedTime;
c===d&&(a.nextKnownPendingLevel=Ij(e));if(1073741823===lj&&(e=Ti+pj-$f(),10<e)){if(oj){var f=a.lastPingedTime;if(0===f||f>=c){a.lastPingedTime=c;Ej(a,c);break}}f=zj(a);if(0!==f&&f!==c)break;if(0!==d&&d!==c){a.lastPingedTime=d;break}a.timeoutHandle=Hd(Jj.bind(null,a),e);break}Jj(a);break;case vi:xi(a,c);d=a.lastSuspendedTime;c===d&&(a.nextKnownPendingLevel=Ij(e));if(oj&&(e=a.lastPingedTime,0===e||e>=c)){a.lastPingedTime=c;Ej(a,c);break}e=zj(a);if(0!==e&&e!==c)break;if(0!==d&&d!==c){a.lastPingedTime=
d;break}1073741823!==mj?d=10*(1073741821-mj)-$f():1073741823===lj?d=0:(d=10*(1073741821-lj)-5E3,e=$f(),c=10*(1073741821-c)-e,d=e-d,0>d&&(d=0),d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*bj(d/1960))-d,c<d&&(d=c));if(10<d){a.timeoutHandle=Hd(Jj.bind(null,a),d);break}Jj(a);break;case jj:if(1073741823!==lj&&null!==nj){f=lj;var g=nj;d=g.busyMinDurationMs|0;0>=d?d=0:(e=g.busyDelayMs|0,f=$f()-(10*(1073741821-f)-(g.timeoutMs|0||5E3)),d=f<=e?0:e+d-f);if(10<d){xi(a,c);a.timeoutHandle=
Hd(Jj.bind(null,a),d);break}}Jj(a);break;default:throw Error(u(329));}Z(a);if(a.callbackNode===b)return Bj.bind(null,a)}}return null}
function yj(a){var b=a.lastExpiredTime;b=0!==b?b:1073741823;if((W&(fj|gj))!==V)throw Error(u(327));Dj();a===T&&b===U||Ej(a,b);if(null!==X){var c=W;W|=fj;var d=Fj();do try{Kj();break}catch(e){Hj(a,e)}while(1);ng();W=c;cj.current=d;if(S===hj)throw c=kj,Ej(a,b),xi(a,b),Z(a),c;if(null!==X)throw Error(u(261));a.finishedWork=a.current.alternate;a.finishedExpirationTime=b;T=null;Jj(a);Z(a)}return null}function Lj(){if(null!==tj){var a=tj;tj=null;a.forEach(function(a,c){Cj(c,a);Z(c)});gg()}}
function Mj(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,W===V&&gg()}}function Nj(a,b){var c=W;W&=-2;W|=ej;try{return a(b)}finally{W=c,W===V&&gg()}}
function Ej(a,b){a.finishedWork=null;a.finishedExpirationTime=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Id(c));if(null!==X)for(c=X.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Df();break;case 3:eh();H(K);H(J);break;case 5:gh(d);break;case 4:eh();break;case 13:H(M);break;case 19:H(M);break;case 10:og(d)}c=c.return}T=a;X=Sg(a.current,null);U=b;S=ti;kj=null;mj=lj=1073741823;nj=null;wi=0;oj=!1}
function Hj(a,b){do{try{ng();jh.current=sh;if(mh)for(var c=N.memoizedState;null!==c;){var d=c.queue;null!==d&&(d.pending=null);c=c.next}lh=0;P=O=N=null;mh=!1;if(null===X||null===X.return)return S=hj,kj=b,X=null;a:{var e=a,f=X.return,g=X,h=b;b=U;g.effectTag|=2048;g.firstEffect=g.lastEffect=null;if(null!==h&&"object"===typeof h&&"function"===typeof h.then){var k=h;if(0===(g.mode&2)){var l=g.alternate;l?(g.updateQueue=l.updateQueue,g.memoizedState=l.memoizedState,g.expirationTime=l.expirationTime):(g.updateQueue=
null,g.memoizedState=null)}var m=0!==(M.current&1),p=f;do{var x;if(x=13===p.tag){var z=p.memoizedState;if(null!==z)x=null!==z.dehydrated?!0:!1;else{var ca=p.memoizedProps;x=void 0===ca.fallback?!1:!0!==ca.unstable_avoidThisFallback?!0:m?!1:!0}}if(x){var D=p.updateQueue;if(null===D){var t=new Set;t.add(k);p.updateQueue=t}else D.add(k);if(0===(p.mode&2)){p.effectTag|=64;g.effectTag&=-2981;if(1===g.tag)if(null===g.alternate)g.tag=17;else{var y=wg(1073741823,null);y.tag=2;xg(g,y)}g.expirationTime=1073741823;
break a}h=void 0;g=b;var A=e.pingCache;null===A?(A=e.pingCache=new Wi,h=new Set,A.set(k,h)):(h=A.get(k),void 0===h&&(h=new Set,A.set(k,h)));if(!h.has(g)){h.add(g);var q=Oj.bind(null,e,k,g);k.then(q,q)}p.effectTag|=4096;p.expirationTime=b;break a}p=p.return}while(null!==p);h=Error((pb(g.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+qb(g))}S!==
jj&&(S=ij);h=Ai(h,g);p=f;do{switch(p.tag){case 3:k=h;p.effectTag|=4096;p.expirationTime=b;var B=Xi(p,k,b);yg(p,B);break a;case 1:k=h;var w=p.type,ub=p.stateNode;if(0===(p.effectTag&64)&&("function"===typeof w.getDerivedStateFromError||null!==ub&&"function"===typeof ub.componentDidCatch&&(null===aj||!aj.has(ub)))){p.effectTag|=4096;p.expirationTime=b;var vb=$i(p,k,b);yg(p,vb);break a}}p=p.return}while(null!==p)}X=Pj(X)}catch(Xc){b=Xc;continue}break}while(1)}
function Fj(){var a=cj.current;cj.current=sh;return null===a?sh:a}function Ag(a,b){a<lj&&2<a&&(lj=a);null!==b&&a<mj&&2<a&&(mj=a,nj=b)}function Bg(a){a>wi&&(wi=a)}function Kj(){for(;null!==X;)X=Qj(X)}function Gj(){for(;null!==X&&!Uf();)X=Qj(X)}function Qj(a){var b=Rj(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=Pj(a));dj.current=null;return b}
function Pj(a){X=a;do{var b=X.alternate;a=X.return;if(0===(X.effectTag&2048)){b=si(b,X,U);if(1===U||1!==X.childExpirationTime){for(var c=0,d=X.child;null!==d;){var e=d.expirationTime,f=d.childExpirationTime;e>c&&(c=e);f>c&&(c=f);d=d.sibling}X.childExpirationTime=c}if(null!==b)return b;null!==a&&0===(a.effectTag&2048)&&(null===a.firstEffect&&(a.firstEffect=X.firstEffect),null!==X.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=X.firstEffect),a.lastEffect=X.lastEffect),1<X.effectTag&&(null!==
a.lastEffect?a.lastEffect.nextEffect=X:a.firstEffect=X,a.lastEffect=X))}else{b=zi(X);if(null!==b)return b.effectTag&=2047,b;null!==a&&(a.firstEffect=a.lastEffect=null,a.effectTag|=2048)}b=X.sibling;if(null!==b)return b;X=a}while(null!==X);S===ti&&(S=jj);return null}function Ij(a){var b=a.expirationTime;a=a.childExpirationTime;return b>a?b:a}function Jj(a){var b=ag();cg(99,Sj.bind(null,a,b));return null}
function Sj(a,b){do Dj();while(null!==rj);if((W&(fj|gj))!==V)throw Error(u(327));var c=a.finishedWork,d=a.finishedExpirationTime;if(null===c)return null;a.finishedWork=null;a.finishedExpirationTime=0;if(c===a.current)throw Error(u(177));a.callbackNode=null;a.callbackExpirationTime=0;a.callbackPriority=90;a.nextKnownPendingLevel=0;var e=Ij(c);a.firstPendingTime=e;d<=a.lastSuspendedTime?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:d<=a.firstSuspendedTime&&(a.firstSuspendedTime=
d-1);d<=a.lastPingedTime&&(a.lastPingedTime=0);d<=a.lastExpiredTime&&(a.lastExpiredTime=0);a===T&&(X=T=null,U=0);1<c.effectTag?null!==c.lastEffect?(c.lastEffect.nextEffect=c,e=c.firstEffect):e=c:e=c.firstEffect;if(null!==e){var f=W;W|=gj;dj.current=null;Dd=fd;var g=xd();if(yd(g)){if("selectionStart"in g)var h={start:g.selectionStart,end:g.selectionEnd};else a:{h=(h=g.ownerDocument)&&h.defaultView||window;var k=h.getSelection&&h.getSelection();if(k&&0!==k.rangeCount){h=k.anchorNode;var l=k.anchorOffset,
m=k.focusNode;k=k.focusOffset;try{h.nodeType,m.nodeType}catch(wb){h=null;break a}var p=0,x=-1,z=-1,ca=0,D=0,t=g,y=null;b:for(;;){for(var A;;){t!==h||0!==l&&3!==t.nodeType||(x=p+l);t!==m||0!==k&&3!==t.nodeType||(z=p+k);3===t.nodeType&&(p+=t.nodeValue.length);if(null===(A=t.firstChild))break;y=t;t=A}for(;;){if(t===g)break b;y===h&&++ca===l&&(x=p);y===m&&++D===k&&(z=p);if(null!==(A=t.nextSibling))break;t=y;y=t.parentNode}t=A}h=-1===x||-1===z?null:{start:x,end:z}}else h=null}h=h||{start:0,end:0}}else h=
null;Ed={activeElementDetached:null,focusedElem:g,selectionRange:h};fd=!1;Y=e;do try{Tj()}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=e;do try{for(g=a,h=b;null!==Y;){var q=Y.effectTag;q&16&&Rb(Y.stateNode,"");if(q&128){var B=Y.alternate;if(null!==B){var w=B.ref;null!==w&&("function"===typeof w?w(null):w.current=null)}}switch(q&1038){case 2:Pi(Y);Y.effectTag&=-3;break;case 6:Pi(Y);Y.effectTag&=-3;Si(Y.alternate,Y);break;case 1024:Y.effectTag&=-1025;break;case 1028:Y.effectTag&=
-1025;Si(Y.alternate,Y);break;case 4:Si(Y.alternate,Y);break;case 8:l=Y,Mi(g,l,h),Ni(l)}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);w=Ed;B=xd();q=w.focusedElem;h=w.selectionRange;if(B!==q&&q&&q.ownerDocument&&wd(q.ownerDocument.documentElement,q)){null!==h&&yd(q)&&(B=h.start,w=h.end,void 0===w&&(w=B),"selectionStart"in q?(q.selectionStart=B,q.selectionEnd=Math.min(w,q.value.length)):(w=(B=q.ownerDocument||document)&&B.defaultView||window,w.getSelection&&
(w=w.getSelection(),l=q.textContent.length,g=Math.min(h.start,l),h=void 0===h.end?g:Math.min(h.end,l),!w.extend&&g>h&&(l=h,h=g,g=l),l=vd(q,g),m=vd(q,h),l&&m&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==m.node||w.focusOffset!==m.offset)&&(B=B.createRange(),B.setStart(l.node,l.offset),w.removeAllRanges(),g>h?(w.addRange(B),w.extend(m.node,m.offset)):(B.setEnd(m.node,m.offset),w.addRange(B))))));B=[];for(w=q;w=w.parentNode;)1===w.nodeType&&B.push({element:w,left:w.scrollLeft,
top:w.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<B.length;q++)w=B[q],w.element.scrollLeft=w.left,w.element.scrollTop=w.top}fd=!!Dd;Ed=Dd=null;a.current=c;Y=e;do try{for(q=a;null!==Y;){var ub=Y.effectTag;ub&36&&Ji(q,Y.alternate,Y);if(ub&128){B=void 0;var vb=Y.ref;if(null!==vb){var Xc=Y.stateNode;switch(Y.tag){case 5:B=Xc;break;default:B=Xc}"function"===typeof vb?vb(B):vb.current=B}}Y=Y.nextEffect}}catch(wb){if(null===Y)throw Error(u(330));Ei(Y,wb);Y=Y.nextEffect}while(null!==Y);Y=
null;Vf();W=f}else a.current=c;if(qj)qj=!1,rj=a,sj=b;else for(Y=e;null!==Y;)b=Y.nextEffect,Y.nextEffect=null,Y=b;b=a.firstPendingTime;0===b&&(aj=null);1073741823===b?a===vj?uj++:(uj=0,vj=a):uj=0;"function"===typeof Uj&&Uj(c.stateNode,d);Z(a);if(Yi)throw Yi=!1,a=Zi,Zi=null,a;if((W&ej)!==V)return null;gg();return null}function Tj(){for(;null!==Y;){var a=Y.effectTag;0!==(a&256)&&Gi(Y.alternate,Y);0===(a&512)||qj||(qj=!0,dg(97,function(){Dj();return null}));Y=Y.nextEffect}}
function Dj(){if(90!==sj){var a=97<sj?97:sj;sj=90;return cg(a,Vj)}}function Vj(){if(null===rj)return!1;var a=rj;rj=null;if((W&(fj|gj))!==V)throw Error(u(331));var b=W;W|=gj;for(a=a.current.firstEffect;null!==a;){try{var c=a;if(0!==(c.effectTag&512))switch(c.tag){case 0:case 11:case 15:case 22:Hi(5,c),Ii(5,c)}}catch(d){if(null===a)throw Error(u(330));Ei(a,d)}c=a.nextEffect;a.nextEffect=null;a=c}W=b;gg();return!0}
function Wj(a,b,c){b=Ai(c,b);b=Xi(a,b,1073741823);xg(a,b);a=xj(a,1073741823);null!==a&&Z(a)}function Ei(a,b){if(3===a.tag)Wj(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){Wj(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromError||"function"===typeof d.componentDidCatch&&(null===aj||!aj.has(d))){a=Ai(b,a);a=$i(c,a,1073741823);xg(c,a);c=xj(c,1073741823);null!==c&&Z(c);break}}c=c.return}}
function Oj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);T===a&&U===c?S===vi||S===ui&&1073741823===lj&&$f()-Ti<pj?Ej(a,U):oj=!0:Aj(a,c)&&(b=a.lastPingedTime,0!==b&&b<c||(a.lastPingedTime=c,Z(a)))}function Vi(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=Gg(),b=Hg(b,a,null));a=xj(a,b);null!==a&&Z(a)}var Rj;
Rj=function(a,b,c){var d=b.expirationTime;if(null!==a){var e=b.pendingProps;if(a.memoizedProps!==e||K.current)rg=!0;else{if(d<c){rg=!1;switch(b.tag){case 3:hi(b);Xh();break;case 5:fh(b);if(b.mode&4&&1!==c&&e.hidden)return b.expirationTime=b.childExpirationTime=1,null;break;case 1:L(b.type)&&Gf(b);break;case 4:dh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;e=b.type._context;I(jg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;
if(0!==d&&d>=c)return ji(a,b,c);I(M,M.current&1);b=$h(a,b,c);return null!==b?b.sibling:null}I(M,M.current&1);break;case 19:d=b.childExpirationTime>=c;if(0!==(a.effectTag&64)){if(d)return mi(a,b,c);b.effectTag|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null);I(M,M.current);if(!d)return null}return $h(a,b,c)}rg=!1}}else rg=!1;b.expirationTime=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;e=Cf(b,J.current);qg(b,c);e=oh(null,
b,d,a,e,c);b.effectTag|=1;if("object"===typeof e&&null!==e&&"function"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(L(d)){var f=!0;Gf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;ug(b);var g=d.getDerivedStateFromProps;"function"===typeof g&&Fg(b,d,g,a);e.updater=Jg;b.stateNode=e;e._reactInternalFiber=b;Ng(b,d,a,c);b=gi(null,b,d,!0,f,c)}else b.tag=0,R(null,b,e,c),b=b.child;return b;case 16:a:{e=b.elementType;null!==a&&(a.alternate=
null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;ob(e);if(1!==e._status)throw e._result;e=e._result;b.type=e;f=b.tag=Xj(e);a=ig(e,a);switch(f){case 0:b=di(null,b,e,a,c);break a;case 1:b=fi(null,b,e,a,c);break a;case 11:b=Zh(null,b,e,a,c);break a;case 14:b=ai(null,b,e,ig(e.type,a),d,c);break a}throw Error(u(306,e,""));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),di(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),fi(a,b,d,e,c);
case 3:hi(b);d=b.updateQueue;if(null===a||null===d)throw Error(u(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;vg(a,b);zg(b,d,null,c);d=b.memoizedState.element;if(d===e)Xh(),b=$h(a,b,c);else{if(e=b.stateNode.hydrate)Ph=Jd(b.stateNode.containerInfo.firstChild),Oh=b,e=Qh=!0;if(e)for(c=Yg(b,null,d,c),b.child=c;c;)c.effectTag=c.effectTag&-3|1024,c=c.sibling;else R(a,b,d,c),Xh();b=b.child}return b;case 5:return fh(b),null===a&&Uh(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:
null,g=e.children,Gd(d,e)?g=null:null!==f&&Gd(d,f)&&(b.effectTag|=16),ei(a,b),b.mode&4&&1!==c&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(R(a,b,g,c),b=b.child),b;case 6:return null===a&&Uh(b),null;case 13:return ji(a,b,c);case 4:return dh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Xg(b,null,d,c):R(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),Zh(a,b,d,e,c);case 7:return R(a,b,b.pendingProps,c),b.child;case 8:return R(a,
b,b.pendingProps.children,c),b.child;case 12:return R(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(jg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=$e(h,f)?0:("function"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!K.current){b=$h(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==
k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=wg(c,null),l.tag=2,xg(h,l));h.expirationTime<c&&(h.expirationTime=c);l=h.alternate;null!==l&&l.expirationTime<c&&(l.expirationTime=c);pg(h.return,c);k.expirationTime<c&&(k.expirationTime=c);break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=
g}R(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,qg(b,c),e=sg(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,R(a,b,d,c),b.child;case 14:return e=b.type,f=ig(e,b.pendingProps),f=ig(e.type,f),ai(a,b,e,f,d,c);case 15:return ci(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ig(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,L(d)?(a=!0,Gf(b)):a=!1,qg(b,c),Lg(b,d,e),Ng(b,d,e,c),gi(null,
b,d,!0,a,c);case 19:return mi(a,b,c)}throw Error(u(156,b.tag));};var Uj=null,Li=null;function Yj(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Uj=function(a){try{b.onCommitFiberRoot(c,a,void 0,64===(a.current.effectTag&64))}catch(e){}};Li=function(a){try{b.onCommitFiberUnmount(c,a)}catch(e){}}}catch(d){}return!0}
function Zj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Sh(a,b,c,d){return new Zj(a,b,c,d)}
function bi(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Xj(a){if("function"===typeof a)return bi(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===gb)return 11;if(a===jb)return 14}return 2}
function Sg(a,b){var c=a.alternate;null===c?(c=Sh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{expirationTime:b.expirationTime,
firstContext:b.firstContext,responders:b.responders};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}
function Ug(a,b,c,d,e,f){var g=2;d=a;if("function"===typeof a)bi(a)&&(g=1);else if("string"===typeof a)g=5;else a:switch(a){case ab:return Wg(c.children,e,f,b);case fb:g=8;e|=7;break;case bb:g=8;e|=1;break;case cb:return a=Sh(12,c,b,e|8),a.elementType=cb,a.type=cb,a.expirationTime=f,a;case hb:return a=Sh(13,c,b,e),a.type=hb,a.elementType=hb,a.expirationTime=f,a;case ib:return a=Sh(19,c,b,e),a.elementType=ib,a.expirationTime=f,a;default:if("object"===typeof a&&null!==a)switch(a.$$typeof){case db:g=
10;break a;case eb:g=9;break a;case gb:g=11;break a;case jb:g=14;break a;case kb:g=16;d=null;break a;case lb:g=22;break a}throw Error(u(130,null==a?a:typeof a,""));}b=Sh(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Wg(a,b,c,d){a=Sh(7,a,d,b);a.expirationTime=c;return a}function Tg(a,b,c){a=Sh(6,a,null,b);a.expirationTime=c;return a}
function Vg(a,b,c){b=Sh(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
function ak(a,b,c){this.tag=b;this.current=null;this.containerInfo=a;this.pingCache=this.pendingChildren=null;this.finishedExpirationTime=0;this.finishedWork=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=90;this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}
function Aj(a,b){var c=a.firstSuspendedTime;a=a.lastSuspendedTime;return 0!==c&&c>=b&&a<=b}function xi(a,b){var c=a.firstSuspendedTime,d=a.lastSuspendedTime;c<b&&(a.firstSuspendedTime=b);if(d>b||0===c)a.lastSuspendedTime=b;b<=a.lastPingedTime&&(a.lastPingedTime=0);b<=a.lastExpiredTime&&(a.lastExpiredTime=0)}
function yi(a,b){b>a.firstPendingTime&&(a.firstPendingTime=b);var c=a.firstSuspendedTime;0!==c&&(b>=c?a.firstSuspendedTime=a.lastSuspendedTime=a.nextKnownPendingLevel=0:b>=a.lastSuspendedTime&&(a.lastSuspendedTime=b+1),b>a.nextKnownPendingLevel&&(a.nextKnownPendingLevel=b))}function Cj(a,b){var c=a.lastExpiredTime;if(0===c||c>b)a.lastExpiredTime=b}
function bk(a,b,c,d){var e=b.current,f=Gg(),g=Dg.suspense;f=Hg(f,e,g);a:if(c){c=c._reactInternalFiber;b:{if(dc(c)!==c||1!==c.tag)throw Error(u(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(L(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(u(171));}if(1===c.tag){var k=c.type;if(L(k)){c=Ff(c,k,h);break a}}c=h}else c=Af;null===b.context?b.context=c:b.pendingContext=c;b=wg(f,g);b.payload={element:a};d=void 0===
d?null:d;null!==d&&(b.callback=d);xg(e,b);Ig(e,f);return f}function ck(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function dk(a,b){a=a.memoizedState;null!==a&&null!==a.dehydrated&&a.retryTime<b&&(a.retryTime=b)}function ek(a,b){dk(a,b);(a=a.alternate)&&dk(a,b)}
function fk(a,b,c){c=null!=c&&!0===c.hydrate;var d=new ak(a,b,c),e=Sh(3,null,null,2===b?7:1===b?3:0);d.current=e;e.stateNode=d;ug(e);a[Od]=d.current;c&&0!==b&&Jc(a,9===a.nodeType?a:a.ownerDocument);this._internalRoot=d}fk.prototype.render=function(a){bk(a,this._internalRoot,null,null)};fk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;bk(null,a,null,function(){b[Od]=null})};
function gk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}function hk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new fk(a,0,b?{hydrate:!0}:void 0)}
function ik(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if("function"===typeof e){var h=e;e=function(){var a=ck(g);h.call(a)}}bk(b,g,a,e)}else{f=c._reactRootContainer=hk(c,d);g=f._internalRoot;if("function"===typeof e){var k=e;e=function(){var a=ck(g);k.call(a)}}Nj(function(){bk(b,g,a,e)})}return ck(g)}function jk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:$a,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}
wc=function(a){if(13===a.tag){var b=hg(Gg(),150,100);Ig(a,b);ek(a,b)}};xc=function(a){13===a.tag&&(Ig(a,3),ek(a,3))};yc=function(a){if(13===a.tag){var b=Gg();b=Hg(b,a,null);Ig(a,b);ek(a,b)}};
za=function(a,b,c){switch(b){case "input":Cb(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Qd(d);if(!e)throw Error(u(90));yb(d);Cb(d,e)}}}break;case "textarea":Kb(a,c);break;case "select":b=c.value,null!=b&&Hb(a,!!c.multiple,b,!1)}};Fa=Mj;
Ga=function(a,b,c,d,e){var f=W;W|=4;try{return cg(98,a.bind(null,b,c,d,e))}finally{W=f,W===V&&gg()}};Ha=function(){(W&(1|fj|gj))===V&&(Lj(),Dj())};Ia=function(a,b){var c=W;W|=2;try{return a(b)}finally{W=c,W===V&&gg()}};function kk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gk(b))throw Error(u(200));return jk(a,b,null,c)}var lk={Events:[Nc,Pd,Qd,xa,ta,Xd,function(a){jc(a,Wd)},Da,Ea,id,mc,Dj,{current:!1}]};
(function(a){var b=a.findFiberByHostInstance;return Yj(n({},a,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Wa.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hc(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))})({findFiberByHostInstance:tc,bundleType:0,version:"16.14.0",
rendererPackageName:"react-dom"});exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lk;exports.createPortal=kk;exports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(void 0===b){if("function"===typeof a.render)throw Error(u(188));throw Error(u(268,Object.keys(a)));}a=hc(b);a=null===a?null:a.stateNode;return a};
exports.flushSync=function(a,b){if((W&(fj|gj))!==V)throw Error(u(187));var c=W;W|=1;try{return cg(99,a.bind(null,b))}finally{W=c,gg()}};exports.hydrate=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!0,c)};exports.render=function(a,b,c){if(!gk(b))throw Error(u(200));return ik(null,a,b,!1,c)};
exports.unmountComponentAtNode=function(a){if(!gk(a))throw Error(u(40));return a._reactRootContainer?(Nj(function(){ik(null,null,a,!1,function(){a._reactRootContainer=null;a[Od]=null})}),!0):!1};exports.unstable_batchedUpdates=Mj;exports.unstable_createPortal=function(a,b){return kk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};
exports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!gk(c))throw Error(u(200));if(null==a||void 0===a._reactInternalFiber)throw Error(u(38));return ik(a,b,c,!1,d)};exports.version="16.14.0";

},{"react":"HdMw","object-assign":"YOwE","scheduler":"IGIl"}],"X9zx":[function(require,module,exports) {
'use strict';

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if ("production" !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if ("production" === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = require('./cjs/react-dom.production.min.js');
} else {
  module.exports = require('./cjs/react-dom.development.js');
}
},{"./cjs/react-dom.production.min.js":"jF7N"}],"wi82":[function(require,module,exports) {
/** @license React v16.14.0
 * react-dom-server.browser.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

'use strict';var k=require("object-assign"),l=require("react");function q(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}
var t="function"===typeof Symbol&&Symbol.for,aa=t?Symbol.for("react.portal"):60106,u=t?Symbol.for("react.fragment"):60107,ba=t?Symbol.for("react.strict_mode"):60108,ca=t?Symbol.for("react.profiler"):60114,v=t?Symbol.for("react.provider"):60109,da=t?Symbol.for("react.context"):60110,ea=t?Symbol.for("react.concurrent_mode"):60111,fa=t?Symbol.for("react.forward_ref"):60112,B=t?Symbol.for("react.suspense"):60113,ha=t?Symbol.for("react.suspense_list"):60120,ia=t?Symbol.for("react.memo"):60115,ja=t?Symbol.for("react.lazy"):
60116,ka=t?Symbol.for("react.block"):60121,la=t?Symbol.for("react.fundamental"):60117,ma=t?Symbol.for("react.scope"):60119;function na(a){if(-1===a._status){a._status=0;var b=a._ctor;b=b();a._result=b;b.then(function(c){0===a._status&&(c=c.default,a._status=1,a._result=c)},function(c){0===a._status&&(a._status=2,a._result=c)})}}
function C(a){if(null==a)return null;if("function"===typeof a)return a.displayName||a.name||null;if("string"===typeof a)return a;switch(a){case u:return"Fragment";case aa:return"Portal";case ca:return"Profiler";case ba:return"StrictMode";case B:return"Suspense";case ha:return"SuspenseList"}if("object"===typeof a)switch(a.$$typeof){case da:return"Context.Consumer";case v:return"Context.Provider";case fa:var b=a.render;b=b.displayName||b.name||"";return a.displayName||(""!==b?"ForwardRef("+b+")":"ForwardRef");
case ia:return C(a.type);case ka:return C(a.render);case ja:if(a=1===a._status?a._result:null)return C(a)}return null}var D=l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;D.hasOwnProperty("ReactCurrentDispatcher")||(D.ReactCurrentDispatcher={current:null});D.hasOwnProperty("ReactCurrentBatchConfig")||(D.ReactCurrentBatchConfig={suspense:null});var oa={};function E(a,b){for(var c=a._threadCount|0;c<=b;c++)a[c]=a._currentValue2,a._threadCount=c+1}
function pa(a,b,c,d){if(d&&(d=a.contextType,"object"===typeof d&&null!==d))return E(d,c),d[c];if(a=a.contextTypes){c={};for(var f in a)c[f]=b[f];b=c}else b=oa;return b}for(var F=new Uint16Array(16),H=0;15>H;H++)F[H]=H+1;F[15]=0;
var qa=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ra=Object.prototype.hasOwnProperty,sa={},ta={};
function ua(a){if(ra.call(ta,a))return!0;if(ra.call(sa,a))return!1;if(qa.test(a))return ta[a]=!0;sa[a]=!0;return!1}function va(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
function wa(a,b,c,d){if(null===b||"undefined"===typeof b||va(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function J(a,b,c,d,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=f;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=g}var K={};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){K[a]=new J(a,0,!1,a,null,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];K[b]=new J(b,1,!1,a[1],null,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){K[a]=new J(a,2,!1,a.toLowerCase(),null,!1)});
["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){K[a]=new J(a,2,!1,a,null,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){K[a]=new J(a,3,!1,a.toLowerCase(),null,!1)});
["checked","multiple","muted","selected"].forEach(function(a){K[a]=new J(a,3,!0,a,null,!1)});["capture","download"].forEach(function(a){K[a]=new J(a,4,!1,a,null,!1)});["cols","rows","size","span"].forEach(function(a){K[a]=new J(a,6,!1,a,null,!1)});["rowSpan","start"].forEach(function(a){K[a]=new J(a,5,!1,a.toLowerCase(),null,!1)});var L=/[\-:]([a-z])/g;function M(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(L,
M);K[b]=new J(b,1,!1,a,null,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(L,M);K[b]=new J(b,1,!1,a,"http://www.w3.org/1999/xlink",!1)});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(L,M);K[b]=new J(b,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1)});["tabIndex","crossOrigin"].forEach(function(a){K[a]=new J(a,1,!1,a.toLowerCase(),null,!1)});
K.xlinkHref=new J("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0);["src","href","action","formAction"].forEach(function(a){K[a]=new J(a,1,!1,a.toLowerCase(),null,!0)});var xa=/["'&<>]/;
function N(a){if("boolean"===typeof a||"number"===typeof a)return""+a;a=""+a;var b=xa.exec(a);if(b){var c="",d,f=0;for(d=b.index;d<a.length;d++){switch(a.charCodeAt(d)){case 34:b="&quot;";break;case 38:b="&amp;";break;case 39:b="&#x27;";break;case 60:b="&lt;";break;case 62:b="&gt;";break;default:continue}f!==d&&(c+=a.substring(f,d));f=d+1;c+=b}a=f!==d?c+a.substring(f,d):c}return a}
function ya(a,b){var c=K.hasOwnProperty(a)?K[a]:null;var d;if(d="style"!==a)d=null!==c?0===c.type:!(2<a.length)||"o"!==a[0]&&"O"!==a[0]||"n"!==a[1]&&"N"!==a[1]?!1:!0;if(d||wa(a,b,c,!1))return"";if(null!==c){a=c.attributeName;d=c.type;if(3===d||4===d&&!0===b)return a+'=""';c.sanitizeURL&&(b=""+b);return a+'="'+(N(b)+'"')}return ua(a)?a+'="'+(N(b)+'"'):""}function za(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}
var Aa="function"===typeof Object.is?Object.is:za,O=null,P=null,Q=null,R=!1,S=!1,U=null,V=0;function W(){if(null===O)throw Error(q(321));return O}function Ba(){if(0<V)throw Error(q(312));return{memoizedState:null,queue:null,next:null}}function Ca(){null===Q?null===P?(R=!1,P=Q=Ba()):(R=!0,Q=P):null===Q.next?(R=!1,Q=Q.next=Ba()):(R=!0,Q=Q.next);return Q}function Da(a,b,c,d){for(;S;)S=!1,V+=1,Q=null,c=a(b,d);P=O=null;V=0;Q=U=null;return c}function Ea(a,b){return"function"===typeof b?b(a):b}
function Fa(a,b,c){O=W();Q=Ca();if(R){var d=Q.queue;b=d.dispatch;if(null!==U&&(c=U.get(d),void 0!==c)){U.delete(d);d=Q.memoizedState;do d=a(d,c.action),c=c.next;while(null!==c);Q.memoizedState=d;return[d,b]}return[Q.memoizedState,b]}a=a===Ea?"function"===typeof b?b():b:void 0!==c?c(b):b;Q.memoizedState=a;a=Q.queue={last:null,dispatch:null};a=a.dispatch=Ga.bind(null,O,a);return[Q.memoizedState,a]}
function Ga(a,b,c){if(!(25>V))throw Error(q(301));if(a===O)if(S=!0,a={action:c,next:null},null===U&&(U=new Map),c=U.get(b),void 0===c)U.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}}function Ha(){}
var X=0,Ia={readContext:function(a){var b=X;E(a,b);return a[b]},useContext:function(a){W();var b=X;E(a,b);return a[b]},useMemo:function(a,b){O=W();Q=Ca();b=void 0===b?null:b;if(null!==Q){var c=Q.memoizedState;if(null!==c&&null!==b){a:{var d=c[1];if(null===d)d=!1;else{for(var f=0;f<d.length&&f<b.length;f++)if(!Aa(b[f],d[f])){d=!1;break a}d=!0}}if(d)return c[0]}}a=a();Q.memoizedState=[a,b];return a},useReducer:Fa,useRef:function(a){O=W();Q=Ca();var b=Q.memoizedState;return null===b?(a={current:a},Q.memoizedState=
a):b},useState:function(a){return Fa(Ea,a)},useLayoutEffect:function(){},useCallback:function(a){return a},useImperativeHandle:Ha,useEffect:Ha,useDebugValue:Ha,useResponder:function(a,b){return{props:b,responder:a}},useDeferredValue:function(a){W();return a},useTransition:function(){W();return[function(a){a()},!1]}},Ja={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Ka(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}
var La={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},Ma=k({menuitem:!0},La),Y={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,
gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Na=["Webkit","ms","Moz","O"];Object.keys(Y).forEach(function(a){Na.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Y[b]=Y[a]})});
var Oa=/([A-Z])/g,Pa=/^ms-/,Z=l.Children.toArray,Qa=D.ReactCurrentDispatcher,Ra={listing:!0,pre:!0,textarea:!0},Sa=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,Ta={},Ua={};function Va(a){if(void 0===a||null===a)return a;var b="";l.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}var Wa=Object.prototype.hasOwnProperty,Xa={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null,suppressHydrationWarning:null};function Ya(a,b){if(void 0===a)throw Error(q(152,C(b)||"Component"));}
function Za(a,b,c){function d(d,g){var e=g.prototype&&g.prototype.isReactComponent,f=pa(g,b,c,e),x=[],h=!1,m={isMounted:function(){return!1},enqueueForceUpdate:function(){if(null===x)return null},enqueueReplaceState:function(a,c){h=!0;x=[c]},enqueueSetState:function(a,c){if(null===x)return null;x.push(c)}};if(e){if(e=new g(d.props,f,m),"function"===typeof g.getDerivedStateFromProps){var w=g.getDerivedStateFromProps.call(null,d.props,e.state);null!=w&&(e.state=k({},e.state,w))}}else if(O={},e=g(d.props,
f,m),e=Da(g,d.props,e,f),null==e||null==e.render){a=e;Ya(a,g);return}e.props=d.props;e.context=f;e.updater=m;m=e.state;void 0===m&&(e.state=m=null);if("function"===typeof e.UNSAFE_componentWillMount||"function"===typeof e.componentWillMount)if("function"===typeof e.componentWillMount&&"function"!==typeof g.getDerivedStateFromProps&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&"function"!==typeof g.getDerivedStateFromProps&&e.UNSAFE_componentWillMount(),x.length){m=x;var r=
h;x=null;h=!1;if(r&&1===m.length)e.state=m[0];else{w=r?m[0]:e.state;var y=!0;for(r=r?1:0;r<m.length;r++){var p=m[r];p="function"===typeof p?p.call(e,w,d.props,f):p;null!=p&&(y?(y=!1,w=k({},w,p)):k(w,p))}e.state=w}}else x=null;a=e.render();Ya(a,g);if("function"===typeof e.getChildContext&&(d=g.childContextTypes,"object"===typeof d)){var A=e.getChildContext();for(var T in A)if(!(T in d))throw Error(q(108,C(g)||"Unknown",T));}A&&(b=k({},b,A))}for(;l.isValidElement(a);){var f=a,g=f.type;if("function"!==
typeof g)break;d(f,g)}return{child:a,context:b}}
var $a=function(){function a(a,b){l.isValidElement(a)?a.type!==u?a=[a]:(a=a.props.children,a=l.isValidElement(a)?[a]:Z(a)):a=Z(a);a={type:null,domNamespace:Ja.html,children:a,childIndex:0,context:oa,footer:""};var c=F[0];if(0===c){var g=F;c=g.length;var d=2*c;if(!(65536>=d))throw Error(q(304));var h=new Uint16Array(d);h.set(g);F=h;F[0]=c+1;for(g=c;g<d-1;g++)F[g]=g+1;F[d-1]=0}else F[0]=F[c];this.threadID=c;this.stack=[a];this.exhausted=!1;this.currentSelectValue=null;this.previousWasTextNode=!1;this.makeStaticMarkup=
b;this.suspenseDepth=0;this.contextIndex=-1;this.contextStack=[];this.contextValueStack=[]}var b=a.prototype;b.destroy=function(){if(!this.exhausted){this.exhausted=!0;this.clearProviders();var a=this.threadID;F[a]=F[0];F[0]=a}};b.pushProvider=function(a){var c=++this.contextIndex,b=a.type._context,g=this.threadID;E(b,g);var x=b[g];this.contextStack[c]=b;this.contextValueStack[c]=x;b[g]=a.props.value};b.popProvider=function(){var a=this.contextIndex,b=this.contextStack[a],f=this.contextValueStack[a];
this.contextStack[a]=null;this.contextValueStack[a]=null;this.contextIndex--;b[this.threadID]=f};b.clearProviders=function(){for(var a=this.contextIndex;0<=a;a--)this.contextStack[a][this.threadID]=this.contextValueStack[a]};b.read=function(a){if(this.exhausted)return null;var b=X;X=this.threadID;var c=Qa.current;Qa.current=Ia;try{for(var g=[""],x=!1;g[0].length<a;){if(0===this.stack.length){this.exhausted=!0;var h=this.threadID;F[h]=F[0];F[0]=h;break}var e=this.stack[this.stack.length-1];if(x||e.childIndex>=
e.children.length){var I=e.footer;""!==I&&(this.previousWasTextNode=!1);this.stack.pop();if("select"===e.type)this.currentSelectValue=null;else if(null!=e.type&&null!=e.type.type&&e.type.type.$$typeof===v)this.popProvider(e.type);else if(e.type===B){this.suspenseDepth--;var G=g.pop();if(x){x=!1;var n=e.fallbackFrame;if(!n)throw Error(q(303));this.stack.push(n);g[this.suspenseDepth]+="\x3c!--$!--\x3e";continue}else g[this.suspenseDepth]+=G}g[this.suspenseDepth]+=I}else{var m=e.children[e.childIndex++],
w="";try{w+=this.render(m,e.context,e.domNamespace)}catch(r){if(null!=r&&"function"===typeof r.then)throw Error(q(294));throw r;}finally{}g.length<=this.suspenseDepth&&g.push("");g[this.suspenseDepth]+=w}}return g[0]}finally{Qa.current=c,X=b}};b.render=function(a,b,f){if("string"===typeof a||"number"===typeof a){f=""+a;if(""===f)return"";if(this.makeStaticMarkup)return N(f);if(this.previousWasTextNode)return"\x3c!-- --\x3e"+N(f);this.previousWasTextNode=!0;return N(f)}b=Za(a,b,this.threadID);a=b.child;
b=b.context;if(null===a||!1===a)return"";if(!l.isValidElement(a)){if(null!=a&&null!=a.$$typeof){f=a.$$typeof;if(f===aa)throw Error(q(257));throw Error(q(258,f.toString()));}a=Z(a);this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:""});return""}var c=a.type;if("string"===typeof c)return this.renderDOM(a,b,f);switch(c){case ba:case ea:case ca:case ha:case u:return a=Z(a.props.children),this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:""}),
"";case B:throw Error(q(294));}if("object"===typeof c&&null!==c)switch(c.$$typeof){case fa:O={};var d=c.render(a.props,a.ref);d=Da(c.render,a.props,d,a.ref);d=Z(d);this.stack.push({type:null,domNamespace:f,children:d,childIndex:0,context:b,footer:""});return"";case ia:return a=[l.createElement(c.type,k({ref:a.ref},a.props))],this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:""}),"";case v:return c=Z(a.props.children),f={type:a,domNamespace:f,children:c,childIndex:0,
context:b,footer:""},this.pushProvider(a),this.stack.push(f),"";case da:c=a.type;d=a.props;var h=this.threadID;E(c,h);c=Z(d.children(c[h]));this.stack.push({type:a,domNamespace:f,children:c,childIndex:0,context:b,footer:""});return"";case la:throw Error(q(338));case ja:switch(c=a.type,na(c),c._status){case 1:return a=[l.createElement(c._result,k({ref:a.ref},a.props))],this.stack.push({type:null,domNamespace:f,children:a,childIndex:0,context:b,footer:""}),"";case 2:throw c._result;default:throw Error(q(295));
}case ma:throw Error(q(343));}throw Error(q(130,null==c?c:typeof c,""));};b.renderDOM=function(a,b,f){var c=a.type.toLowerCase();f===Ja.html&&Ka(c);if(!Ta.hasOwnProperty(c)){if(!Sa.test(c))throw Error(q(65,c));Ta[c]=!0}var d=a.props;if("input"===c)d=k({type:void 0},d,{defaultChecked:void 0,defaultValue:void 0,value:null!=d.value?d.value:d.defaultValue,checked:null!=d.checked?d.checked:d.defaultChecked});else if("textarea"===c){var h=d.value;if(null==h){h=d.defaultValue;var e=d.children;if(null!=e){if(null!=
h)throw Error(q(92));if(Array.isArray(e)){if(!(1>=e.length))throw Error(q(93));e=e[0]}h=""+e}null==h&&(h="")}d=k({},d,{value:void 0,children:""+h})}else if("select"===c)this.currentSelectValue=null!=d.value?d.value:d.defaultValue,d=k({},d,{value:void 0});else if("option"===c){e=this.currentSelectValue;var I=Va(d.children);if(null!=e){var G=null!=d.value?d.value+"":I;h=!1;if(Array.isArray(e))for(var n=0;n<e.length;n++){if(""+e[n]===G){h=!0;break}}else h=""+e===G;d=k({selected:void 0,children:void 0},
d,{selected:h,children:I})}}if(h=d){if(Ma[c]&&(null!=h.children||null!=h.dangerouslySetInnerHTML))throw Error(q(137,c,""));if(null!=h.dangerouslySetInnerHTML){if(null!=h.children)throw Error(q(60));if(!("object"===typeof h.dangerouslySetInnerHTML&&"__html"in h.dangerouslySetInnerHTML))throw Error(q(61));}if(null!=h.style&&"object"!==typeof h.style)throw Error(q(62,""));}h=d;e=this.makeStaticMarkup;I=1===this.stack.length;G="<"+a.type;for(z in h)if(Wa.call(h,z)){var m=h[z];if(null!=m){if("style"===
z){n=void 0;var w="",r="";for(n in m)if(m.hasOwnProperty(n)){var y=0===n.indexOf("--"),p=m[n];if(null!=p){if(y)var A=n;else if(A=n,Ua.hasOwnProperty(A))A=Ua[A];else{var T=A.replace(Oa,"-$1").toLowerCase().replace(Pa,"-ms-");A=Ua[A]=T}w+=r+A+":";r=n;y=null==p||"boolean"===typeof p||""===p?"":y||"number"!==typeof p||0===p||Y.hasOwnProperty(r)&&Y[r]?(""+p).trim():p+"px";w+=y;r=";"}}m=w||null}n=null;b:if(y=c,p=h,-1===y.indexOf("-"))y="string"===typeof p.is;else switch(y){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":y=
!1;break b;default:y=!0}y?Xa.hasOwnProperty(z)||(n=z,n=ua(n)&&null!=m?n+'="'+(N(m)+'"'):""):n=ya(z,m);n&&(G+=" "+n)}}e||I&&(G+=' data-reactroot=""');var z=G;h="";La.hasOwnProperty(c)?z+="/>":(z+=">",h="</"+a.type+">");a:{e=d.dangerouslySetInnerHTML;if(null!=e){if(null!=e.__html){e=e.__html;break a}}else if(e=d.children,"string"===typeof e||"number"===typeof e){e=N(e);break a}e=null}null!=e?(d=[],Ra.hasOwnProperty(c)&&"\n"===e.charAt(0)&&(z+="\n"),z+=e):d=Z(d.children);a=a.type;f=null==f||"http://www.w3.org/1999/xhtml"===
f?Ka(a):"http://www.w3.org/2000/svg"===f&&"foreignObject"===a?"http://www.w3.org/1999/xhtml":f;this.stack.push({domNamespace:f,type:c,children:d,childIndex:0,context:b,footer:h});this.previousWasTextNode=!1;return z};return a}(),ab={renderToString:function(a){a=new $a(a,!1);try{return a.read(Infinity)}finally{a.destroy()}},renderToStaticMarkup:function(a){a=new $a(a,!0);try{return a.read(Infinity)}finally{a.destroy()}},renderToNodeStream:function(){throw Error(q(207));},renderToStaticNodeStream:function(){throw Error(q(208));
},version:"16.14.0"};module.exports=ab.default||ab;

},{"object-assign":"YOwE","react":"HdMw"}],"gjZ7":[function(require,module,exports) {
'use strict';

if ("production" === 'production') {
  module.exports = require('./cjs/react-dom-server.browser.production.min.js');
} else {
  module.exports = require('./cjs/react-dom-server.browser.development.js');
}
},{"./cjs/react-dom-server.browser.production.min.js":"wi82"}],"GBOr":[function(require,module,exports) {
"use strict";

var ReactDOM = require("react-dom");

var ReactDOMServer = require("react-dom/server");

exports.renderImpl = function (element, container) {
  return ReactDOM.render(element, container);
};

exports.hydrateImpl = function (element, container) {
  return ReactDOM.hydrate(element, container);
};

exports.unmountComponentAtNodeImpl = ReactDOM.unmountComponentAtNode;
exports.findDOMNodeImpl = ReactDOM.findDOMNode;
exports.renderToStringImpl = ReactDOMServer.renderToString;
exports.renderToStaticMarkupImpl = ReactDOMServer.renderToStaticMarkup;
},{"react-dom":"X9zx","react-dom/server":"gjZ7"}],"cBGQ":[function(require,module,exports) {
"use strict"; // module Data.Function.Uncurried

exports.mkFn0 = function (fn) {
  return function () {
    return fn();
  };
};

exports.mkFn2 = function (fn) {
  /* jshint maxparams: 2 */
  return function (a, b) {
    return fn(a)(b);
  };
};

exports.mkFn3 = function (fn) {
  /* jshint maxparams: 3 */
  return function (a, b, c) {
    return fn(a)(b)(c);
  };
};

exports.mkFn4 = function (fn) {
  /* jshint maxparams: 4 */
  return function (a, b, c, d) {
    return fn(a)(b)(c)(d);
  };
};

exports.mkFn5 = function (fn) {
  /* jshint maxparams: 5 */
  return function (a, b, c, d, e) {
    return fn(a)(b)(c)(d)(e);
  };
};

exports.mkFn6 = function (fn) {
  /* jshint maxparams: 6 */
  return function (a, b, c, d, e, f) {
    return fn(a)(b)(c)(d)(e)(f);
  };
};

exports.mkFn7 = function (fn) {
  /* jshint maxparams: 7 */
  return function (a, b, c, d, e, f, g) {
    return fn(a)(b)(c)(d)(e)(f)(g);
  };
};

exports.mkFn8 = function (fn) {
  /* jshint maxparams: 8 */
  return function (a, b, c, d, e, f, g, h) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h);
  };
};

exports.mkFn9 = function (fn) {
  /* jshint maxparams: 9 */
  return function (a, b, c, d, e, f, g, h, i) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
  };
};

exports.mkFn10 = function (fn) {
  /* jshint maxparams: 10 */
  return function (a, b, c, d, e, f, g, h, i, j) {
    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
  };
};

exports.runFn0 = function (fn) {
  return fn();
};

exports.runFn2 = function (fn) {
  return function (a) {
    return function (b) {
      return fn(a, b);
    };
  };
};

exports.runFn3 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return fn(a, b, c);
      };
    };
  };
};

exports.runFn4 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return fn(a, b, c, d);
        };
      };
    };
  };
};

exports.runFn5 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return fn(a, b, c, d, e);
          };
        };
      };
    };
  };
};

exports.runFn6 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return fn(a, b, c, d, e, f);
            };
          };
        };
      };
    };
  };
};

exports.runFn7 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return fn(a, b, c, d, e, f, g);
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn8 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return fn(a, b, c, d, e, f, g, h);
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn9 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return fn(a, b, c, d, e, f, g, h, i);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

exports.runFn10 = function (fn) {
  return function (a) {
    return function (b) {
      return function (c) {
        return function (d) {
          return function (e) {
            return function (f) {
              return function (g) {
                return function (h) {
                  return function (i) {
                    return function (j) {
                      return fn(a, b, c, d, e, f, g, h, i, j);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};
},{}],"TowT":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var runFn1 = function runFn1(f) {
  return f;
};

var mkFn1 = function mkFn1(f) {
  return f;
};

module.exports = {
  mkFn1: mkFn1,
  runFn1: runFn1,
  mkFn0: $foreign.mkFn0,
  mkFn2: $foreign.mkFn2,
  mkFn3: $foreign.mkFn3,
  mkFn4: $foreign.mkFn4,
  mkFn5: $foreign.mkFn5,
  mkFn6: $foreign.mkFn6,
  mkFn7: $foreign.mkFn7,
  mkFn8: $foreign.mkFn8,
  mkFn9: $foreign.mkFn9,
  mkFn10: $foreign.mkFn10,
  runFn0: $foreign.runFn0,
  runFn2: $foreign.runFn2,
  runFn3: $foreign.runFn3,
  runFn4: $foreign.runFn4,
  runFn5: $foreign.runFn5,
  runFn6: $foreign.runFn6,
  runFn7: $foreign.runFn7,
  runFn8: $foreign.runFn8,
  runFn9: $foreign.runFn9,
  runFn10: $foreign.runFn10
};
},{"./foreign.js":"cBGQ"}],"U2wa":[function(require,module,exports) {
/* eslint-disable no-eq-null, eqeqeq */
"use strict";

exports["null"] = null;

exports.nullable = function (a, r, f) {
  return a == null ? r : f(a);
};

exports.notNull = function (x) {
  return x;
};
},{}],"YQ8o":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);

var toMaybe = function toMaybe(n) {
  return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
};

var showNullable = function showNullable(dictShow) {
  return new Data_Show.Show(function () {
    var $5 = Data_Maybe.maybe("null")(Data_Show.show(dictShow));
    return function ($6) {
      return $5(toMaybe($6));
    };
  }());
};

var eqNullable = function eqNullable(dictEq) {
  return new Data_Eq.Eq(Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe));
};

var ordNullable = function ordNullable(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqNullable(dictOrd.Eq0());
  }, Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe));
};

var eq1Nullable = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqNullable(dictEq));
});
var ord1Nullable = new Data_Ord.Ord1(function () {
  return eq1Nullable;
}, function (dictOrd) {
  return Data_Ord.compare(ordNullable(dictOrd));
});
module.exports = {
  toMaybe: toMaybe,
  toNullable: toNullable,
  showNullable: showNullable,
  eqNullable: eqNullable,
  eq1Nullable: eq1Nullable,
  ordNullable: ordNullable,
  ord1Nullable: ord1Nullable,
  "null": $foreign["null"],
  notNull: $foreign.notNull
};
},{"./foreign.js":"U2wa","../Data.Eq/index.js":"Pq4F","../Data.Function/index.js":"ImXJ","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Show/index.js":"mFY7"}],"vq59":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var unmountComponentAtNode = Effect_Uncurried.runEffectFn1($foreign.unmountComponentAtNodeImpl);
var renderToString = Data_Function_Uncurried.runFn1($foreign.renderToStringImpl);
var renderToStaticMarkup = Data_Function_Uncurried.runFn1($foreign.renderToStaticMarkupImpl);

var render = function render(rEl) {
  return function (el) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)(function () {
      return $foreign.renderImpl(rEl, el);
    });
  };
};

var hydrate = function hydrate(rEl) {
  return function (el) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)(function () {
      return $foreign.hydrateImpl(rEl, el);
    });
  };
};

var findDOMNode = Effect_Uncurried.runEffectFn1($foreign.findDOMNodeImpl);
module.exports = {
  render: render,
  hydrate: hydrate,
  unmountComponentAtNode: unmountComponentAtNode,
  findDOMNode: findDOMNode,
  renderToString: renderToString,
  renderToStaticMarkup: renderToStaticMarkup
};
},{"./foreign.js":"GBOr","../Data.Function.Uncurried/index.js":"TowT","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Effect.Uncurried/index.js":"qn3Z"}],"pkfk":[function(require,module,exports) {
"use strict";

exports._getElementById = function (id) {
  return function (node) {
    return function () {
      return node.getElementById(id);
    };
  };
};
},{}],"HGyN":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var getElementById = function getElementById(eid) {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  var $1 = $foreign["_getElementById"](eid);
  return function ($2) {
    return $0($1($2));
  };
};

module.exports = {
  getElementById: getElementById
};
},{"./foreign.js":"pkfk","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB"}],"UOgE":[function(require,module,exports) {
"use strict";

exports.window = function () {
  return window;
};
},{}],"HWRz":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var PropName = function PropName(x) {
  return x;
};

var ClassName = function ClassName(x) {
  return x;
};

var AttrName = function AttrName(x) {
  return x;
};

var ordPropName = Data_Ord.ordString;
var ordClassName = Data_Ord.ordString;
var ordAttrName = Data_Ord.ordString;
var newtypePropName = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeClassName = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeAttrName = new Data_Newtype.Newtype(function () {
  return undefined;
});
var eqPropName = Data_Eq.eqString;
var eqClassName = Data_Eq.eqString;
var eqAttrName = Data_Eq.eqString;
module.exports = {
  PropName: PropName,
  AttrName: AttrName,
  ClassName: ClassName,
  newtypePropName: newtypePropName,
  eqPropName: eqPropName,
  ordPropName: ordPropName,
  newtypeAttrName: newtypeAttrName,
  eqAttrName: eqAttrName,
  ordAttrName: ordAttrName,
  newtypeClassName: newtypeClassName,
  eqClassName: eqClassName,
  ordClassName: ordClassName
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb"}],"OgVw":[function(require,module,exports) {
"use strict";

exports.target = function (a) {
  return function () {
    return a.target;
  };
};

exports.setTarget = function (target) {
  return function (a) {
    return function () {
      a.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.download = function (a) {
  return function () {
    return a.download;
  };
};

exports.setDownload = function (download) {
  return function (a) {
    return function () {
      a.download = download;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (a) {
  return function () {
    return a.rel;
  };
};

exports.setRel = function (rel) {
  return function (a) {
    return function () {
      a.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rev = function (a) {
  return function () {
    return a.rev;
  };
};

exports.setRev = function (rev) {
  return function (a) {
    return function () {
      a.rev = rev;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (a) {
  return function () {
    return a.relList;
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (a) {
  return function () {
    return a.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (a) {
    return function () {
      a.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (a) {
  return function () {
    return a.type;
  };
};

exports.setType = function (type) {
  return function (a) {
    return function () {
      a.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (a) {
  return function () {
    return a.text;
  };
};

exports.setText = function (text) {
  return function (a) {
    return function () {
      a.text = text;
    };
  };
};
},{}],"K7YA":[function(require,module,exports) {
"use strict";

exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
  if (typeof window !== "undefined") {
    var ty = window[name];

    if (ty != null && value instanceof ty) {
      return just(value);
    }
  }

  var obj = value;

  while (obj != null) {
    var proto = Object.getPrototypeOf(obj);
    var constructorName = proto.constructor.name;

    if (constructorName === name) {
      return just(value);
    } else if (constructorName === "Object") {
      return nothing;
    }

    obj = proto;
  }

  return nothing;
};
},{}],"fdUh":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var unsafeReadProtoTagged = function unsafeReadProtoTagged(name) {
  return function (value) {
    return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
  };
};

module.exports = {
  unsafeReadProtoTagged: unsafeReadProtoTagged
};
},{"./foreign.js":"K7YA","../Data.Maybe/index.js":"mN7T"}],"RVu6":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLHyperlinkElementUtils = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAnchorElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  toHTMLHyperlinkElementUtils: toHTMLHyperlinkElementUtils,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  download: $foreign.download,
  setDownload: $foreign.setDownload,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  rev: $foreign.rev,
  setRev: $foreign.setRev,
  relList: $foreign.relList,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"OgVw","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"sobB":[function(require,module,exports) {
"use strict";

exports.alt = function (area) {
  return function () {
    return area.alt;
  };
};

exports.setAlt = function (alt) {
  return function (area) {
    return function () {
      area.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.coords = function (area) {
  return function () {
    return area.coords;
  };
};

exports.setCoords = function (coords) {
  return function (area) {
    return function () {
      area.coords = coords;
    };
  };
}; // ----------------------------------------------------------------------------


exports.shape = function (area) {
  return function () {
    return area.shape;
  };
};

exports.setShape = function (shape) {
  return function (area) {
    return function () {
      area.shape = shape;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (area) {
  return function () {
    return area.target;
  };
};

exports.setTarget = function (target) {
  return function (area) {
    return function () {
      area.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.download = function (area) {
  return function () {
    return area.download;
  };
};

exports.setDownload = function (download) {
  return function (area) {
    return function () {
      area.download = download;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (area) {
  return function () {
    return area.rel;
  };
};

exports.setRel = function (rel) {
  return function (area) {
    return function () {
      area.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (area) {
  return function () {
    return area.relList;
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (area) {
  return function () {
    return area.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (area) {
    return function () {
      area.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (area) {
  return function () {
    return area.type;
  };
};

exports.setType = function (type) {
  return function (area) {
    return function () {
      area.type = type;
    };
  };
};
},{}],"uD7j":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAreaElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  coords: $foreign.coords,
  setCoords: $foreign.setCoords,
  shape: $foreign.shape,
  setShape: $foreign.setShape,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  download: $foreign.download,
  setDownload: $foreign.setDownload,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  relList: $foreign.relList,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"sobB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"LdP1":[function(require,module,exports) {
"use strict";

exports.create = function () {
  return new Audio();
};

exports.createWithURL = function (url) {
  return function () {
    return new Audio(url);
  };
};
},{}],"B3My":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLAudioElement");
var create$prime = $foreign.createWithURL;
module.exports = {
  fromHTMLMediaElement: fromHTMLMediaElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLMediaElement: toHTMLMediaElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  "create'": create$prime,
  create: $foreign.create
};
},{"./foreign.js":"LdP1","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"PuGe":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBRElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"pm4o":[function(require,module,exports) {
"use strict";

exports.href = function (base) {
  return function () {
    return base.href;
  };
};

exports.setHref = function (href) {
  return function (base) {
    return function () {
      base.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (base) {
  return function () {
    return base.target;
  };
};

exports.setTarget = function (target) {
  return function (base) {
    return function () {
      base.target = target;
    };
  };
};
},{}],"WRLa":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBaseElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  href: $foreign.href,
  setHref: $foreign.setHref,
  target: $foreign.target,
  setTarget: $foreign.setTarget
};
},{"./foreign.js":"pm4o","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"KpQ0":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLBodyElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"QWIY":[function(require,module,exports) {
"use strict";

exports.autofocus = function (button) {
  return function () {
    return button.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (button) {
    return function () {
      button.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (button) {
  return function () {
    return button.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (button) {
    return function () {
      button.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (button) {
  return function () {
    return button.form;
  };
}; // ----------------------------------------------------------------------------


exports.formAction = function (button) {
  return function () {
    return button.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (button) {
    return function () {
      button.formAction = formAction;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formEnctype = function (button) {
  return function () {
    return button.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (button) {
    return function () {
      button.formEnctype = formEnctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formMethod = function (button) {
  return function () {
    return button.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (button) {
    return function () {
      button.formMethod = formMethod;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formNoValidate = function (button) {
  return function () {
    return button.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (button) {
    return function () {
      button.formNoValidate = formNoValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formTarget = function (button) {
  return function () {
    return button.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (button) {
    return function () {
      button.formTarget = formTarget;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (button) {
  return function () {
    return button.name;
  };
};

exports.setName = function (name) {
  return function (button) {
    return function () {
      button.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (button) {
  return function () {
    return button.type;
  };
};

exports.setType = function (type) {
  return function (button) {
    return function () {
      button.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (button) {
  return function () {
    return button.value;
  };
};

exports.setValue = function (value) {
  return function (button) {
    return function () {
      button.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (button) {
  return function () {
    return button.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (button) {
  return function () {
    return button.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (button) {
  return function () {
    return button.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (button) {
  return function () {
    return button.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (button) {
  return function () {
    return button.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (button) {
    return function () {
      button.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (button) {
  return function () {
    return button.labels;
  };
};
},{}],"St95":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLButtonElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  formAction: $foreign.formAction,
  setFormAction: $foreign.setFormAction,
  formEnctype: $foreign.formEnctype,
  setFormEnctype: $foreign.setFormEnctype,
  formMethod: $foreign.formMethod,
  setFormMethod: $foreign.setFormMethod,
  formNoValidate: $foreign.formNoValidate,
  setFormNoValidate: $foreign.setFormNoValidate,
  formTarget: $foreign.formTarget,
  setFormTarget: $foreign.setFormTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  setType: $foreign.setType,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"QWIY","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"Ru3T":[function(require,module,exports) {
"use strict";

exports.width = function (canvas) {
  return function () {
    return canvas.width;
  };
};

exports.setWidth = function (width) {
  return function (canvas) {
    return function () {
      canvas.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (canvas) {
  return function () {
    return canvas.height;
  };
};

exports.setHeight = function (height) {
  return function (canvas) {
    return function () {
      canvas.height = height;
    };
  };
};
},{}],"nq6t":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLCanvasElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"Ru3T","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"ojSn":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"esjH":[function(require,module,exports) {
"use strict";

exports.value = function (data) {
  return function () {
    return data.value;
  };
};

exports.setValue = function (value) {
  return function (data) {
    return function () {
      data.value = value;
    };
  };
};
},{}],"Qyyf":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"esjH","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"D4VM":[function(require,module,exports) {
"use strict";

exports.options = function (dle) {
  return function () {
    return dle.options;
  };
};
},{}],"rdK7":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDataListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  options: $foreign.options
};
},{"./foreign.js":"D4VM","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"nQnI":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDivElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"dln3":[function(require,module,exports) {
"use strict";

exports._head = function (doc) {
  return function () {
    return doc.head;
  };
};

exports._body = function (doc) {
  return function () {
    return doc.body;
  };
};

exports._readyState = function (doc) {
  return function () {
    return doc.readyState;
  };
};

exports._activeElement = function (doc) {
  return function () {
    return doc.activeElement;
  };
};

exports._currentScript = function (doc) {
  return function () {
    return doc.currentScript;
  };
};

exports.referrer = function (doc) {
  return function () {
    return doc.referrer;
  };
};

exports.title = function (doc) {
  return function () {
    return doc.title;
  };
};

exports.setTitle = function (title) {
  return function (doc) {
    return function () {
      doc.title = title;
    };
  };
};
},{}],"v4VO":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var Interactive = function () {
  function Interactive() {}

  ;
  Interactive.value = new Interactive();
  return Interactive;
}();

var Complete = function () {
  function Complete() {}

  ;
  Complete.value = new Complete();
  return Complete;
}();

var showReadyState = new Data_Show.Show(function (v) {
  if (v instanceof Loading) {
    return "Loading";
  }

  ;

  if (v instanceof Interactive) {
    return "Interactive";
  }

  ;

  if (v instanceof Complete) {
    return "Complete";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 15, column 10 - line 18, column 27): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Loading) {
    return "loading";
  }

  ;

  if (v instanceof Interactive) {
    return "interactive";
  }

  ;

  if (v instanceof Complete) {
    return "complete";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 21, column 9 - line 24, column 25): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "loading") {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === "interactive") {
    return new Data_Maybe.Just(Interactive.value);
  }

  ;

  if (v === "complete") {
    return new Data_Maybe.Just(Complete.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqReadyState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Loading && y instanceof Loading) {
      return true;
    }

    ;

    if (x instanceof Interactive && y instanceof Interactive) {
      return true;
    }

    ;

    if (x instanceof Complete && y instanceof Complete) {
      return true;
    }

    ;
    return false;
  };
});
var ordReadyState = new Data_Ord.Ord(function () {
  return eqReadyState;
}, function (x) {
  return function (y) {
    if (x instanceof Loading && y instanceof Loading) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loading) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loading) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Interactive && y instanceof Interactive) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Interactive) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Interactive) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Complete && y instanceof Complete) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLDocument.ReadyState (line 12, column 1 - line 12, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Loading: Loading,
  Interactive: Interactive,
  Complete: Complete,
  print: print,
  parse: parse,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  showReadyState: showReadyState
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"EU5r":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLDocument_ReadyState = require("../Web.HTML.HTMLDocument.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toDocument = Unsafe_Coerce.unsafeCoerce;

var readyState = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(function () {
    var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
    return function ($3) {
      return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
    };
  }());
  return function ($1) {
    return $0($foreign["_readyState"]($1));
  };
}();

var head = function () {
  var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($5) {
    return $4($foreign["_head"]($5));
  };
}();

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNonElementParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");
var fromDocument = Web_Internal_FFI.unsafeReadProtoTagged("HTMLDocument");

var currentScript = function () {
  var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($7) {
    return $6($foreign["_currentScript"]($7));
  };
}();

var body = function () {
  var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($9) {
    return $8($foreign["_body"]($9));
  };
}();

var activeElement = function () {
  var $10 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($11) {
    return $10($foreign["_activeElement"]($11));
  };
}();

module.exports = {
  fromDocument: fromDocument,
  fromNode: fromNode,
  fromParentNode: fromParentNode,
  fromNonElementParentNode: fromNonElementParentNode,
  fromEventTarget: fromEventTarget,
  toDocument: toDocument,
  toNode: toNode,
  toParentNode: toParentNode,
  toNonElementParentNode: toNonElementParentNode,
  toEventTarget: toEventTarget,
  head: head,
  body: body,
  readyState: readyState,
  activeElement: activeElement,
  currentScript: currentScript,
  referrer: $foreign.referrer,
  title: $foreign.title,
  setTitle: $foreign.setTitle
};
},{"./foreign.js":"dln3","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.HTML.HTMLDocument.ReadyState/index.js":"v4VO","../Web.Internal.FFI/index.js":"fdUh"}],"cLXw":[function(require,module,exports) {
"use strict";

exports._read = function (nothing, just, value) {
  var tag = Object.prototype.toString.call(value);

  if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
    return just(value);
  } else {
    return nothing;
  }
}; // ----------------------------------------------------------------------------


exports.title = function (elt) {
  return function () {
    return elt.title;
  };
};

exports.setTitle = function (title) {
  return function (elt) {
    return function () {
      elt.title = title;
    };
  };
}; // ----------------------------------------------------------------------------


exports.lang = function (elt) {
  return function () {
    return elt.lang;
  };
};

exports.setLang = function (lang) {
  return function (elt) {
    return function () {
      elt.lang = lang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dir = function (elt) {
  return function () {
    return elt.dir;
  };
};

exports.setDir = function (dir) {
  return function (elt) {
    return function () {
      elt.dir = dir;
    };
  };
}; // ----------------------------------------------------------------------------


exports.className = function (elt) {
  return function () {
    return elt.className;
  };
};

exports.setClassName = function (className) {
  return function (elt) {
    return function () {
      elt.className = className;
    };
  };
};

exports.classList = function (element) {
  return function () {
    return element.classList;
  };
}; // ----------------------------------------------------------------------------


exports.hidden = function (elt) {
  return function () {
    return elt.hidden;
  };
};

exports.setHidden = function (hidden) {
  return function (elt) {
    return function () {
      elt.hidden = hidden;
    };
  };
}; // ----------------------------------------------------------------------------


exports.tabIndex = function (elt) {
  return function () {
    return elt.tabIndex;
  };
};

exports.setTabIndex = function (tabIndex) {
  return function (elt) {
    return function () {
      elt.tabIndex = tabIndex;
    };
  };
}; // ----------------------------------------------------------------------------


exports.draggable = function (elt) {
  return function () {
    return elt.draggable;
  };
};

exports.setDraggable = function (draggable) {
  return function (elt) {
    return function () {
      elt.draggable = draggable;
    };
  };
}; // ----------------------------------------------------------------------------


exports.contentEditable = function (elt) {
  return function () {
    return elt.contentEditable;
  };
};

exports.setContentEditable = function (contentEditable) {
  return function (elt) {
    return function () {
      elt.contentEditable = contentEditable;
    };
  };
};

exports.isContentEditable = function (elt) {
  return function () {
    return elt.isContentEditable;
  };
}; // ----------------------------------------------------------------------------


exports.spellcheck = function (elt) {
  return function () {
    return elt.spellcheck;
  };
};

exports.setSpellcheck = function (spellcheck) {
  return function (elt) {
    return function () {
      elt.spellcheck = spellcheck;
    };
  };
}; // ----------------------------------------------------------------------------


exports.click = function (elt) {
  return function () {
    return elt.click();
  };
};

exports.focus = function (elt) {
  return function () {
    return elt.focus();
  };
};

exports.blur = function (elt) {
  return function () {
    return elt.blur();
  };
}; // - CSSOM ---------------------------------------------------------------------


exports.getBoundingClientRect = function (el) {
  return function () {
    var rect = el.getBoundingClientRect();
    return {
      top: rect.top,
      right: rect.right,
      bottom: rect.bottom,
      left: rect.left,
      width: rect.width,
      height: rect.height
    };
  };
};

exports._offsetParent = function (el) {
  return function () {
    return el.offsetParent;
  };
};

exports.offsetTop = function (el) {
  return function () {
    return el.offsetTop;
  };
};

exports.offsetLeft = function (el) {
  return function () {
    return el.offsetLeft;
  };
};

exports.offsetWidth = function (el) {
  return function () {
    return el.offsetWidth;
  };
};

exports.offsetHeight = function (el) {
  return function () {
    return el.offsetHeight;
  };
};
},{}],"MEIX":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var offsetParent = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_offsetParent"]($1));
  };
}();

var fromParentNode = function fromParentNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromNonDocumentTypeChildNode = function fromNonDocumentTypeChildNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromNode = function fromNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromEventTarget = function fromEventTarget(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromElement = function fromElement(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

var fromChildNode = function fromChildNode(x) {
  return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
};

module.exports = {
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  offsetParent: offsetParent,
  title: $foreign.title,
  setTitle: $foreign.setTitle,
  lang: $foreign.lang,
  setLang: $foreign.setLang,
  dir: $foreign.dir,
  setDir: $foreign.setDir,
  className: $foreign.className,
  setClassName: $foreign.setClassName,
  classList: $foreign.classList,
  hidden: $foreign.hidden,
  setHidden: $foreign.setHidden,
  tabIndex: $foreign.tabIndex,
  setTabIndex: $foreign.setTabIndex,
  draggable: $foreign.draggable,
  setDraggable: $foreign.setDraggable,
  contentEditable: $foreign.contentEditable,
  setContentEditable: $foreign.setContentEditable,
  isContentEditable: $foreign.isContentEditable,
  spellcheck: $foreign.spellcheck,
  setSpellcheck: $foreign.setSpellcheck,
  click: $foreign.click,
  focus: $foreign.focus,
  blur: $foreign.blur,
  getBoundingClientRect: $foreign.getBoundingClientRect,
  offsetTop: $foreign.offsetTop,
  offsetLeft: $foreign.offsetLeft,
  offsetWidth: $foreign.offsetWidth,
  offsetHeight: $foreign.offsetHeight
};
},{"./foreign.js":"cLXw","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV"}],"hmJj":[function(require,module,exports) {
"use strict";

exports.src = function (embed) {
  return function () {
    return embed.src;
  };
};

exports.setSrc = function (src) {
  return function (embed) {
    return function () {
      embed.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (embed) {
  return function () {
    return embed.type;
  };
};

exports.setType = function (type) {
  return function (embed) {
    return function () {
      embed.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (embed) {
  return function () {
    return embed.width;
  };
};

exports.setWidth = function (width) {
  return function (embed) {
    return function () {
      embed.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (embed) {
  return function () {
    return embed.height;
  };
};

exports.setHeight = function (height) {
  return function (embed) {
    return function () {
      embed.height = height;
    };
  };
};
},{}],"NyBL":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLEmbedElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"hmJj","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"uC50":[function(require,module,exports) {
"use strict";

exports.disabled = function (fieldset) {
  return function () {
    return fieldset.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (fieldset) {
    return function () {
      fieldset.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (fieldset) {
  return function () {
    return fieldset.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (fieldset) {
  return function () {
    return fieldset.name;
  };
};

exports.setName = function (name) {
  return function (fieldset) {
    return function () {
      fieldset.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (fieldset) {
  return function () {
    return fieldset.type;
  };
};

exports.setType = function (type) {
  return function (fieldset) {
    return function () {
      fieldset.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (fieldset) {
  return function () {
    return fieldset.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (fieldset) {
  return function () {
    return fieldset.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (fieldset) {
  return function () {
    return fieldset.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (fieldset) {
  return function () {
    return fieldset.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (fieldset) {
  return function () {
    return fieldset.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (fieldset) {
    return function () {
      fieldset.setCustomValidity(value);
    };
  };
};
},{}],"BsUB":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFieldSetElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  setType: $foreign.setType,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity
};
},{"./foreign.js":"uC50","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"MNAy":[function(require,module,exports) {
"use strict";

exports.acceptCharset = function (form) {
  return function () {
    return form.acceptCharset;
  };
};

exports.setAcceptCharset = function (acceptCharset) {
  return function (form) {
    return function () {
      form.acceptCharset = acceptCharset;
    };
  };
}; // ----------------------------------------------------------------------------


exports.action = function (form) {
  return function () {
    return form.action;
  };
};

exports.setAction = function (action) {
  return function (form) {
    return function () {
      form.action = action;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autocomplete = function (form) {
  return function () {
    return form.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (form) {
    return function () {
      form.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.enctype = function (form) {
  return function () {
    return form.enctype;
  };
};

exports.setEnctype = function (enctype) {
  return function (form) {
    return function () {
      form.enctype = enctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.encoding = function (form) {
  return function () {
    return form.encoding;
  };
};

exports.setEncoding = function (encoding) {
  return function (form) {
    return function () {
      form.encoding = encoding;
    };
  };
}; // ----------------------------------------------------------------------------


exports.method = function (form) {
  return function () {
    return form.method;
  };
};

exports.setMethod = function (method) {
  return function (form) {
    return function () {
      form.method = method;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (form) {
  return function () {
    return form.name;
  };
};

exports.setName = function (name) {
  return function (form) {
    return function () {
      form.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.noValidate = function (form) {
  return function () {
    return form.noValidate;
  };
};

exports.setNoValidate = function (noValidate) {
  return function (form) {
    return function () {
      form.noValidate = noValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.target = function (form) {
  return function () {
    return form.target;
  };
};

exports.setTarget = function (target) {
  return function (form) {
    return function () {
      form.target = target;
    };
  };
}; // ----------------------------------------------------------------------------


exports.length = function (form) {
  return function () {
    return form.length;
  };
}; // ----------------------------------------------------------------------------


exports.submit = function (form) {
  return function () {
    form.submit();
  };
}; // ----------------------------------------------------------------------------


exports.reset = function (form) {
  return function () {
    form.reset();
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (form) {
  return function () {
    return form.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (form) {
  return function () {
    return form.reportValidity();
  };
};
},{}],"RRw7":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLFormElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  acceptCharset: $foreign.acceptCharset,
  setAcceptCharset: $foreign.setAcceptCharset,
  action: $foreign.action,
  setAction: $foreign.setAction,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  enctype: $foreign.enctype,
  setEnctype: $foreign.setEnctype,
  encoding: $foreign.encoding,
  setEncoding: $foreign.setEncoding,
  method: $foreign.method,
  setMethod: $foreign.setMethod,
  name: $foreign.name,
  setName: $foreign.setName,
  noValidate: $foreign.noValidate,
  setNoValidate: $foreign.setNoValidate,
  target: $foreign.target,
  setTarget: $foreign.setTarget,
  length: $foreign.length,
  submit: $foreign.submit,
  reset: $foreign.reset,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity
};
},{"./foreign.js":"MNAy","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"EuY3":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHRElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"rfcW":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"LiD8":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLHeadingElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"I8Ub":[function(require,module,exports) {
"use strict";

exports.src = function (iframe) {
  return function () {
    return iframe.src;
  };
};

exports.setSrc = function (src) {
  return function (iframe) {
    return function () {
      iframe.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.srcdoc = function (iframe) {
  return function () {
    return iframe.srcdoc;
  };
};

exports.setSrcdoc = function (srcdoc) {
  return function (iframe) {
    return function () {
      iframe.srcdoc = srcdoc;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (iframe) {
  return function () {
    return iframe.name;
  };
};

exports.setName = function (name) {
  return function (iframe) {
    return function () {
      iframe.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (iframe) {
  return function () {
    return iframe.width;
  };
};

exports.setWidth = function (width) {
  return function (iframe) {
    return function () {
      iframe.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (iframe) {
  return function () {
    return iframe.height;
  };
};

exports.setHeight = function (height) {
  return function (iframe) {
    return function () {
      iframe.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports._contentDocument = function (iframe) {
  return function () {
    return iframe.contentDocument;
  };
};

exports._contentWindow = function (iframe) {
  return function () {
    return iframe.contentWindow;
  };
};
},{}],"EBFS":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLIFrameElement");

var contentWindow = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_contentWindow"]($1));
  };
}();

var contentDocument = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_contentDocument"]($3));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  contentDocument: contentDocument,
  contentWindow: contentWindow,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  srcdoc: $foreign.srcdoc,
  setSrcdoc: $foreign.setSrcdoc,
  name: $foreign.name,
  setName: $foreign.setName,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight
};
},{"./foreign.js":"I8Ub","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"TAWh":[function(require,module,exports) {
"use strict";

exports.create = function () {
  return new Image();
};

exports.createWithDimensions = function (width) {
  return function (height) {
    return function () {
      return new Image(width, height);
    };
  };
}; // ----------------------------------------------------------------------------


exports.alt = function (image) {
  return function () {
    return image.alt;
  };
};

exports.setAlt = function (alt) {
  return function (image) {
    return function () {
      image.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (image) {
  return function () {
    return image.src;
  };
};

exports.setSrc = function (src) {
  return function (image) {
    return function () {
      image.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.srcset = function (image) {
  return function () {
    return image.srcset;
  };
};

exports.setSrcset = function (srcset) {
  return function (image) {
    return function () {
      image.srcset = srcset;
    };
  };
}; // ----------------------------------------------------------------------------


exports.sizes = function (image) {
  return function () {
    return image.sizes;
  };
};

exports.setSizes = function (sizes) {
  return function (image) {
    return function () {
      image.sizes = sizes;
    };
  };
}; // ----------------------------------------------------------------------------


exports.currentSrc = function (image) {
  return function () {
    return image.currentSrc;
  };
}; // ----------------------------------------------------------------------------


exports._crossOrigin = function (image) {
  return image.crossOrigin;
};

exports._setCrossOrigin = function (crossOrigin, image) {
  image.crossOrigin = crossOrigin;
}; // ----------------------------------------------------------------------------


exports.useMap = function (image) {
  return function () {
    return image.useMap;
  };
};

exports.setUseMap = function (useMap) {
  return function (image) {
    return function () {
      image.useMap = useMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.isMap = function (image) {
  return function () {
    return image.isMap;
  };
};

exports.setIsMap = function (isMap) {
  return function (image) {
    return function () {
      image.isMap = isMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (image) {
  return function () {
    return image.width;
  };
};

exports.setWidth = function (width) {
  return function (image) {
    return function () {
      image.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (image) {
  return function () {
    return image.height;
  };
};

exports.setHeight = function (height) {
  return function (image) {
    return function () {
      image.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.naturalWidth = function (image) {
  return function () {
    return image.naturalWidth;
  };
};

exports.naturalHeight = function (image) {
  return function () {
    return image.naturalHeight;
  };
}; // ----------------------------------------------------------------------------


exports.referrerPolicy = function (image) {
  return function () {
    return image.referrerPolicy;
  };
};

exports.setReferrerPolicy = function (referrerPolicy) {
  return function (image) {
    return function () {
      image.referrerPolicy = referrerPolicy;
    };
  };
}; // ----------------------------------------------------------------------------


exports._decoding = function (image) {
  return image.decoding;
};

exports._setDecoding = function (decoding, image) {
  image.decoding = decoding;
}; // ----------------------------------------------------------------------------


exports._loading = function (image) {
  return image.loading;
};

exports._setLoading = function (loading, image) {
  image.loading = loading;
}; // ----------------------------------------------------------------------------


exports.complete = function (image) {
  return function () {
    return image.complete;
  };
};
},{}],"tgKv":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Anonymous = function () {
  function Anonymous() {}

  ;
  Anonymous.value = new Anonymous();
  return Anonymous;
}();

var UseCredentials = function () {
  function UseCredentials() {}

  ;
  UseCredentials.value = new UseCredentials();
  return UseCredentials;
}();

var showDecodingHint = new Data_Show.Show(function (v) {
  if (v instanceof Anonymous) {
    return "Anonymous";
  }

  ;

  if (v instanceof UseCredentials) {
    return "UseCredentials";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 18, column 10 - line 20, column 39): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Anonymous) {
    return "anonymous";
  }

  ;

  if (v instanceof UseCredentials) {
    return "use-credentials";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 30, column 9 - line 32, column 38): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Anonymous.value);
  }

  ;

  if (v === "anonymous") {
    return new Data_Maybe.Just(Anonymous.value);
  }

  ;

  if (v === "use-credentials") {
    return new Data_Maybe.Just(UseCredentials.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqCORSMode = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Anonymous && y instanceof Anonymous) {
      return true;
    }

    ;

    if (x instanceof UseCredentials && y instanceof UseCredentials) {
      return true;
    }

    ;
    return false;
  };
});
var ordCORSMode = new Data_Ord.Ord(function () {
  return eqCORSMode;
}, function (x) {
  return function (y) {
    if (x instanceof Anonymous && y instanceof Anonymous) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Anonymous) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Anonymous) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof UseCredentials && y instanceof UseCredentials) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.CORSMode (line 15, column 1 - line 15, column 44): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Anonymous: Anonymous,
  UseCredentials: UseCredentials,
  parse: parse,
  print: print,
  eqCORSMode: eqCORSMode,
  ordCORSMode: ordCORSMode,
  showDecodingHint: showDecodingHint
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"v4Oq":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Sync = function () {
  function Sync() {}

  ;
  Sync.value = new Sync();
  return Sync;
}();

var Async = function () {
  function Async() {}

  ;
  Async.value = new Async();
  return Async;
}();

var Auto = function () {
  function Auto() {}

  ;
  Auto.value = new Auto();
  return Auto;
}();

var showDecodingHint = new Data_Show.Show(function (v) {
  if (v instanceof Sync) {
    return "Sync";
  }

  ;

  if (v instanceof Async) {
    return "Async";
  }

  ;

  if (v instanceof Auto) {
    return "Auto";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 19, column 10 - line 22, column 19): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Sync) {
    return "sync";
  }

  ;

  if (v instanceof Async) {
    return "async";
  }

  ;

  if (v instanceof Auto) {
    return "auto";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 33, column 9 - line 36, column 17): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Auto.value);
  }

  ;

  if (v === "sync") {
    return new Data_Maybe.Just(Sync.value);
  }

  ;

  if (v === "async") {
    return new Data_Maybe.Just(Async.value);
  }

  ;

  if (v === "auto") {
    return new Data_Maybe.Just(Auto.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqDecodingHint = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Sync && y instanceof Sync) {
      return true;
    }

    ;

    if (x instanceof Async && y instanceof Async) {
      return true;
    }

    ;

    if (x instanceof Auto && y instanceof Auto) {
      return true;
    }

    ;
    return false;
  };
});
var ordDecodingHint = new Data_Ord.Ord(function () {
  return eqDecodingHint;
}, function (x) {
  return function (y) {
    if (x instanceof Sync && y instanceof Sync) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Sync) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Sync) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Async && y instanceof Async) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Async) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Async) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Auto && y instanceof Auto) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.DecodingHint (line 16, column 1 - line 16, column 52): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Sync: Sync,
  Async: Async,
  Auto: Auto,
  parse: parse,
  print: print,
  eqDecodingHint: eqDecodingHint,
  ordDecodingHint: ordDecodingHint,
  showDecodingHint: showDecodingHint
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"m9FH":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Eager = function () {
  function Eager() {}

  ;
  Eager.value = new Eager();
  return Eager;
}();

var Lazy = function () {
  function Lazy() {}

  ;
  Lazy.value = new Lazy();
  return Lazy;
}();

var showDecodingHint = new Data_Show.Show(function (v) {
  if (v instanceof Eager) {
    return "Eager";
  }

  ;

  if (v instanceof Lazy) {
    return "Lazy";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 18, column 10 - line 20, column 19): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Eager) {
    return "eager";
  }

  ;

  if (v instanceof Lazy) {
    return "lazy";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 31, column 9 - line 33, column 17): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Eager.value);
  }

  ;

  if (v === "eager") {
    return new Data_Maybe.Just(Eager.value);
  }

  ;

  if (v === "lazy") {
    return new Data_Maybe.Just(Lazy.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqDecodingHint = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Eager && y instanceof Eager) {
      return true;
    }

    ;

    if (x instanceof Lazy && y instanceof Lazy) {
      return true;
    }

    ;
    return false;
  };
});
var ordDecodingHint = new Data_Ord.Ord(function () {
  return eqDecodingHint;
}, function (x) {
  return function (y) {
    if (x instanceof Eager && y instanceof Eager) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Eager) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Eager) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Lazy && y instanceof Lazy) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLImageElement.Laziness (line 15, column 1 - line 15, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Eager: Eager,
  Lazy: Lazy,
  parse: parse,
  print: print,
  eqDecodingHint: eqDecodingHint,
  ordDecodingHint: ordDecodingHint,
  showDecodingHint: showDecodingHint
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"NUnG":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Effect_Uncurried = require("../Effect.Uncurried/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLImageElement_CORSMode = require("../Web.HTML.HTMLImageElement.CORSMode/index.js");

var Web_HTML_HTMLImageElement_DecodingHint = require("../Web.HTML.HTMLImageElement.DecodingHint/index.js");

var Web_HTML_HTMLImageElement_Laziness = require("../Web.HTML.HTMLImageElement.Laziness/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var setLoading = function setLoading(laziness) {
  return Effect_Uncurried.runEffectFn2($foreign["_setLoading"])(Web_HTML_HTMLImageElement_Laziness.print(laziness));
};

var setDecoding = function setDecoding(hint) {
  return Effect_Uncurried.runEffectFn2($foreign["_setDecoding"])(Web_HTML_HTMLImageElement_DecodingHint.print(hint));
};

var setCrossOrigin = function setCrossOrigin(mode) {
  return Effect_Uncurried.runEffectFn2($foreign["_setCrossOrigin"])(Web_HTML_HTMLImageElement_CORSMode.print(mode));
};

var loading = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(function () {
    var $3 = Data_Maybe.fromMaybe(Web_HTML_HTMLImageElement_Laziness.Eager.value);
    return function ($4) {
      return $3(Web_HTML_HTMLImageElement_Laziness.parse($4));
    };
  }());
  var $1 = Effect_Uncurried.runEffectFn1($foreign["_loading"]);
  return function ($2) {
    return $0($1($2));
  };
}();

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLImageElement");

var decoding = function () {
  var $5 = Data_Functor.map(Effect.functorEffect)(function () {
    var $8 = Data_Maybe.fromMaybe(Web_HTML_HTMLImageElement_DecodingHint.Auto.value);
    return function ($9) {
      return $8(Web_HTML_HTMLImageElement_DecodingHint.parse($9));
    };
  }());
  var $6 = Effect_Uncurried.runEffectFn1($foreign["_decoding"]);
  return function ($7) {
    return $5($6($7));
  };
}();

var crossOrigin = function () {
  var $10 = Data_Functor.map(Effect.functorEffect)(Control_Bind.composeKleisliFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLImageElement_CORSMode.parse)(Data_Nullable.toMaybe));
  var $11 = Effect_Uncurried.runEffectFn1($foreign["_crossOrigin"]);
  return function ($12) {
    return $10($11($12));
  };
}();

var create$prime = $foreign.createWithDimensions;
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  "create'": create$prime,
  crossOrigin: crossOrigin,
  setCrossOrigin: setCrossOrigin,
  decoding: decoding,
  setDecoding: setDecoding,
  loading: loading,
  setLoading: setLoading,
  create: $foreign.create,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  srcset: $foreign.srcset,
  setSrcset: $foreign.setSrcset,
  currentSrc: $foreign.currentSrc,
  sizes: $foreign.sizes,
  setSizes: $foreign.setSizes,
  useMap: $foreign.useMap,
  setUseMap: $foreign.setUseMap,
  isMap: $foreign.isMap,
  setIsMap: $foreign.setIsMap,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  naturalWidth: $foreign.naturalWidth,
  naturalHeight: $foreign.naturalHeight,
  referrerPolicy: $foreign.referrerPolicy,
  setReferrerPolicy: $foreign.setReferrerPolicy,
  complete: $foreign.complete
};
},{"./foreign.js":"TAWh","../Control.Bind/index.js":"VcTy","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Effect.Uncurried/index.js":"qn3Z","../Unsafe.Coerce/index.js":"ETUV","../Web.HTML.HTMLImageElement.CORSMode/index.js":"tgKv","../Web.HTML.HTMLImageElement.DecodingHint/index.js":"v4Oq","../Web.HTML.HTMLImageElement.Laziness/index.js":"m9FH","../Web.Internal.FFI/index.js":"fdUh"}],"gpPI":[function(require,module,exports) {
"use strict";

exports.accept = function (input) {
  return function () {
    return input.accept;
  };
};

exports.setAccept = function (accept) {
  return function (input) {
    return function () {
      input.accept = accept;
    };
  };
}; // ----------------------------------------------------------------------------


exports.alt = function (input) {
  return function () {
    return input.alt;
  };
};

exports.setAlt = function (alt) {
  return function (input) {
    return function () {
      input.alt = alt;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autocomplete = function (input) {
  return function () {
    return input.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (input) {
    return function () {
      input.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autofocus = function (input) {
  return function () {
    return input.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (input) {
    return function () {
      input.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultChecked = function (input) {
  return function () {
    return input.defaultChecked;
  };
};

exports.setDefaultChecked = function (defaultChecked) {
  return function (input) {
    return function () {
      input.defaultChecked = defaultChecked;
    };
  };
}; // ----------------------------------------------------------------------------


exports.checked = function (input) {
  return function () {
    return input.checked;
  };
};

exports.setChecked = function (checked) {
  return function (input) {
    return function () {
      input.checked = checked;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dirName = function (input) {
  return function () {
    return input.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (input) {
    return function () {
      input.dirName = dirName;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (input) {
  return function () {
    return input.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (input) {
    return function () {
      input.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (input) {
  return function () {
    return input.form;
  };
}; // ----------------------------------------------------------------------------


exports._files = function (input) {
  return function () {
    return input.files;
  };
}; // ----------------------------------------------------------------------------


exports.formAction = function (input) {
  return function () {
    return input.formAction;
  };
};

exports.setFormAction = function (formAction) {
  return function (input) {
    return function () {
      input.formAction = formAction;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formEnctype = function (input) {
  return function () {
    return input.formEnctype;
  };
};

exports.setFormEnctype = function (formEnctype) {
  return function (input) {
    return function () {
      input.formEnctype = formEnctype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formMethod = function (input) {
  return function () {
    return input.formMethod;
  };
};

exports.setFormMethod = function (formMethod) {
  return function (input) {
    return function () {
      input.formMethod = formMethod;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formNoValidate = function (input) {
  return function () {
    return input.formNoValidate;
  };
};

exports.setFormNoValidate = function (formNoValidate) {
  return function (input) {
    return function () {
      input.formNoValidate = formNoValidate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.formTarget = function (input) {
  return function () {
    return input.formTarget;
  };
};

exports.setFormTarget = function (formTarget) {
  return function (input) {
    return function () {
      input.formTarget = formTarget;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (input) {
  return function () {
    return input.height;
  };
};

exports.setHeight = function (height) {
  return function (input) {
    return function () {
      input.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.indeterminate = function (input) {
  return function () {
    return input.indeterminate;
  };
};

exports.setIndeterminate = function (indeterminate) {
  return function (input) {
    return function () {
      input.indeterminate = indeterminate;
    };
  };
}; // ----------------------------------------------------------------------------


exports._list = function (input) {
  return function () {
    return input.list;
  };
}; // ----------------------------------------------------------------------------


exports.max = function (input) {
  return function () {
    return input.max;
  };
};

exports.setMax = function (max) {
  return function (input) {
    return function () {
      input.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.maxLength = function (input) {
  return function () {
    return input.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (input) {
    return function () {
      input.maxLength = maxLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.min = function (input) {
  return function () {
    return input.min;
  };
};

exports.setMin = function (min) {
  return function (input) {
    return function () {
      input.min = min;
    };
  };
}; // ----------------------------------------------------------------------------


exports.minLength = function (input) {
  return function () {
    return input.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (input) {
    return function () {
      input.minLength = minLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.multiple = function (input) {
  return function () {
    return input.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (input) {
    return function () {
      input.multiple = multiple;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (input) {
  return function () {
    return input.name;
  };
};

exports.setName = function (name) {
  return function (input) {
    return function () {
      input.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.pattern = function (input) {
  return function () {
    return input.pattern;
  };
};

exports.setPattern = function (pattern) {
  return function (input) {
    return function () {
      input.pattern = pattern;
    };
  };
}; // ----------------------------------------------------------------------------


exports.placeholder = function (input) {
  return function () {
    return input.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (input) {
    return function () {
      input.placeholder = placeholder;
    };
  };
}; // ----------------------------------------------------------------------------


exports.readOnly = function (input) {
  return function () {
    return input.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (input) {
    return function () {
      input.readOnly = readOnly;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (input) {
  return function () {
    return input.required;
  };
};

exports.setRequired = function (required) {
  return function (input) {
    return function () {
      input.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.size = function (input) {
  return function () {
    return input.size;
  };
};

exports.setSize = function (size) {
  return function (input) {
    return function () {
      input.size = size;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (input) {
  return function () {
    return input.src;
  };
};

exports.setSrc = function (src) {
  return function (input) {
    return function () {
      input.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.step = function (input) {
  return function () {
    return input.step;
  };
};

exports.setStep = function (step) {
  return function (input) {
    return function () {
      input.step = step;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (input) {
  return function () {
    return input.type;
  };
};

exports.setType = function (type) {
  return function (input) {
    return function () {
      input.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (input) {
  return function () {
    return input.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (input) {
    return function () {
      input.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (input) {
  return function () {
    return input.value;
  };
};

exports.setValue = function (value) {
  return function (input) {
    return function () {
      input.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.valueAsDate = function (input) {
  return function () {
    return input.valueAsDate;
  };
};

exports.setValueAsDate = function (valueAsDate) {
  return function (input) {
    return function () {
      input.valueAsDate = valueAsDate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.valueAsNumber = function (input) {
  return function () {
    return input.valueAsNumber;
  };
};

exports.setValueAsNumber = function (valueAsNumber) {
  return function (input) {
    return function () {
      input.valueAsNumber = valueAsNumber;
    };
  };
}; // ----------------------------------------------------------------------------


exports.width = function (input) {
  return function () {
    return input.width;
  };
};

exports.setWidth = function (width) {
  return function (input) {
    return function () {
      input.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.stepUpBy = function (n) {
  return function (input) {
    return function () {
      input.stepUp(n);
    };
  };
}; // ----------------------------------------------------------------------------


exports.stepDownBy = function (n) {
  return function (input) {
    return function () {
      input.stepDown(n);
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (input) {
  return function () {
    return input.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (input) {
  return function () {
    return input.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (input) {
  return function () {
    return input.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (input) {
  return function () {
    return input.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (input) {
  return function () {
    return input.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (input) {
    return function () {
      input.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (input) {
  return function () {
    return input.labels;
  };
}; // ----------------------------------------------------------------------------


exports.select = function (input) {
  return function () {
    input.select();
  };
}; // ----------------------------------------------------------------------------


exports.selectionStart = function (input) {
  return function () {
    return input.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (input) {
    return function () {
      input.selectionStart = selectionStart;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionEnd = function (input) {
  return function () {
    return input.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (input) {
    return function () {
      input.selectionEnd = selectionEnd;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionDirection = function (input) {
  return function () {
    return input.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (input) {
    return function () {
      input.selectionDirection = selectionDirection;
    };
  };
}; // ----------------------------------------------------------------------------


exports.setRangeText = function (replacement) {
  return function (input) {
    return function () {
      input.setRangeText(replacement);
    };
  };
};

exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
}; // ----------------------------------------------------------------------------


exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (input) {
        return function () {
          input.setSelectionRange(start, end, direction, input);
        };
      };
    };
  };
};
},{}],"gUys":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Preserve = function () {
  function Preserve() {}

  ;
  Preserve.value = new Preserve();
  return Preserve;
}();

var Select = function () {
  function Select() {}

  ;
  Select.value = new Select();
  return Select;
}();

var Start = function () {
  function Start() {}

  ;
  Start.value = new Start();
  return Start;
}();

var End = function () {
  function End() {}

  ;
  End.value = new End();
  return End;
}();

var showSelectionMode = new Data_Show.Show(function (v) {
  if (v instanceof Preserve) {
    return "Preserve";
  }

  ;

  if (v instanceof Select) {
    return "Select";
  }

  ;

  if (v instanceof Start) {
    return "Start";
  }

  ;

  if (v instanceof End) {
    return "End";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 17, column 10 - line 21, column 17): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Preserve) {
    return "preserve";
  }

  ;

  if (v instanceof Select) {
    return "select";
  }

  ;

  if (v instanceof Start) {
    return "start";
  }

  ;

  if (v instanceof End) {
    return "end";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 32, column 9 - line 36, column 15): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "preserve") {
    return new Data_Maybe.Just(Preserve.value);
  }

  ;

  if (v === "select") {
    return new Data_Maybe.Just(Select.value);
  }

  ;

  if (v === "start") {
    return new Data_Maybe.Just(Start.value);
  }

  ;

  if (v === "end") {
    return new Data_Maybe.Just(End.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqSelectionMode = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Preserve && y instanceof Preserve) {
      return true;
    }

    ;

    if (x instanceof Select && y instanceof Select) {
      return true;
    }

    ;

    if (x instanceof Start && y instanceof Start) {
      return true;
    }

    ;

    if (x instanceof End && y instanceof End) {
      return true;
    }

    ;
    return false;
  };
});
var ordSelectionMode = new Data_Ord.Ord(function () {
  return eqSelectionMode;
}, function (x) {
  return function (y) {
    if (x instanceof Preserve && y instanceof Preserve) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Preserve) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Preserve) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Select && y instanceof Select) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Select) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Select) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Start && y instanceof Start) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Start) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Start) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof End && y instanceof End) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.SelectionMode (line 14, column 1 - line 14, column 54): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Preserve: Preserve,
  Select: Select,
  Start: Start,
  End: End,
  parse: parse,
  print: print,
  eqSelectionMode: eqSelectionMode,
  ordSelectionMode: ordSelectionMode,
  showSelectionMode: showSelectionMode
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"SZoe":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var stepUp$prime = $foreign.stepUpBy;
var stepUp = stepUp$prime(1);
var stepDown$prime = $foreign.stepDownBy;
var stepDown = stepDown$prime(1);

var setRangeText$prime = function setRangeText$prime(rpl) {
  return function (s) {
    return function (e) {
      return function (mode) {
        return function (area) {
          return function () {
            return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
          };
        };
      };
    };
  };
};

var list = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_list"]($1));
  };
}();

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLInputElement");

var form = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_form"]($3));
  };
}();

var files = function () {
  var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($5) {
    return $4($foreign["_files"]($5));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  files: files,
  list: list,
  stepUp: stepUp,
  "stepUp'": stepUp$prime,
  stepDown: stepDown,
  "stepDown'": stepDown$prime,
  "setRangeText'": setRangeText$prime,
  accept: $foreign.accept,
  setAccept: $foreign.setAccept,
  alt: $foreign.alt,
  setAlt: $foreign.setAlt,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  defaultChecked: $foreign.defaultChecked,
  setDefaultChecked: $foreign.setDefaultChecked,
  checked: $foreign.checked,
  setChecked: $foreign.setChecked,
  dirName: $foreign.dirName,
  setDirName: $foreign.setDirName,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  formAction: $foreign.formAction,
  setFormAction: $foreign.setFormAction,
  formEnctype: $foreign.formEnctype,
  setFormEnctype: $foreign.setFormEnctype,
  formMethod: $foreign.formMethod,
  setFormMethod: $foreign.setFormMethod,
  formNoValidate: $foreign.formNoValidate,
  setFormNoValidate: $foreign.setFormNoValidate,
  formTarget: $foreign.formTarget,
  setFormTarget: $foreign.setFormTarget,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  indeterminate: $foreign.indeterminate,
  setIndeterminate: $foreign.setIndeterminate,
  max: $foreign.max,
  setMax: $foreign.setMax,
  maxLength: $foreign.maxLength,
  setMaxLength: $foreign.setMaxLength,
  min: $foreign.min,
  setMin: $foreign.setMin,
  minLength: $foreign.minLength,
  setMinLength: $foreign.setMinLength,
  multiple: $foreign.multiple,
  setMultiple: $foreign.setMultiple,
  name: $foreign.name,
  setName: $foreign.setName,
  pattern: $foreign.pattern,
  setPattern: $foreign.setPattern,
  placeholder: $foreign.placeholder,
  setPlaceholder: $foreign.setPlaceholder,
  readOnly: $foreign.readOnly,
  setReadOnly: $foreign.setReadOnly,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  size: $foreign.size,
  setSize: $foreign.setSize,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  step: $foreign.step,
  setStep: $foreign.setStep,
  type_: $foreign.type_,
  setType: $foreign.setType,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  valueAsDate: $foreign.valueAsDate,
  setValueAsDate: $foreign.setValueAsDate,
  valueAsNumber: $foreign.valueAsNumber,
  setValueAsNumber: $foreign.setValueAsNumber,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels,
  select: $foreign.select,
  selectionStart: $foreign.selectionStart,
  setSelectionStart: $foreign.setSelectionStart,
  selectionEnd: $foreign.selectionEnd,
  setSelectionEnd: $foreign.setSelectionEnd,
  selectionDirection: $foreign.selectionDirection,
  setSelectionDirection: $foreign.setSelectionDirection,
  setRangeText: $foreign.setRangeText,
  setSelectionRange: $foreign.setSelectionRange
};
},{"./foreign.js":"gpPI","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.HTML.SelectionMode/index.js":"gUys","../Web.Internal.FFI/index.js":"fdUh"}],"JF8x":[function(require,module,exports) {
"use strict";

exports.autofocus = function (keygen) {
  return function () {
    return keygen.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (keygen) {
    return function () {
      keygen.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.challenge = function (keygen) {
  return function () {
    return keygen.challenge;
  };
};

exports.setChallenge = function (challenge) {
  return function (keygen) {
    return function () {
      keygen.challenge = challenge;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (keygen) {
  return function () {
    return keygen.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (keygen) {
    return function () {
      keygen.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (keygen) {
  return function () {
    return keygen.form;
  };
}; // ----------------------------------------------------------------------------


exports.keytype = function (keygen) {
  return function () {
    return keygen.keytype;
  };
};

exports.setKeytype = function (keytype) {
  return function (keygen) {
    return function () {
      keygen.keytype = keytype;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (keygen) {
  return function () {
    return keygen.name;
  };
};

exports.setName = function (name) {
  return function (keygen) {
    return function () {
      keygen.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (keygen) {
  return function () {
    return keygen.type;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (keygen) {
  return function () {
    return keygen.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (keygen) {
  return function () {
    return keygen.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (keygen) {
  return function () {
    return keygen.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (keygen) {
  return function () {
    return keygen.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (keygen) {
  return function () {
    return keygen.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (keygen) {
    return function () {
      keygen.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (keygen) {
  return function () {
    return keygen.labels;
  };
};
},{}],"yhaF":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLKeygenElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  challenge: $foreign.challenge,
  setChallenge: $foreign.setChallenge,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  keytype: $foreign.keytype,
  setKeytype: $foreign.setKeytype,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"JF8x","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"snxQ":[function(require,module,exports) {
"use strict";

exports.value = function (li) {
  return function () {
    return li.value;
  };
};

exports.setValue = function (value) {
  return function (li) {
    return function () {
      li.value = value;
    };
  };
};
},{}],"EVwJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLIElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"snxQ","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"TqmW":[function(require,module,exports) {
"use strict";

exports._form = function (label) {
  return function () {
    return label.form;
  };
}; // ----------------------------------------------------------------------------


exports.htmlFor = function (label) {
  return function () {
    return label.htmlFor;
  };
};

exports.setHtmlFor = function (htmlFor) {
  return function (label) {
    return function () {
      label.htmlFor = htmlFor;
    };
  };
}; // ----------------------------------------------------------------------------


exports._control = function (label) {
  return function () {
    return label.control;
  };
};
},{}],"MJpa":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLabelElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

var control = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_control"]($3));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  control: control,
  htmlFor: $foreign.htmlFor,
  setHtmlFor: $foreign.setHtmlFor
};
},{"./foreign.js":"TqmW","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"Fb1j":[function(require,module,exports) {
"use strict";

exports._form = function (le) {
  return function () {
    return le.form;
  };
};
},{}],"whCl":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLegendElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form
};
},{"./foreign.js":"Fb1j","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"VyrC":[function(require,module,exports) {
"use strict";

exports.disabled = function (link) {
  return function () {
    return link.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (link) {
    return function () {
      link.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.href = function (link) {
  return function () {
    return link.href;
  };
};

exports.setHref = function (href) {
  return function (link) {
    return function () {
      link.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (link) {
  return function () {
    return link.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (link) {
    return function () {
      link.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rel = function (link) {
  return function () {
    return link.rel;
  };
};

exports.setRel = function (rel) {
  return function (link) {
    return function () {
      link.rel = rel;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rev = function (link) {
  return function () {
    return link.rev;
  };
};

exports.setRev = function (rev) {
  return function (link) {
    return function () {
      link.rev = rev;
    };
  };
}; // ----------------------------------------------------------------------------


exports.relList = function (link) {
  return function () {
    return link.relList;
  };
}; // ----------------------------------------------------------------------------


exports.media = function (link) {
  return function () {
    return link.media;
  };
};

exports.setMedia = function (media) {
  return function (link) {
    return function () {
      link.media = media;
    };
  };
}; // ----------------------------------------------------------------------------


exports.hreflang = function (link) {
  return function () {
    return link.hreflang;
  };
};

exports.setHreflang = function (hreflang) {
  return function (link) {
    return function () {
      link.hreflang = hreflang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (link) {
  return function () {
    return link.type;
  };
};

exports.setType = function (type) {
  return function (link) {
    return function () {
      link.type = type;
    };
  };
};
},{}],"M6eI":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLLinkElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  href: $foreign.href,
  setHref: $foreign.setHref,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  rel: $foreign.rel,
  setRel: $foreign.setRel,
  rev: $foreign.rev,
  setRev: $foreign.setRev,
  relList: $foreign.relList,
  media: $foreign.media,
  setMedia: $foreign.setMedia,
  hreflang: $foreign.hreflang,
  setHreflang: $foreign.setHreflang,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"VyrC","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"AAVU":[function(require,module,exports) {
"use strict";

exports.name = function (map) {
  return function () {
    return map.name;
  };
};

exports.setName = function (name) {
  return function (map) {
    return function () {
      map.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.areas = function (map) {
  return function () {
    return map.areas;
  };
}; // ----------------------------------------------------------------------------


exports.images = function (map) {
  return function () {
    return map.images;
  };
};
},{}],"EcIC":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMapElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  areas: $foreign.areas,
  images: $foreign.images
};
},{"./foreign.js":"AAVU","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"UISE":[function(require,module,exports) {
"use strict";

exports.src = function (media) {
  return function () {
    return media.src;
  };
};

exports.setSrc = function (src) {
  return function (media) {
    return function () {
      media.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.currentSrc = function (media) {
  return function () {
    return media.currentSrc;
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (media) {
  return function () {
    return media.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (media) {
    return function () {
      media.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports._networkState = function (media) {
  return media.networkState;
}; // ----------------------------------------------------------------------------


exports.preload = function (media) {
  return function () {
    return media.preload;
  };
};

exports.setPreload = function (preload) {
  return function (media) {
    return function () {
      media.preload = preload;
    };
  };
}; // ----------------------------------------------------------------------------


exports.load = function (media) {
  return function () {
    return media.load();
  };
}; // ----------------------------------------------------------------------------


exports._canPlayType = function (type, media) {
  return media.canPlayType(type);
}; // ----------------------------------------------------------------------------


exports._readyState = function (media) {
  return media.readyState;
}; // ----------------------------------------------------------------------------


exports.seeking = function (media) {
  return function () {
    return media.seeking;
  };
}; // ----------------------------------------------------------------------------


exports.currentTime = function (media) {
  return function () {
    return media.currentTime;
  };
};

exports.setCurrentTime = function (currentTime) {
  return function (media) {
    return function () {
      media.currentTime = currentTime;
    };
  };
}; // ----------------------------------------------------------------------------


exports.duration = function (media) {
  return function () {
    return media.duration;
  };
}; // ----------------------------------------------------------------------------


exports.getStartDate = function (media) {
  return function () {
    return media.getStartDate();
  };
}; // ----------------------------------------------------------------------------


exports.paused = function (media) {
  return function () {
    return media.paused;
  };
}; // ----------------------------------------------------------------------------


exports.defaultPlaybackRate = function (media) {
  return function () {
    return media.defaultPlaybackRate;
  };
};

exports.setDefaultPlaybackRate = function (defaultPlaybackRate) {
  return function (media) {
    return function () {
      media.defaultPlaybackRate = defaultPlaybackRate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.playbackRate = function (media) {
  return function () {
    return media.playbackRate;
  };
};

exports.setPlaybackRate = function (playbackRate) {
  return function (media) {
    return function () {
      media.playbackRate = playbackRate;
    };
  };
}; // ----------------------------------------------------------------------------


exports.ended = function (media) {
  return function () {
    return media.ended;
  };
}; // ----------------------------------------------------------------------------


exports.autoplay = function (media) {
  return function () {
    return media.autoplay;
  };
};

exports.setAutoplay = function (autoplay) {
  return function (media) {
    return function () {
      media.autoplay = autoplay;
    };
  };
}; // ----------------------------------------------------------------------------


exports.loop = function (media) {
  return function () {
    return media.loop;
  };
};

exports.setLoop = function (loop) {
  return function (media) {
    return function () {
      media.loop = loop;
    };
  };
}; // ----------------------------------------------------------------------------


exports.play = function (media) {
  return function () {
    media.play();
  };
}; // ----------------------------------------------------------------------------


exports.pause = function (media) {
  return function () {
    media.pause();
  };
}; // ----------------------------------------------------------------------------


exports.mediaGroup = function (media) {
  return function () {
    return media.mediaGroup;
  };
};

exports.setMediaGroup = function (mediaGroup) {
  return function (media) {
    return function () {
      media.mediaGroup = mediaGroup;
    };
  };
}; // ----------------------------------------------------------------------------


exports.controls = function (media) {
  return function () {
    return media.controls;
  };
};

exports.setControls = function (controls) {
  return function (media) {
    return function () {
      media.controls = controls;
    };
  };
}; // ----------------------------------------------------------------------------


exports.volume = function (media) {
  return function () {
    return media.volume;
  };
};

exports.setVolume = function (volume) {
  return function (media) {
    return function () {
      media.volume = volume;
    };
  };
}; // ----------------------------------------------------------------------------


exports.muted = function (media) {
  return function () {
    return media.muted;
  };
};

exports.setMuted = function (muted) {
  return function (media) {
    return function () {
      media.muted = muted;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultMuted = function (media) {
  return function () {
    return media.defaultMuted;
  };
};

exports.setDefaultMuted = function (defaultMuted) {
  return function (media) {
    return function () {
      media.defaultMuted = defaultMuted;
    };
  };
};
},{}],"Yzse":[function(require,module,exports) {
"use strict";

exports.toCharCode = function (c) {
  return c.charCodeAt(0);
};

exports.fromCharCode = function (c) {
  return String.fromCharCode(c);
};
},{}],"oOsU":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unfoldable1 = require("../Data.Unfoldable1/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Enum = function Enum(Ord0, pred, succ) {
  this.Ord0 = Ord0;
  this.pred = pred;
  this.succ = succ;
};

var Cardinality = function Cardinality(x) {
  return x;
};

var BoundedEnum = function BoundedEnum(Bounded0, Enum1, cardinality, fromEnum, toEnum) {
  this.Bounded0 = Bounded0;
  this.Enum1 = Enum1;
  this.cardinality = cardinality;
  this.fromEnum = fromEnum;
  this.toEnum = toEnum;
};

var toEnum = function toEnum(dict) {
  return dict.toEnum;
};

var succ = function succ(dict) {
  return dict.succ;
};

var upFromIncluding = function upFromIncluding(dictEnum) {
  return function (dictUnfoldable1) {
    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(succ(dictEnum)));
  };
};

var showCardinality = new Data_Show.Show(function (v) {
  return "(Cardinality " + (Data_Show.show(Data_Show.showInt)(v) + ")");
});

var pred = function pred(dict) {
  return dict.pred;
};

var ordCardinality = Data_Ord.ordInt;
var newtypeCardinality = new Data_Newtype.Newtype(function () {
  return undefined;
});

var fromEnum = function fromEnum(dict) {
  return dict.fromEnum;
};

var toEnumWithDefaults = function toEnumWithDefaults(dictBoundedEnum) {
  return function (low) {
    return function (high) {
      return function (x) {
        var v = toEnum(dictBoundedEnum)(x);

        if (v instanceof Data_Maybe.Just) {
          return v.value0;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          var $51 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));

          if ($51) {
            return low;
          }

          ;
          return high;
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
      };
    };
  };
};

var eqCardinality = Data_Eq.eqInt;
var enumUnit = new Enum(function () {
  return Data_Ord.ordUnit;
}, Data_Function["const"](Data_Maybe.Nothing.value), Data_Function["const"](Data_Maybe.Nothing.value));

var enumTuple = function enumTuple(dictEnum) {
  return function (dictBoundedEnum) {
    return new Enum(function () {
      return Data_Tuple.ordTuple(dictEnum.Ord0())(dictBoundedEnum.Enum1().Ord0());
    }, function (v) {
      return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.top(dictBoundedEnum.Bounded0())))(pred(dictEnum)(v.value0)))(function () {
        var $93 = Data_Tuple.Tuple.create(v.value0);
        return function ($94) {
          return Data_Maybe.Just.create($93($94));
        };
      }())(pred(dictBoundedEnum.Enum1())(v.value1));
    }, function (v) {
      return Data_Maybe.maybe(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_Tuple.Tuple.create)(Data_Bounded.bottom(dictBoundedEnum.Bounded0())))(succ(dictEnum)(v.value0)))(function () {
        var $95 = Data_Tuple.Tuple.create(v.value0);
        return function ($96) {
          return Data_Maybe.Just.create($95($96));
        };
      }())(succ(dictBoundedEnum.Enum1())(v.value1));
    });
  };
};

var enumOrdering = new Enum(function () {
  return Data_Ord.ordOrdering;
}, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return new Data_Maybe.Just(Data_Ordering.LT.value);
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [v.constructor.name]);
}, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return new Data_Maybe.Just(Data_Ordering.GT.value);
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): " + [v.constructor.name]);
});

var enumMaybe = function enumMaybe(dictBoundedEnum) {
  return new Enum(function () {
    return Data_Maybe.ordMaybe(dictBoundedEnum.Enum1().Ord0());
  }, function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return new Data_Maybe.Just(pred(dictBoundedEnum.Enum1())(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [v.constructor.name]);
  }, function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return new Data_Maybe.Just(new Data_Maybe.Just(Data_Bounded.bottom(dictBoundedEnum.Bounded0())));
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(dictBoundedEnum.Enum1())(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): " + [v.constructor.name]);
  });
};

var enumInt = new Enum(function () {
  return Data_Ord.ordInt;
}, function (n) {
  var $64 = n > Data_Bounded.bottom(Data_Bounded.boundedInt);

  if ($64) {
    return new Data_Maybe.Just(n - 1 | 0);
  }

  ;
  return Data_Maybe.Nothing.value;
}, function (n) {
  var $65 = n < Data_Bounded.top(Data_Bounded.boundedInt);

  if ($65) {
    return new Data_Maybe.Just(n + 1 | 0);
  }

  ;
  return Data_Maybe.Nothing.value;
});

var enumFromTo = function enumFromTo(dictEnum) {
  return function (dictUnfoldable1) {
    var go = function go(step) {
      return function (op) {
        return function (to) {
          return function (a) {
            return new Data_Tuple.Tuple(a, Control_Bind.bind(Data_Maybe.bindMaybe)(step(a))(function (a$prime) {
              return Data_Functor.voidLeft(Data_Maybe.functorMaybe)(Control_Alternative.guard(Data_Maybe.alternativeMaybe)(op(a$prime)(to)))(a$prime);
            }));
          };
        };
      };
    };

    return function (v) {
      return function (v1) {
        if (Data_Eq.eq(dictEnum.Ord0().Eq0())(v)(v1)) {
          return Data_Unfoldable1.singleton(dictUnfoldable1)(v);
        }

        ;

        if (Data_Ord.lessThan(dictEnum.Ord0())(v)(v1)) {
          return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(succ(dictEnum))(Data_Ord.lessThanOrEq(dictEnum.Ord0()))(v1))(v);
        }

        ;

        if (Data_Boolean.otherwise) {
          return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(go(pred(dictEnum))(Data_Ord.greaterThanOrEq(dictEnum.Ord0()))(v1))(v);
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };
};

var enumFromThenTo = function enumFromThenTo(dictUnfoldable) {
  return function (dictFunctor) {
    return function (dictBoundedEnum) {
      var go = function go(step) {
        return function (to) {
          return function (e) {
            if (e <= to) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(e, e + step | 0));
            }

            ;

            if (Data_Boolean.otherwise) {
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Data.Enum (line 217, column 5 - line 219, column 28): " + [step.constructor.name, to.constructor.name, e.constructor.name]);
          };
        };
      };

      return function (a) {
        return function (b) {
          return function (c) {
            var c$prime = fromEnum(dictBoundedEnum)(c);
            var b$prime = fromEnum(dictBoundedEnum)(b);
            var a$prime = fromEnum(dictBoundedEnum)(a);
            return Data_Functor.map(dictFunctor)(function () {
              var $97 = Data_Maybe.fromJust();
              var $98 = toEnum(dictBoundedEnum);
              return function ($99) {
                return $97($98($99));
              };
            }())(Data_Unfoldable.unfoldr(dictUnfoldable)(go(b$prime - a$prime | 0)(c$prime))(a$prime));
          };
        };
      };
    };
  };
};

var enumEither = function enumEither(dictBoundedEnum) {
  return function (dictBoundedEnum1) {
    return new Enum(function () {
      return Data_Either.ordEither(dictBoundedEnum.Enum1().Ord0())(dictBoundedEnum1.Enum1().Ord0());
    }, function (v) {
      if (v instanceof Data_Either.Left) {
        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($100) {
          return Data_Maybe.Just.create(Data_Either.Left.create($100));
        })(pred(dictBoundedEnum.Enum1())(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Left(Data_Bounded.top(dictBoundedEnum.Bounded0()))))(function ($101) {
          return Data_Maybe.Just.create(Data_Either.Right.create($101));
        })(pred(dictBoundedEnum1.Enum1())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [v.constructor.name]);
    }, function (v) {
      if (v instanceof Data_Either.Left) {
        return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Right(Data_Bounded.bottom(dictBoundedEnum1.Bounded0()))))(function ($102) {
          return Data_Maybe.Just.create(Data_Either.Left.create($102));
        })(succ(dictBoundedEnum.Enum1())(v.value0));
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($103) {
          return Data_Maybe.Just.create(Data_Either.Right.create($103));
        })(succ(dictBoundedEnum1.Enum1())(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): " + [v.constructor.name]);
    });
  };
};

var enumBoolean = new Enum(function () {
  return Data_Ord.ordBoolean;
}, function (v) {
  if (v) {
    return new Data_Maybe.Just(false);
  }

  ;
  return Data_Maybe.Nothing.value;
}, function (v) {
  if (!v) {
    return new Data_Maybe.Just(true);
  }

  ;
  return Data_Maybe.Nothing.value;
});

var downFromIncluding = function downFromIncluding(dictEnum) {
  return function (dictUnfoldable1) {
    return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(Control_Apply.apply(Control_Apply.applyFn)(Data_Tuple.Tuple.create)(pred(dictEnum)));
  };
};

var diag = function diag(a) {
  return new Data_Tuple.Tuple(a, a);
};

var downFrom = function downFrom(dictEnum) {
  return function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function () {
      var $104 = Data_Functor.map(Data_Maybe.functorMaybe)(diag);
      var $105 = pred(dictEnum);
      return function ($106) {
        return $104($105($106));
      };
    }());
  };
};

var upFrom = function upFrom(dictEnum) {
  return function (dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function () {
      var $107 = Data_Functor.map(Data_Maybe.functorMaybe)(diag);
      var $108 = succ(dictEnum);
      return function ($109) {
        return $107($108($109));
      };
    }());
  };
};

var defaultToEnum = function defaultToEnum(dictBounded) {
  return function (dictEnum) {
    return function (i$prime) {
      var go = function go($copy_i) {
        return function ($copy_x) {
          var $tco_var_i = $copy_i;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(i, x) {
            var $79 = i === 0;

            if ($79) {
              $tco_done = true;
              return new Data_Maybe.Just(x);
            }

            ;
            var v = succ(dictEnum)(x);

            if (v instanceof Data_Maybe.Just) {
              $tco_var_i = i - 1 | 0;
              $copy_x = v.value0;
              return;
            }

            ;

            if (v instanceof Data_Maybe.Nothing) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
            }

            ;
            throw new Error("Failed pattern match at Data.Enum (line 296, column 12 - line 298, column 33): " + [v.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_i, $copy_x);
          }

          ;
          return $tco_result;
        };
      };

      var $82 = i$prime < 0;

      if ($82) {
        return Data_Maybe.Nothing.value;
      }

      ;
      return go(i$prime)(Data_Bounded.bottom(dictBounded));
    };
  };
};

var defaultSucc = function defaultSucc(toEnum$prime) {
  return function (fromEnum$prime) {
    return function (a) {
      return toEnum$prime(fromEnum$prime(a) + 1 | 0);
    };
  };
};

var defaultPred = function defaultPred(toEnum$prime) {
  return function (fromEnum$prime) {
    return function (a) {
      return toEnum$prime(fromEnum$prime(a) - 1 | 0);
    };
  };
};

var defaultFromEnum = function defaultFromEnum(dictEnum) {
  var go = function go($copy_i) {
    return function ($copy_x) {
      var $tco_var_i = $copy_i;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(i, x) {
        var v = pred(dictEnum)(x);

        if (v instanceof Data_Maybe.Just) {
          $tco_var_i = i + 1 | 0;
          $copy_x = v.value0;
          return;
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return i;
        }

        ;
        throw new Error("Failed pattern match at Data.Enum (line 309, column 5 - line 311, column 19): " + [v.constructor.name]);
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_i, $copy_x);
      }

      ;
      return $tco_result;
    };
  };

  return go(0);
};

var defaultCardinality = function defaultCardinality(dictBounded) {
  return function (dictEnum) {
    var go = function go($copy_i) {
      return function ($copy_x) {
        var $tco_var_i = $copy_i;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(i, x) {
          var v = succ(dictEnum)(x);

          if (v instanceof Data_Maybe.Just) {
            $tco_var_i = i + 1 | 0;
            $copy_x = v.value0;
            return;
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            $tco_done = true;
            return i;
          }

          ;
          throw new Error("Failed pattern match at Data.Enum (line 276, column 5 - line 278, column 19): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_i, $copy_x);
        }

        ;
        return $tco_result;
      };
    };

    return Cardinality(go(1)(Data_Bounded.bottom(dictBounded)));
  };
};

var charToEnum = function charToEnum(v) {
  if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
    return new Data_Maybe.Just($foreign.fromCharCode(v));
  }

  ;
  return Data_Maybe.Nothing.value;
};

var enumChar = new Enum(function () {
  return Data_Ord.ordChar;
}, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));

var cardinality = function cardinality(dict) {
  return dict.cardinality;
};

var boundedEnumUnit = new BoundedEnum(function () {
  return Data_Bounded.boundedUnit;
}, function () {
  return enumUnit;
}, 1, Data_Function["const"](0), function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(Data_Unit.unit);
  }

  ;
  return Data_Maybe.Nothing.value;
});
var boundedEnumOrdering = new BoundedEnum(function () {
  return Data_Bounded.boundedOrdering;
}, function () {
  return enumOrdering;
}, 3, function (v) {
  if (v instanceof Data_Ordering.LT) {
    return 0;
  }

  ;

  if (v instanceof Data_Ordering.EQ) {
    return 1;
  }

  ;

  if (v instanceof Data_Ordering.GT) {
    return 2;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 137, column 1 - line 145, column 18): " + [v.constructor.name]);
}, function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(Data_Ordering.LT.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Data_Ordering.EQ.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Data_Ordering.GT.value);
  }

  ;
  return Data_Maybe.Nothing.value;
});
var boundedEnumChar = new BoundedEnum(function () {
  return Data_Bounded.boundedChar;
}, function () {
  return enumChar;
}, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
var boundedEnumBoolean = new BoundedEnum(function () {
  return Data_Bounded.boundedBoolean;
}, function () {
  return enumBoolean;
}, 2, function (v) {
  if (!v) {
    return 0;
  }

  ;

  if (v) {
    return 1;
  }

  ;
  throw new Error("Failed pattern match at Data.Enum (line 118, column 1 - line 124, column 20): " + [v.constructor.name]);
}, function (v) {
  if (v === 0) {
    return new Data_Maybe.Just(false);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(true);
  }

  ;
  return Data_Maybe.Nothing.value;
});
module.exports = {
  Enum: Enum,
  succ: succ,
  pred: pred,
  BoundedEnum: BoundedEnum,
  cardinality: cardinality,
  toEnum: toEnum,
  fromEnum: fromEnum,
  toEnumWithDefaults: toEnumWithDefaults,
  Cardinality: Cardinality,
  enumFromTo: enumFromTo,
  enumFromThenTo: enumFromThenTo,
  upFrom: upFrom,
  upFromIncluding: upFromIncluding,
  downFrom: downFrom,
  downFromIncluding: downFromIncluding,
  defaultSucc: defaultSucc,
  defaultPred: defaultPred,
  defaultCardinality: defaultCardinality,
  defaultToEnum: defaultToEnum,
  defaultFromEnum: defaultFromEnum,
  enumBoolean: enumBoolean,
  enumInt: enumInt,
  enumChar: enumChar,
  enumUnit: enumUnit,
  enumOrdering: enumOrdering,
  enumMaybe: enumMaybe,
  enumEither: enumEither,
  enumTuple: enumTuple,
  boundedEnumBoolean: boundedEnumBoolean,
  boundedEnumChar: boundedEnumChar,
  boundedEnumUnit: boundedEnumUnit,
  boundedEnumOrdering: boundedEnumOrdering,
  newtypeCardinality: newtypeCardinality,
  eqCardinality: eqCardinality,
  ordCardinality: ordCardinality,
  showCardinality: showCardinality
};
},{"./foreign.js":"Yzse","../Control.Alternative/index.js":"aHia","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Data.Boolean/index.js":"ObQr","../Data.Bounded/index.js":"kcUU","../Data.Either/index.js":"B2JL","../Data.Eq/index.js":"Pq4F","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW","../Data.Unfoldable1/index.js":"S0Nl","../Data.Unit/index.js":"NhVk"}],"dagE":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Unspecified = function () {
  function Unspecified() {}

  ;
  Unspecified.value = new Unspecified();
  return Unspecified;
}();

var Maybe = function () {
  function Maybe() {}

  ;
  Maybe.value = new Maybe();
  return Maybe;
}();

var Probably = function () {
  function Probably() {}

  ;
  Probably.value = new Probably();
  return Probably;
}();

var showCanPlayType = new Data_Show.Show(function (v) {
  if (v instanceof Unspecified) {
    return "Unspecified";
  }

  ;

  if (v instanceof Maybe) {
    return "Maybe";
  }

  ;

  if (v instanceof Probably) {
    return "Probably";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 16, column 10 - line 19, column 27): " + [v.constructor.name]);
});

var print = function print(v) {
  if (v instanceof Unspecified) {
    return "";
  }

  ;

  if (v instanceof Maybe) {
    return "maybe";
  }

  ;

  if (v instanceof Probably) {
    return "probably";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 29, column 9 - line 32, column 25): " + [v.constructor.name]);
};

var parse = function parse(v) {
  if (v === "") {
    return new Data_Maybe.Just(Unspecified.value);
  }

  ;

  if (v === "maybe") {
    return new Data_Maybe.Just(Maybe.value);
  }

  ;

  if (v === "probably") {
    return new Data_Maybe.Just(Probably.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var eqCanPlayType = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Unspecified && y instanceof Unspecified) {
      return true;
    }

    ;

    if (x instanceof Maybe && y instanceof Maybe) {
      return true;
    }

    ;

    if (x instanceof Probably && y instanceof Probably) {
      return true;
    }

    ;
    return false;
  };
});
var ordCanPlayType = new Data_Ord.Ord(function () {
  return eqCanPlayType;
}, function (x) {
  return function (y) {
    if (x instanceof Unspecified && y instanceof Unspecified) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Unspecified) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Unspecified) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Maybe && y instanceof Maybe) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Maybe) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Maybe) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Probably && y instanceof Probably) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.CanPlayType (line 13, column 1 - line 13, column 50): " + [x.constructor.name, y.constructor.name]);
  };
});
module.exports = {
  Unspecified: Unspecified,
  Maybe: Maybe,
  Probably: Probably,
  parse: parse,
  print: print,
  eqCanPlayType: eqCanPlayType,
  ordCanPlayType: ordCanPlayType,
  showCanPlayType: showCanPlayType
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"gFNs":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var Empty = function () {
  function Empty() {}

  ;
  Empty.value = new Empty();
  return Empty;
}();

var Idle = function () {
  function Idle() {}

  ;
  Idle.value = new Idle();
  return Idle;
}();

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var NoSource = function () {
  function NoSource() {}

  ;
  NoSource.value = new NoSource();
  return NoSource;
}();

var toEnumNetworkState = function toEnumNetworkState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(Empty.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Idle.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(NoSource.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showNetworkState = new Data_Show.Show(function (v) {
  if (v instanceof Empty) {
    return "Empty";
  }

  ;

  if (v instanceof Idle) {
    return "Idle";
  }

  ;

  if (v instanceof Loading) {
    return "Loading";
  }

  ;

  if (v instanceof NoSource) {
    return "NoSource";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 29, column 1 - line 33, column 29): " + [v.constructor.name]);
});

var fromEnumNetworkState = function fromEnumNetworkState(v) {
  if (v instanceof Empty) {
    return 0;
  }

  ;

  if (v instanceof Idle) {
    return 1;
  }

  ;

  if (v instanceof Loading) {
    return 2;
  }

  ;

  if (v instanceof NoSource) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 46, column 3 - line 50, column 18): " + [v.constructor.name]);
};

var eqNetworkState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Empty && y instanceof Empty) {
      return true;
    }

    ;

    if (x instanceof Idle && y instanceof Idle) {
      return true;
    }

    ;

    if (x instanceof Loading && y instanceof Loading) {
      return true;
    }

    ;

    if (x instanceof NoSource && y instanceof NoSource) {
      return true;
    }

    ;
    return false;
  };
});
var ordNetworkState = new Data_Ord.Ord(function () {
  return eqNetworkState;
}, function (x) {
  return function (y) {
    if (x instanceof Empty && y instanceof Empty) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Empty) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Empty) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Idle && y instanceof Idle) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Idle) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Idle) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Loading && y instanceof Loading) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loading) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loading) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof NoSource && y instanceof NoSource) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.NetworkState (line 14, column 1 - line 14, column 52): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumNetworkState = new Data_Enum.Enum(function () {
  return ordNetworkState;
}, Data_Enum.defaultPred(toEnumNetworkState)(fromEnumNetworkState), Data_Enum.defaultSucc(toEnumNetworkState)(fromEnumNetworkState));
var boundedNetworkState = new Data_Bounded.Bounded(function () {
  return ordNetworkState;
}, Empty.value, NoSource.value);
var boundedEnumNetworkState = new Data_Enum.BoundedEnum(function () {
  return boundedNetworkState;
}, function () {
  return enumNetworkState;
}, 4, fromEnumNetworkState, toEnumNetworkState);
module.exports = {
  Empty: Empty,
  Idle: Idle,
  Loading: Loading,
  NoSource: NoSource,
  eqNetworkState: eqNetworkState,
  ordNetworkState: ordNetworkState,
  boundedNetworkState: boundedNetworkState,
  enumNetworkState: enumNetworkState,
  boundedEnumNetworkState: boundedEnumNetworkState,
  showNetworkState: showNetworkState
};
},{"../Data.Bounded/index.js":"kcUU","../Data.Enum/index.js":"oOsU","../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"Ot77":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var HaveNothing = function () {
  function HaveNothing() {}

  ;
  HaveNothing.value = new HaveNothing();
  return HaveNothing;
}();

var HaveMetadata = function () {
  function HaveMetadata() {}

  ;
  HaveMetadata.value = new HaveMetadata();
  return HaveMetadata;
}();

var HaveCurrentData = function () {
  function HaveCurrentData() {}

  ;
  HaveCurrentData.value = new HaveCurrentData();
  return HaveCurrentData;
}();

var HaveFutureData = function () {
  function HaveFutureData() {}

  ;
  HaveFutureData.value = new HaveFutureData();
  return HaveFutureData;
}();

var HaveEnoughData = function () {
  function HaveEnoughData() {}

  ;
  HaveEnoughData.value = new HaveEnoughData();
  return HaveEnoughData;
}();

var toEnumReadyState = function toEnumReadyState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(HaveNothing.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(HaveMetadata.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(HaveCurrentData.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just(HaveFutureData.value);
  }

  ;

  if (v === 4) {
    return new Data_Maybe.Just(HaveEnoughData.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showReadyState = new Data_Show.Show(function (v) {
  if (v instanceof HaveNothing) {
    return "HaveNothing";
  }

  ;

  if (v instanceof HaveMetadata) {
    return "HaveMetadata";
  }

  ;

  if (v instanceof HaveCurrentData) {
    return "HaveCurrentData";
  }

  ;

  if (v instanceof HaveFutureData) {
    return "HaveFutureData";
  }

  ;

  if (v instanceof HaveEnoughData) {
    return "HaveEnoughData";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 30, column 1 - line 35, column 41): " + [v.constructor.name]);
});

var fromEnumReadyState = function fromEnumReadyState(v) {
  if (v instanceof HaveNothing) {
    return 0;
  }

  ;

  if (v instanceof HaveMetadata) {
    return 1;
  }

  ;

  if (v instanceof HaveCurrentData) {
    return 2;
  }

  ;

  if (v instanceof HaveFutureData) {
    return 3;
  }

  ;

  if (v instanceof HaveEnoughData) {
    return 4;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 49, column 3 - line 54, column 24): " + [v.constructor.name]);
};

var eqReadyState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof HaveNothing && y instanceof HaveNothing) {
      return true;
    }

    ;

    if (x instanceof HaveMetadata && y instanceof HaveMetadata) {
      return true;
    }

    ;

    if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) {
      return true;
    }

    ;

    if (x instanceof HaveFutureData && y instanceof HaveFutureData) {
      return true;
    }

    ;

    if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) {
      return true;
    }

    ;
    return false;
  };
});
var ordReadyState = new Data_Ord.Ord(function () {
  return eqReadyState;
}, function (x) {
  return function (y) {
    if (x instanceof HaveNothing && y instanceof HaveNothing) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HaveNothing) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HaveNothing) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HaveMetadata && y instanceof HaveMetadata) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HaveMetadata) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HaveMetadata) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HaveCurrentData && y instanceof HaveCurrentData) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HaveCurrentData) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HaveCurrentData) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HaveFutureData && y instanceof HaveFutureData) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof HaveFutureData) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof HaveFutureData) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof HaveEnoughData && y instanceof HaveEnoughData) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLMediaElement.ReadyState (line 15, column 1 - line 15, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumReadyState = new Data_Enum.Enum(function () {
  return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function () {
  return ordReadyState;
}, HaveNothing.value, HaveEnoughData.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
  return boundedReadyState;
}, function () {
  return enumReadyState;
}, 5, fromEnumReadyState, toEnumReadyState);
module.exports = {
  HaveNothing: HaveNothing,
  HaveMetadata: HaveMetadata,
  HaveCurrentData: HaveCurrentData,
  HaveFutureData: HaveFutureData,
  HaveEnoughData: HaveEnoughData,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  boundedReadyState: boundedReadyState,
  enumReadyState: enumReadyState,
  boundedEnumReadyState: boundedEnumReadyState,
  showReadyState: showReadyState
};
},{"../Data.Bounded/index.js":"kcUU","../Data.Enum/index.js":"oOsU","../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"xgHL":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLMediaElement_CanPlayType = require("../Web.HTML.HTMLMediaElement.CanPlayType/index.js");

var Web_HTML_HTMLMediaElement_NetworkState = require("../Web.HTML.HTMLMediaElement.NetworkState/index.js");

var Web_HTML_HTMLMediaElement_ReadyState = require("../Web.HTML.HTMLMediaElement.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var readyState = function readyState(el) {
  return Data_Functor.map(Effect.functorEffect)(function () {
    var $0 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_ReadyState.HaveNothing.value);
    var $1 = Data_Enum.toEnum(Web_HTML_HTMLMediaElement_ReadyState.boundedEnumReadyState);
    return function ($2) {
      return $0($1($2));
    };
  }())(function () {
    return $foreign["_readyState"](el);
  });
};

var networkState = function networkState(el) {
  return Data_Functor.map(Effect.functorEffect)(function () {
    var $3 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_NetworkState.Empty.value);
    var $4 = Data_Enum.toEnum(Web_HTML_HTMLMediaElement_NetworkState.boundedEnumNetworkState);
    return function ($5) {
      return $3($4($5));
    };
  }())(function () {
    return $foreign["_networkState"](el);
  });
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMediaElement");

var canPlayType = function canPlayType(ty) {
  return function (el) {
    return Data_Functor.map(Effect.functorEffect)(function () {
      var $6 = Data_Maybe.fromMaybe(Web_HTML_HTMLMediaElement_CanPlayType.Unspecified.value);
      return function ($7) {
        return $6(Web_HTML_HTMLMediaElement_CanPlayType.parse($7));
      };
    }())(function () {
      return $foreign["_canPlayType"](ty, el);
    });
  };
};

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  networkState: networkState,
  canPlayType: canPlayType,
  readyState: readyState,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  currentSrc: $foreign.currentSrc,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  preload: $foreign.preload,
  setPreload: $foreign.setPreload,
  load: $foreign.load,
  seeking: $foreign.seeking,
  currentTime: $foreign.currentTime,
  setCurrentTime: $foreign.setCurrentTime,
  duration: $foreign.duration,
  getStartDate: $foreign.getStartDate,
  paused: $foreign.paused,
  defaultPlaybackRate: $foreign.defaultPlaybackRate,
  setDefaultPlaybackRate: $foreign.setDefaultPlaybackRate,
  playbackRate: $foreign.playbackRate,
  setPlaybackRate: $foreign.setPlaybackRate,
  ended: $foreign.ended,
  autoplay: $foreign.autoplay,
  setAutoplay: $foreign.setAutoplay,
  loop: $foreign.loop,
  setLoop: $foreign.setLoop,
  play: $foreign.play,
  pause: $foreign.pause,
  mediaGroup: $foreign.mediaGroup,
  setMediaGroup: $foreign.setMediaGroup,
  controls: $foreign.controls,
  setControls: $foreign.setControls,
  volume: $foreign.volume,
  setVolume: $foreign.setVolume,
  muted: $foreign.muted,
  setMuted: $foreign.setMuted,
  defaultMuted: $foreign.defaultMuted,
  setDefaultMuted: $foreign.setDefaultMuted
};
},{"./foreign.js":"UISE","../Data.Enum/index.js":"oOsU","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.HTML.HTMLMediaElement.CanPlayType/index.js":"dagE","../Web.HTML.HTMLMediaElement.NetworkState/index.js":"gFNs","../Web.HTML.HTMLMediaElement.ReadyState/index.js":"Ot77","../Web.Internal.FFI/index.js":"fdUh"}],"olzK":[function(require,module,exports) {
"use strict";

exports.name = function (meta) {
  return function () {
    return meta.name;
  };
};

exports.setName = function (name) {
  return function (meta) {
    return function () {
      meta.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.httpEquiv = function (meta) {
  return function () {
    return meta.httpEquiv;
  };
};

exports.setHttpEquiv = function (httpEquiv) {
  return function (meta) {
    return function () {
      meta.httpEquiv = httpEquiv;
    };
  };
}; // ----------------------------------------------------------------------------


exports.content = function (meta) {
  return function () {
    return meta.content;
  };
};

exports.setContent = function (content) {
  return function (meta) {
    return function () {
      meta.content = content;
    };
  };
};
},{}],"KGe4":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMetaElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  httpEquiv: $foreign.httpEquiv,
  setHttpEquiv: $foreign.setHttpEquiv,
  content: $foreign.content,
  setContent: $foreign.setContent
};
},{"./foreign.js":"olzK","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"MQQy":[function(require,module,exports) {
"use strict";

exports.value = function (meter) {
  return function () {
    return meter.value;
  };
};

exports.setValue = function (value) {
  return function (meter) {
    return function () {
      meter.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.min = function (meter) {
  return function () {
    return meter.min;
  };
};

exports.setMin = function (min) {
  return function (meter) {
    return function () {
      meter.min = min;
    };
  };
}; // ----------------------------------------------------------------------------


exports.max = function (meter) {
  return function () {
    return meter.max;
  };
};

exports.setMax = function (max) {
  return function (meter) {
    return function () {
      meter.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.low = function (meter) {
  return function () {
    return meter.low;
  };
};

exports.setLow = function (low) {
  return function (meter) {
    return function () {
      meter.low = low;
    };
  };
}; // ----------------------------------------------------------------------------


exports.high = function (meter) {
  return function () {
    return meter.high;
  };
};

exports.setHigh = function (high) {
  return function (meter) {
    return function () {
      meter.high = high;
    };
  };
}; // ----------------------------------------------------------------------------


exports.optimum = function (meter) {
  return function () {
    return meter.optimum;
  };
};

exports.setOptimum = function (optimum) {
  return function (meter) {
    return function () {
      meter.optimum = optimum;
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (meter) {
  return function () {
    return meter.labels;
  };
};
},{}],"f0BY":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLMeterElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue,
  min: $foreign.min,
  setMin: $foreign.setMin,
  max: $foreign.max,
  setMax: $foreign.setMax,
  low: $foreign.low,
  setLow: $foreign.setLow,
  high: $foreign.high,
  setHigh: $foreign.setHigh,
  optimum: $foreign.optimum,
  setOptimum: $foreign.setOptimum,
  labels: $foreign.labels
};
},{"./foreign.js":"MQQy","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"GeQy":[function(require,module,exports) {
"use strict";

exports.cite = function (mod) {
  return function () {
    return mod.cite;
  };
};

exports.setCite = function (cite) {
  return function (mod) {
    return function () {
      mod.cite = cite;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dateTime = function (mod) {
  return function () {
    return mod.dateTime;
  };
};

exports.setDateTime = function (dateTime) {
  return function (mod) {
    return function () {
      mod.dateTime = dateTime;
    };
  };
};
},{}],"hxgD":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLModElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  cite: $foreign.cite,
  setCite: $foreign.setCite,
  dateTime: $foreign.dateTime,
  setDateTime: $foreign.setDateTime
};
},{"./foreign.js":"GeQy","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"lbwy":[function(require,module,exports) {
"use strict";

exports.reversed = function (ol) {
  return function () {
    return ol.reversed;
  };
};

exports.setReversed = function (reversed) {
  return function (ol) {
    return function () {
      ol.reversed = reversed;
    };
  };
}; // ----------------------------------------------------------------------------


exports.start = function (ol) {
  return function () {
    return ol.start;
  };
};

exports.setStart = function (start) {
  return function (ol) {
    return function () {
      ol.start = start;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (ol) {
  return function () {
    return ol.type;
  };
};

exports.setType = function (type) {
  return function (ol) {
    return function () {
      ol.type = type;
    };
  };
};
},{}],"Jg30":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  reversed: $foreign.reversed,
  setReversed: $foreign.setReversed,
  start: $foreign.start,
  setStart: $foreign.setStart,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"lbwy","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"tRya":[function(require,module,exports) {
"use strict";

exports.data_ = function (object) {
  return function () {
    return object.data;
  };
};

exports.setData = function (data) {
  return function (object) {
    return function () {
      object.data = data;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (object) {
  return function () {
    return object.type;
  };
};

exports.setType = function (type) {
  return function (object) {
    return function () {
      object.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.typeMustMatch = function (object) {
  return function () {
    return object.typeMustMatch;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (object) {
  return function () {
    return object.name;
  };
};

exports.setName = function (name) {
  return function (object) {
    return function () {
      object.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.useMap = function (object) {
  return function () {
    return object.useMap;
  };
};

exports.setUseMap = function (useMap) {
  return function (object) {
    return function () {
      object.useMap = useMap;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (object) {
  return function () {
    return object.form;
  };
}; // ----------------------------------------------------------------------------


exports.width = function (object) {
  return function () {
    return object.width;
  };
};

exports.setWidth = function (width) {
  return function (object) {
    return function () {
      object.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (object) {
  return function () {
    return object.height;
  };
};

exports.setHeight = function (height) {
  return function (object) {
    return function () {
      object.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports._contentDocument = function (object) {
  return function () {
    return object.contentDocument;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (object) {
  return function () {
    return object.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (object) {
  return function () {
    return object.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (object) {
  return function () {
    return object.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (object) {
  return function () {
    return object.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (object) {
  return function () {
    return object.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (object) {
    return function () {
      object.setCustomValidity(value);
    };
  };
};
},{}],"QU4S":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLObjectElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

var contentDocument = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_contentDocument"]($3));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  contentDocument: contentDocument,
  data_: $foreign.data_,
  setData: $foreign.setData,
  type_: $foreign.type_,
  setType: $foreign.setType,
  typeMustMatch: $foreign.typeMustMatch,
  name: $foreign.name,
  setName: $foreign.setName,
  useMap: $foreign.useMap,
  setUseMap: $foreign.setUseMap,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity
};
},{"./foreign.js":"tRya","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"eYbc":[function(require,module,exports) {
"use strict";

exports.disabled = function (optgroup) {
  return function () {
    return optgroup.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (optgroup) {
    return function () {
      optgroup.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.label = function (optgroup) {
  return function () {
    return optgroup.label;
  };
};

exports.setLabel = function (label) {
  return function (optgroup) {
    return function () {
      optgroup.label = label;
    };
  };
};
},{}],"HJKX":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptGroupElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  label: $foreign.label,
  setLabel: $foreign.setLabel
};
},{"./foreign.js":"eYbc","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"YghK":[function(require,module,exports) {
"use strict";

exports.disabled = function (option) {
  return function () {
    return option.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (option) {
    return function () {
      option.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (option) {
  return function () {
    return option.form;
  };
}; // ----------------------------------------------------------------------------


exports.label = function (option) {
  return function () {
    return option.label;
  };
};

exports.setLabel = function (label) {
  return function (option) {
    return function () {
      option.label = label;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defaultSelected = function (option) {
  return function () {
    return option.defaultSelected;
  };
};

exports.setDefaultSelected = function (defaultSelected) {
  return function (option) {
    return function () {
      option.defaultSelected = defaultSelected;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selected = function (option) {
  return function () {
    return option.selected;
  };
};

exports.setSelected = function (selected) {
  return function (option) {
    return function () {
      option.selected = selected;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (option) {
  return function () {
    return option.value;
  };
};

exports.setValue = function (value) {
  return function (option) {
    return function () {
      option.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (option) {
  return function () {
    return option.text;
  };
};

exports.setText = function (text) {
  return function (option) {
    return function () {
      option.text = text;
    };
  };
}; // ----------------------------------------------------------------------------


exports.index = function (option) {
  return function () {
    return option.index;
  };
};
},{}],"csiy":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOptionElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  label: $foreign.label,
  setLabel: $foreign.setLabel,
  defaultSelected: $foreign.defaultSelected,
  setDefaultSelected: $foreign.setDefaultSelected,
  selected: $foreign.selected,
  setSelected: $foreign.setSelected,
  value: $foreign.value,
  setValue: $foreign.setValue,
  text: $foreign.text,
  setText: $foreign.setText,
  index: $foreign.index
};
},{"./foreign.js":"YghK","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"XMSz":[function(require,module,exports) {
"use strict";

exports._form = function (output) {
  return function () {
    return output.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (output) {
  return function () {
    return output.name;
  };
};

exports.setName = function (name) {
  return function (output) {
    return function () {
      output.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (output) {
  return function () {
    return output.type;
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (output) {
  return function () {
    return output.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (output) {
    return function () {
      output.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (output) {
  return function () {
    return output.value;
  };
};

exports.setValue = function (value) {
  return function (output) {
    return function () {
      output.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (output) {
  return function () {
    return output.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (output) {
  return function () {
    return output.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (output) {
  return function () {
    return output.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (output) {
  return function () {
    return output.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (output) {
  return function () {
    return output.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (output) {
    return function () {
      output.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (output) {
  return function () {
    return output.labels;
  };
};
},{}],"OtE0":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLOutputElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  name: $foreign.name,
  setName: $foreign.setName,
  type_: $foreign.type_,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"XMSz","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"hHzC":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParagraphElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"Xvv6":[function(require,module,exports) {
"use strict";

exports.name = function (param) {
  return function () {
    return param.name;
  };
};

exports.setName = function (name) {
  return function (param) {
    return function () {
      param.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (param) {
  return function () {
    return param.value;
  };
};

exports.setValue = function (value) {
  return function (param) {
    return function () {
      param.value = value;
    };
  };
};
},{}],"JyDn":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLParamElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  name: $foreign.name,
  setName: $foreign.setName,
  value: $foreign.value,
  setValue: $foreign.setValue
};
},{"./foreign.js":"Xvv6","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"uLnv":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLPreElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"VT33":[function(require,module,exports) {
"use strict";

exports.value = function (progress) {
  return function () {
    return progress.value;
  };
};

exports.setValue = function (value) {
  return function (progress) {
    return function () {
      progress.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.max = function (progress) {
  return function () {
    return progress.max;
  };
};

exports.setMax = function (max) {
  return function (progress) {
    return function () {
      progress.max = max;
    };
  };
}; // ----------------------------------------------------------------------------


exports.position = function (progress) {
  return function () {
    return progress.position;
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (progress) {
  return function () {
    return progress.labels;
  };
};
},{}],"FCQI":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLProgressElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  value: $foreign.value,
  setValue: $foreign.setValue,
  max: $foreign.max,
  setMax: $foreign.setMax,
  position: $foreign.position,
  labels: $foreign.labels
};
},{"./foreign.js":"VT33","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"sU31":[function(require,module,exports) {
"use strict";

exports.cite = function (quote) {
  return function () {
    return quote.cite;
  };
};

exports.setCite = function (cite) {
  return function (quote) {
    return function () {
      quote.cite = cite;
    };
  };
};
},{}],"mgz4":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLQuoteElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  cite: $foreign.cite,
  setCite: $foreign.setCite
};
},{"./foreign.js":"sU31","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"zG0s":[function(require,module,exports) {
"use strict";

exports.src = function (script) {
  return function () {
    return script.src;
  };
};

exports.setSrc = function (src) {
  return function (script) {
    return function () {
      script.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (script) {
  return function () {
    return script.type;
  };
};

exports.setType = function (type) {
  return function (script) {
    return function () {
      script.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.charset = function (script) {
  return function () {
    return script.charset;
  };
};

exports.setCharset = function (charset) {
  return function (script) {
    return function () {
      script.charset = charset;
    };
  };
}; // ----------------------------------------------------------------------------


exports.async = function (script) {
  return function () {
    return script.async;
  };
};

exports.setAsync = function (async) {
  return function (script) {
    return function () {
      script.async = async;
    };
  };
}; // ----------------------------------------------------------------------------


exports.defer = function (script) {
  return function () {
    return script.defer;
  };
};

exports.setDefer = function (defer) {
  return function (script) {
    return function () {
      script.defer = defer;
    };
  };
}; // ----------------------------------------------------------------------------


exports.crossOrigin = function (script) {
  return function () {
    return script.crossOrigin;
  };
};

exports.setCrossOrigin = function (crossOrigin) {
  return function (script) {
    return function () {
      script.crossOrigin = crossOrigin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.text = function (script) {
  return function () {
    return script.text;
  };
};

exports.setText = function (text) {
  return function (script) {
    return function () {
      script.text = text;
    };
  };
};
},{}],"MQt4":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLScriptElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  charset: $foreign.charset,
  setCharset: $foreign.setCharset,
  async: $foreign.async,
  setAsync: $foreign.setAsync,
  defer: $foreign.defer,
  setDefer: $foreign.setDefer,
  crossOrigin: $foreign.crossOrigin,
  setCrossOrigin: $foreign.setCrossOrigin,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"zG0s","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"nxMn":[function(require,module,exports) {
"use strict";

exports.autofocus = function (select) {
  return function () {
    return select.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (select) {
    return function () {
      select.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (select) {
  return function () {
    return select.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (select) {
    return function () {
      select.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports.multiple = function (select) {
  return function () {
    return select.multiple;
  };
};

exports.setMultiple = function (multiple) {
  return function (select) {
    return function () {
      select.multiple = multiple;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (select) {
  return function () {
    return select.form;
  };
}; // ----------------------------------------------------------------------------


exports.name = function (select) {
  return function () {
    return select.name;
  };
};

exports.setName = function (name) {
  return function (select) {
    return function () {
      select.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (select) {
  return function () {
    return select.required;
  };
};

exports.setRequired = function (required) {
  return function (select) {
    return function () {
      select.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.size = function (select) {
  return function () {
    return select.size;
  };
};

exports.setSize = function (size) {
  return function (select) {
    return function () {
      select.size = size;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (select) {
  return function () {
    return select.type;
  };
}; // ----------------------------------------------------------------------------


exports.length = function (select) {
  return function () {
    return select.length;
  };
};

exports.setLength = function (length) {
  return function (select) {
    return function () {
      select.length = length;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectedOptions = function (select) {
  return function () {
    return select.selectedOptions;
  };
}; // ----------------------------------------------------------------------------


exports.selectedIndex = function (select) {
  return function () {
    return select.selectedIndex;
  };
};

exports.setSelectedIndex = function (selectedIndex) {
  return function (select) {
    return function () {
      select.selectedIndex = selectedIndex;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (select) {
  return function () {
    return select.value;
  };
};

exports.setValue = function (value) {
  return function (select) {
    return function () {
      select.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (select) {
  return function () {
    return select.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (select) {
  return function () {
    return select.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (select) {
  return function () {
    return select.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (select) {
  return function () {
    return select.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (select) {
  return function () {
    return select.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (select) {
    return function () {
      select.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (select) {
  return function () {
    return select.labels;
  };
};
},{}],"ym46":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSelectElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  multiple: $foreign.multiple,
  setMultiple: $foreign.setMultiple,
  name: $foreign.name,
  setName: $foreign.setName,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  size: $foreign.size,
  setSize: $foreign.setSize,
  type_: $foreign.type_,
  length: $foreign.length,
  setLength: $foreign.setLength,
  selectedOptions: $foreign.selectedOptions,
  selectedIndex: $foreign.selectedIndex,
  setSelectedIndex: $foreign.setSelectedIndex,
  value: $foreign.value,
  setValue: $foreign.setValue,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels
};
},{"./foreign.js":"nxMn","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"aOMK":[function(require,module,exports) {
"use strict";

exports.src = function (source) {
  return function () {
    return source.src;
  };
};

exports.setSrc = function (src) {
  return function (source) {
    return function () {
      source.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (source) {
  return function () {
    return source.type;
  };
};

exports.setType = function (type) {
  return function (source) {
    return function () {
      source.type = type;
    };
  };
}; // ----------------------------------------------------------------------------


exports.media = function (source) {
  return function () {
    return source.media;
  };
};

exports.setMedia = function (media) {
  return function (source) {
    return function () {
      source.media = media;
    };
  };
};
},{}],"yrU4":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSourceElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  type_: $foreign.type_,
  setType: $foreign.setType,
  media: $foreign.media,
  setMedia: $foreign.setMedia
};
},{"./foreign.js":"aOMK","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"aOKI":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLSpanElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"jr3X":[function(require,module,exports) {
"use strict";

exports.media = function (style) {
  return function () {
    return style.media;
  };
};

exports.setMedia = function (media) {
  return function (style) {
    return function () {
      style.media = media;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (style) {
  return function () {
    return style.type;
  };
};

exports.setType = function (type) {
  return function (style) {
    return function () {
      style.type = type;
    };
  };
};
},{}],"l4f4":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLStyleElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  media: $foreign.media,
  setMedia: $foreign.setMedia,
  type_: $foreign.type_,
  setType: $foreign.setType
};
},{"./foreign.js":"jr3X","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"kkRB":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCaptionElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"tq3f":[function(require,module,exports) {
"use strict";

exports.colSpan = function (cell) {
  return function () {
    return cell.colSpan;
  };
};

exports.setColSpan = function (colSpan) {
  return function (cell) {
    return function () {
      cell.colSpan = colSpan;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rowSpan = function (cell) {
  return function () {
    return cell.rowSpan;
  };
};

exports.setRowSpan = function (rowSpan) {
  return function (cell) {
    return function () {
      cell.rowSpan = rowSpan;
    };
  };
}; // ----------------------------------------------------------------------------


exports.cellIndex = function (cell) {
  return function () {
    return cell.cellIndex;
  };
};
},{}],"aVNW":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableCellElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  colSpan: $foreign.colSpan,
  setColSpan: $foreign.setColSpan,
  rowSpan: $foreign.rowSpan,
  setRowSpan: $foreign.setRowSpan,
  cellIndex: $foreign.cellIndex
};
},{"./foreign.js":"tq3f","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"rdyT":[function(require,module,exports) {
"use strict";

exports.span = function (col) {
  return function () {
    return col.span;
  };
};

exports.setSpan = function (span) {
  return function (col) {
    return function () {
      col.span = span;
    };
  };
};
},{}],"QyE1":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableColElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  span: $foreign.span,
  setSpan: $foreign.setSpan
};
},{"./foreign.js":"rdyT","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"lKQZ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableDataCellElement");
module.exports = {
  fromHTMLTableCellElement: fromHTMLTableCellElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLTableCellElement: toHTMLTableCellElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"UH8C":[function(require,module,exports) {
"use strict";

exports._caption = function (table) {
  return function () {
    return table.caption;
  };
};

exports._setCaption = function (caption) {
  return function (table) {
    return function () {
      table.caption = caption;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createCaption = function (table) {
  return function () {
    return table.createCaption();
  };
}; // ----------------------------------------------------------------------------


exports.deleteCaption = function (table) {
  return function () {
    table.deleteCaption();
  };
}; // ----------------------------------------------------------------------------


exports._tHead = function (table) {
  return function () {
    return table.tHead;
  };
};

exports._setTHead = function (tHead) {
  return function (table) {
    return function () {
      table.tHead = tHead;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createTHead = function (table) {
  return function () {
    return table.createTHead();
  };
}; // ----------------------------------------------------------------------------


exports.deleteTHead = function (table) {
  return function () {
    table.deleteTHead();
  };
}; // ----------------------------------------------------------------------------


exports._tFoot = function (table) {
  return function () {
    return table.tFoot;
  };
};

exports._setTFoot = function (tFoot) {
  return function (table) {
    return function () {
      table.tFoot = tFoot;
    };
  };
}; // ----------------------------------------------------------------------------


exports.createTFoot = function (table) {
  return function () {
    return table.createTFoot();
  };
}; // ----------------------------------------------------------------------------


exports.deleteTFoot = function (table) {
  return function () {
    table.deleteTFoot();
  };
}; // ----------------------------------------------------------------------------


exports.tBodies = function (table) {
  return function () {
    return table.tBodies;
  };
}; // ----------------------------------------------------------------------------


exports.createTBody = function (table) {
  return function () {
    return table.createTBody();
  };
}; // ----------------------------------------------------------------------------


exports.rows = function (table) {
  return function () {
    return table.rows;
  };
}; // ----------------------------------------------------------------------------


exports.insertRowAt = function (index) {
  return function (table) {
    return function () {
      return table.insertRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteRow = function (index) {
  return function (table) {
    return function () {
      table.deleteRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.border = function (table) {
  return function () {
    return table.border;
  };
};

exports.setBorder = function (border) {
  return function (table) {
    return function () {
      table.border = border;
    };
  };
};
},{}],"cxKc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var tHead = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_tHead"]($1));
  };
}();

var tFoot = function () {
  var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($3) {
    return $2($foreign["_tFoot"]($3));
  };
}();

var setTHead = function setTHead($4) {
  return $foreign["_setTHead"](Data_Nullable.toNullable($4));
};

var setTFoot = function setTFoot($5) {
  return $foreign["_setTFoot"](Data_Nullable.toNullable($5));
};

var setCaption = function setCaption($6) {
  return $foreign["_setCaption"](Data_Nullable.toNullable($6));
};

var insertRow$prime = $foreign.insertRowAt;
var insertRow = insertRow$prime(-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableElement");

var caption = function () {
  var $7 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($8) {
    return $7($foreign["_caption"]($8));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  caption: caption,
  setCaption: setCaption,
  tHead: tHead,
  setTHead: setTHead,
  tFoot: tFoot,
  setTFoot: setTFoot,
  insertRow: insertRow,
  "insertRow'": insertRow$prime,
  createCaption: $foreign.createCaption,
  deleteCaption: $foreign.deleteCaption,
  createTHead: $foreign.createTHead,
  deleteTHead: $foreign.deleteTHead,
  createTFoot: $foreign.createTFoot,
  deleteTFoot: $foreign.deleteTFoot,
  tBodies: $foreign.tBodies,
  createTBody: $foreign.createTBody,
  rows: $foreign.rows,
  deleteRow: $foreign.deleteRow,
  border: $foreign.border,
  setBorder: $foreign.setBorder
};
},{"./foreign.js":"UH8C","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"HqxY":[function(require,module,exports) {
"use strict";

exports.scope = function (cell) {
  return function () {
    return cell.scope;
  };
};

exports.setScope = function (scope) {
  return function (cell) {
    return function () {
      cell.scope = scope;
    };
  };
}; // ----------------------------------------------------------------------------


exports.abbr = function (cell) {
  return function () {
    return cell.abbr;
  };
};

exports.setAbbr = function (abbr) {
  return function (cell) {
    return function () {
      cell.abbr = abbr;
    };
  };
};
},{}],"tIQZ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLTableCellElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLTableCellElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableHeaderCellElement");
module.exports = {
  fromHTMLTableCellElement: fromHTMLTableCellElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLTableCellElement: toHTMLTableCellElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  scope: $foreign.scope,
  setScope: $foreign.setScope,
  abbr: $foreign.abbr,
  setAbbr: $foreign.setAbbr
};
},{"./foreign.js":"HqxY","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"YXpp":[function(require,module,exports) {
"use strict";

exports.rowIndex = function (row) {
  return function () {
    return row.rowIndex;
  };
}; // ----------------------------------------------------------------------------


exports.sectionRowIndex = function (row) {
  return function () {
    return row.sectionRowIndex;
  };
}; // ----------------------------------------------------------------------------


exports.cells = function (row) {
  return function () {
    return row.cells;
  };
}; // ----------------------------------------------------------------------------


exports.cells = function (row) {
  return function () {
    return row.cells;
  };
}; // ----------------------------------------------------------------------------


exports.insertCellAt = function (index) {
  return function (row) {
    return function () {
      return row.insertCell(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteCell = function (index) {
  return function (row) {
    return function () {
      row.deleteCell(index);
    };
  };
};
},{}],"lPxK":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertCell$prime = $foreign.insertCellAt;
var insertCell = insertCell$prime(-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableRowElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  insertCell: insertCell,
  "insertCell'": insertCell$prime,
  rowIndex: $foreign.rowIndex,
  sectionRowIndex: $foreign.sectionRowIndex,
  cells: $foreign.cells,
  deleteCell: $foreign.deleteCell
};
},{"./foreign.js":"YXpp","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"Mt57":[function(require,module,exports) {
"use strict";

exports.rows = function (section) {
  return function () {
    return section.rows;
  };
}; // ----------------------------------------------------------------------------


exports.insertRowAt = function (index) {
  return function (section) {
    return function () {
      return section.insertRow(index);
    };
  };
}; // ----------------------------------------------------------------------------


exports.deleteRow = function (index) {
  return function (section) {
    return function () {
      section.deleteRow(index);
    };
  };
};
},{}],"XuwJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var insertRow$prime = $foreign.insertRowAt;
var insertRow = insertRow$prime(-1 | 0);
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTableSectionElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  insertRow: insertRow,
  "insertRow'": insertRow$prime,
  rows: $foreign.rows,
  deleteRow: $foreign.deleteRow
};
},{"./foreign.js":"Mt57","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"kggM":[function(require,module,exports) {
"use strict";

exports.content = function (template) {
  return function () {
    return template.content;
  };
};
},{}],"O4m1":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTemplateElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  content: $foreign.content
};
},{"./foreign.js":"kggM","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"ivjO":[function(require,module,exports) {
"use strict";

exports.autocomplete = function (textarea) {
  return function () {
    return textarea.autocomplete;
  };
};

exports.setAutocomplete = function (autocomplete) {
  return function (textarea) {
    return function () {
      textarea.autocomplete = autocomplete;
    };
  };
}; // ----------------------------------------------------------------------------


exports.autofocus = function (textarea) {
  return function () {
    return textarea.autofocus;
  };
};

exports.setAutofocus = function (autofocus) {
  return function (textarea) {
    return function () {
      textarea.autofocus = autofocus;
    };
  };
}; // ----------------------------------------------------------------------------


exports.cols = function (textarea) {
  return function () {
    return textarea.cols;
  };
};

exports.setCols = function (cols) {
  return function (textarea) {
    return function () {
      textarea.cols = cols;
    };
  };
}; // ----------------------------------------------------------------------------


exports.dirName = function (textarea) {
  return function () {
    return textarea.dirName;
  };
};

exports.setDirName = function (dirName) {
  return function (textarea) {
    return function () {
      textarea.dirName = dirName;
    };
  };
}; // ----------------------------------------------------------------------------


exports.disabled = function (textarea) {
  return function () {
    return textarea.disabled;
  };
};

exports.setDisabled = function (disabled) {
  return function (textarea) {
    return function () {
      textarea.disabled = disabled;
    };
  };
}; // ----------------------------------------------------------------------------


exports._form = function (textarea) {
  return function () {
    return textarea.form;
  };
}; // ----------------------------------------------------------------------------


exports.maxLength = function (textarea) {
  return function () {
    return textarea.maxLength;
  };
};

exports.setMaxLength = function (maxLength) {
  return function (textarea) {
    return function () {
      textarea.maxLength = maxLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.minLength = function (textarea) {
  return function () {
    return textarea.minLength;
  };
};

exports.setMinLength = function (minLength) {
  return function (textarea) {
    return function () {
      textarea.minLength = minLength;
    };
  };
}; // ----------------------------------------------------------------------------


exports.name = function (textarea) {
  return function () {
    return textarea.name;
  };
};

exports.setName = function (name) {
  return function (textarea) {
    return function () {
      textarea.name = name;
    };
  };
}; // ----------------------------------------------------------------------------


exports.placeholder = function (textarea) {
  return function () {
    return textarea.placeholder;
  };
};

exports.setPlaceholder = function (placeholder) {
  return function (textarea) {
    return function () {
      textarea.placeholder = placeholder;
    };
  };
}; // ----------------------------------------------------------------------------


exports.readOnly = function (textarea) {
  return function () {
    return textarea.readOnly;
  };
};

exports.setReadOnly = function (readOnly) {
  return function (textarea) {
    return function () {
      textarea.readOnly = readOnly;
    };
  };
}; // ----------------------------------------------------------------------------


exports.required = function (textarea) {
  return function () {
    return textarea.required;
  };
};

exports.setRequired = function (required) {
  return function (textarea) {
    return function () {
      textarea.required = required;
    };
  };
}; // ----------------------------------------------------------------------------


exports.rows = function (textarea) {
  return function () {
    return textarea.rows;
  };
};

exports.setRows = function (rows) {
  return function (textarea) {
    return function () {
      textarea.rows = rows;
    };
  };
}; // ----------------------------------------------------------------------------


exports.wrap = function (textarea) {
  return function () {
    return textarea.wrap;
  };
};

exports.setWrap = function (wrap) {
  return function (textarea) {
    return function () {
      textarea.wrap = wrap;
    };
  };
}; // ----------------------------------------------------------------------------


exports.type_ = function (textarea) {
  return function () {
    return textarea.type;
  };
}; // ----------------------------------------------------------------------------


exports.defaultValue = function (textarea) {
  return function () {
    return textarea.defaultValue;
  };
};

exports.setDefaultValue = function (defaultValue) {
  return function (textarea) {
    return function () {
      textarea.defaultValue = defaultValue;
    };
  };
}; // ----------------------------------------------------------------------------


exports.value = function (textarea) {
  return function () {
    return textarea.value;
  };
};

exports.setValue = function (value) {
  return function (textarea) {
    return function () {
      textarea.value = value;
    };
  };
}; // ----------------------------------------------------------------------------


exports.textLength = function (textarea) {
  return function () {
    return textarea.textLength;
  };
}; // ----------------------------------------------------------------------------


exports.willValidate = function (textarea) {
  return function () {
    return textarea.willValidate;
  };
}; // ----------------------------------------------------------------------------


exports.validity = function (textarea) {
  return function () {
    return textarea.validity;
  };
}; // ----------------------------------------------------------------------------


exports.validationMessage = function (textarea) {
  return function () {
    return textarea.validationMessage;
  };
}; // ----------------------------------------------------------------------------


exports.checkValidity = function (textarea) {
  return function () {
    return textarea.checkValidity();
  };
}; // ----------------------------------------------------------------------------


exports.reportValidity = function (textarea) {
  return function () {
    return textarea.reportValidity();
  };
}; // ----------------------------------------------------------------------------


exports.setCustomValidity = function (value) {
  return function (textarea) {
    return function () {
      textarea.setCustomValidity(value);
    };
  };
}; // ----------------------------------------------------------------------------


exports.labels = function (textarea) {
  return function () {
    return textarea.labels;
  };
}; // ----------------------------------------------------------------------------


exports.select = function (textarea) {
  return function () {
    textarea.select();
  };
}; // ----------------------------------------------------------------------------


exports.selectionStart = function (textarea) {
  return function () {
    return textarea.selectionStart;
  };
};

exports.setSelectionStart = function (selectionStart) {
  return function (textarea) {
    return function () {
      textarea.selectionStart = selectionStart;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionEnd = function (textarea) {
  return function () {
    return textarea.selectionEnd;
  };
};

exports.setSelectionEnd = function (selectionEnd) {
  return function (textarea) {
    return function () {
      textarea.selectionEnd = selectionEnd;
    };
  };
}; // ----------------------------------------------------------------------------


exports.selectionDirection = function (textarea) {
  return function () {
    return textarea.selectionDirection;
  };
};

exports.setSelectionDirection = function (selectionDirection) {
  return function (textarea) {
    return function () {
      textarea.selectionDirection = selectionDirection;
    };
  };
}; // ----------------------------------------------------------------------------


exports.setRangeText = function (replacement) {
  return function (textarea) {
    return function () {
      textarea.setRangeText(replacement);
    };
  };
};

exports._setRangeText = function (replacement, start, end, selectionMode, textarea) {
  textarea.setRangeText(replacement, start, end, selectionMode);
}; // ----------------------------------------------------------------------------


exports.setSelectionRange = function (start) {
  return function (end) {
    return function (direction) {
      return function (textarea) {
        return function () {
          textarea.setSelectionRange(start, end, direction);
        };
      };
    };
  };
};
},{}],"GScu":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_SelectionMode = require("../Web.HTML.SelectionMode/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var setRangeText$prime = function setRangeText$prime(rpl) {
  return function (s) {
    return function (e) {
      return function (mode) {
        return function (area) {
          return function () {
            return $foreign["_setRangeText"](rpl, s, e, Web_HTML_SelectionMode.print(mode), area);
          };
        };
      };
    };
  };
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTextAreaElement");

var form = function () {
  var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
  return function ($1) {
    return $0($foreign["_form"]($1));
  };
}();

module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  form: form,
  "setRangeText'": setRangeText$prime,
  autocomplete: $foreign.autocomplete,
  setAutocomplete: $foreign.setAutocomplete,
  autofocus: $foreign.autofocus,
  setAutofocus: $foreign.setAutofocus,
  cols: $foreign.cols,
  setCols: $foreign.setCols,
  dirName: $foreign.dirName,
  setDirName: $foreign.setDirName,
  disabled: $foreign.disabled,
  setDisabled: $foreign.setDisabled,
  maxLength: $foreign.maxLength,
  setMaxLength: $foreign.setMaxLength,
  minLength: $foreign.minLength,
  setMinLength: $foreign.setMinLength,
  name: $foreign.name,
  setName: $foreign.setName,
  placeholder: $foreign.placeholder,
  setPlaceholder: $foreign.setPlaceholder,
  readOnly: $foreign.readOnly,
  setReadOnly: $foreign.setReadOnly,
  required: $foreign.required,
  setRequired: $foreign.setRequired,
  rows: $foreign.rows,
  setRows: $foreign.setRows,
  wrap: $foreign.wrap,
  setWrap: $foreign.setWrap,
  type_: $foreign.type_,
  defaultValue: $foreign.defaultValue,
  setDefaultValue: $foreign.setDefaultValue,
  value: $foreign.value,
  setValue: $foreign.setValue,
  textLength: $foreign.textLength,
  willValidate: $foreign.willValidate,
  validity: $foreign.validity,
  validationMessage: $foreign.validationMessage,
  checkValidity: $foreign.checkValidity,
  reportValidity: $foreign.reportValidity,
  setCustomValidity: $foreign.setCustomValidity,
  labels: $foreign.labels,
  select: $foreign.select,
  selectionStart: $foreign.selectionStart,
  setSelectionStart: $foreign.setSelectionStart,
  selectionEnd: $foreign.selectionEnd,
  setSelectionEnd: $foreign.setSelectionEnd,
  selectionDirection: $foreign.selectionDirection,
  setSelectionDirection: $foreign.setSelectionDirection,
  setRangeText: $foreign.setRangeText,
  setSelectionRange: $foreign.setSelectionRange
};
},{"./foreign.js":"ivjO","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.HTML.SelectionMode/index.js":"gUys","../Web.Internal.FFI/index.js":"fdUh"}],"zppE":[function(require,module,exports) {
"use strict";

exports.dateTime = function (time) {
  return function () {
    return time.dateTime;
  };
};

exports.setDateTime = function (dateTime) {
  return function (time) {
    return function () {
      time.dateTime = dateTime;
    };
  };
};
},{}],"TTP8":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTimeElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  dateTime: $foreign.dateTime,
  setDateTime: $foreign.setDateTime
};
},{"./foreign.js":"zppE","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"yMvr":[function(require,module,exports) {
"use strict";

exports.text = function (title) {
  return function () {
    return title.text;
  };
};

exports.setText = function (text) {
  return function (title) {
    return function () {
      title.text = text;
    };
  };
};
},{}],"zdYT":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTitleElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  text: $foreign.text,
  setText: $foreign.setText
};
},{"./foreign.js":"yMvr","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"auxx":[function(require,module,exports) {
"use strict";

exports.kind = function (track) {
  return function () {
    return track.kind;
  };
};

exports.setKind = function (kind) {
  return function (track) {
    return function () {
      track.kind = kind;
    };
  };
}; // ----------------------------------------------------------------------------


exports.src = function (track) {
  return function () {
    return track.src;
  };
};

exports.setSrc = function (src) {
  return function (track) {
    return function () {
      track.src = src;
    };
  };
}; // ----------------------------------------------------------------------------


exports.srclang = function (track) {
  return function () {
    return track.srclang;
  };
};

exports.setSrclang = function (srclang) {
  return function (track) {
    return function () {
      track.srclang = srclang;
    };
  };
}; // ----------------------------------------------------------------------------


exports.label = function (track) {
  return function () {
    return track.label;
  };
};

exports.setLabel = function (label) {
  return function (track) {
    return function () {
      track.label = label;
    };
  };
}; // ----------------------------------------------------------------------------


exports["default"] = function (track) {
  return function () {
    return track["default"];
  };
};

exports.setDefault = function (def) {
  return function (track) {
    return function () {
      track["default"] = def;
    };
  };
}; // ----------------------------------------------------------------------------


exports._readyState = function (track) {
  return track.readyState;
};
},{}],"aU5W":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Show = require("../Data.Show/index.js");

var None = function () {
  function None() {}

  ;
  None.value = new None();
  return None;
}();

var Loading = function () {
  function Loading() {}

  ;
  Loading.value = new Loading();
  return Loading;
}();

var Loaded = function () {
  function Loaded() {}

  ;
  Loaded.value = new Loaded();
  return Loaded;
}();

var $$Error = function () {
  function $$Error() {}

  ;
  $$Error.value = new $$Error();
  return $$Error;
}();

var toEnumReadyState = function toEnumReadyState(v) {
  if (v === 0) {
    return new Data_Maybe.Just(None.value);
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just(Loading.value);
  }

  ;

  if (v === 2) {
    return new Data_Maybe.Just(Loaded.value);
  }

  ;

  if (v === 3) {
    return new Data_Maybe.Just($$Error.value);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var showReadyState = new Data_Show.Show(function (v) {
  if (v instanceof None) {
    return "None";
  }

  ;

  if (v instanceof Loading) {
    return "Loading";
  }

  ;

  if (v instanceof Loaded) {
    return "Loaded";
  }

  ;

  if (v instanceof $$Error) {
    return "Error";
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 29, column 1 - line 33, column 23): " + [v.constructor.name]);
});

var fromEnumReadyState = function fromEnumReadyState(v) {
  if (v instanceof None) {
    return 0;
  }

  ;

  if (v instanceof Loading) {
    return 1;
  }

  ;

  if (v instanceof Loaded) {
    return 2;
  }

  ;

  if (v instanceof $$Error) {
    return 3;
  }

  ;
  throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 46, column 3 - line 50, column 15): " + [v.constructor.name]);
};

var eqReadyState = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof None && y instanceof None) {
      return true;
    }

    ;

    if (x instanceof Loading && y instanceof Loading) {
      return true;
    }

    ;

    if (x instanceof Loaded && y instanceof Loaded) {
      return true;
    }

    ;

    if (x instanceof $$Error && y instanceof $$Error) {
      return true;
    }

    ;
    return false;
  };
});
var ordReadyState = new Data_Ord.Ord(function () {
  return eqReadyState;
}, function (x) {
  return function (y) {
    if (x instanceof None && y instanceof None) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof None) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof None) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Loading && y instanceof Loading) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loading) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loading) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Loaded && y instanceof Loaded) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Loaded) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Loaded) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof $$Error && y instanceof $$Error) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Web.HTML.HTMLTrackElement.ReadyState (line 14, column 1 - line 14, column 48): " + [x.constructor.name, y.constructor.name]);
  };
});
var enumReadyState = new Data_Enum.Enum(function () {
  return ordReadyState;
}, Data_Enum.defaultPred(toEnumReadyState)(fromEnumReadyState), Data_Enum.defaultSucc(toEnumReadyState)(fromEnumReadyState));
var boundedReadyState = new Data_Bounded.Bounded(function () {
  return ordReadyState;
}, None.value, $$Error.value);
var boundedEnumReadyState = new Data_Enum.BoundedEnum(function () {
  return boundedReadyState;
}, function () {
  return enumReadyState;
}, 4, fromEnumReadyState, toEnumReadyState);
module.exports = {
  None: None,
  Loading: Loading,
  Loaded: Loaded,
  "Error": $$Error,
  toEnumReadyState: toEnumReadyState,
  fromEnumReadyState: fromEnumReadyState,
  eqReadyState: eqReadyState,
  ordReadyState: ordReadyState,
  boundedReadyState: boundedReadyState,
  enumReadyState: enumReadyState,
  boundedEnumReadyState: boundedEnumReadyState,
  showReadyState: showReadyState
};
},{"../Data.Bounded/index.js":"kcUU","../Data.Enum/index.js":"oOsU","../Data.Eq/index.js":"Pq4F","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Show/index.js":"mFY7"}],"iTOK":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_HTML_HTMLTrackElement_ReadyState = require("../Web.HTML.HTMLTrackElement.ReadyState/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;

var readyState = function readyState(el) {
  return Data_Functor.map(Effect.functorEffect)(function () {
    var $0 = Data_Maybe.fromMaybe(Web_HTML_HTMLTrackElement_ReadyState.None.value);
    var $1 = Data_Enum.toEnum(Web_HTML_HTMLTrackElement_ReadyState.boundedEnumReadyState);
    return function ($2) {
      return $0($1($2));
    };
  }())(function () {
    return $foreign["_readyState"](el);
  });
};

var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLTrackElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  readyState: readyState,
  kind: $foreign.kind,
  setKind: $foreign.setKind,
  src: $foreign.src,
  setSrc: $foreign.setSrc,
  srclang: $foreign.srclang,
  setSrclang: $foreign.setSrclang,
  label: $foreign.label,
  setLabel: $foreign.setLabel,
  "default": $foreign["default"],
  setDefault: $foreign.setDefault
};
},{"./foreign.js":"auxx","../Data.Enum/index.js":"oOsU","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.HTML.HTMLTrackElement.ReadyState/index.js":"aU5W","../Web.Internal.FFI/index.js":"fdUh"}],"AuHM":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLUListElement");
module.exports = {
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget
};
},{"../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"Hdon":[function(require,module,exports) {
"use strict"; // ----------------------------------------------------------------------------

exports.width = function (video) {
  return function () {
    return video.width;
  };
};

exports.setWidth = function (width) {
  return function (video) {
    return function () {
      video.width = width;
    };
  };
}; // ----------------------------------------------------------------------------


exports.height = function (video) {
  return function () {
    return video.height;
  };
};

exports.setHeight = function (height) {
  return function (video) {
    return function () {
      video.height = height;
    };
  };
}; // ----------------------------------------------------------------------------


exports.videoWidth = function (video) {
  return function () {
    return video.videoWidth;
  };
}; // ----------------------------------------------------------------------------


exports.videoHeight = function (video) {
  return function () {
    return video.videoHeight;
  };
}; // ----------------------------------------------------------------------------


exports.poster = function (video) {
  return function () {
    return video.poster;
  };
};

exports.setPoster = function (poster) {
  return function (video) {
    return function () {
      video.poster = poster;
    };
  };
};
},{}],"ULc0":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var toParentNode = Unsafe_Coerce.unsafeCoerce;
var toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;
var toNode = Unsafe_Coerce.unsafeCoerce;
var toHTMLMediaElement = Unsafe_Coerce.unsafeCoerce;
var toHTMLElement = Unsafe_Coerce.unsafeCoerce;
var toEventTarget = Unsafe_Coerce.unsafeCoerce;
var toElement = Unsafe_Coerce.unsafeCoerce;
var toChildNode = Unsafe_Coerce.unsafeCoerce;
var fromParentNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNonDocumentTypeChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLMediaElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromHTMLElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromElement = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
var fromChildNode = Web_Internal_FFI.unsafeReadProtoTagged("HTMLVideoElement");
module.exports = {
  fromHTMLMediaElement: fromHTMLMediaElement,
  fromHTMLElement: fromHTMLElement,
  fromElement: fromElement,
  fromNode: fromNode,
  fromChildNode: fromChildNode,
  fromNonDocumentTypeChildNode: fromNonDocumentTypeChildNode,
  fromParentNode: fromParentNode,
  fromEventTarget: fromEventTarget,
  toHTMLMediaElement: toHTMLMediaElement,
  toHTMLElement: toHTMLElement,
  toElement: toElement,
  toNode: toNode,
  toChildNode: toChildNode,
  toNonDocumentTypeChildNode: toNonDocumentTypeChildNode,
  toParentNode: toParentNode,
  toEventTarget: toEventTarget,
  width: $foreign.width,
  setWidth: $foreign.setWidth,
  height: $foreign.height,
  setHeight: $foreign.setHeight,
  videoWidth: $foreign.videoWidth,
  videoHeight: $foreign.videoHeight,
  poster: $foreign.poster,
  setPoster: $foreign.setPoster
};
},{"./foreign.js":"Hdon","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"Qyux":[function(require,module,exports) {
"use strict";

exports.back = function (history) {
  return function () {
    return history.back();
  };
};

exports.forward = function (history) {
  return function () {
    return history.forward();
  };
};

exports.go = function (delta) {
  return function (history) {
    return function () {
      return history.go(delta);
    };
  };
};

exports.pushState = function (a) {
  return function (docTitle) {
    return function (url) {
      return function (history) {
        return function () {
          return history.pushState(a, docTitle, url);
        };
      };
    };
  };
};

exports.replaceState = function (a) {
  return function (docTitle) {
    return function (url) {
      return function (history) {
        return function () {
          return history.replaceState(a, docTitle, url);
        };
      };
    };
  };
};

exports.state = function (history) {
  return function () {
    return history.state;
  };
};
},{}],"Blp1":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var URL = function URL(x) {
  return x;
};

var DocumentTitle = function DocumentTitle(x) {
  return x;
};

var Delta = function Delta(x) {
  return x;
};

var newtypeURL = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeDocumentTitle = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeDelta = new Data_Newtype.Newtype(function () {
  return undefined;
});
var eqURL = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordURL = new Data_Ord.Ord(function () {
  return eqURL;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
var eqDocumentTitle = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordDocumentTitle = new Data_Ord.Ord(function () {
  return eqDocumentTitle;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordString)(x)(y);
  };
});
var eqDelta = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordDelta = new Data_Ord.Ord(function () {
  return eqDelta;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});
module.exports = {
  DocumentTitle: DocumentTitle,
  Delta: Delta,
  URL: URL,
  eqDocumentTitle: eqDocumentTitle,
  ordDocumentTitle: ordDocumentTitle,
  newtypeDocumentTitle: newtypeDocumentTitle,
  eqDelta: eqDelta,
  ordDelta: ordDelta,
  newtypeDelta: newtypeDelta,
  eqURL: eqURL,
  ordURL: ordURL,
  newtypeURL: newtypeURL,
  back: $foreign.back,
  forward: $foreign.forward,
  go: $foreign.go,
  pushState: $foreign.pushState,
  replaceState: $foreign.replaceState,
  state: $foreign.state
};
},{"./foreign.js":"Qyux","../Data.Eq/index.js":"Pq4F","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb"}],"Xq2s":[function(require,module,exports) {
"use strict";

exports.hash = function (location) {
  return function () {
    return location.hash;
  };
};

exports.setHash = function (hash) {
  return function (location) {
    return function () {
      location.hash = hash;
    };
  };
}; // ----------------------------------------------------------------------------


exports.host = function (location) {
  return function () {
    return location.host;
  };
};

exports.setHost = function (host) {
  return function (location) {
    return function () {
      location.host = host;
    };
  };
}; // ----------------------------------------------------------------------------


exports.hostname = function (location) {
  return function () {
    return location.hostname;
  };
};

exports.setHostname = function (hostname) {
  return function (location) {
    return function () {
      location.hostname = hostname;
    };
  };
}; // ----------------------------------------------------------------------------


exports.href = function (location) {
  return function () {
    return location.href;
  };
};

exports.setHref = function (href) {
  return function (location) {
    return function () {
      location.href = href;
    };
  };
}; // ----------------------------------------------------------------------------


exports.origin = function (location) {
  return function () {
    return location.origin;
  };
};

exports.setOrigin = function (origin) {
  return function (location) {
    return function () {
      location.origin = origin;
    };
  };
}; // ----------------------------------------------------------------------------


exports.pathname = function (location) {
  return function () {
    return location.pathname;
  };
};

exports.setPathname = function (pathname) {
  return function (location) {
    return function () {
      location.pathname = pathname;
    };
  };
}; // ----------------------------------------------------------------------------


exports.port = function (location) {
  return function () {
    return location.port;
  };
};

exports.setPort = function (port) {
  return function (location) {
    return function () {
      location.port = port;
    };
  };
}; // ----------------------------------------------------------------------------


exports.protocol = function (location) {
  return function () {
    return location.protocol;
  };
};

exports.setProtocol = function (protocol) {
  return function (location) {
    return function () {
      location.protocol = protocol;
    };
  };
}; // ----------------------------------------------------------------------------


exports.search = function (location) {
  return function () {
    return location.search;
  };
};

exports.setSearch = function (search) {
  return function (location) {
    return function () {
      location.search = search;
    };
  };
}; // ----------------------------------------------------------------------------


exports.assign = function (url) {
  return function (location) {
    return function () {
      location.assign(url);
    };
  };
}; // ----------------------------------------------------------------------------


exports.replace = function (url) {
  return function (location) {
    return function () {
      location.replace(url);
    };
  };
}; // ----------------------------------------------------------------------------


exports.reload = function (location) {
  return function () {
    location.reload();
  };
};
},{}],"ne3L":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  hash: $foreign.hash,
  setHash: $foreign.setHash,
  host: $foreign.host,
  setHost: $foreign.setHost,
  hostname: $foreign.hostname,
  setHostname: $foreign.setHostname,
  href: $foreign.href,
  setHref: $foreign.setHref,
  origin: $foreign.origin,
  setOrigin: $foreign.setOrigin,
  pathname: $foreign.pathname,
  setPathname: $foreign.setPathname,
  port: $foreign.port,
  setPort: $foreign.setPort,
  protocol: $foreign.protocol,
  setProtocol: $foreign.setProtocol,
  search: $foreign.search,
  setSearch: $foreign.setSearch,
  assign: $foreign.assign,
  replace: $foreign.replace,
  reload: $foreign.reload
};
},{"./foreign.js":"Xq2s"}],"Z8md":[function(require,module,exports) {
"use strict";

exports.language = function (navigator) {
  return function () {
    return navigator.language;
  };
};

exports.platform = function (navigator) {
  return function () {
    return navigator.platform;
  };
};

exports.userAgent = function (navigator) {
  return function () {
    return navigator.userAgent;
  };
};
},{}],"kGHn":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  language: $foreign.language,
  platform: $foreign.platform,
  userAgent: $foreign.userAgent
};
},{"./foreign.js":"Z8md"}],"quFp":[function(require,module,exports) {
"use strict";

exports.document = function (window) {
  return function () {
    return window.document;
  };
};

exports.navigator = function (window) {
  return function () {
    return window.navigator;
  };
};

exports.location = function (window) {
  return function () {
    return window.location;
  };
};

exports.history = function (window) {
  return function () {
    return window.history;
  };
};

exports.innerWidth = function (window) {
  return function () {
    return window.innerWidth;
  };
};

exports.innerHeight = function (window) {
  return function () {
    return window.innerHeight;
  };
};

exports.alert = function (str) {
  return function (window) {
    return function () {
      window.alert(str);
    };
  };
};

exports.confirm = function (str) {
  return function (window) {
    return function () {
      return window.confirm(str);
    };
  };
};

exports.moveBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.moveBy(xDelta, yDelta);
      };
    };
  };
};

exports.moveTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.moveTo(width, height);
      };
    };
  };
};

exports._open = function (url) {
  return function (name) {
    return function (features) {
      return function (window) {
        return function () {
          return window.open(url, name, features);
        };
      };
    };
  };
};

exports.outerHeight = function (window) {
  return function () {
    return window.outerHeight;
  };
};

exports.outerWidth = function (window) {
  return function () {
    return window.outerWidth;
  };
};

exports.print = function (window) {
  return function () {
    window.print();
  };
};

exports._prompt = function (str) {
  return function (defaultText) {
    return function (window) {
      return function () {
        return window.prompt(str, defaultText);
      };
    };
  };
};

exports.resizeBy = function (xDelta) {
  return function (yDelta) {
    return function (window) {
      return function () {
        window.resizeBy(xDelta, yDelta);
      };
    };
  };
};

exports.resizeTo = function (width) {
  return function (height) {
    return function (window) {
      return function () {
        window.resizeTo(width, height);
      };
    };
  };
};

exports.screenX = function (window) {
  return function () {
    return window.screenX;
  };
};

exports.screenY = function (window) {
  return function () {
    return window.screenY;
  };
};

exports.scroll = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scroll(xCoord, yCoord);
      };
    };
  };
};

exports.scrollBy = function (xCoord) {
  return function (yCoord) {
    return function (window) {
      return function () {
        window.scrollBy(xCoord, yCoord);
      };
    };
  };
};

exports.scrollX = function (window) {
  return function () {
    return window.scrollX;
  };
};

exports.scrollY = function (window) {
  return function () {
    return window.scrollY;
  };
};

exports.localStorage = function (window) {
  return function () {
    return window.localStorage;
  };
};

exports.sessionStorage = function (window) {
  return function () {
    return window.sessionStorage;
  };
};

exports.requestAnimationFrame = function (fn) {
  return function (window) {
    return function () {
      return window.requestAnimationFrame(fn);
    };
  };
};

exports.cancelAnimationFrame = function (id) {
  return function (window) {
    return function () {
      return window.cancelAnimationFrame(id);
    };
  };
};

exports.requestIdleCallback = function (opts) {
  return function (fn) {
    return function (window) {
      return function () {
        return window.requestIdleCallback(fn, opts);
      };
    };
  };
};

exports.cancelIdleCallback = function (id) {
  return function (window) {
    return function () {
      return window.cancelIdleCallback(id);
    };
  };
};

exports.parent = function (window) {
  return function () {
    return window.parent;
  };
};

exports._opener = function (window) {
  return function () {
    return window.opener;
  };
};
},{}],"o50Q":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Nullable = require("../Data.Nullable/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Effect = require("../Effect/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var Web_Internal_FFI = require("../Web.Internal.FFI/index.js");

var RequestIdleCallbackId = function RequestIdleCallbackId(x) {
  return x;
};

var RequestAnimationFrameId = function RequestAnimationFrameId(x) {
  return x;
};

var toEventTarget = Unsafe_Coerce.unsafeCoerce;

var promptDefault = function promptDefault(msg) {
  return function (defaultText) {
    return function (window) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)(defaultText)(window));
    };
  };
};

var prompt = function prompt(msg) {
  return function (window) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_prompt"](msg)("")(window));
  };
};

var opener = function opener(window) {
  return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_opener"](window));
};

var open = function open(url$prime) {
  return function (name) {
    return function (features) {
      return function (window) {
        return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_open"](url$prime)(name)(features)(window));
      };
    };
  };
};

var fromEventTarget = Web_Internal_FFI.unsafeReadProtoTagged("Window");
var eqRequestIdleCallbackId = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordRequestIdleCallbackId = new Data_Ord.Ord(function () {
  return eqRequestIdleCallbackId;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});
var eqRequestAnimationFrameId = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordRequestAnimationFrameId = new Data_Ord.Ord(function () {
  return eqRequestAnimationFrameId;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});
module.exports = {
  toEventTarget: toEventTarget,
  fromEventTarget: fromEventTarget,
  open: open,
  prompt: prompt,
  promptDefault: promptDefault,
  opener: opener,
  eqRequestAnimationFrameId: eqRequestAnimationFrameId,
  ordRequestAnimationFrameId: ordRequestAnimationFrameId,
  eqRequestIdleCallbackId: eqRequestIdleCallbackId,
  ordRequestIdleCallbackId: ordRequestIdleCallbackId,
  document: $foreign.document,
  navigator: $foreign.navigator,
  location: $foreign.location,
  history: $foreign.history,
  innerWidth: $foreign.innerWidth,
  innerHeight: $foreign.innerHeight,
  alert: $foreign.alert,
  confirm: $foreign.confirm,
  moveBy: $foreign.moveBy,
  moveTo: $foreign.moveTo,
  outerHeight: $foreign.outerHeight,
  outerWidth: $foreign.outerWidth,
  print: $foreign.print,
  resizeBy: $foreign.resizeBy,
  resizeTo: $foreign.resizeTo,
  screenX: $foreign.screenX,
  screenY: $foreign.screenY,
  scroll: $foreign.scroll,
  scrollBy: $foreign.scrollBy,
  scrollX: $foreign.scrollX,
  scrollY: $foreign.scrollY,
  localStorage: $foreign.localStorage,
  sessionStorage: $foreign.sessionStorage,
  requestAnimationFrame: $foreign.requestAnimationFrame,
  cancelAnimationFrame: $foreign.cancelAnimationFrame,
  requestIdleCallback: $foreign.requestIdleCallback,
  cancelIdleCallback: $foreign.cancelIdleCallback,
  parent: $foreign.parent
};
},{"./foreign.js":"quFp","../Data.Eq/index.js":"Pq4F","../Data.Functor/index.js":"AEHo","../Data.Nullable/index.js":"YQ8o","../Data.Ord/index.js":"r4Vb","../Effect/index.js":"oTWB","../Unsafe.Coerce/index.js":"ETUV","../Web.Internal.FFI/index.js":"fdUh"}],"UQRJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Web_HTML_Common = require("../Web.HTML.Common/index.js");

var Web_HTML_HTMLAnchorElement = require("../Web.HTML.HTMLAnchorElement/index.js");

var Web_HTML_HTMLAreaElement = require("../Web.HTML.HTMLAreaElement/index.js");

var Web_HTML_HTMLAudioElement = require("../Web.HTML.HTMLAudioElement/index.js");

var Web_HTML_HTMLBRElement = require("../Web.HTML.HTMLBRElement/index.js");

var Web_HTML_HTMLBaseElement = require("../Web.HTML.HTMLBaseElement/index.js");

var Web_HTML_HTMLBodyElement = require("../Web.HTML.HTMLBodyElement/index.js");

var Web_HTML_HTMLButtonElement = require("../Web.HTML.HTMLButtonElement/index.js");

var Web_HTML_HTMLCanvasElement = require("../Web.HTML.HTMLCanvasElement/index.js");

var Web_HTML_HTMLDListElement = require("../Web.HTML.HTMLDListElement/index.js");

var Web_HTML_HTMLDataElement = require("../Web.HTML.HTMLDataElement/index.js");

var Web_HTML_HTMLDataListElement = require("../Web.HTML.HTMLDataListElement/index.js");

var Web_HTML_HTMLDivElement = require("../Web.HTML.HTMLDivElement/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_HTMLElement = require("../Web.HTML.HTMLElement/index.js");

var Web_HTML_HTMLEmbedElement = require("../Web.HTML.HTMLEmbedElement/index.js");

var Web_HTML_HTMLFieldSetElement = require("../Web.HTML.HTMLFieldSetElement/index.js");

var Web_HTML_HTMLFormElement = require("../Web.HTML.HTMLFormElement/index.js");

var Web_HTML_HTMLHRElement = require("../Web.HTML.HTMLHRElement/index.js");

var Web_HTML_HTMLHeadElement = require("../Web.HTML.HTMLHeadElement/index.js");

var Web_HTML_HTMLHeadingElement = require("../Web.HTML.HTMLHeadingElement/index.js");

var Web_HTML_HTMLIFrameElement = require("../Web.HTML.HTMLIFrameElement/index.js");

var Web_HTML_HTMLImageElement = require("../Web.HTML.HTMLImageElement/index.js");

var Web_HTML_HTMLInputElement = require("../Web.HTML.HTMLInputElement/index.js");

var Web_HTML_HTMLKeygenElement = require("../Web.HTML.HTMLKeygenElement/index.js");

var Web_HTML_HTMLLIElement = require("../Web.HTML.HTMLLIElement/index.js");

var Web_HTML_HTMLLabelElement = require("../Web.HTML.HTMLLabelElement/index.js");

var Web_HTML_HTMLLegendElement = require("../Web.HTML.HTMLLegendElement/index.js");

var Web_HTML_HTMLLinkElement = require("../Web.HTML.HTMLLinkElement/index.js");

var Web_HTML_HTMLMapElement = require("../Web.HTML.HTMLMapElement/index.js");

var Web_HTML_HTMLMediaElement = require("../Web.HTML.HTMLMediaElement/index.js");

var Web_HTML_HTMLMetaElement = require("../Web.HTML.HTMLMetaElement/index.js");

var Web_HTML_HTMLMeterElement = require("../Web.HTML.HTMLMeterElement/index.js");

var Web_HTML_HTMLModElement = require("../Web.HTML.HTMLModElement/index.js");

var Web_HTML_HTMLOListElement = require("../Web.HTML.HTMLOListElement/index.js");

var Web_HTML_HTMLObjectElement = require("../Web.HTML.HTMLObjectElement/index.js");

var Web_HTML_HTMLOptGroupElement = require("../Web.HTML.HTMLOptGroupElement/index.js");

var Web_HTML_HTMLOptionElement = require("../Web.HTML.HTMLOptionElement/index.js");

var Web_HTML_HTMLOutputElement = require("../Web.HTML.HTMLOutputElement/index.js");

var Web_HTML_HTMLParagraphElement = require("../Web.HTML.HTMLParagraphElement/index.js");

var Web_HTML_HTMLParamElement = require("../Web.HTML.HTMLParamElement/index.js");

var Web_HTML_HTMLPreElement = require("../Web.HTML.HTMLPreElement/index.js");

var Web_HTML_HTMLProgressElement = require("../Web.HTML.HTMLProgressElement/index.js");

var Web_HTML_HTMLQuoteElement = require("../Web.HTML.HTMLQuoteElement/index.js");

var Web_HTML_HTMLScriptElement = require("../Web.HTML.HTMLScriptElement/index.js");

var Web_HTML_HTMLSelectElement = require("../Web.HTML.HTMLSelectElement/index.js");

var Web_HTML_HTMLSourceElement = require("../Web.HTML.HTMLSourceElement/index.js");

var Web_HTML_HTMLSpanElement = require("../Web.HTML.HTMLSpanElement/index.js");

var Web_HTML_HTMLStyleElement = require("../Web.HTML.HTMLStyleElement/index.js");

var Web_HTML_HTMLTableCaptionElement = require("../Web.HTML.HTMLTableCaptionElement/index.js");

var Web_HTML_HTMLTableCellElement = require("../Web.HTML.HTMLTableCellElement/index.js");

var Web_HTML_HTMLTableColElement = require("../Web.HTML.HTMLTableColElement/index.js");

var Web_HTML_HTMLTableDataCellElement = require("../Web.HTML.HTMLTableDataCellElement/index.js");

var Web_HTML_HTMLTableElement = require("../Web.HTML.HTMLTableElement/index.js");

var Web_HTML_HTMLTableHeaderCellElement = require("../Web.HTML.HTMLTableHeaderCellElement/index.js");

var Web_HTML_HTMLTableRowElement = require("../Web.HTML.HTMLTableRowElement/index.js");

var Web_HTML_HTMLTableSectionElement = require("../Web.HTML.HTMLTableSectionElement/index.js");

var Web_HTML_HTMLTemplateElement = require("../Web.HTML.HTMLTemplateElement/index.js");

var Web_HTML_HTMLTextAreaElement = require("../Web.HTML.HTMLTextAreaElement/index.js");

var Web_HTML_HTMLTimeElement = require("../Web.HTML.HTMLTimeElement/index.js");

var Web_HTML_HTMLTitleElement = require("../Web.HTML.HTMLTitleElement/index.js");

var Web_HTML_HTMLTrackElement = require("../Web.HTML.HTMLTrackElement/index.js");

var Web_HTML_HTMLUListElement = require("../Web.HTML.HTMLUListElement/index.js");

var Web_HTML_HTMLVideoElement = require("../Web.HTML.HTMLVideoElement/index.js");

var Web_HTML_History = require("../Web.HTML.History/index.js");

var Web_HTML_Location = require("../Web.HTML.Location/index.js");

var Web_HTML_Navigator = require("../Web.HTML.Navigator/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

module.exports = {
  window: $foreign.window
};
},{"./foreign.js":"UOgE","../Web.HTML.Common/index.js":"HWRz","../Web.HTML.HTMLAnchorElement/index.js":"RVu6","../Web.HTML.HTMLAreaElement/index.js":"uD7j","../Web.HTML.HTMLAudioElement/index.js":"B3My","../Web.HTML.HTMLBRElement/index.js":"PuGe","../Web.HTML.HTMLBaseElement/index.js":"WRLa","../Web.HTML.HTMLBodyElement/index.js":"KpQ0","../Web.HTML.HTMLButtonElement/index.js":"St95","../Web.HTML.HTMLCanvasElement/index.js":"nq6t","../Web.HTML.HTMLDListElement/index.js":"ojSn","../Web.HTML.HTMLDataElement/index.js":"Qyyf","../Web.HTML.HTMLDataListElement/index.js":"rdK7","../Web.HTML.HTMLDivElement/index.js":"nQnI","../Web.HTML.HTMLDocument/index.js":"EU5r","../Web.HTML.HTMLElement/index.js":"MEIX","../Web.HTML.HTMLEmbedElement/index.js":"NyBL","../Web.HTML.HTMLFieldSetElement/index.js":"BsUB","../Web.HTML.HTMLFormElement/index.js":"RRw7","../Web.HTML.HTMLHRElement/index.js":"EuY3","../Web.HTML.HTMLHeadElement/index.js":"rfcW","../Web.HTML.HTMLHeadingElement/index.js":"LiD8","../Web.HTML.HTMLIFrameElement/index.js":"EBFS","../Web.HTML.HTMLImageElement/index.js":"NUnG","../Web.HTML.HTMLInputElement/index.js":"SZoe","../Web.HTML.HTMLKeygenElement/index.js":"yhaF","../Web.HTML.HTMLLIElement/index.js":"EVwJ","../Web.HTML.HTMLLabelElement/index.js":"MJpa","../Web.HTML.HTMLLegendElement/index.js":"whCl","../Web.HTML.HTMLLinkElement/index.js":"M6eI","../Web.HTML.HTMLMapElement/index.js":"EcIC","../Web.HTML.HTMLMediaElement/index.js":"xgHL","../Web.HTML.HTMLMetaElement/index.js":"KGe4","../Web.HTML.HTMLMeterElement/index.js":"f0BY","../Web.HTML.HTMLModElement/index.js":"hxgD","../Web.HTML.HTMLOListElement/index.js":"Jg30","../Web.HTML.HTMLObjectElement/index.js":"QU4S","../Web.HTML.HTMLOptGroupElement/index.js":"HJKX","../Web.HTML.HTMLOptionElement/index.js":"csiy","../Web.HTML.HTMLOutputElement/index.js":"OtE0","../Web.HTML.HTMLParagraphElement/index.js":"hHzC","../Web.HTML.HTMLParamElement/index.js":"JyDn","../Web.HTML.HTMLPreElement/index.js":"uLnv","../Web.HTML.HTMLProgressElement/index.js":"FCQI","../Web.HTML.HTMLQuoteElement/index.js":"mgz4","../Web.HTML.HTMLScriptElement/index.js":"MQt4","../Web.HTML.HTMLSelectElement/index.js":"ym46","../Web.HTML.HTMLSourceElement/index.js":"yrU4","../Web.HTML.HTMLSpanElement/index.js":"aOKI","../Web.HTML.HTMLStyleElement/index.js":"l4f4","../Web.HTML.HTMLTableCaptionElement/index.js":"kkRB","../Web.HTML.HTMLTableCellElement/index.js":"aVNW","../Web.HTML.HTMLTableColElement/index.js":"QyE1","../Web.HTML.HTMLTableDataCellElement/index.js":"lKQZ","../Web.HTML.HTMLTableElement/index.js":"cxKc","../Web.HTML.HTMLTableHeaderCellElement/index.js":"tIQZ","../Web.HTML.HTMLTableRowElement/index.js":"lPxK","../Web.HTML.HTMLTableSectionElement/index.js":"XuwJ","../Web.HTML.HTMLTemplateElement/index.js":"O4m1","../Web.HTML.HTMLTextAreaElement/index.js":"GScu","../Web.HTML.HTMLTimeElement/index.js":"TTP8","../Web.HTML.HTMLTitleElement/index.js":"zdYT","../Web.HTML.HTMLTrackElement/index.js":"iTOK","../Web.HTML.HTMLUListElement/index.js":"AuHM","../Web.HTML.HTMLVideoElement/index.js":"ULc0","../Web.HTML.History/index.js":"Blp1","../Web.HTML.Location/index.js":"ne3L","../Web.HTML.Navigator/index.js":"kGHn","../Web.HTML.Window/index.js":"o50Q"}],"KZwF":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_React = require("../Concur.React/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect = require("../Effect/index.js");

var ReactDOM = require("../ReactDOM/index.js");

var Web_DOM_NonElementParentNode = require("../Web.DOM.NonElementParentNode/index.js");

var Web_HTML = require("../Web.HTML/index.js");

var Web_HTML_HTMLDocument = require("../Web.HTML.HTMLDocument/index.js");

var Web_HTML_Window = require("../Web.HTML.Window/index.js");

var runWidgetInDom = function runWidgetInDom(elemId) {
  return function (w) {
    return function __do() {
      var win = Web_HTML.window();
      var doc = Web_HTML_Window.document(win)();
      var node = Web_HTML_HTMLDocument.toNonElementParentNode(doc);
      var mroot = Web_DOM_NonElementParentNode.getElementById(elemId)(node)();

      if (mroot instanceof Data_Maybe.Nothing) {
        return Data_Unit.unit;
      }

      ;

      if (mroot instanceof Data_Maybe.Just) {
        return Data_Functor["void"](Effect.functorEffect)(ReactDOM.render(Concur_React.renderComponent(w))(mroot.value0))();
      }

      ;
      throw new Error("Failed pattern match at Concur.React.Run (line 23, column 3 - line 25, column 65): " + [mroot.constructor.name]);
    };
  };
};

module.exports = {
  runWidgetInDom: runWidgetInDom
};
},{"../Concur.React/index.js":"MGzD","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Unit/index.js":"NhVk","../Effect/index.js":"oTWB","../ReactDOM/index.js":"vq59","../Web.DOM.NonElementParentNode/index.js":"HGyN","../Web.HTML/index.js":"UQRJ","../Web.HTML.HTMLDocument/index.js":"EU5r","../Web.HTML.Window/index.js":"o50Q"}],"lBdo":[function(require,module,exports) {
"use strict";

exports.fromNumberImpl = function (just) {
  return function (nothing) {
    return function (n) {
      /* jshint bitwise: false */
      return (n | 0) === n ? just(n) : nothing;
    };
  };
};

exports.toNumber = function (n) {
  return n;
};

exports.fromStringAsImpl = function (just) {
  return function (nothing) {
    return function (radix) {
      var digits;

      if (radix < 11) {
        digits = "[0-" + (radix - 1).toString() + "]";
      } else if (radix === 11) {
        digits = "[0-9a]";
      } else {
        digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
      }

      var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
      return function (s) {
        /* jshint bitwise: false */
        if (pattern.test(s)) {
          var i = parseInt(s, radix);
          return (i | 0) === i ? just(i) : nothing;
        } else {
          return nothing;
        }
      };
    };
  };
};

exports.toStringAs = function (radix) {
  return function (i) {
    return i.toString(radix);
  };
};

exports.quot = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return x / y | 0;
  };
};

exports.rem = function (x) {
  return function (y) {
    return x % y;
  };
};

exports.pow = function (x) {
  return function (y) {
    /* jshint bitwise: false */
    return Math.pow(x, y) | 0;
  };
};
},{}],"xYq2":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var DivisionRing = function DivisionRing(Ring0, recip) {
  this.Ring0 = Ring0;
  this.recip = recip;
};

var recip = function recip(dict) {
  return dict.recip;
};

var rightDiv = function rightDiv(dictDivisionRing) {
  return function (a) {
    return function (b) {
      return Data_Semiring.mul(dictDivisionRing.Ring0().Semiring0())(a)(recip(dictDivisionRing)(b));
    };
  };
};

var leftDiv = function leftDiv(dictDivisionRing) {
  return function (a) {
    return function (b) {
      return Data_Semiring.mul(dictDivisionRing.Ring0().Semiring0())(recip(dictDivisionRing)(b))(a);
    };
  };
};

var divisionringNumber = new DivisionRing(function () {
  return Data_Ring.ringNumber;
}, function (x) {
  return 1.0 / x;
});
module.exports = {
  DivisionRing: DivisionRing,
  recip: recip,
  leftDiv: leftDiv,
  rightDiv: rightDiv,
  divisionringNumber: divisionringNumber,
  Ring: Data_Ring.Ring,
  negate: Data_Ring.negate,
  sub: Data_Ring.sub,
  Semiring: Data_Semiring.Semiring,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero
};
},{"../Data.Ring/index.js":"E2qH","../Data.Semiring/index.js":"NFPD"}],"fgbo":[function(require,module,exports) {
/* globals exports */
"use strict";

exports.nan = NaN;
exports.isNaN = isNaN;
exports.infinity = Infinity;
exports.isFinite = isFinite;

exports.fromStringImpl = function (str, isFinite, just, nothing) {
  var num = parseFloat(str);

  if (isFinite(num)) {
    return just(num);
  } else {
    return nothing;
  }
};
},{}],"d4O6":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var fromString = function fromString(str) {
  return $foreign.fromStringImpl(str, $foreign["isFinite"], Data_Maybe.Just.create, Data_Maybe.Nothing.value);
};

module.exports = {
  fromString: fromString,
  nan: $foreign.nan,
  "isNaN": $foreign["isNaN"],
  infinity: $foreign.infinity,
  "isFinite": $foreign["isFinite"]
};
},{"./foreign.js":"fgbo","../Data.Maybe/index.js":"mN7T"}],"zbbv":[function(require,module,exports) {
"use strict"; // module Math

exports.abs = Math.abs;
exports.acos = Math.acos;
exports.asin = Math.asin;
exports.atan = Math.atan;

exports.atan2 = function (y) {
  return function (x) {
    return Math.atan2(y, x);
  };
};

exports.ceil = Math.ceil;
exports.cos = Math.cos;
exports.exp = Math.exp;
exports.floor = Math.floor;

function nativeImul(a) {
  return function (b) {
    return Math.imul(a, b);
  };
} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul


function emulatedImul(a) {
  /*jshint bitwise: false*/
  return function (b) {
    var ah = a >>> 16 & 0xffff;
    var al = a & 0xffff;
    var bh = b >>> 16 & 0xffff;
    var bl = b & 0xffff; // the shift by 0 fixes the sign on the high part
    // the final |0 converts the unsigned value into a signed value

    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}

exports.imul = Math.imul ? nativeImul : emulatedImul;

exports.trunc = Math.trunc || function (n) {
  return n < 0 ? Math.ceil(n) : Math.floor(n);
};

exports.log = Math.log;

exports.max = function (n1) {
  return function (n2) {
    return Math.max(n1, n2);
  };
};

exports.min = function (n1) {
  return function (n2) {
    return Math.min(n1, n2);
  };
};

exports.pow = function (n) {
  return function (p) {
    return Math.pow(n, p);
  };
};

exports.remainder = function (n) {
  return function (m) {
    return n % m;
  };
};

exports.round = Math.round;
exports.sin = Math.sin;
exports.sqrt = Math.sqrt;
exports.tan = Math.tan;
exports.e = Math.E;
exports.ln2 = Math.LN2;
exports.ln10 = Math.LN10;
exports.log2e = Math.LOG2E;
exports.log10e = Math.LOG10E;
exports.pi = Math.PI;
exports.tau = 2 * Math.PI;
exports.sqrt1_2 = Math.SQRT1_2;
exports.sqrt2 = Math.SQRT2;
},{}],"Rpaz":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  abs: $foreign.abs,
  acos: $foreign.acos,
  asin: $foreign.asin,
  atan: $foreign.atan,
  atan2: $foreign.atan2,
  ceil: $foreign.ceil,
  cos: $foreign.cos,
  exp: $foreign.exp,
  floor: $foreign.floor,
  imul: $foreign.imul,
  log: $foreign.log,
  max: $foreign.max,
  min: $foreign.min,
  pow: $foreign.pow,
  round: $foreign.round,
  sin: $foreign.sin,
  sqrt: $foreign.sqrt,
  tan: $foreign.tan,
  trunc: $foreign.trunc,
  remainder: $foreign.remainder,
  e: $foreign.e,
  ln2: $foreign.ln2,
  ln10: $foreign.ln10,
  log2e: $foreign.log2e,
  log10e: $foreign.log10e,
  pi: $foreign.pi,
  tau: $foreign.tau,
  sqrt1_2: $foreign.sqrt1_2,
  sqrt2: $foreign.sqrt2
};
},{"./foreign.js":"zbbv"}],"xNJb":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_DivisionRing = require("../Data.DivisionRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Number = require("../Data.Number/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var $$Math = require("../Math/index.js");

var Radix = function Radix(x) {
  return x;
};

var Even = function () {
  function Even() {}

  ;
  Even.value = new Even();
  return Even;
}();

var Odd = function () {
  function Odd() {}

  ;
  Odd.value = new Odd();
  return Odd;
}();

var showParity = new Data_Show.Show(function (v) {
  if (v instanceof Even) {
    return "Even";
  }

  ;

  if (v instanceof Odd) {
    return "Odd";
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 111, column 1 - line 113, column 19): " + [v.constructor.name]);
});

var radix = function radix(n) {
  if (n >= 2 && n <= 36) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 192, column 1 - line 192, column 28): " + [n.constructor.name]);
};

var odd = function odd(x) {
  return (x & 1) !== 0;
};

var octal = 8;
var hexadecimal = 16;
var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var fromString = fromStringAs(10);
var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var unsafeClamp = function unsafeClamp(x) {
  if (!Data_Number["isFinite"](x)) {
    return 0;
  }

  ;

  if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
    return Data_Bounded.top(Data_Bounded.boundedInt);
  }

  ;

  if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
    return Data_Bounded.bottom(Data_Bounded.boundedInt);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.fromMaybe(0)(fromNumber(x));
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [x.constructor.name]);
};

var round = function round($23) {
  return unsafeClamp($$Math.round($23));
};

var floor = function floor($24) {
  return unsafeClamp($$Math.floor($24));
};

var even = function even(x) {
  return (x & 1) === 0;
};

var parity = function parity(n) {
  var $14 = even(n);

  if ($14) {
    return Even.value;
  }

  ;
  return Odd.value;
};

var eqParity = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Even && y instanceof Even) {
      return true;
    }

    ;

    if (x instanceof Odd && y instanceof Odd) {
      return true;
    }

    ;
    return false;
  };
});
var ordParity = new Data_Ord.Ord(function () {
  return eqParity;
}, function (x) {
  return function (y) {
    if (x instanceof Even && y instanceof Even) {
      return Data_Ordering.EQ.value;
    }

    ;

    if (x instanceof Even) {
      return Data_Ordering.LT.value;
    }

    ;

    if (y instanceof Even) {
      return Data_Ordering.GT.value;
    }

    ;

    if (x instanceof Odd && y instanceof Odd) {
      return Data_Ordering.EQ.value;
    }

    ;
    throw new Error("Failed pattern match at Data.Int (line 109, column 1 - line 109, column 40): " + [x.constructor.name, y.constructor.name]);
  };
});
var semiringParity = new Data_Semiring.Semiring(function (x) {
  return function (y) {
    var $19 = Data_Eq.eq(eqParity)(x)(y);

    if ($19) {
      return Even.value;
    }

    ;
    return Odd.value;
  };
}, function (v) {
  return function (v1) {
    if (v instanceof Odd && v1 instanceof Odd) {
      return Odd.value;
    }

    ;
    return Even.value;
  };
}, Odd.value, Even.value);
var ringParity = new Data_Ring.Ring(function () {
  return semiringParity;
}, Data_Semiring.add(semiringParity));
var divisionRingParity = new Data_DivisionRing.DivisionRing(function () {
  return ringParity;
}, Control_Category.identity(Control_Category.categoryFn));
var decimal = 10;
var commutativeRingParity = new Data_CommutativeRing.CommutativeRing(function () {
  return ringParity;
});
var euclideanRingParity = new Data_EuclideanRing.EuclideanRing(function () {
  return commutativeRingParity;
}, function (v) {
  if (v instanceof Even) {
    return 0;
  }

  ;

  if (v instanceof Odd) {
    return 1;
  }

  ;
  throw new Error("Failed pattern match at Data.Int (line 131, column 1 - line 135, column 17): " + [v.constructor.name]);
}, function (x) {
  return function (v) {
    return x;
  };
}, function (v) {
  return function (v1) {
    return Even.value;
  };
});

var ceil = function ceil($25) {
  return unsafeClamp($$Math.ceil($25));
};

var boundedParity = new Data_Bounded.Bounded(function () {
  return ordParity;
}, Even.value, Odd.value);
var binary = 2;
var base36 = 36;
module.exports = {
  fromNumber: fromNumber,
  ceil: ceil,
  floor: floor,
  round: round,
  fromString: fromString,
  radix: radix,
  binary: binary,
  octal: octal,
  decimal: decimal,
  hexadecimal: hexadecimal,
  base36: base36,
  fromStringAs: fromStringAs,
  Even: Even,
  Odd: Odd,
  parity: parity,
  even: even,
  odd: odd,
  eqParity: eqParity,
  ordParity: ordParity,
  showParity: showParity,
  boundedParity: boundedParity,
  semiringParity: semiringParity,
  ringParity: ringParity,
  commutativeRingParity: commutativeRingParity,
  euclideanRingParity: euclideanRingParity,
  divisionRingParity: divisionRingParity,
  toNumber: $foreign.toNumber,
  toStringAs: $foreign.toStringAs,
  quot: $foreign.quot,
  rem: $foreign.rem,
  pow: $foreign.pow
};
},{"./foreign.js":"lBdo","../Control.Category/index.js":"IAi2","../Data.Boolean/index.js":"ObQr","../Data.Bounded/index.js":"kcUU","../Data.CommutativeRing/index.js":"TQxD","../Data.DivisionRing/index.js":"xYq2","../Data.Eq/index.js":"Pq4F","../Data.EuclideanRing/index.js":"IRBO","../Data.Maybe/index.js":"mN7T","../Data.Number/index.js":"d4O6","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Ring/index.js":"E2qH","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7","../Math/index.js":"Rpaz"}],"vptB":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Concur_Dom_Attr = require("../Concur.Dom.Attr/index.js");

var Concur_React_DOM = require("../Concur.React.DOM/index.js");

var Concur_React_Props = require("../Concur.React.Props/index.js");

var Concur_React_Run = require("../Concur.React.Run/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Number = require("../Data.Number/index.js");

var stringValue = Concur_React_Props.unsafeTargetValue;
var runWidgetInDom = Concur_React_Run.runWidgetInDom;
var inlineWithAttr = Concur_React_DOM.span;

var inlineWithData = function inlineWithData(cs) {
  return function (r) {
    return inlineWithAttr(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(cs), Concur_React_Props["_data"](r)]);
  };
};

var inline = function inline(cs) {
  return inlineWithAttr(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(cs)]);
};

var floatValue = function floatValue($0) {
  return Data_Number.fromString(stringValue($0));
};

var intValue = function intValue(e) {
  return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(floatValue(e))(Data_Int.floor);
};

var blockWithAttr = Concur_React_DOM.div(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap);

var blockWithData = function blockWithData(cs) {
  return function (r) {
    return blockWithAttr([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(cs), Concur_React_Props["_data"](r)]);
  };
};

var block = function block(cs) {
  return blockWithAttr([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(cs)]);
};

module.exports = {
  block: block,
  blockWithData: blockWithData,
  blockWithAttr: blockWithAttr,
  inline: inline,
  inlineWithData: inlineWithData,
  stringValue: stringValue,
  intValue: intValue,
  floatValue: floatValue,
  runWidgetInDom: runWidgetInDom
};
},{"../Concur.Core.Types/index.js":"qGwK","../Concur.Dom.Attr/index.js":"wrur","../Concur.React.DOM/index.js":"Lx0R","../Concur.React.Props/index.js":"twSw","../Concur.React.Run/index.js":"KZwF","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.Int/index.js":"xNJb","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Number/index.js":"d4O6"}],"Ywth":[function(require,module,exports) {
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
"use strict";
/** @constructor */

function MapNode(datamap, nodemap, content) {
  this.datamap = datamap;
  this.nodemap = nodemap;
  this.content = content;
}

MapNode.prototype.lookup = function lookup(Nothing, Just, keyEquals, key, keyHash, shift) {
  var bit = mask(keyHash, shift);

  if ((this.datamap & bit) !== 0) {
    var i = index(this.datamap, bit);
    if (keyEquals(key)(this.content[i * 2])) return new Just(this.content[i * 2 + 1]);
    return Nothing;
  }

  if ((this.nodemap & bit) !== 0) {
    return this.content[this.content.length - 1 - index(this.nodemap, bit)].lookup(Nothing, Just, keyEquals, key, keyHash, shift + 5);
  }

  return Nothing;
};

function remove2insert1Mut(a, removeIndex, insertIndex, v1) {
  for (var i = removeIndex; i < insertIndex; i++) {
    a[i] = a[i + 2];
  }

  a[i++] = v1;

  for (; i < a.length - 1; i++) {
    a[i] = a[i + 1];
  }

  a.length = a.length - 1;
}

MapNode.prototype.insertMut = function insertMut(keyEquals, hashFunction, key, keyHash, value, shift) {
  var bit = mask(keyHash, shift);
  var i = index(this.datamap, bit);

  if ((this.datamap & bit) !== 0) {
    var k = this.content[i * 2];

    if (keyEquals(k)(key)) {
      this.content[i * 2 + 1] = value;
    } else {
      var newNode = binaryNode(k, hashFunction(k), this.content[i * 2 + 1], key, keyHash, value, shift + 5);
      this.datamap = this.datamap ^ bit;
      this.nodemap = this.nodemap | bit;
      remove2insert1Mut(this.content, i * 2, this.content.length - index(this.nodemap, bit) - 2, newNode);
    }
  } else if ((this.nodemap & bit) !== 0) {
    var n = this.content.length - 1 - index(this.nodemap, bit);
    this.content[n].insertMut(keyEquals, hashFunction, key, keyHash, value, shift + 5);
  } else {
    this.datamap = this.datamap | bit;
    this.content.splice(i * 2, 0, key, value);
  }
};

MapNode.prototype.insert = function insert(keyEquals, hashFunction, key, keyHash, value, shift) {
  var bit = mask(keyHash, shift);
  var i = index(this.datamap, bit);

  if ((this.datamap & bit) !== 0) {
    var k = this.content[i * 2];
    if (keyEquals(k)(key)) return new MapNode(this.datamap, this.nodemap, overwriteTwoElements(this.content, i * 2, key, value));
    var newNode = binaryNode(k, hashFunction(k), this.content[i * 2 + 1], key, keyHash, value, shift + 5);
    return new MapNode(this.datamap ^ bit, this.nodemap | bit, remove2insert1(this.content, i * 2, this.content.length - index(this.nodemap, bit) - 2, newNode));
  }

  if ((this.nodemap & bit) !== 0) {
    var n = this.content.length - 1 - index(this.nodemap, bit);
    return new MapNode(this.datamap, this.nodemap, copyAndOverwriteOrExtend1(this.content, n, this.content[n].insert(keyEquals, hashFunction, key, keyHash, value, shift + 5)));
  }

  return new MapNode(this.datamap | bit, this.nodemap, insert2(this.content, i * 2, key, value));
};

MapNode.prototype.insertWith = function insertWith(keyEquals, hashFunction, f, key, keyHash, value, shift) {
  var bit = mask(keyHash, shift);
  var i = index(this.datamap, bit);

  if ((this.datamap & bit) !== 0) {
    var k = this.content[i * 2];
    if (keyEquals(k)(key)) return new MapNode(this.datamap, this.nodemap, overwriteTwoElements(this.content, i * 2, key, f(this.content[i * 2 + 1])(value)));
    var newNode = binaryNode(k, hashFunction(k), this.content[i * 2 + 1], key, keyHash, value, shift + 5);
    return new MapNode(this.datamap ^ bit, this.nodemap | bit, remove2insert1(this.content, i * 2, this.content.length - index(this.nodemap, bit) - 2, newNode));
  }

  if ((this.nodemap & bit) !== 0) {
    var n = this.content.length - 1 - index(this.nodemap, bit);
    return new MapNode(this.datamap, this.nodemap, copyAndOverwriteOrExtend1(this.content, n, this.content[n].insertWith(keyEquals, hashFunction, f, key, keyHash, value, shift + 5)));
  }

  return new MapNode(this.datamap | bit, this.nodemap, insert2(this.content, i * 2, key, value));
};

MapNode.prototype.delet = function delet(keyEquals, key, keyHash, shift) {
  var bit = mask(keyHash, shift);

  if ((this.datamap & bit) !== 0) {
    var dataIndex = index(this.datamap, bit);

    if (keyEquals(this.content[dataIndex * 2])(key)) {
      if (this.nodemap === 0 && this.content.length === 2) return empty;
      return new MapNode(this.datamap ^ bit, this.nodemap, remove2(this.content, dataIndex * 2));
    }

    return this;
  }

  if ((this.nodemap & bit) !== 0) {
    var nodeIndex = index(this.nodemap, bit);
    var recNode = this.content[this.content.length - 1 - nodeIndex];
    var recRes = recNode.delet(keyEquals, key, keyHash, shift + 5);
    if (recNode === recRes) return this;

    if (recRes.isSingleton()) {
      if (this.content.length === 1) {
        recRes.datamap = this.nodemap;
        return recRes;
      }

      return new MapNode(this.datamap | bit, this.nodemap ^ bit, insert2remove1(this.content, 2 * index(this.datamap, bit), recRes.content[0], recRes.content[1], this.content.length - 1 - nodeIndex));
    }

    return new MapNode(this.datamap, this.nodemap, copyAndOverwriteOrExtend1(this.content, this.content.length - 1 - nodeIndex, recRes));
  }

  return this;
};

MapNode.prototype.toArrayBy = function (f, res) {
  for (var i = 0; i < popCount(this.datamap) * 2;) {
    var k = this.content[i++];
    var v = this.content[i++];
    res.push(f(k)(v));
  }

  for (; i < this.content.length; i++) {
    this.content[i].toArrayBy(f, res);
  }
};

MapNode.prototype.isSingleton = function () {
  return this.nodemap === 0 && this.content.length === 2;
};

MapNode.prototype.eq = function (kf, vf, that) {
  if (this === that) return true;
  if (this.constructor !== that.constructor || this.nodemap !== that.nodemap || this.datamap !== that.datamap) return false;

  for (var i = 0; i < popCount(this.datamap) * 2;) {
    if (kf(this.content[i])(that.content[i])) i++;else return false;
    if (vf(this.content[i])(that.content[i])) i++;else return false;
  }

  for (; i < this.content.length; i++) {
    if (!this.content[i].eq(kf, vf, that.content[i])) return false;
  }

  return true;
};

MapNode.prototype.hash = function (vhash) {
  var h = this.datamap;

  for (var i = 0; i < popCount(this.datamap); i++) {
    h = h * 31 + vhash(this.content[i * 2 + 1]) | 0;
  }

  for (var j = 0; j < popCount(this.nodemap); j++) {
    h = h * 31 + this.content[this.content.length - j - 1].hash(vhash) | 0;
  }

  return h;
};

MapNode.prototype.size = function () {
  var res = popCount(this.datamap);

  for (var i = res * 2; i < this.content.length; i++) {
    res += this.content[i].size();
  }

  return res;
};

MapNode.prototype.imap = function (f) {
  var newContent = this.content.slice();

  for (var i = 0; i < popCount(this.datamap) * 2;) {
    var k = this.content[i++];
    var v = this.content[i++];
    newContent[i - 2] = k;
    newContent[i - 1] = f(k)(v);
  }

  for (; i < this.content.length; i++) {
    newContent[i] = this.content[i].imap(f);
  }

  return new MapNode(this.datamap, this.nodemap, newContent);
};

MapNode.prototype.ifoldMap = function (m, mappend, f) {
  for (var i = 0; i < popCount(this.datamap) * 2;) {
    var k = this.content[i++];
    var v = this.content[i++];
    m = mappend(m)(f(k)(v));
  }

  for (; i < this.content.length; i++) {
    m = this.content[i].ifoldMap(m, mappend, f);
  }

  return m;
};

function lowestBit(n) {
  return n & -n;
}

function mergeState(bit, thisnode, thisdata, thatnode, thatdata) {
  /* Returns one of these constants:
      const NONE_NONE = 0;
     const NODE_NONE = 1;
     const DATA_NONE = 2;
     const NONE_NODE = 4;
     const NONE_DATA = 8;
     const DATA_NODE = DATA_NONE | NONE_NODE;
     const NODE_DATA = NODE_NONE | NONE_DATA;
     const DATA_DATA = DATA_NONE | NONE_DATA;
     const NODE_NODE = NODE_NONE | NONE_NODE;
      I would love to declare them in the file, but purs compile
     complains about `const` and purs bundle removes variables.
  */
  var state = 0;
  state |= (bit & thisnode) !== 0 ? 1 : 0;
  state |= (bit & thisdata) !== 0 ? 2 : 0;
  state |= (bit & thatnode) !== 0 ? 4 : 0;
  state |= (bit & thatdata) !== 0 ? 8 : 0;
  return state;
}

MapNode.prototype.unionWith = function (eq, hash, f, that, shift) {
  if (this.constructor !== that.constructor) throw "Trying to union a MapNode with something else"; // I'd rather declare these locally in the branches, but purs
  // compile complains about `const`.

  var thisDataIndex, thatDataIndex, thisNodeIndex, thatNodeIndex;
  var datamap = 0;
  var nodemap = 0;
  var data = [];
  var nodes = []; // Conceptually, we go through all of the 32 bits in the result
  // and then handle the (in/notin + left/right + data/node)
  // combinations. With this clever trick, we get to skip the 0 bits.

  var skipmap = this.datamap | this.nodemap | that.datamap | that.nodemap;

  while (skipmap !== 0) {
    var bit = lowestBit(skipmap);
    skipmap &= ~bit;

    switch (mergeState(bit, this.nodemap, this.datamap, that.nodemap, that.datamap)) {
      case 1
      /* NODE_NONE */
      :
        thisNodeIndex = index(this.nodemap, bit);
        nodemap |= bit;
        nodes.push(this.content[this.content.length - thisNodeIndex - 1]);
        break;

      case 2
      /* DATA_NONE */
      :
        thisDataIndex = index(this.datamap, bit);
        datamap |= bit;
        data.push(this.content[thisDataIndex * 2], this.content[thisDataIndex * 2 + 1]);
        break;

      case 4
      /* NONE_NODE */
      :
        thatNodeIndex = index(that.nodemap, bit);
        nodemap |= bit;
        nodes.push(that.content[that.content.length - thatNodeIndex - 1]);
        break;

      case 5
      /* NODE_NODE */
      :
        thisNodeIndex = index(this.nodemap, bit);
        thatNodeIndex = index(that.nodemap, bit);
        nodemap |= bit;
        nodes.push(this.content[this.content.length - thisNodeIndex - 1].unionWith(eq, hash, f, that.content[that.content.length - thatNodeIndex - 1], shift + 5));
        break;

      case 6
      /* DATA_NODE */
      :
        thisDataIndex = index(this.datamap, bit);
        thatNodeIndex = index(that.nodemap, bit);
        var k = this.content[thisDataIndex * 2];
        var v = this.content[thisDataIndex * 2 + 1];
        var hk = hash(k);

        var flippedF = function flippedF(a) {
          return function (b) {
            return f(b)(a);
          };
        };

        nodemap |= bit;
        nodes.push(that.content[that.content.length - thatNodeIndex - 1].insertWith(eq, hash, flippedF, k, hk, v, shift + 5));
        break;

      case 8
      /* NONE_DATA */
      :
        thatDataIndex = index(that.datamap, bit);
        datamap |= bit;
        data.push(that.content[thatDataIndex * 2], that.content[thatDataIndex * 2 + 1]);
        break;

      case 9
      /* NODE_DATA */
      :
        thatDataIndex = index(that.datamap, bit);
        thisNodeIndex = index(this.nodemap, bit);
        var k = that.content[thatDataIndex * 2];
        var v = that.content[thatDataIndex * 2 + 1];
        var hk = hash(k);
        nodemap |= bit;
        nodes.push(this.content[this.content.length - thisNodeIndex - 1].insertWith(eq, hash, f, k, hk, v, shift + 5));
        break;

      case 10
      /* DATA_DATA */
      :
        thisDataIndex = index(this.datamap, bit);
        thatDataIndex = index(that.datamap, bit);

        if (eq(this.content[thisDataIndex * 2])(that.content[thatDataIndex * 2])) {
          // equal, merge with f
          datamap |= bit;
          data.push(this.content[thisDataIndex * 2], f(this.content[thisDataIndex * 2 + 1])(that.content[thatDataIndex * 2 + 1]));
        } else {
          // key hashes equal at this level, merge into node
          nodemap |= bit;
          nodes.push(binaryNode(this.content[thisDataIndex * 2], hash(this.content[thisDataIndex * 2]), this.content[thisDataIndex * 2 + 1], that.content[thatDataIndex * 2], hash(that.content[thatDataIndex * 2]), that.content[thatDataIndex * 2 + 1], shift + 5));
        }

        break;
    }
  }

  return new MapNode(datamap, nodemap, data.concat(nodes.reverse()));
};

MapNode.prototype.intersectionWith = function (Nothing, Just, eq, hash, f, that, shift) {
  if (this.constructor !== that.constructor) throw "Trying to intersect a MapNode with something else"; // I'd rather declare these locally in the branches, but purs
  // compile complains about `const`.

  var thisDataIndex, thatDataIndex, thisNodeIndex, thatNodeIndex;
  var datamap = 0;
  var nodemap = 0;
  var data = [];
  var nodes = []; // Conceptually, we go through all of the 32 bits in the result
  // and then handle the (in/notin + left/right + data/node)
  // combinations. With this clever trick, we get to skip the 0 bits.

  var skipmap = (this.datamap | this.nodemap) & (that.datamap | that.nodemap);

  while (skipmap !== 0) {
    var bit = lowestBit(skipmap);
    skipmap &= ~bit;

    switch (mergeState(bit, this.nodemap, this.datamap, that.nodemap, that.datamap)) {
      case 5
      /* NODE_NODE */
      :
        thisNodeIndex = index(this.nodemap, bit);
        thatNodeIndex = index(that.nodemap, bit);
        var recRes = this.content[this.content.length - thisNodeIndex - 1].intersectionWith(Nothing, Just, eq, hash, f, that.content[that.content.length - thatNodeIndex - 1], shift + 5);
        if (isEmpty(recRes)) continue;

        if (recRes.isSingleton()) {
          datamap |= bit;
          data.push(recRes.content[0], recRes.content[1]);
        } else {
          nodemap |= bit;
          nodes.push(recRes);
        }

        break;

      case 6
      /* DATA_NODE */
      :
        thisDataIndex = index(this.datamap, bit);
        thatNodeIndex = index(that.nodemap, bit);
        var k = this.content[thisDataIndex * 2];
        var v = this.content[thisDataIndex * 2 + 1];
        var hk = hash(k);
        var res = that.content[that.content.length - thatNodeIndex - 1].lookup(Nothing, Just, eq, k, hk, shift + 5);

        if (res !== Nothing) {
          datamap |= bit;
          data.push(k, f(v)(res.value0));
        }

        break;

      case 9
      /* NODE_DATA */
      :
        thatDataIndex = index(that.datamap, bit);
        thisNodeIndex = index(this.nodemap, bit);
        var k = that.content[thatDataIndex * 2];
        var v = that.content[thatDataIndex * 2 + 1];
        var hk = hash(k);
        var res = this.content[this.content.length - thisNodeIndex - 1].lookup(Nothing, Just, eq, k, hk, shift + 5);

        if (res !== Nothing) {
          datamap |= bit;
          data.push(k, f(res.value0)(v));
        }

        break;

      case 10
      /* DATA_DATA */
      :
        thisDataIndex = index(this.datamap, bit);
        thatDataIndex = index(that.datamap, bit);

        if (eq(this.content[thisDataIndex * 2])(that.content[thatDataIndex * 2])) {
          datamap |= bit;
          data.push(this.content[thisDataIndex * 2], f(this.content[thisDataIndex * 2 + 1])(that.content[thatDataIndex * 2 + 1]));
        }

        break;
    }
  }

  return new MapNode(datamap, nodemap, data.concat(nodes.reverse()));
};

MapNode.prototype.filterWithKey = function filterWithKey(f) {
  var datamap = 0;
  var nodemap = 0;
  var data = [];
  var nodes = [];
  var skipmap = this.datamap | this.nodemap;

  while (skipmap !== 0) {
    var bit = lowestBit(skipmap);
    skipmap &= ~bit;

    if ((this.datamap & bit) !== 0) {
      var dataIndex = index(this.datamap, bit);
      var k = this.content[dataIndex * 2];
      var v = this.content[dataIndex * 2 + 1];

      if (f(k)(v)) {
        datamap |= bit;
        data.push(k, v);
      }
    } else {
      // assert (this.nodemap & bit) !== 0
      var nodeIndex = index(this.nodemap, bit);
      var node = this.content[this.content.length - nodeIndex - 1].filterWithKey(f);
      if (isEmpty(node)) continue;

      if (node.isSingleton()) {
        datamap |= bit;
        data.push(node.content[0], node.content[1]);
      } else {
        nodemap |= bit;
        nodes.push(node);
      }
    }
  }

  return new MapNode(datamap, nodemap, data.concat(nodes.reverse()));
}; // This builds an n-ary curried function that takes all values and all
// subnodes as arguments and places them in a copy of the hashmap
// preserving the keys, datamap, and nodemap. Basically, a (Hashmap k
// v) with s key-value pairs and t nodes turns into a function:
//
// k_0 -> .. -> k_s -> HashMap_0 k v -> .. -> HashMap_t k v -> HashMap k v
//
// Indices here are to be understood as count.
//
// The main use for this is the as the partial hashmap constructor in
// place of the hole in this concept of an implementation of
// traverseWithKey:
//
// pure ?here <*> f k1 v1 <*> f k2 v2 <*> traverseWithKey f n1 <*> traverseWithKey f n2


MapNode.prototype.travHelper = function () {
  // TODO could have two helpers that basically switch mode from
  // setting values to setting nodes. That way branches would be
  // more predictable. Because the value branch is essentially
  // unpredictable.
  function go(vi, vm, ni, nm, copy) {
    if (vi < vm) return function (v) {
      return go(vi + 1, vm, ni, nm, function () {
        var res = copy();
        res.content[vi * 2 + 1] = v;
        return res;
      });
    };
    if (ni < nm) return function (n) {
      return go(vi, vm, ni + 1, nm, function () {
        var res = copy(); // order of parameters must match stored order

        res.content[vm * 2 + ni] = n;
        return res;
      });
    };
    return copy();
  }

  var vm = popCount(this.datamap);
  var self = this;
  return go(0, vm, 0, this.content.length - vm * 2, function () {
    return new MapNode(self.datamap, self.nodemap, self.content.slice());
  });
};

MapNode.prototype.ifoldMap = function (m, mappend, f) {
  for (var i = 0; i < popCount(this.datamap) * 2;) {
    var k = this.content[i++];
    var v = this.content[i++];
    m = mappend(m)(f(k)(v));
  }

  for (; i < this.content.length; i++) {
    m = this.content[i].ifoldMap(m, mappend, f);
  }

  return m;
};

MapNode.prototype.itraverse = function (pure, apply, f) {
  var m = pure(this.travHelper());

  for (var i = 0; i < popCount(this.datamap) * 2;) {
    var k = this.content[i++];
    var v = this.content[i++];
    m = apply(m)(f(k)(v));
  }

  for (; i < this.content.length; i++) {
    m = apply(m)(this.content[i].itraverse(pure, apply, f));
  }

  return m;
};
/** @constructor */


function Collision(keys, values) {
  this.keys = keys;
  this.values = values;
}

Collision.prototype.lookup = function collisionLookup(Nothing, Just, keyEquals, key, keyHash, shift) {
  for (var i = 0; i < this.keys.length; i++) {
    if (keyEquals(key)(this.keys[i])) return new Just(this.values[i]);
  }

  return Nothing;
};

Collision.prototype.insert = function collisionInsert(keyEquals, hashFunction, key, keyHash, value, shift) {
  var i = 0;

  for (; i < this.keys.length; i++) {
    if (keyEquals(key)(this.keys[i])) break;
  }

  return new Collision(copyAndOverwriteOrExtend1(this.keys, i, key), copyAndOverwriteOrExtend1(this.values, i, value));
};

Collision.prototype.insertMut = function collisionInsertMut(keyEquals, hashFunction, key, keyHash, value, shift) {
  var i = 0;

  for (; i < this.keys.length; i++) {
    if (keyEquals(key)(this.keys[i])) break;
  } // i may be *after* the last element, if the key is not already in the map


  this.keys[i] = key;
  this.values[i] = value;
};

Collision.prototype.insertWith = function collisionInsert(keyEquals, hashFunction, f, key, keyHash, value, shift) {
  var i = 0;

  for (; i < this.keys.length; i++) {
    if (keyEquals(key)(this.keys[i])) return new Collision(copyAndOverwriteOrExtend1(this.keys, i, key), copyAndOverwriteOrExtend1(this.values, i, f(this.values[i])(value)));
  }

  return new Collision(copyAndOverwriteOrExtend1(this.keys, i, key), copyAndOverwriteOrExtend1(this.values, i, value));
};

Collision.prototype.delet = function collisionDelete(keyEquals, key, keyHash, shift) {
  var i = 0;

  for (; i < this.keys.length; i++) {
    if (keyEquals(key)(this.keys[i])) break;
  }

  if (i === this.keys.length) return this;
  if (this.keys.length === 2) return new MapNode(1 << (keyHash & 31), 0, [this.keys[1 - i], this.values[1 - i]]);
  return new Collision(remove1(this.keys, i), remove1(this.values, i));
};

Collision.prototype.toArrayBy = function (f, res) {
  for (var i = 0; i < this.keys.length; i++) {
    res.push(f(this.keys[i])(this.values[i]));
  }
};

Collision.prototype.isSingleton = function () {
  return false;
};

Collision.prototype.eq = function (kf, vf, that) {
  if (this.constructor !== that.constructor || this.keys.length !== that.keys.length) return false;

  outer: for (var i = 0; i < this.keys.length; i++) {
    for (var j = 0; j < that.keys.length; j++) {
      if (kf(this.keys[i])(that.keys[j])) {
        if (vf(this.values[i])(that.values[j])) continue outer;else return false;
      }
    }
  }

  return true;
};

Collision.prototype.hash = function (vhash) {
  // We ignore keys because they have all the same hash anyways
  // (we're in a collision node!)
  var h = 0; // We use just + here, not multiply&add, because order in
  // collision nodes is undefined. A commutative combining operation
  // allows us to simply ignore the order.

  for (var i = 0; i < this.values.length; i++) {
    h += vhash(this.values[i]);
  }

  return h;
};

Collision.prototype.size = function () {
  return this.keys.length;
};

Collision.prototype.imap = function (f) {
  var newValues = this.values.slice();

  for (var i = 0; i < this.values.length; i++) {
    newValues[i] = f(this.keys[i])(this.values[i]);
  }

  return new Collision(this.keys, newValues);
};

Collision.prototype.ifoldMap = function (m, mappend, f) {
  for (var i = 0; i < this.keys.length; i++) {
    m = mappend(m)(f(this.keys[i])(this.values[i]));
  }

  return m;
};

Collision.prototype.travHelper = function () {
  function go(i, m, copy) {
    if (i < m) return function (v) {
      return go(i + 1, m, function () {
        var res = copy();
        res.values[i] = v;
        return res;
      });
    };
    return copy();
  }

  var self = this;
  return go(0, this.keys.length, function () {
    return new Collision(self.keys, self.values.slice());
  });
};

Collision.prototype.itraverse = function (pure, apply, f) {
  var m = pure(this.travHelper());

  for (var i = 0; i < this.keys.length; i++) {
    m = apply(m)(f(this.keys[i])(this.values[i]));
  }

  return m;
};

Collision.prototype.unionWith = function (eq, hash, f, that, shift) {
  if (that.constructor !== Collision) throw "Trying to union a Collision with something else";
  var keys = [];
  var values = [];
  var added = Array(that.keys.length).fill(false);

  outer: for (var i = 0; i < this.keys.length; i++) {
    for (var j = 0; j < that.keys.length; j++) {
      if (eq(this.keys[i])(that.keys[j])) {
        keys.push(this.keys[i]);
        values.push(f(this.values[i])(that.values[j]));
        added[j] = true;
        continue outer;
      }
    }

    keys.push(this.keys[i]);
    values.push(this.values[i]);
    added[j] = true;
  }

  for (var k = 0; k < that.keys.length; k++) {
    if (!added[k]) {
      keys.push(that.keys[k]);
      values.push(that.values[k]);
    }
  }

  return new Collision(keys, values);
};

Collision.prototype.intersectionWith = function (Nothing, Just, eq, hash, f, that, shift) {
  if (that.constructor !== Collision) throw "Trying to intersect a Collision with something else";
  var keys = [];
  var values = [];

  outer: for (var i = 0; i < this.keys.length; i++) {
    for (var j = 0; j < that.keys.length; j++) {
      if (eq(this.keys[i])(that.keys[j])) {
        keys.push(this.keys[i]);
        values.push(f(this.values[i])(that.values[j]));
        continue outer;
      }
    }
  }

  if (keys.length === 0) return empty; // This is a bit dodgy. We return a fake MapNode (wrong datamap
  // (WHICH CANNOT BE 0, OTHERWISE isEmpty THINKS IT'S EMPTY!) and
  // nodemap), but it's okay, because we will immediately
  // deconstruct it in the MapNode.intersectionWith.

  if (keys.length === 1) return new MapNode(1, 0, [keys[0], values[0]]);
  return new Collision(keys, values);
};

Collision.prototype.filterWithKey = function collisionFilterWithKey(f) {
  var keys = [];
  var values = [];

  for (var i = 0; i < this.keys.length; i++) {
    var k = this.keys[i];
    var v = this.values[i];

    if (f(k)(v)) {
      keys.push(k);
      values.push(v);
    }
  }

  if (keys.length === 0) return empty; // This is a bit dodgy. We return a fake MapNode (wrong datamap
  // (WHICH CANNOT BE 0, OTHERWISE isEmpty THINKS IT'S EMPTY!) and
  // nodemap), but it's okay, because we will immediately
  // deconstruct it in MapNode's filterWithKey.

  if (keys.length === 1) return new MapNode(1, 0, [keys[0], values[0]]);
  return new Collision(keys, values);
};

function mask(keyHash, shift) {
  return 1 << (keyHash >>> shift & 31);
}

function index(map, bit) {
  return popCount(map & bit - 1);
}

function popCount(n) {
  n = n - (n >> 1 & 0x55555555);
  n = (n & 0x33333333) + (n >> 2 & 0x33333333);
  return (n + (n >> 4) & 0xF0F0F0F) * 0x1010101 >> 24;
}

function binaryNode(k1, kh1, v1, k2, kh2, v2, s) {
  if (s >= 32) return new Collision([k1, k2], [v1, v2]);
  var b1 = kh1 >>> s & 31;
  var b2 = kh2 >>> s & 31;
  if (b1 !== b2) return new MapNode(1 << b1 | 1 << b2, 0, b1 >>> 0 < b2 >>> 0 ? [k1, v1, k2, v2] : [k2, v2, k1, v1]);
  return new MapNode(0, 1 << b1, [binaryNode(k1, kh1, v1, k2, kh2, v2, s + 5)]);
}

function overwriteTwoElements(a, index, v1, v2) {
  var res = a.slice();
  res[index] = v1;
  res[index + 1] = v2;
  return res;
} // TODO benchmark some alternative implementations (manual copy, slice
// left + copy?, slice both + concat?, ...)


function remove2(a, index) {
  var res = a.slice();
  res.splice(index, 2);
  return res;
} // I think this is always called with a node index? Therefore, the
// left will often be larger than the right. Does that help?


function remove1(a, index) {
  var res = a.slice();
  res.splice(index, 1);
  return res;
} // Make a copy while overwriting the element at index, or adding one element if index == a.length


function copyAndOverwriteOrExtend1(a, index, v) {
  var res = a.slice();
  res[index] = v;
  return res;
}

function remove2insert1(a, removeIndex, insertIndex, v1) {
  var res = new Array(a.length - 1);

  for (var i = 0; i < removeIndex; i++) {
    res[i] = a[i];
  }

  for (; i < insertIndex; i++) {
    res[i] = a[i + 2];
  }

  res[i++] = v1;

  for (; i < res.length; i++) {
    res[i] = a[i + 1];
  }

  return res;
}

function insert2(a, index, v1, v2) {
  var res = new Array(a.length + 2);

  for (var i = 0; i < index; i++) {
    res[i] = a[i];
  }

  res[i++] = v1;
  res[i++] = v2;

  for (; i < res.length; i++) {
    res[i] = a[i - 2];
  }

  return res;
}

function insert2remove1(a, insertIndex, v1, v2, removeIndex) {
  var res = new Array(a.length + 1);

  for (var i = 0; i < insertIndex; i++) {
    res[i] = a[i];
  }

  res[i++] = v1;
  res[i++] = v2;

  for (; i < removeIndex + 2; i++) {
    res[i] = a[i - 2];
  }

  for (; i < res.length; i++) {
    res[i] = a[i - 1];
  }

  return res;
}

var empty = new MapNode(0, 0, []);
exports.empty = empty;

exports.lookupPurs = function (Nothing, Just, keyEquals, key, keyHash) {
  return function (m) {
    return m.lookup(Nothing, Just, keyEquals, key, keyHash, 0);
  };
};

exports.fromArrayPurs = function (keyEquals, hashFunction) {
  return function (kf) {
    return function (vf) {
      return function (a) {
        var m = new MapNode(0, 0, []);

        for (var i = 0; i < a.length; i++) {
          var x = a[i];
          var k = kf(x);
          m.insertMut(keyEquals, hashFunction, k, hashFunction(k), vf(x), 0);
        }

        return m;
      };
    };
  };
};

exports.insertPurs = function (keyEquals, hashFunction) {
  return function (key) {
    return function (value) {
      return function (m) {
        return m.insert(keyEquals, hashFunction, key, hashFunction(key), value, 0);
      };
    };
  };
};

exports.insertWithPurs = function (keyEquals, hashFunction) {
  return function (f) {
    return function (key) {
      return function (value) {
        return function (m) {
          return m.insertWith(keyEquals, hashFunction, f, key, hashFunction(key), value, 0);
        };
      };
    };
  };
};

exports.deletePurs = function (keyEquals, key, keyHash) {
  return function (m) {
    return m.delet(keyEquals, key, keyHash, 0);
  };
};

exports.unionWithPurs = function (eq, hash, f) {
  return function (l) {
    return function (r) {
      return l.unionWith(eq, hash, f, r, 0);
    };
  };
};

exports.intersectionWithPurs = function (Nothing, Just, eq, hash, f) {
  return function (l) {
    return function (r) {
      return l.intersectionWith(Nothing, Just, eq, hash, f, r, 0);
    };
  };
};

exports.toArrayBy = function (f) {
  return function (m) {
    var res = [];
    m.toArrayBy(f, res);
    return res;
  };
};

exports.debugShow = function (m) {
  return JSON.stringify(m);
};

exports.singletonPurs = function (k) {
  return function (keyHash) {
    return function (v) {
      return new MapNode(1 << (keyHash & 31), 0, [k, v]);
    };
  };
};

exports.eqPurs = function (keq, veq) {
  return function (a) {
    return function (b) {
      return a.eq(keq, veq, b);
    };
  };
};

function isEmpty(m) {
  return m.datamap === 0 && m.nodemap === 0;
}

exports.isEmpty = isEmpty;

exports.size = function (m) {
  return m.size();
};

exports.mapWithIndexPurs = function (f) {
  return function (m) {
    return m.imap(f);
  };
};

exports.foldMapWithIndexPurs = function (mempty) {
  return function (mappend) {
    return function (f) {
      return function (m) {
        return m.ifoldMap(mempty, mappend, f);
      };
    };
  };
};

exports.traverseWithIndexPurs = function (pure) {
  return function (apply) {
    return function (f) {
      return function (m) {
        return isEmpty(m) ? pure(empty) : m.itraverse(pure, apply, f);
      };
    };
  };
};

exports.hashPurs = function (vhash) {
  return function (m) {
    return m.hash(vhash);
  };
};

exports.filterWithKey = function (f) {
  return function (m) {
    return m.filterWithKey(f);
  };
};

exports.nubHashPurs = function (Nothing, Just, eq, hash) {
  return function (a) {
    var m = new MapNode(0, 0, []);
    var r = [];

    for (var i = 0; i < a.length; i++) {
      var x = a[i];
      var hx = hash(x);
      if (m.lookup(Nothing, Just, eq, x, hx, 0) !== Nothing) continue;
      m.insertMut(eq, hash, x, hx, null, 0);
      r.push(x);
    }

    return r;
  };
};
},{}],"tSzq":[function(require,module,exports) {
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
"use strict";

exports.hashNumber = function (o) {
  if (o !== o || o === Infinity) {
    return 0;
  }

  var h = o | 0;

  if (h !== o) {
    h ^= o * 0xffffffff;
  }

  while (o > 0xffffffff) {
    o /= 0xffffffff;
    h ^= o;
  }

  return h;
};

exports.hashString = function (s) {
  var h = 0;

  for (var i = 0; i < s.length; i++) {
    h = 31 * h + s.charCodeAt(i) | 0;
  }

  return h;
};
},{}],"koDL":[function(require,module,exports) {
"use strict";

exports.unsafeUnionFn = function (r1, r2) {
  var copy = {};

  for (var k1 in r2) {
    if ({}.hasOwnProperty.call(r2, k1)) {
      copy[k1] = r2[k1];
    }
  }

  for (var k2 in r1) {
    if ({}.hasOwnProperty.call(r1, k2)) {
      copy[k2] = r1[k2];
    }
  }

  return copy;
};
},{}],"WmUk":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Function_Uncurried = require("../Data.Function.Uncurried/index.js");

var unsafeUnion = Data_Function_Uncurried.runFn2($foreign.unsafeUnionFn);
module.exports = {
  unsafeUnion: unsafeUnion,
  unsafeUnionFn: $foreign.unsafeUnionFn
};
},{"./foreign.js":"koDL","../Data.Function.Uncurried/index.js":"TowT"}],"gG4L":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Eq = require("../Data.Eq/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Record_Unsafe = require("../Record.Unsafe/index.js");

var Record_Unsafe_Union = require("../Record.Unsafe.Union/index.js");

var Type_Proxy = require("../Type.Proxy/index.js");

var Unsafe_Coerce = require("../Unsafe.Coerce/index.js");

var EqualFields = function EqualFields(equalFields) {
  this.equalFields = equalFields;
};

var union = function union(dictUnion) {
  return function (l) {
    return function (r) {
      return Record_Unsafe_Union.unsafeUnionFn(l, r);
    };
  };
};

var set = function set(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCons1) {
      return function (l) {
        return function (b) {
          return function (r) {
            return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
          };
        };
      };
    };
  };
};

var nub = function nub(dictNub) {
  return Unsafe_Coerce.unsafeCoerce;
};

var merge = function merge(dictUnion) {
  return function (dictNub) {
    return function (l) {
      return function (r) {
        return Record_Unsafe_Union.unsafeUnionFn(l, r);
      };
    };
  };
};

var insert = function insert(dictIsSymbol) {
  return function (dictLacks) {
    return function (dictCons) {
      return function (l) {
        return function (a) {
          return function (r) {
            return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r);
          };
        };
      };
    };
  };
};

var get = function get(dictIsSymbol) {
  return function (dictCons) {
    return function (l) {
      return function (r) {
        return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
      };
    };
  };
};

var modify = function modify(dictIsSymbol) {
  return function (dictCons) {
    return function (dictCons1) {
      return function (l) {
        return function (f) {
          return function (r) {
            return set(dictIsSymbol)()()(l)(f(get(dictIsSymbol)()(l)(r)))(r);
          };
        };
      };
    };
  };
};

var equalFieldsNil = new EqualFields(function (v) {
  return function (v1) {
    return function (v2) {
      return true;
    };
  };
});

var equalFields = function equalFields(dict) {
  return dict.equalFields;
};

var equalFieldsCons = function equalFieldsCons(dictIsSymbol) {
  return function (dictEq) {
    return function (dictCons) {
      return function (dictEqualFields) {
        return new EqualFields(function (v) {
          return function (a) {
            return function (b) {
              var get$prime = get(dictIsSymbol)()(Type_Proxy["Proxy"].value);
              var equalRest = equalFields(dictEqualFields)(Type_Proxy["Proxy"].value);
              return Data_Eq.eq(dictEq)(get$prime(a))(get$prime(b)) && equalRest(a)(b);
            };
          };
        });
      };
    };
  };
};

var equal = function equal(dictRowToList) {
  return function (dictEqualFields) {
    return function (a) {
      return function (b) {
        return equalFields(dictEqualFields)(Type_Proxy["Proxy"].value)(a)(b);
      };
    };
  };
};

var disjointUnion = function disjointUnion(dictUnion) {
  return function (dictNub) {
    return function (l) {
      return function (r) {
        return Record_Unsafe_Union.unsafeUnionFn(l, r);
      };
    };
  };
};

var $$delete = function $$delete(dictIsSymbol) {
  return function (dictLacks) {
    return function (dictCons) {
      return function (l) {
        return function (r) {
          return Record_Unsafe.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
        };
      };
    };
  };
};

var rename = function rename(dictIsSymbol) {
  return function (dictIsSymbol1) {
    return function (dictCons) {
      return function (dictLacks) {
        return function (dictCons1) {
          return function (dictLacks1) {
            return function (prev) {
              return function (next) {
                return function (record) {
                  return insert(dictIsSymbol1)()()(next)(get(dictIsSymbol)()(prev)(record))($$delete(dictIsSymbol)()()(prev)(record));
                };
              };
            };
          };
        };
      };
    };
  };
};

module.exports = {
  get: get,
  set: set,
  modify: modify,
  insert: insert,
  "delete": $$delete,
  rename: rename,
  equal: equal,
  merge: merge,
  union: union,
  disjointUnion: disjointUnion,
  nub: nub,
  EqualFields: EqualFields,
  equalFields: equalFields,
  equalFieldsCons: equalFieldsCons,
  equalFieldsNil: equalFieldsNil
};
},{"../Data.Eq/index.js":"Pq4F","../Data.Symbol/index.js":"oJQL","../Record.Unsafe/index.js":"KG04","../Record.Unsafe.Union/index.js":"WmUk","../Type.Proxy/index.js":"ZOFT","../Unsafe.Coerce/index.js":"ETUV"}],"XaXP":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var RLProxy = function () {
  function RLProxy() {}

  ;
  RLProxy.value = new RLProxy();
  return RLProxy;
}();

module.exports = {
  RLProxy: RLProxy
};
},{}],"PLrJ":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_List_Types = require("../Data.List.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Symbol = require("../Data.Symbol/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Record = require("../Record/index.js");

var Type_Data_RowList = require("../Type.Data.RowList/index.js");

var HashableRecord = function HashableRecord(EqRecord0, hashRecord) {
  this.EqRecord0 = EqRecord0;
  this.hashRecord = hashRecord;
};

var Hashable = function Hashable(Eq0, hash) {
  this.Eq0 = Eq0;
  this.hash = hash;
};

var hashableVoid = new Hashable(function () {
  return Data_Eq.eqVoid;
}, function (v) {
  return 0;
});
var hashableUnit = new Hashable(function () {
  return Data_Eq.eqUnit;
}, function (v) {
  return 1;
});
var hashableString = new Hashable(function () {
  return Data_Eq.eqString;
}, $foreign.hashString);
var hashableRecordNil = new HashableRecord(function () {
  return Data_Eq.eqRowNil;
}, function (v) {
  return function (v1) {
    return 0;
  };
});
var hashableNumber = new Hashable(function () {
  return Data_Eq.eqNumber;
}, $foreign.hashNumber);
var hashableInt = new Hashable(function () {
  return Data_Eq.eqInt;
}, function (n) {
  return n;
});
var hashableChar = new Hashable(function () {
  return Data_Eq.eqChar;
}, Data_Enum.fromEnum(Data_Enum.boundedEnumChar));
var hashableBoolean = new Hashable(function () {
  return Data_Eq.eqBoolean;
}, function (v) {
  if (!v) {
    return 0;
  }

  ;

  if (v) {
    return 1;
  }

  ;
  throw new Error("Failed pattern match at Data.Hashable (line 52, column 1 - line 54, column 16): " + [v.constructor.name]);
});

var hashRecord = function hashRecord(dict) {
  return dict.hashRecord;
};

var hashableRecord = function hashableRecord(dictRowToList) {
  return function (dictHashableRecord) {
    return function (dictEqRecord) {
      return new Hashable(function () {
        return Data_Eq.eqRec()(dictEqRecord);
      }, hashRecord(dictHashableRecord)(Type_Data_RowList.RLProxy.value));
    };
  };
};

var hash = function hash(dict) {
  return dict.hash;
};

var hashFoldable = function hashFoldable(dictFoldable) {
  return function (dictHashable) {
    return Data_Foldable.foldl(dictFoldable)(function (h) {
      return function (a) {
        return (31 * h | 0) + hash(dictHashable)(a) | 0;
      };
    })(1);
  };
};

var hashableArray = function hashableArray(dictHashable) {
  return new Hashable(function () {
    return Data_Eq.eqArray(dictHashable.Eq0());
  }, hashFoldable(Data_Foldable.foldableArray)(dictHashable));
};

var hashableList = function hashableList(dictHashable) {
  return new Hashable(function () {
    return Data_List_Types.eqList(dictHashable.Eq0());
  }, hashFoldable(Data_List_Types.foldableList)(dictHashable));
};

var hashableEither = function hashableEither(dictHashable) {
  return function (dictHashable1) {
    return new Hashable(function () {
      return Data_Either.eqEither(dictHashable.Eq0())(dictHashable1.Eq0());
    }, function (v) {
      if (v instanceof Data_Either.Left) {
        return hash(dictHashable)(v.value0) ^ 1431655765;
      }

      ;

      if (v instanceof Data_Either.Right) {
        return hash(dictHashable1)(v.value0);
      }

      ;
      throw new Error("Failed pattern match at Data.Hashable (line 88, column 1 - line 90, column 26): " + [v.constructor.name]);
    });
  };
};

var hashableMaybe = function hashableMaybe(dictHashable) {
  return new Hashable(function () {
    return Data_Maybe.eqMaybe(dictHashable.Eq0());
  }, function (v) {
    if (v instanceof Data_Maybe.Nothing) {
      return 0;
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return 1 + hash(dictHashable)(v.value0) | 0;
    }

    ;
    throw new Error("Failed pattern match at Data.Hashable (line 84, column 1 - line 86, column 29): " + [v.constructor.name]);
  });
};

var hashableRecordCons = function hashableRecordCons(dictHashable) {
  return function (dictHashableRecord) {
    return function (dictIsSymbol) {
      return function (dictCons) {
        return new HashableRecord(function () {
          return Data_Eq.eqRowCons(dictHashableRecord.EqRecord0())()(dictIsSymbol)(dictHashable.Eq0());
        }, function (rlp) {
          return function (record) {
            return (hash(dictHashable)(Record.get(dictIsSymbol)()(Data_Symbol.SProxy.value)(record)) * 31 | 0) + hashRecord(dictHashableRecord)(Type_Data_RowList.RLProxy.value)(record) | 0;
          };
        });
      };
    };
  };
};

var hashableTuple = function hashableTuple(dictHashable) {
  return function (dictHashable1) {
    return new Hashable(function () {
      return Data_Tuple.eqTuple(dictHashable.Eq0())(dictHashable1.Eq0());
    }, function (v) {
      return (hash(dictHashable)(v.value0) * 31 | 0) + hash(dictHashable1)(v.value1) | 0;
    });
  };
};

module.exports = {
  Hashable: Hashable,
  hash: hash,
  HashableRecord: HashableRecord,
  hashRecord: hashRecord,
  hashableBoolean: hashableBoolean,
  hashableInt: hashableInt,
  hashableNumber: hashableNumber,
  hashableChar: hashableChar,
  hashableString: hashableString,
  hashableArray: hashableArray,
  hashableList: hashableList,
  hashableTuple: hashableTuple,
  hashableMaybe: hashableMaybe,
  hashableEither: hashableEither,
  hashableUnit: hashableUnit,
  hashableVoid: hashableVoid,
  hashableRecordNil: hashableRecordNil,
  hashableRecordCons: hashableRecordCons,
  hashableRecord: hashableRecord
};
},{"./foreign.js":"tSzq","../Data.Either/index.js":"B2JL","../Data.Enum/index.js":"oOsU","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.List.Types/index.js":"Xxuc","../Data.Maybe/index.js":"mN7T","../Data.Symbol/index.js":"oJQL","../Data.Tuple/index.js":"IIOM","../Record/index.js":"gG4L","../Type.Data.RowList/index.js":"XaXP"}],"l6NS":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_FunctorWithIndex = require("../Data.FunctorWithIndex/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var SemigroupHashMap = function SemigroupHashMap(x) {
  return x;
};

var values = $foreign.toArrayBy(function (v) {
  return function (v1) {
    return v1;
  };
});

var unionWith = function unionWith(dictHashable) {
  return function (f) {
    return $foreign.unionWithPurs(Data_Eq.eq(dictHashable.Eq0()), Data_Hashable.hash(dictHashable), f);
  };
};

var union = function union(dictHashable) {
  return $foreign.unionWithPurs(Data_Eq.eq(dictHashable.Eq0()), Data_Hashable.hash(dictHashable), Data_Function["const"]);
};

var singleton = function singleton(dictHashable) {
  return function (k) {
    return $foreign.singletonPurs(k)(Data_Hashable.hash(dictHashable)(k));
  };
};

var showHashMap = function showHashMap(dictShow) {
  return function (dictShow1) {
    return new Data_Show.Show(function (m) {
      return "(fromArray " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(dictShow)(dictShow1)))($foreign.toArrayBy(Data_Tuple.Tuple.create)(m)) + ")");
    });
  };
};

var showSemigroupHashMap = function showSemigroupHashMap(dictShow) {
  return function (dictShow1) {
    return showHashMap(dictShow)(dictShow1);
  };
};

var semigroupSemigroupHashMap = function semigroupSemigroupHashMap(dictHashable) {
  return function (dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return unionWith(dictHashable)(Data_Semigroup.append(dictSemigroup))(v)(v1);
      };
    });
  };
};

var nubHash = function nubHash(dictHashable) {
  return $foreign.nubHashPurs(Data_Maybe.Nothing.value, Data_Maybe.Just.create, Data_Eq.eq(dictHashable.Eq0()), Data_Hashable.hash(dictHashable));
};

var newtypeSemigroupHashMap = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monoidSemigroupHashMap = function monoidSemigroupHashMap(dictHashable) {
  return function (dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
      return semigroupSemigroupHashMap(dictHashable)(dictSemigroup);
    }, $foreign.empty);
  };
};

var lookup = function lookup(dictHashable) {
  return function (k) {
    return $foreign.lookupPurs(Data_Maybe.Nothing.value, Data_Maybe.Just.create, Data_Eq.eq(dictHashable.Eq0()), k, Data_Hashable.hash(dictHashable)(k));
  };
};

var member = function member(dictHashable) {
  return function (k) {
    var $64 = lookup(dictHashable)(k);
    return function ($65) {
      return Data_Maybe.isJust($64($65));
    };
  };
};

var keys = $foreign.toArrayBy(Data_Function["const"]);

var intersectionWith = function intersectionWith(dictHashable) {
  return function (f) {
    return $foreign.intersectionWithPurs(Data_Maybe.Nothing.value, Data_Maybe.Just.create, Data_Eq.eq(dictHashable.Eq0()), Data_Hashable.hash(dictHashable), f);
  };
};

var intersection = function intersection(dictHashable) {
  return intersectionWith(dictHashable)(function (v) {
    return function (x) {
      return x;
    };
  });
};

var insertWith = function insertWith(dictHashable) {
  return $foreign.insertWithPurs(Data_Eq.eq(dictHashable.Eq0()), Data_Hashable.hash(dictHashable));
};

var upsert = function upsert(dictHashable) {
  return function (f) {
    return insertWith(dictHashable)(function (v) {
      return function (v1) {
        return f(v1);
      };
    });
  };
};

var insert = function insert(dictHashable) {
  return $foreign.insertPurs(Data_Eq.eq(dictHashable.Eq0()), Data_Hashable.hash(dictHashable));
};

var functorWithIndexHashMap = new Data_FunctorWithIndex.FunctorWithIndex(function () {
  return functorHashMap;
}, $foreign.mapWithIndexPurs);
var functorHashMap = new Data_Functor.Functor(function (f) {
  return Data_FunctorWithIndex.mapWithIndex(functorWithIndexHashMap)(Data_Function["const"](f));
});
var functorSemigroupHashMap = functorHashMap;
var functorWithIndexSemigroupHashMap = functorWithIndexHashMap;

var fromFoldableWithIndex = function fromFoldableWithIndex(dictFoldableWithIndex) {
  return function (dictHashable) {
    return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function (k) {
      return function (m) {
        return function (v) {
          return insert(dictHashable)(k)(v)(m);
        };
      };
    })($foreign.empty);
  };
};

var fromFoldableBy = function fromFoldableBy(dictFoldable) {
  return function (dictHashable) {
    return function (kf) {
      return function (vf) {
        return Data_Foldable.foldl(dictFoldable)(function (m) {
          return function (a) {
            return insert(dictHashable)(kf(a))(vf(a))(m);
          };
        })($foreign.empty);
      };
    };
  };
};

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (dictHashable) {
    return Data_Foldable.foldl(dictFoldable)(function (m) {
      return function (v) {
        return insert(dictHashable)(v.value0)(v.value1)(m);
      };
    })($foreign.empty);
  };
};

var fromArrayBy = function fromArrayBy(dictHashable) {
  return $foreign.fromArrayPurs(Data_Eq.eq(dictHashable.Eq0()), Data_Hashable.hash(dictHashable));
};

var fromArray = function fromArray(dictHashable) {
  return fromArrayBy(dictHashable)(Data_Tuple.fst)(Data_Tuple.snd);
};

var foldableWithIndexHashMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
  return foldableHashMap;
}, function (dictMonoid) {
  return $foreign.foldMapWithIndexPurs(Data_Monoid.mempty(dictMonoid))(Data_Semigroup.append(dictMonoid.Semigroup0()));
}, function (f) {
  return Data_FoldableWithIndex.foldlWithIndexDefault(foldableWithIndexHashMap)(f);
}, function (f) {
  return Data_FoldableWithIndex.foldrWithIndexDefault(foldableWithIndexHashMap)(f);
});
var foldableHashMap = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexHashMap)(dictMonoid)(Data_Function["const"](f));
  };
}, function (f) {
  return Data_Foldable.foldlDefault(foldableHashMap)(f);
}, function (f) {
  return Data_Foldable.foldrDefault(foldableHashMap)(f);
});
var foldableSemigroupHashMap = foldableHashMap;
var foldableWithIndexSemigroupHashMap = foldableWithIndexHashMap;
var traversableWithIndexHashMap = new Data_TraversableWithIndex.TraversableWithIndex(function () {
  return foldableWithIndexHashMap;
}, function () {
  return functorWithIndexHashMap;
}, function () {
  return traversableHashMap;
}, function (dictApplicative) {
  return function (f) {
    return function (m) {
      return $foreign.traverseWithIndexPurs(Control_Applicative.pure(dictApplicative))(Control_Apply.apply(dictApplicative.Apply0()))(f)(m);
    };
  };
});
var traversableHashMap = new Data_Traversable.Traversable(function () {
  return foldableHashMap;
}, function () {
  return functorHashMap;
}, function (dictApplicative) {
  return Data_Traversable.traverse(traversableHashMap)(dictApplicative)(function (x) {
    return x;
  });
}, function (dictApplicative) {
  return function (f) {
    return Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexHashMap)(dictApplicative)(Data_Function["const"](f));
  };
});
var traversableSemigroupHashMap = traversableHashMap;
var traversableWithIndexSemigroupHashMap = traversableWithIndexHashMap;

var filterKeys = function filterKeys(f) {
  return $foreign.filterWithKey(function (k) {
    return function (v) {
      return f(k);
    };
  });
};

var filter = function filter(f) {
  return $foreign.filterWithKey(Data_Function["const"](f));
};

var mapMaybeWithKey = function mapMaybeWithKey(f) {
  var $66 = Data_Functor.map(functorHashMap)(Data_Maybe.fromJust());
  var $67 = filter(Data_Maybe.isJust);
  var $68 = Data_FunctorWithIndex.mapWithIndex(functorWithIndexHashMap)(f);
  return function ($69) {
    return $66($67($68($69)));
  };
};

var mapMaybe = function mapMaybe($70) {
  return mapMaybeWithKey(Data_Function["const"]($70));
};

var eqHashMap = function eqHashMap(dictEq) {
  return function (dictEq1) {
    return new Data_Eq.Eq($foreign.eqPurs(Data_Eq.eq(dictEq), Data_Eq.eq(dictEq1)));
  };
};

var eqSemigroupHashMap = function eqSemigroupHashMap(dictEq) {
  return function (dictEq1) {
    return eqHashMap(dictEq)(dictEq1);
  };
};

var hashHashMap = function hashHashMap(dictHashable) {
  return function (dictHashable1) {
    return new Data_Hashable.Hashable(function () {
      return eqHashMap(dictHashable.Eq0())(dictHashable1.Eq0());
    }, $foreign.hashPurs(Data_Hashable.hash(dictHashable1)));
  };
};

var hashSemigroupHashMap = function hashSemigroupHashMap(dictHashable) {
  return function (dictHashable1) {
    return hashHashMap(dictHashable)(dictHashable1);
  };
};

var $$delete = function $$delete(dictHashable) {
  return function (k) {
    return $foreign.deletePurs(Data_Eq.eq(dictHashable.Eq0()), k, Data_Hashable.hash(dictHashable)(k));
  };
};

var difference = function difference(dictHashable) {
  return function (l) {
    return function (r) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictHashable))(l)(keys(r));
    };
  };
};

var applyHashMap = function applyHashMap(dictHashable) {
  return new Control_Apply.Apply(function () {
    return functorHashMap;
  }, intersectionWith(dictHashable)(Control_Category.identity(Control_Category.categoryFn)));
};

var applySemigroupHashMap = function applySemigroupHashMap(dictHashable) {
  return applyHashMap(dictHashable);
};

var bindHashMap = function bindHashMap(dictHashable) {
  return new Control_Bind.Bind(function () {
    return applyHashMap(dictHashable);
  }, function (m) {
    return function (f) {
      return mapMaybeWithKey(function (k) {
        var $71 = lookup(dictHashable)(k);
        return function ($72) {
          return $71(f($72));
        };
      })(m);
    };
  });
};

var bindSemigroupHashMap = function bindSemigroupHashMap(dictHashable) {
  return bindHashMap(dictHashable);
};

var alter = function alter(dictHashable) {
  return function (f) {
    return function (k) {
      return function (m) {
        var v = f(lookup(dictHashable)(k)(m));

        if (v instanceof Data_Maybe.Nothing) {
          return $$delete(dictHashable)(k)(m);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return insert(dictHashable)(k)(v.value0)(m);
        }

        ;
        throw new Error("Failed pattern match at Data.HashMap (line 306, column 15 - line 308, column 25): " + [v.constructor.name]);
      };
    };
  };
};

var update = function update(dictHashable) {
  return function (f) {
    return alter(dictHashable)(function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(f);
    });
  };
};

module.exports = {
  singleton: singleton,
  lookup: lookup,
  insert: insert,
  "delete": $$delete,
  member: member,
  upsert: upsert,
  insertWith: insertWith,
  update: update,
  alter: alter,
  filter: filter,
  filterKeys: filterKeys,
  mapMaybe: mapMaybe,
  mapMaybeWithKey: mapMaybeWithKey,
  fromArray: fromArray,
  fromFoldable: fromFoldable,
  fromArrayBy: fromArrayBy,
  fromFoldableBy: fromFoldableBy,
  fromFoldableWithIndex: fromFoldableWithIndex,
  keys: keys,
  values: values,
  union: union,
  unionWith: unionWith,
  intersection: intersection,
  intersectionWith: intersectionWith,
  difference: difference,
  SemigroupHashMap: SemigroupHashMap,
  nubHash: nubHash,
  eqHashMap: eqHashMap,
  hashHashMap: hashHashMap,
  functorHashMap: functorHashMap,
  functorWithIndexHashMap: functorWithIndexHashMap,
  applyHashMap: applyHashMap,
  bindHashMap: bindHashMap,
  foldableHashMap: foldableHashMap,
  foldableWithIndexHashMap: foldableWithIndexHashMap,
  traversableHashMap: traversableHashMap,
  traversableWithIndexHashMap: traversableWithIndexHashMap,
  newtypeSemigroupHashMap: newtypeSemigroupHashMap,
  eqSemigroupHashMap: eqSemigroupHashMap,
  hashSemigroupHashMap: hashSemigroupHashMap,
  functorSemigroupHashMap: functorSemigroupHashMap,
  functorWithIndexSemigroupHashMap: functorWithIndexSemigroupHashMap,
  applySemigroupHashMap: applySemigroupHashMap,
  bindSemigroupHashMap: bindSemigroupHashMap,
  foldableSemigroupHashMap: foldableSemigroupHashMap,
  foldableWithIndexSemigroupHashMap: foldableWithIndexSemigroupHashMap,
  traversableSemigroupHashMap: traversableSemigroupHashMap,
  traversableWithIndexSemigroupHashMap: traversableWithIndexSemigroupHashMap,
  showSemigroupHashMap: showSemigroupHashMap,
  semigroupSemigroupHashMap: semigroupSemigroupHashMap,
  monoidSemigroupHashMap: monoidSemigroupHashMap,
  showHashMap: showHashMap,
  empty: $foreign.empty,
  size: $foreign.size,
  isEmpty: $foreign.isEmpty,
  filterWithKey: $foreign.filterWithKey,
  toArrayBy: $foreign.toArrayBy,
  debugShow: $foreign.debugShow
};
},{"./foreign.js":"Ywth","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.FoldableWithIndex/index.js":"Efib","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.FunctorWithIndex/index.js":"OHRN","../Data.Hashable/index.js":"PLrJ","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.TraversableWithIndex/index.js":"V4EF","../Data.Tuple/index.js":"IIOM"}],"wjQo":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Category = require("../Control.Category/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Monoid_Conj = require("../Data.Monoid.Conj/index.js");

var Data_Monoid_Disj = require("../Data.Monoid.Disj/index.js");

var Data_Monoid_Dual = require("../Data.Monoid.Dual/index.js");

var Data_Monoid_Endo = require("../Data.Monoid.Endo/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Bifoldable = function Bifoldable(bifoldMap, bifoldl, bifoldr) {
  this.bifoldMap = bifoldMap;
  this.bifoldl = bifoldl;
  this.bifoldr = bifoldr;
};

var bifoldr = function bifoldr(dict) {
  return dict.bifoldr;
};

var bitraverse_ = function bitraverse_(dictBifoldable) {
  return function (dictApplicative) {
    return function (f) {
      return function (g) {
        return bifoldr(dictBifoldable)(function () {
          var $147 = Control_Apply.applySecond(dictApplicative.Apply0());
          return function ($148) {
            return $147(f($148));
          };
        }())(function () {
          var $149 = Control_Apply.applySecond(dictApplicative.Apply0());
          return function ($150) {
            return $149(g($150));
          };
        }())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
      };
    };
  };
};

var bifor_ = function bifor_(dictBifoldable) {
  return function (dictApplicative) {
    return function (t) {
      return function (f) {
        return function (g) {
          return bitraverse_(dictBifoldable)(dictApplicative)(f)(g)(t);
        };
      };
    };
  };
};

var bisequence_ = function bisequence_(dictBifoldable) {
  return function (dictApplicative) {
    return bitraverse_(dictBifoldable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var bifoldl = function bifoldl(dict) {
  return dict.bifoldl;
};

var bifoldableTuple = new Bifoldable(function (dictMonoid) {
  return function (f) {
    return function (g) {
      return function (v) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
      };
    };
  };
}, function (f) {
  return function (g) {
    return function (z) {
      return function (v) {
        return g(f(z)(v.value0))(v.value1);
      };
    };
  };
}, function (f) {
  return function (g) {
    return function (z) {
      return function (v) {
        return f(v.value0)(g(v.value1)(z));
      };
    };
  };
});

var bifoldableJoker = function bifoldableJoker(dictFoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (v) {
      return function (r) {
        return function (v1) {
          return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(r)(v1);
        };
      };
    };
  }, function (v) {
    return function (r) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldl(dictFoldable)(r)(u)(v1);
        };
      };
    };
  }, function (v) {
    return function (r) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldr(dictFoldable)(r)(u)(v1);
        };
      };
    };
  });
};

var bifoldableEither = new Bifoldable(function (dictMonoid) {
  return function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Data_Either.Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Data_Either.Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Bifoldable (line 62, column 1 - line 68, column 32): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };
}, function (v) {
  return function (v1) {
    return function (z) {
      return function (v2) {
        if (v2 instanceof Data_Either.Left) {
          return v(z)(v2.value0);
        }

        ;

        if (v2 instanceof Data_Either.Right) {
          return v1(z)(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Bifoldable (line 62, column 1 - line 68, column 32): " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
      };
    };
  };
}, function (v) {
  return function (v1) {
    return function (z) {
      return function (v2) {
        if (v2 instanceof Data_Either.Left) {
          return v(v2.value0)(z);
        }

        ;

        if (v2 instanceof Data_Either.Right) {
          return v1(v2.value0)(z);
        }

        ;
        throw new Error("Failed pattern match at Data.Bifoldable (line 62, column 1 - line 68, column 32): " + [v.constructor.name, v1.constructor.name, z.constructor.name, v2.constructor.name]);
      };
    };
  };
});
var bifoldableConst = new Bifoldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return function (v1) {
        return f(v1);
      };
    };
  };
}, function (f) {
  return function (v) {
    return function (z) {
      return function (v1) {
        return f(z)(v1);
      };
    };
  };
}, function (f) {
  return function (v) {
    return function (z) {
      return function (v1) {
        return f(v1)(z);
      };
    };
  };
});

var bifoldableClown = function bifoldableClown(dictFoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (l) {
      return function (v) {
        return function (v1) {
          return Data_Foldable.foldMap(dictFoldable)(dictMonoid)(l)(v1);
        };
      };
    };
  }, function (l) {
    return function (v) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldl(dictFoldable)(l)(u)(v1);
        };
      };
    };
  }, function (l) {
    return function (v) {
      return function (u) {
        return function (v1) {
          return Data_Foldable.foldr(dictFoldable)(l)(u)(v1);
        };
      };
    };
  });
};

var bifoldMapDefaultR = function bifoldMapDefaultR(dictBifoldable) {
  return function (dictMonoid) {
    return function (f) {
      return function (g) {
        return bifoldr(dictBifoldable)(function () {
          var $151 = Data_Semigroup.append(dictMonoid.Semigroup0());
          return function ($152) {
            return $151(f($152));
          };
        }())(function () {
          var $153 = Data_Semigroup.append(dictMonoid.Semigroup0());
          return function ($154) {
            return $153(g($154));
          };
        }())(Data_Monoid.mempty(dictMonoid));
      };
    };
  };
};

var bifoldMapDefaultL = function bifoldMapDefaultL(dictBifoldable) {
  return function (dictMonoid) {
    return function (f) {
      return function (g) {
        return bifoldl(dictBifoldable)(function (m) {
          return function (a) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(f(a));
          };
        })(function (m) {
          return function (b) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(m)(g(b));
          };
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };
};

var bifoldMap = function bifoldMap(dict) {
  return dict.bifoldMap;
};

var bifoldableFlip = function bifoldableFlip(dictBifoldable) {
  return new Bifoldable(function (dictMonoid) {
    return function (r) {
      return function (l) {
        return function (v) {
          return bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v);
        };
      };
    };
  }, function (r) {
    return function (l) {
      return function (u) {
        return function (v) {
          return bifoldl(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  }, function (r) {
    return function (l) {
      return function (u) {
        return function (v) {
          return bifoldr(dictBifoldable)(l)(r)(u)(v);
        };
      };
    };
  });
};

var bifoldlDefault = function bifoldlDefault(dictBifoldable) {
  return function (f) {
    return function (g) {
      return function (z) {
        return function (p) {
          return Data_Newtype.unwrap()(Data_Newtype.unwrap()(bifoldMap(dictBifoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))(function () {
            var $155 = Data_Function.flip(f);
            return function ($156) {
              return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($155($156)));
            };
          }())(function () {
            var $157 = Data_Function.flip(g);
            return function ($158) {
              return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($157($158)));
            };
          }())(p)))(z);
        };
      };
    };
  };
};

var bifoldrDefault = function bifoldrDefault(dictBifoldable) {
  return function (f) {
    return function (g) {
      return function (z) {
        return function (p) {
          return Data_Newtype.unwrap()(bifoldMap(dictBifoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($159) {
            return Data_Monoid_Endo.Endo(f($159));
          })(function ($160) {
            return Data_Monoid_Endo.Endo(g($160));
          })(p))(z);
        };
      };
    };
  };
};

var bifoldableProduct2 = function bifoldableProduct2(dictBifoldable) {
  return function (dictBifoldable1) {
    return new Bifoldable(function (dictMonoid) {
      return function (l) {
        return function (r) {
          return function (v) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(bifoldMap(dictBifoldable)(dictMonoid)(l)(r)(v.value0))(bifoldMap(dictBifoldable1)(dictMonoid)(l)(r)(v.value1));
          };
        };
      };
    }, function (l) {
      return function (r) {
        return function (u) {
          return function (m) {
            return bifoldlDefault(bifoldableProduct2(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
          };
        };
      };
    }, function (l) {
      return function (r) {
        return function (u) {
          return function (m) {
            return bifoldrDefault(bifoldableProduct2(dictBifoldable)(dictBifoldable1))(l)(r)(u)(m);
          };
        };
      };
    });
  };
};

var bifold = function bifold(dictBifoldable) {
  return function (dictMonoid) {
    return bifoldMap(dictBifoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn));
  };
};

var biany = function biany(dictBifoldable) {
  return function (dictBooleanAlgebra) {
    return function (p) {
      return function (q) {
        var $161 = Data_Newtype.unwrap();
        var $162 = bifoldMap(dictBifoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($164) {
          return Data_Monoid_Disj.Disj(p($164));
        })(function ($165) {
          return Data_Monoid_Disj.Disj(q($165));
        });
        return function ($163) {
          return $161($162($163));
        };
      };
    };
  };
};

var biall = function biall(dictBifoldable) {
  return function (dictBooleanAlgebra) {
    return function (p) {
      return function (q) {
        var $166 = Data_Newtype.unwrap();
        var $167 = bifoldMap(dictBifoldable)(Data_Monoid_Conj.monoidConj(dictBooleanAlgebra.HeytingAlgebra0()))(function ($169) {
          return Data_Monoid_Conj.Conj(p($169));
        })(function ($170) {
          return Data_Monoid_Conj.Conj(q($170));
        });
        return function ($168) {
          return $166($167($168));
        };
      };
    };
  };
};

module.exports = {
  bifoldMap: bifoldMap,
  bifoldl: bifoldl,
  bifoldr: bifoldr,
  Bifoldable: Bifoldable,
  bifoldrDefault: bifoldrDefault,
  bifoldlDefault: bifoldlDefault,
  bifoldMapDefaultR: bifoldMapDefaultR,
  bifoldMapDefaultL: bifoldMapDefaultL,
  bifold: bifold,
  bitraverse_: bitraverse_,
  bifor_: bifor_,
  bisequence_: bisequence_,
  biany: biany,
  biall: biall,
  bifoldableClown: bifoldableClown,
  bifoldableJoker: bifoldableJoker,
  bifoldableFlip: bifoldableFlip,
  bifoldableProduct2: bifoldableProduct2,
  bifoldableEither: bifoldableEither,
  bifoldableTuple: bifoldableTuple,
  bifoldableConst: bifoldableConst
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Category/index.js":"IAi2","../Data.Either/index.js":"B2JL","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Monoid/index.js":"TiEB","../Data.Monoid.Conj/index.js":"UG5s","../Data.Monoid.Disj/index.js":"bR7j","../Data.Monoid.Dual/index.js":"ULyl","../Data.Monoid.Endo/index.js":"o47N","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Unit/index.js":"NhVk"}],"Kjcf":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var HashSet = function HashSet(x) {
  return x;
};

var union = function union(dictHashable) {
  return function (v) {
    return function (v1) {
      return Data_HashMap.unionWith(dictHashable)(Data_Function["const"])(v)(v1);
    };
  };
};

var toMap = function toMap(v) {
  return v;
};

var toArray = function toArray(v) {
  return Data_HashMap.keys(v);
};

var toUnfoldable = function toUnfoldable(dictUnfoldable) {
  var $70 = Data_Array.toUnfoldable(dictUnfoldable);
  return function ($71) {
    return $70(toArray($71));
  };
};

var size = function size(v) {
  return Data_HashMap.size(v);
};

var singleton = function singleton(dictHashable) {
  return function (a) {
    return Data_HashMap.singleton(dictHashable)(a)(Data_Unit.unit);
  };
};

var showHashSet = function showHashSet(dictShow) {
  return new Data_Show.Show(function (s) {
    return "(fromFoldable " + (Data_Show.show(Data_Show.showArray(dictShow))(toArray(s)) + ")");
  });
};

var semigroupHashSet = function semigroupHashSet(dictHashable) {
  return new Data_Semigroup.Semigroup(union(dictHashable));
};

var member = function member(dictHashable) {
  return function (a) {
    return function (v) {
      return Data_HashMap.member(dictHashable)(a)(v);
    };
  };
};

var isEmpty = function isEmpty(v) {
  return Data_HashMap.isEmpty(v);
};

var intersection = function intersection(dictHashable) {
  return function (v) {
    return function (v1) {
      return Data_HashMap.intersectionWith(dictHashable)(Data_Function["const"])(v)(v1);
    };
  };
};

var insert = function insert(dictHashable) {
  return function (a) {
    return function (v) {
      return Data_HashMap.insert(dictHashable)(a)(Data_Unit.unit)(v);
    };
  };
};

var hashableHashSet = function hashableHashSet(dictHashable) {
  return Data_HashMap.hashHashMap(dictHashable)(Data_Hashable.hashableUnit);
};

var fromMap = HashSet;

var fromArray = function fromArray(dictHashable) {
  var $72 = Data_HashMap.fromArrayBy(dictHashable)(Control_Category.identity(Control_Category.categoryFn))(Data_Function["const"](Data_Unit.unit));
  return function ($73) {
    return HashSet($72($73));
  };
};

var foldableHashSet = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return Data_FoldableWithIndex.foldMapWithIndex(Data_HashMap.foldableWithIndexHashMap)(dictMonoid)(function (k) {
        return function (v1) {
          return f(k);
        };
      })(v);
    };
  };
}, function (f) {
  return function (a) {
    return function (v) {
      return Data_FoldableWithIndex.foldlWithIndex(Data_HashMap.foldableWithIndexHashMap)(function (k) {
        return function (b) {
          return function (v1) {
            return f(b)(k);
          };
        };
      })(a)(v);
    };
  };
}, function (f) {
  return function (a) {
    return function (v) {
      return Data_FoldableWithIndex.foldrWithIndex(Data_HashMap.foldableWithIndexHashMap)(function (k) {
        return function (v1) {
          return f(k);
        };
      })(a)(v);
    };
  };
});

var filter = function filter(f) {
  return function (v) {
    return Data_HashMap.filterWithKey(function (k) {
      return function (v1) {
        return f(k);
      };
    })(v);
  };
};

var eqHashSet = function eqHashSet(dictEq) {
  return Data_HashMap.eqHashMap(dictEq)(Data_Eq.eqUnit);
};

var empty = Data_HashMap.empty;

var fromFoldable = function fromFoldable(dictFoldable) {
  return function (dictHashable) {
    return Data_Foldable.foldr(dictFoldable)(insert(dictHashable))(empty);
  };
};

var map = function map(dictHashable) {
  return function (f) {
    return Data_Foldable.foldr(foldableHashSet)(function (x) {
      return insert(dictHashable)(f(x));
    })(empty);
  };
};

var mapMaybe = function mapMaybe(dictHashable) {
  return function (f) {
    return Data_Foldable.foldr(foldableHashSet)(function (a) {
      return function (s) {
        var v = f(a);

        if (v instanceof Data_Maybe.Nothing) {
          return s;
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return insert(dictHashable)(v.value0)(s);
        }

        ;
        throw new Error("Failed pattern match at Data.HashSet (line 124, column 18 - line 126, column 33): " + [v.constructor.name]);
      };
    })(empty);
  };
};

var monoidHashSet = function monoidHashSet(dictHashable) {
  return new Data_Monoid.Monoid(function () {
    return semigroupHashSet(dictHashable);
  }, empty);
};

var unions = function unions(dictFoldable) {
  return function (dictHashable) {
    return Data_Foldable.fold(dictFoldable)(monoidHashSet(dictHashable));
  };
};

var difference = function difference(dictHashable) {
  return function (v) {
    return function (v1) {
      return Data_HashMap.difference(dictHashable)(v)(v1);
    };
  };
};

var $$delete = function $$delete(dictHashable) {
  return function (a) {
    return function (v) {
      return Data_HashMap["delete"](dictHashable)(a)(v);
    };
  };
};

module.exports = {
  empty: empty,
  singleton: singleton,
  insert: insert,
  member: member,
  "delete": $$delete,
  map: map,
  filter: filter,
  mapMaybe: mapMaybe,
  union: union,
  unions: unions,
  intersection: intersection,
  difference: difference,
  size: size,
  isEmpty: isEmpty,
  fromArray: fromArray,
  fromFoldable: fromFoldable,
  fromMap: fromMap,
  toArray: toArray,
  toMap: toMap,
  toUnfoldable: toUnfoldable,
  eqHashSet: eqHashSet,
  hashableHashSet: hashableHashSet,
  semigroupHashSet: semigroupHashSet,
  monoidHashSet: monoidHashSet,
  showHashSet: showHashSet,
  foldableHashSet: foldableHashSet
};
},{"../Control.Category/index.js":"IAi2","../Data.Array/index.js":"t4Co","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.FoldableWithIndex/index.js":"Efib","../Data.Function/index.js":"ImXJ","../Data.HashMap/index.js":"l6NS","../Data.Hashable/index.js":"PLrJ","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Data.Unit/index.js":"NhVk"}],"g11n":[function(require,module,exports) {
"use strict";

exports.fromCharArray = function (a) {
  return a.join("");
};

exports.toCharArray = function (s) {
  return s.split("");
};

exports.singleton = function (c) {
  return c;
};

exports._charAt = function (just) {
  return function (nothing) {
    return function (i) {
      return function (s) {
        return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
      };
    };
  };
};

exports._toChar = function (just) {
  return function (nothing) {
    return function (s) {
      return s.length === 1 ? just(s) : nothing;
    };
  };
};

exports.length = function (s) {
  return s.length;
};

exports.countPrefix = function (p) {
  return function (s) {
    var i = 0;

    while (i < s.length && p(s.charAt(i))) {
      i++;
    }

    return i;
  };
};

exports._indexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.indexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports._indexOfStartingAt = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          if (startAt < 0 || startAt > s.length) return nothing;
          var i = s.indexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports._lastIndexOf = function (just) {
  return function (nothing) {
    return function (x) {
      return function (s) {
        var i = s.lastIndexOf(x);
        return i === -1 ? nothing : just(i);
      };
    };
  };
};

exports._lastIndexOfStartingAt = function (just) {
  return function (nothing) {
    return function (x) {
      return function (startAt) {
        return function (s) {
          var i = s.lastIndexOf(x, startAt);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
};

exports.take = function (n) {
  return function (s) {
    return s.substr(0, n);
  };
};

exports.drop = function (n) {
  return function (s) {
    return s.substring(n);
  };
};

exports._slice = function (b) {
  return function (e) {
    return function (s) {
      return s.slice(b, e);
    };
  };
};

exports.splitAt = function (i) {
  return function (s) {
    return {
      before: s.substring(0, i),
      after: s.substring(i)
    };
  };
};
},{}],"iZpG":[function(require,module,exports) {
"use strict";

exports.charAt = function (i) {
  return function (s) {
    if (i >= 0 && i < s.length) return s.charAt(i);
    throw new Error("Data.String.Unsafe.charAt: Invalid index.");
  };
};

exports.char = function (s) {
  if (s.length === 1) return s.charAt(0);
  throw new Error("Data.String.Unsafe.char: Expected string of length 1.");
};
},{}],"UWMK":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

module.exports = {
  "char": $foreign["char"],
  charAt: $foreign.charAt
};
},{"./foreign.js":"iZpG"}],"c6Xh":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");

var uncons = function uncons(v) {
  if (v === "") {
    return Data_Maybe.Nothing.value;
  }

  ;
  return new Data_Maybe.Just({
    head: Data_String_Unsafe.charAt(0)(v),
    tail: $foreign.drop(1)(v)
  });
};

var toChar = $foreign["_toChar"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var takeWhile = function takeWhile(p) {
  return function (s) {
    return $foreign.take($foreign.countPrefix(p)(s))(s);
  };
};

var takeRight = function takeRight(i) {
  return function (s) {
    return $foreign.drop($foreign.length(s) - i | 0)(s);
  };
};

var stripSuffix = function stripSuffix(v) {
  return function (str) {
    var v1 = $foreign.splitAt($foreign.length(str) - $foreign.length(v) | 0)(str);
    var $9 = v1.after === v;

    if ($9) {
      return new Data_Maybe.Just(v1.before);
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var stripPrefix = function stripPrefix(v) {
  return function (str) {
    var v1 = $foreign.splitAt($foreign.length(v))(str);
    var $15 = v1.before === v;

    if ($15) {
      return new Data_Maybe.Just(v1.after);
    }

    ;
    return Data_Maybe.Nothing.value;
  };
};

var slice = function slice(b) {
  return function (e) {
    return function (s) {
      var l = $foreign.length(s);

      var norm = function norm(x) {
        if (x < 0) {
          return l + x | 0;
        }

        ;

        if (Data_Boolean.otherwise) {
          return x;
        }

        ;
        throw new Error("Failed pattern match at Data.String.CodeUnits (line 319, column 5 - line 320, column 27): " + [x.constructor.name]);
      };

      var e$prime = norm(e);
      var b$prime = norm(b);
      var $19 = b$prime < 0 || b$prime >= l || e$prime < 0 || e$prime > l || b$prime > e$prime;

      if ($19) {
        return Data_Maybe.Nothing.value;
      }

      ;
      return new Data_Maybe.Just($foreign["_slice"](b)(e)(s));
    };
  };
};

var lastIndexOf$prime = $foreign["_lastIndexOfStartingAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var lastIndexOf = $foreign["_lastIndexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf$prime = $foreign["_indexOfStartingAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

var dropWhile = function dropWhile(p) {
  return function (s) {
    return $foreign.drop($foreign.countPrefix(p)(s))(s);
  };
};

var dropRight = function dropRight(i) {
  return function (s) {
    return $foreign.take($foreign.length(s) - i | 0)(s);
  };
};

var contains = function contains(pat) {
  var $20 = indexOf(pat);
  return function ($21) {
    return Data_Maybe.isJust($20($21));
  };
};

var charAt = $foreign["_charAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
module.exports = {
  stripPrefix: stripPrefix,
  stripSuffix: stripSuffix,
  contains: contains,
  charAt: charAt,
  toChar: toChar,
  uncons: uncons,
  indexOf: indexOf,
  "indexOf'": indexOf$prime,
  lastIndexOf: lastIndexOf,
  "lastIndexOf'": lastIndexOf$prime,
  takeRight: takeRight,
  takeWhile: takeWhile,
  dropRight: dropRight,
  dropWhile: dropWhile,
  slice: slice,
  singleton: $foreign.singleton,
  fromCharArray: $foreign.fromCharArray,
  toCharArray: $foreign.toCharArray,
  length: $foreign.length,
  countPrefix: $foreign.countPrefix,
  take: $foreign.take,
  drop: $foreign.drop,
  splitAt: $foreign.splitAt
};
},{"./foreign.js":"g11n","../Data.Boolean/index.js":"ObQr","../Data.Maybe/index.js":"mN7T","../Data.String.Unsafe/index.js":"UWMK"}],"BB2V":[function(require,module,exports) {
"use strict";

exports._localeCompare = function (lt) {
  return function (eq) {
    return function (gt) {
      return function (s1) {
        return function (s2) {
          var result = s1.localeCompare(s2);
          return result < 0 ? lt : result > 0 ? gt : eq;
        };
      };
    };
  };
};

exports.replace = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(s1, s2);
    };
  };
};

exports.replaceAll = function (s1) {
  return function (s2) {
    return function (s3) {
      return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2); // eslint-disable-line no-useless-escape
    };
  };
};

exports.split = function (sep) {
  return function (s) {
    return s.split(sep);
  };
};

exports.toLower = function (s) {
  return s.toLowerCase();
};

exports.toUpper = function (s) {
  return s.toUpperCase();
};

exports.trim = function (s) {
  return s.trim();
};

exports.joinWith = function (s) {
  return function (xs) {
    return xs.join(s);
  };
};
},{}],"OSrc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var $$null = function $$null(s) {
  return s === "";
};

var localeCompare = $foreign["_localeCompare"](Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
module.exports = {
  "null": $$null,
  localeCompare: localeCompare,
  replace: $foreign.replace,
  replaceAll: $foreign.replaceAll,
  split: $foreign.split,
  toLower: $foreign.toLower,
  toUpper: $foreign.toUpper,
  trim: $foreign.trim,
  joinWith: $foreign.joinWith
};
},{"./foreign.js":"BB2V","../Data.Ordering/index.js":"Eunj"}],"s9gP":[function(require,module,exports) {
"use strict"; // Alias require to prevent webpack or browserify from actually requiring.

var req = typeof module === "undefined" ? undefined : module.require;

var util = function () {
  try {
    return req === undefined ? undefined : req("util");
  } catch (e) {
    return undefined;
  }
}();

exports._trace = function (x, k) {
  // node only recurses two levels into an object before printing
  // "[object]" for further objects when using console.log()
  if (util !== undefined) {
    console.log(util.inspect(x, {
      depth: null,
      colors: true
    }));
  } else {
    console.log(x);
  }

  return k({});
};

exports._spy = function (tag, x) {
  if (util !== undefined) {
    console.log(tag + ":", util.inspect(x, {
      depth: null,
      colors: true
    }));
  } else {
    console.log(tag + ":", x);
  }

  return x;
};

exports._debugger = function (f) {
  debugger;
  return f();
};
},{}],"sM1Y":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var DebugWarning = {};

var warn = function warn(dictWarn) {
  return DebugWarning;
};

var trace = function trace(dictDebugWarning) {
  return function (a) {
    return function (k) {
      return $foreign["_trace"](a, k);
    };
  };
};

var traceM = function traceM(dictDebugWarning) {
  return function (dictMonad) {
    return function (s) {
      return Control_Bind.discard(Control_Bind.discardUnit)(dictMonad.Bind1())(Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit))(function () {
        return trace()(s)(function (v) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
        });
      });
    };
  };
};

var spy = function spy(dictDebugWarning) {
  return function (tag) {
    return function (a) {
      return $foreign["_spy"](tag, a);
    };
  };
};

var spyWith = function spyWith(dictDebugWarning) {
  return function (msg) {
    return function (f) {
      return function (a) {
        return Data_Function["const"](a)(spy()(msg)(f(a)));
      };
    };
  };
};

var $$debugger = function $$debugger(dictDebugWarning) {
  return function (f) {
    return $foreign["_debugger"](f);
  };
};

module.exports = {
  DebugWarning: DebugWarning,
  trace: trace,
  traceM: traceM,
  spy: spy,
  spyWith: spyWith,
  "debugger": $$debugger,
  warn: warn
};
},{"./foreign.js":"s9gP","../Control.Applicative/index.js":"qYya","../Control.Bind/index.js":"VcTy","../Data.Function/index.js":"ImXJ","../Data.Unit/index.js":"NhVk"}],"axWD":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_DivisionRing = require("../Data.DivisionRing/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Field = function Field(DivisionRing1, EuclideanRing0) {
  this.DivisionRing1 = DivisionRing1;
  this.EuclideanRing0 = EuclideanRing0;
};

var field = function field(dictEuclideanRing) {
  return function (dictDivisionRing) {
    return new Field(function () {
      return dictDivisionRing;
    }, function () {
      return dictEuclideanRing;
    });
  };
};

module.exports = {
  Field: Field,
  field: field,
  CommutativeRing: Data_CommutativeRing.CommutativeRing,
  DivisionRing: Data_DivisionRing.DivisionRing,
  recip: Data_DivisionRing.recip,
  EuclideanRing: Data_EuclideanRing.EuclideanRing,
  degree: Data_EuclideanRing.degree,
  div: Data_EuclideanRing.div,
  gcd: Data_EuclideanRing.gcd,
  lcm: Data_EuclideanRing.lcm,
  mod: Data_EuclideanRing.mod,
  Ring: Data_Ring.Ring,
  negate: Data_Ring.negate,
  sub: Data_Ring.sub,
  Semiring: Data_Semiring.Semiring,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero
};
},{"../Data.CommutativeRing/index.js":"TQxD","../Data.DivisionRing/index.js":"xYq2","../Data.EuclideanRing/index.js":"IRBO","../Data.Ring/index.js":"E2qH","../Data.Semiring/index.js":"NFPD"}],"lNd9":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_BooleanAlgebra = require("../Data.BooleanAlgebra/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_CommutativeRing = require("../Data.CommutativeRing/index.js");

var Data_DivisionRing = require("../Data.DivisionRing/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Field = require("../Data.Field/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_NaturalTransformation = require("../Data.NaturalTransformation/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Data_Void = require("../Data.Void/index.js");

module.exports = {
  Applicative: Control_Applicative.Applicative,
  liftA1: Control_Applicative.liftA1,
  pure: Control_Applicative.pure,
  unless: Control_Applicative.unless,
  when: Control_Applicative.when,
  Apply: Control_Apply.Apply,
  apply: Control_Apply.apply,
  Bind: Control_Bind.Bind,
  Discard: Control_Bind.Discard,
  bind: Control_Bind.bind,
  discard: Control_Bind.discard,
  ifM: Control_Bind.ifM,
  join: Control_Bind.join,
  Category: Control_Category.Category,
  identity: Control_Category.identity,
  Monad: Control_Monad.Monad,
  ap: Control_Monad.ap,
  liftM1: Control_Monad.liftM1,
  unlessM: Control_Monad.unlessM,
  whenM: Control_Monad.whenM,
  Semigroupoid: Control_Semigroupoid.Semigroupoid,
  compose: Control_Semigroupoid.compose,
  otherwise: Data_Boolean.otherwise,
  BooleanAlgebra: Data_BooleanAlgebra.BooleanAlgebra,
  Bounded: Data_Bounded.Bounded,
  bottom: Data_Bounded.bottom,
  top: Data_Bounded.top,
  CommutativeRing: Data_CommutativeRing.CommutativeRing,
  DivisionRing: Data_DivisionRing.DivisionRing,
  recip: Data_DivisionRing.recip,
  Eq: Data_Eq.Eq,
  eq: Data_Eq.eq,
  notEq: Data_Eq.notEq,
  EuclideanRing: Data_EuclideanRing.EuclideanRing,
  degree: Data_EuclideanRing.degree,
  div: Data_EuclideanRing.div,
  gcd: Data_EuclideanRing.gcd,
  lcm: Data_EuclideanRing.lcm,
  mod: Data_EuclideanRing.mod,
  Field: Data_Field.Field,
  "const": Data_Function["const"],
  flip: Data_Function.flip,
  Functor: Data_Functor.Functor,
  flap: Data_Functor.flap,
  map: Data_Functor.map,
  "void": Data_Functor["void"],
  HeytingAlgebra: Data_HeytingAlgebra.HeytingAlgebra,
  conj: Data_HeytingAlgebra.conj,
  disj: Data_HeytingAlgebra.disj,
  not: Data_HeytingAlgebra.not,
  Monoid: Data_Monoid.Monoid,
  mempty: Data_Monoid.mempty,
  Ord: Data_Ord.Ord,
  between: Data_Ord.between,
  clamp: Data_Ord.clamp,
  compare: Data_Ord.compare,
  comparing: Data_Ord.comparing,
  max: Data_Ord.max,
  min: Data_Ord.min,
  EQ: Data_Ordering.EQ,
  GT: Data_Ordering.GT,
  LT: Data_Ordering.LT,
  Ring: Data_Ring.Ring,
  negate: Data_Ring.negate,
  sub: Data_Ring.sub,
  Semigroup: Data_Semigroup.Semigroup,
  append: Data_Semigroup.append,
  Semiring: Data_Semiring.Semiring,
  add: Data_Semiring.add,
  mul: Data_Semiring.mul,
  one: Data_Semiring.one,
  zero: Data_Semiring.zero,
  Show: Data_Show.Show,
  show: Data_Show.show,
  unit: Data_Unit.unit,
  absurd: Data_Void.absurd
};
},{"../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Monad/index.js":"UIxr","../Control.Semigroupoid/index.js":"riRy","../Data.Boolean/index.js":"ObQr","../Data.BooleanAlgebra/index.js":"e7yH","../Data.Bounded/index.js":"kcUU","../Data.CommutativeRing/index.js":"TQxD","../Data.DivisionRing/index.js":"xYq2","../Data.Eq/index.js":"Pq4F","../Data.EuclideanRing/index.js":"IRBO","../Data.Field/index.js":"axWD","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.HeytingAlgebra/index.js":"paZe","../Data.Monoid/index.js":"TiEB","../Data.NaturalTransformation/index.js":"gWkY","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Ring/index.js":"E2qH","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7","../Data.Unit/index.js":"NhVk","../Data.Void/index.js":"bncE"}],"yYWa":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Alternative = require("../Control.Alternative/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Bifoldable = require("../Data.Bifoldable/index.js");

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_FoldableWithIndex = require("../Data.FoldableWithIndex/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_HashSet = require("../Data.HashSet/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_List = require("../Data.List/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_NonEmpty = require("../Data.NonEmpty/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Debug = require("../Debug/index.js");

var Effect = require("../Effect/index.js");

var Prelude = require("../Prelude/index.js");

var Safe_Coerce = require("../Safe.Coerce/index.js");

var Nat = function Nat(x) {
  return x;
};

var Initialise = function Initialise(from) {
  this.from = from;
};

var Group = function Group(Monoid0, invert, subtract) {
  this.Monoid0 = Monoid0;
  this.invert = invert;
  this.subtract = subtract;
};

var Module = function Module(Group0, Semiring1, scale) {
  this.Group0 = Group0;
  this.Semiring1 = Semiring1;
  this.scale = scale;
};

var Torsor = function Torsor(Group0, adjust, diff) {
  this.Group0 = Group0;
  this.adjust = adjust;
  this.diff = diff;
};

var words = function words(dictUnfoldable) {
  var $59 = Data_Array.toUnfoldable(dictUnfoldable);
  var $60 = Data_String_Common.split(" ");
  return function ($61) {
    return $59($60($61));
  };
};

var withDefault = Data_Function.flip(Data_Maybe.fromMaybe);

var using = function using(dictNewtype) {
  return function (dictNewtype1) {
    return function (dictFunctor) {
      return function (v) {
        return function (f) {
          var $62 = Data_Newtype.unwrap();
          var $63 = Data_Functor.map(dictFunctor)(Data_Newtype.wrap());
          return function ($64) {
            return $62(f($63($64)));
          };
        };
      };
    };
  };
};

var unwords = function unwords(dictFoldable) {
  return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)(" ");
};

var unnat = function unnat(v) {
  return v;
};

var unlines = function unlines(dictFoldable) {
  return Data_Foldable.intercalate(dictFoldable)(Data_Monoid.monoidString)("\x0a");
};

var trd = function trd(v) {
  return v.value1.value1;
};

var $$throw = Data_Either.Left.create;

var subtract = function subtract(dict) {
  return dict.subtract;
};

var scale = function scale(dict) {
  return dict.scale;
};

var panic = function panic(s) {
  return Debug.spy()("TODO: " + s)({});
};

var todo = function todo(dictWarn) {
  return panic;
};

var notMember = function notMember(dictHashable) {
  return function (x) {
    var $65 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
    var $66 = Data_HashSet.member(dictHashable)(x);
    return function ($67) {
      return $65($66($67));
    };
  };
};

var neutral = function neutral(dictMonoid) {
  return Data_Monoid.mempty(dictMonoid);
};

var nat = function nat(i) {
  if (i >= 0) {
    return i;
  }

  ;

  if (Data_Boolean.otherwise) {
    return 0;
  }

  ;
  throw new Error("Failed pattern match at Preload (line 299, column 1 - line 299, column 18): " + [i.constructor.name]);
};

var lines = function lines(dictUnfoldable) {
  var $68 = Data_Array.toUnfoldable(dictUnfoldable);
  var $69 = Data_String_Common.split("\x0a");
  return function ($70) {
    return $68($69($70));
  };
};

var invertDefault = function invertDefault(dictGroup) {
  return function (x) {
    return subtract(dictGroup)(neutral(dictGroup.Monoid0()))(x);
  };
};

var invert = function invert(dict) {
  return dict.invert;
};

var subtractDefault = function subtractDefault(dictGroup) {
  return function (x) {
    return function (y) {
      return Data_Semigroup.append(dictGroup.Monoid0().Semigroup0())(x)(invert(dictGroup)(y));
    };
  };
};

var indent = function indent(n) {
  return function (s) {
    return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(n)("  ")) + s;
  };
};

var gather = function gather(dictFoldable) {
  return function (dictMonad) {
    return Data_Foldable.foldM(dictFoldable)(dictMonad);
  };
};

var from = function from(dict) {
  return dict.from;
};

var foldrInfix = function foldrInfix(dictFoldable) {
  return function (xs) {
    return function (x) {
      return function (f) {
        return Data_Foldable.foldr(dictFoldable)(f)(x)(xs);
      };
    };
  };
};

var foldr1 = function foldr1(dictFoldable) {
  return function (f) {
    return function (xs) {
      var mf = function mf(x) {
        return function (m) {
          return Data_Maybe.Just.create(function () {
            if (m instanceof Data_Maybe.Nothing) {
              return x;
            }

            ;

            if (m instanceof Data_Maybe.Just) {
              return f(x)(m.value0);
            }

            ;
            throw new Error("Failed pattern match at Preload (line 381, column 10 - line 383, column 33): " + [m.constructor.name]);
          }());
        };
      };

      return Data_Foldable.foldr(dictFoldable)(mf)(Data_Maybe.Nothing.value)(xs);
    };
  };
};

var foldlInfix = function foldlInfix(dictFoldable) {
  return function (x) {
    return function (xs) {
      return function (f) {
        return Data_Foldable.foldl(dictFoldable)(f)(x)(xs);
      };
    };
  };
};

var enclose = function enclose(a) {
  return function (b) {
    return function (s) {
      return Data_String_CodeUnits.singleton(a) + (s + Data_String_CodeUnits.singleton(b));
    };
  };
};

var quote = enclose("\"")("\"");

var done = function done(dictApplicative) {
  return Control_Applicative.pure(dictApplicative);
};

var pair = function pair(dictApplicative) {
  return function (x) {
    return function (y) {
      return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(done(dictApplicative)(Data_Tuple.Tuple.create))(x))(y);
    };
  };
};

var skip = function skip(dictApplicative) {
  return done(dictApplicative)(Data_Unit.unit);
};

var diff = function diff(dict) {
  return dict.diff;
};

var composeOr = function composeOr(f) {
  return function (g) {
    return function (x) {
      return f(x) || g(x);
    };
  };
};

var composeAnd = function composeAnd(f) {
  return function (g) {
    return function (x) {
      return f(x) && g(x);
    };
  };
};

var adjust = function adjust(dict) {
  return dict.adjust;
};

var $dollar_ShowNat_15 = new Data_Show.Show(function (v) {
  return "+" + Data_Show.show(Data_Show.showInt)(v);
});
var $dollar_SemiringNat_18 = new Data_Semiring.Semiring(function (v) {
  return function (v1) {
    return v + v1 | 0;
  };
}, function (v) {
  return function (v1) {
    return v * v1 | 0;
  };
}, 1, 0);
var $dollar_InitialiseList_12 = new Initialise(Data_List.fromFoldable(Data_Foldable.foldableArray));

var $dollar_InitialiseHashSet_13 = function $dollar_InitialiseHashSet_13(dictHashable) {
  return new Initialise(Data_HashSet.fromArray(dictHashable));
};

var $dollar_InitialiseHashMap$times_14 = function $dollar_InitialiseHashMap$times_14(dictHashable) {
  return new Initialise(Data_HashMap.fromArray(dictHashable));
};

var $dollar_EqNat_16 = new Data_Eq.Eq(function (v) {
  return function (v1) {
    return v === v1;
  };
});
var $dollar_OrdNat_17 = new Data_Ord.Ord(function () {
  return $dollar_EqNat_16;
}, function (v) {
  return function (v1) {
    return Data_Ord.compare(Data_Ord.ordInt)(v)(v1);
  };
});
module.exports = {
  composeAnd: composeAnd,
  composeOr: composeOr,
  trd: trd,
  "throw": $$throw,
  withDefault: withDefault,
  enclose: enclose,
  quote: quote,
  indent: indent,
  Initialise: Initialise,
  from: from,
  todo: todo,
  panic: panic,
  nat: nat,
  unnat: unnat,
  notMember: notMember,
  neutral: neutral,
  Group: Group,
  invert: invert,
  invertDefault: invertDefault,
  subtract: subtract,
  subtractDefault: subtractDefault,
  Module: Module,
  scale: scale,
  Torsor: Torsor,
  diff: diff,
  adjust: adjust,
  foldlInfix: foldlInfix,
  foldrInfix: foldrInfix,
  foldr1: foldr1,
  gather: gather,
  words: words,
  lines: lines,
  unwords: unwords,
  unlines: unlines,
  done: done,
  skip: skip,
  pair: pair,
  using: using,
  "$_InitialiseList_12": $dollar_InitialiseList_12,
  "$_InitialiseHashSet_13": $dollar_InitialiseHashSet_13,
  "$_InitialiseHashMap*_14": $dollar_InitialiseHashMap$times_14,
  "$_ShowNat_15": $dollar_ShowNat_15,
  "$_EqNat_16": $dollar_EqNat_16,
  "$_OrdNat_17": $dollar_OrdNat_17,
  "$_SemiringNat_18": $dollar_SemiringNat_18,
  Alt: Control_Alt.Alt,
  Alternative: Control_Alternative.Alternative,
  applyFirst: Control_Apply.applyFirst,
  applySecond: Control_Apply.applySecond,
  bindFlipped: Control_Bind.bindFlipped,
  Plus: Control_Plus.Plus,
  empty: Control_Plus.empty,
  Bifoldable: Data_Bifoldable.Bifoldable,
  biall: Data_Bifoldable.biall,
  biany: Data_Bifoldable.biany,
  bifold: Data_Bifoldable.bifold,
  bifoldMap: Data_Bifoldable.bifoldMap,
  bifoldMapDefaultL: Data_Bifoldable.bifoldMapDefaultL,
  bifoldMapDefaultR: Data_Bifoldable.bifoldMapDefaultR,
  bifoldl: Data_Bifoldable.bifoldl,
  bifoldlDefault: Data_Bifoldable.bifoldlDefault,
  bifoldr: Data_Bifoldable.bifoldr,
  bifoldrDefault: Data_Bifoldable.bifoldrDefault,
  bifor_: Data_Bifoldable.bifor_,
  bisequence_: Data_Bifoldable.bisequence_,
  bitraverse_: Data_Bifoldable.bitraverse_,
  Bifunctor: Data_Bifunctor.Bifunctor,
  bimap: Data_Bifunctor.bimap,
  lmap: Data_Bifunctor.lmap,
  rmap: Data_Bifunctor.rmap,
  Left: Data_Either.Left,
  Right: Data_Either.Right,
  choose: Data_Either.choose,
  either: Data_Either.either,
  fromLeft: Data_Either.fromLeft,
  "fromLeft'": Data_Either["fromLeft'"],
  fromRight: Data_Either.fromRight,
  "fromRight'": Data_Either["fromRight'"],
  hush: Data_Either.hush,
  isLeft: Data_Either.isLeft,
  isRight: Data_Either.isRight,
  note: Data_Either.note,
  "note'": Data_Either["note'"],
  Enum: Data_Enum.Enum,
  findMap: Data_Foldable.findMap,
  indexl: Data_Foldable.indexl,
  indexr: Data_Foldable.indexr,
  length: Data_Foldable.length,
  lookup: Data_Foldable.lookup,
  "null": Data_Foldable["null"],
  oneOfMap: Data_Foldable.oneOfMap,
  product: Data_Foldable.product,
  surround: Data_Foldable.surround,
  surroundMap: Data_Foldable.surroundMap,
  FoldableWithIndex: Data_FoldableWithIndex.FoldableWithIndex,
  allWithIndex: Data_FoldableWithIndex.allWithIndex,
  anyWithIndex: Data_FoldableWithIndex.anyWithIndex,
  findMapWithIndex: Data_FoldableWithIndex.findMapWithIndex,
  findWithIndex: Data_FoldableWithIndex.findWithIndex,
  foldMapWithIndex: Data_FoldableWithIndex.foldMapWithIndex,
  foldMapWithIndexDefaultL: Data_FoldableWithIndex.foldMapWithIndexDefaultL,
  foldMapWithIndexDefaultR: Data_FoldableWithIndex.foldMapWithIndexDefaultR,
  foldWithIndexM: Data_FoldableWithIndex.foldWithIndexM,
  foldlWithIndex: Data_FoldableWithIndex.foldlWithIndex,
  foldlWithIndexDefault: Data_FoldableWithIndex.foldlWithIndexDefault,
  foldrWithIndex: Data_FoldableWithIndex.foldrWithIndex,
  foldrWithIndexDefault: Data_FoldableWithIndex.foldrWithIndexDefault,
  forWithIndex_: Data_FoldableWithIndex.forWithIndex_,
  surroundMapWithIndex: Data_FoldableWithIndex.surroundMapWithIndex,
  traverseWithIndex_: Data_FoldableWithIndex.traverseWithIndex_,
  on: Data_Function.on,
  mapFlipped: Data_Functor.mapFlipped,
  voidLeft: Data_Functor.voidLeft,
  voidRight: Data_Functor.voidRight,
  Hashable: Data_Hashable.Hashable,
  Just: Data_Maybe.Just,
  Nothing: Data_Maybe.Nothing,
  fromJust: Data_Maybe.fromJust,
  "fromMaybe'": Data_Maybe["fromMaybe'"],
  isJust: Data_Maybe.isJust,
  isNothing: Data_Maybe.isNothing,
  maybe: Data_Maybe.maybe,
  "maybe'": Data_Maybe["maybe'"],
  optional: Data_Maybe.optional,
  Newtype: Data_Newtype.Newtype,
  ala: Data_Newtype.ala,
  over: Data_Newtype.over,
  over2: Data_Newtype.over2,
  under: Data_Newtype.under,
  under2: Data_Newtype.under2,
  unwrap: Data_Newtype.unwrap,
  wrap: Data_Newtype.wrap,
  NonEmpty: Data_NonEmpty.NonEmpty,
  Foldable: Data_Traversable.Foldable,
  Traversable: Data_Traversable.Traversable,
  all: Data_Traversable.all,
  and: Data_Traversable.and,
  any: Data_Traversable.any,
  elem: Data_Traversable.elem,
  find: Data_Traversable.find,
  fold: Data_Traversable.fold,
  foldMap: Data_Traversable.foldMap,
  foldMapDefaultL: Data_Traversable.foldMapDefaultL,
  foldMapDefaultR: Data_Traversable.foldMapDefaultR,
  foldl: Data_Traversable.foldl,
  foldlDefault: Data_Traversable.foldlDefault,
  foldr: Data_Traversable.foldr,
  foldrDefault: Data_Traversable.foldrDefault,
  "for": Data_Traversable["for"],
  for_: Data_Traversable.for_,
  intercalate: Data_Traversable.intercalate,
  mapAccumL: Data_Traversable.mapAccumL,
  mapAccumR: Data_Traversable.mapAccumR,
  maximum: Data_Traversable.maximum,
  maximumBy: Data_Traversable.maximumBy,
  minimum: Data_Traversable.minimum,
  minimumBy: Data_Traversable.minimumBy,
  notElem: Data_Traversable.notElem,
  oneOf: Data_Traversable.oneOf,
  or: Data_Traversable.or,
  scanl: Data_Traversable.scanl,
  scanr: Data_Traversable.scanr,
  sequence: Data_Traversable.sequence,
  sequenceDefault: Data_Traversable.sequenceDefault,
  sequence_: Data_Traversable.sequence_,
  sum: Data_Traversable.sum,
  traverse: Data_Traversable.traverse,
  traverseDefault: Data_Traversable.traverseDefault,
  traverse_: Data_Traversable.traverse_,
  curry: Data_Tuple.curry,
  fst: Data_Tuple.fst,
  snd: Data_Tuple.snd,
  swap: Data_Tuple.swap,
  uncurry: Data_Tuple.uncurry,
  Unfoldable: Data_Unfoldable.Unfoldable,
  Unfoldable1: Data_Unfoldable.Unfoldable1,
  fromMaybe: Data_Unfoldable.fromMaybe,
  none: Data_Unfoldable.none,
  range: Data_Unfoldable.range,
  replicate: Data_Unfoldable.replicate,
  replicate1: Data_Unfoldable.replicate1,
  replicate1A: Data_Unfoldable.replicate1A,
  replicateA: Data_Unfoldable.replicateA,
  singleton: Data_Unfoldable.singleton,
  unfoldr: Data_Unfoldable.unfoldr,
  unfoldr1: Data_Unfoldable.unfoldr1,
  spy: Debug.spy,
  EQ: Prelude.EQ,
  GT: Prelude.GT,
  LT: Prelude.LT,
  Applicative: Prelude.Applicative,
  Apply: Prelude.Apply,
  Bind: Prelude.Bind,
  BooleanAlgebra: Prelude.BooleanAlgebra,
  Bounded: Prelude.Bounded,
  Category: Prelude.Category,
  CommutativeRing: Prelude.CommutativeRing,
  Discard: Prelude.Discard,
  DivisionRing: Prelude.DivisionRing,
  Eq: Prelude.Eq,
  EuclideanRing: Prelude.EuclideanRing,
  Field: Prelude.Field,
  Functor: Prelude.Functor,
  HeytingAlgebra: Prelude.HeytingAlgebra,
  Monad: Prelude.Monad,
  Monoid: Prelude.Monoid,
  Ord: Prelude.Ord,
  Ring: Prelude.Ring,
  Semigroup: Prelude.Semigroup,
  Semigroupoid: Prelude.Semigroupoid,
  Semiring: Prelude.Semiring,
  Show: Prelude.Show,
  absurd: Prelude.absurd,
  add: Prelude.add,
  ap: Prelude.ap,
  append: Prelude.append,
  apply: Prelude.apply,
  between: Prelude.between,
  bind: Prelude.bind,
  bottom: Prelude.bottom,
  clamp: Prelude.clamp,
  compare: Prelude.compare,
  comparing: Prelude.comparing,
  compose: Prelude.compose,
  conj: Prelude.conj,
  "const": Prelude["const"],
  degree: Prelude.degree,
  discard: Prelude.discard,
  disj: Prelude.disj,
  div: Prelude.div,
  eq: Prelude.eq,
  flap: Prelude.flap,
  flip: Prelude.flip,
  gcd: Prelude.gcd,
  identity: Prelude.identity,
  ifM: Prelude.ifM,
  join: Prelude.join,
  lcm: Prelude.lcm,
  liftA1: Prelude.liftA1,
  liftM1: Prelude.liftM1,
  map: Prelude.map,
  max: Prelude.max,
  min: Prelude.min,
  mod: Prelude.mod,
  mul: Prelude.mul,
  negate: Prelude.negate,
  not: Prelude.not,
  notEq: Prelude.notEq,
  one: Prelude.one,
  otherwise: Prelude.otherwise,
  recip: Prelude.recip,
  show: Prelude.show,
  sub: Prelude.sub,
  top: Prelude.top,
  unit: Prelude.unit,
  unless: Prelude.unless,
  unlessM: Prelude.unlessM,
  "void": Prelude["void"],
  when: Prelude.when,
  whenM: Prelude.whenM,
  zero: Prelude.zero,
  coerce: Safe_Coerce.coerce
};
},{"../Control.Alt/index.js":"lNMK","../Control.Alternative/index.js":"aHia","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Plus/index.js":"oMBg","../Data.Array/index.js":"t4Co","../Data.Bifoldable/index.js":"wjQo","../Data.Bifunctor/index.js":"e2Wc","../Data.Boolean/index.js":"ObQr","../Data.Either/index.js":"B2JL","../Data.Enum/index.js":"oOsU","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.FoldableWithIndex/index.js":"Efib","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.HashSet/index.js":"Kjcf","../Data.Hashable/index.js":"PLrJ","../Data.HeytingAlgebra/index.js":"paZe","../Data.List/index.js":"ezw6","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.NonEmpty/index.js":"qF8i","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Show/index.js":"mFY7","../Data.String.CodeUnits/index.js":"c6Xh","../Data.String.Common/index.js":"OSrc","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW","../Data.Unit/index.js":"NhVk","../Debug/index.js":"sM1Y","../Effect/index.js":"oTWB","../Prelude/index.js":"lNd9","../Safe.Coerce/index.js":"iVKl"}],"t65A":[function(require,module,exports) {
"use strict";
/* global Symbol */

var hasArrayFrom = typeof Array.from === "function";
var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
var hasCodePointAt = typeof String.prototype.codePointAt === "function";

exports._unsafeCodePointAt0 = function (fallback) {
  return hasCodePointAt ? function (str) {
    return str.codePointAt(0);
  } : fallback;
};

exports._codePointAt = function (fallback) {
  return function (Just) {
    return function (Nothing) {
      return function (unsafeCodePointAt0) {
        return function (index) {
          return function (str) {
            var length = str.length;
            if (index < 0 || index >= length) return Nothing;

            if (hasStringIterator) {
              var iter = str[Symbol.iterator]();

              for (var i = index;; --i) {
                var o = iter.next();
                if (o.done) return Nothing;
                if (i === 0) return Just(unsafeCodePointAt0(o.value));
              }
            }

            return fallback(index)(str);
          };
        };
      };
    };
  };
};

exports._countPrefix = function (fallback) {
  return function (unsafeCodePointAt0) {
    if (hasStringIterator) {
      return function (pred) {
        return function (str) {
          var iter = str[Symbol.iterator]();

          for (var cpCount = 0;; ++cpCount) {
            var o = iter.next();
            if (o.done) return cpCount;
            var cp = unsafeCodePointAt0(o.value);
            if (!pred(cp)) return cpCount;
          }
        };
      };
    }

    return fallback;
  };
};

exports._fromCodePointArray = function (singleton) {
  return hasFromCodePoint ? function (cps) {
    // Function.prototype.apply will fail for very large second parameters,
    // so we don't use it for arrays with 10,000 or more entries.
    if (cps.length < 10e3) {
      return String.fromCodePoint.apply(String, cps);
    }

    return cps.map(singleton).join("");
  } : function (cps) {
    return cps.map(singleton).join("");
  };
};

exports._singleton = function (fallback) {
  return hasFromCodePoint ? String.fromCodePoint : fallback;
};

exports._take = function (fallback) {
  return function (n) {
    if (hasStringIterator) {
      return function (str) {
        var accum = "";
        var iter = str[Symbol.iterator]();

        for (var i = 0; i < n; ++i) {
          var o = iter.next();
          if (o.done) return accum;
          accum += o.value;
        }

        return accum;
      };
    }

    return fallback(n);
  };
};

exports._toCodePointArray = function (fallback) {
  return function (unsafeCodePointAt0) {
    if (hasArrayFrom) {
      return function (str) {
        return Array.from(str, unsafeCodePointAt0);
      };
    }

    return fallback;
  };
};
},{}],"mAJY":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var $foreign = require("./foreign.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Bounded = require("../Data.Bounded/index.js");

var Data_Enum = require("../Data.Enum/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Int = require("../Data.Int/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_String_Unsafe = require("../Data.String.Unsafe/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var CodePoint = function CodePoint(x) {
  return x;
};

var unsurrogate = function unsurrogate(lead) {
  return function (trail) {
    return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
  };
};

var showCodePoint = new Data_Show.Show(function (v) {
  return "(CodePoint 0x" + (Data_String_Common.toUpper(Data_Int.toStringAs(Data_Int.hexadecimal)(v)) + ")");
});

var isTrail = function isTrail(cu) {
  return 56320 <= cu && cu <= 57343;
};

var isLead = function isLead(cu) {
  return 55296 <= cu && cu <= 56319;
};

var uncons = function uncons(s) {
  var v = Data_String_CodeUnits.length(s);

  if (v === 0) {
    return Data_Maybe.Nothing.value;
  }

  ;

  if (v === 1) {
    return new Data_Maybe.Just({
      head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
      tail: ""
    });
  }

  ;
  var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
  var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
  var $21 = isLead(cu0) && isTrail(cu1);

  if ($21) {
    return new Data_Maybe.Just({
      head: unsurrogate(cu0)(cu1),
      tail: Data_String_CodeUnits.drop(2)(s)
    });
  }

  ;
  return new Data_Maybe.Just({
    head: cu0,
    tail: Data_String_CodeUnits.drop(1)(s)
  });
};

var unconsButWithTuple = function unconsButWithTuple(s) {
  return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
    return new Data_Tuple.Tuple(v.head, v.tail);
  })(uncons(s));
};

var toCodePointArrayFallback = function toCodePointArrayFallback(s) {
  return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
};

var unsafeCodePointAt0Fallback = function unsafeCodePointAt0Fallback(s) {
  var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
  var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;

  if ($25) {
    var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
    var $26 = isTrail(cu1);

    if ($26) {
      return unsurrogate(cu0)(cu1);
    }

    ;
    return cu0;
  }

  ;
  return cu0;
};

var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);

var length = function length($52) {
  return Data_Array.length(toCodePointArray($52));
};

var lastIndexOf = function lastIndexOf(p) {
  return function (s) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
      return length(Data_String_CodeUnits.take(i)(s));
    })(Data_String_CodeUnits.lastIndexOf(p)(s));
  };
};

var indexOf = function indexOf(p) {
  return function (s) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
      return length(Data_String_CodeUnits.take(i)(s));
    })(Data_String_CodeUnits.indexOf(p)(s));
  };
};

var fromCharCode = function () {
  var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
  return function ($54) {
    return Data_String_CodeUnits.singleton($53($54));
  };
}();

var singletonFallback = function singletonFallback(v) {
  if (v <= 65535) {
    return fromCharCode(v);
  }

  ;
  var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
  var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
  return fromCharCode(lead) + fromCharCode(trail);
};

var fromCodePointArray = $foreign["_fromCodePointArray"](singletonFallback);
var singleton = $foreign["_singleton"](singletonFallback);

var takeFallback = function takeFallback(n) {
  return function (v) {
    if (n < 1) {
      return "";
    }

    ;
    var v1 = uncons(v);

    if (v1 instanceof Data_Maybe.Just) {
      return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
    }

    ;
    return v;
  };
};

var take = $foreign["_take"](takeFallback);

var lastIndexOf$prime = function lastIndexOf$prime(p) {
  return function (i) {
    return function (s) {
      var i$prime = Data_String_CodeUnits.length(take(i)(s));
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
        return length(Data_String_CodeUnits.take(k)(s));
      })(Data_String_CodeUnits["lastIndexOf'"](p)(i$prime)(s));
    };
  };
};

var splitAt = function splitAt(i) {
  return function (s) {
    var before = take(i)(s);
    return {
      before: before,
      after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
    };
  };
};

var eqCodePoint = new Data_Eq.Eq(function (x) {
  return function (y) {
    return x === y;
  };
});
var ordCodePoint = new Data_Ord.Ord(function () {
  return eqCodePoint;
}, function (x) {
  return function (y) {
    return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
  };
});

var drop = function drop(n) {
  return function (s) {
    return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
  };
};

var indexOf$prime = function indexOf$prime(p) {
  return function (i) {
    return function (s) {
      var s$prime = drop(i)(s);
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (k) {
        return i + length(Data_String_CodeUnits.take(k)(s$prime)) | 0;
      })(Data_String_CodeUnits.indexOf(p)(s$prime));
    };
  };
};

var countTail = function countTail($copy_p) {
  return function ($copy_s) {
    return function ($copy_accum) {
      var $tco_var_p = $copy_p;
      var $tco_var_s = $copy_s;
      var $tco_done = false;
      var $tco_result;

      function $tco_loop(p, s, accum) {
        var v = uncons(s);

        if (v instanceof Data_Maybe.Just) {
          var $39 = p(v.value0.head);

          if ($39) {
            $tco_var_p = p;
            $tco_var_s = v.value0.tail;
            $copy_accum = accum + 1 | 0;
            return;
          }

          ;
          $tco_done = true;
          return accum;
        }

        ;
        $tco_done = true;
        return accum;
      }

      ;

      while (!$tco_done) {
        $tco_result = $tco_loop($tco_var_p, $tco_var_s, $copy_accum);
      }

      ;
      return $tco_result;
    };
  };
};

var countFallback = function countFallback(p) {
  return function (s) {
    return countTail(p)(s)(0);
  };
};

var countPrefix = $foreign["_countPrefix"](countFallback)(unsafeCodePointAt0);

var dropWhile = function dropWhile(p) {
  return function (s) {
    return drop(countPrefix(p)(s))(s);
  };
};

var takeWhile = function takeWhile(p) {
  return function (s) {
    return take(countPrefix(p)(s))(s);
  };
};

var codePointFromChar = function () {
  var $55 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
  return function ($56) {
    return CodePoint($55($56));
  };
}();

var codePointAtFallback = function codePointAtFallback($copy_n) {
  return function ($copy_s) {
    var $tco_var_n = $copy_n;
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(n, s) {
      var v = uncons(s);

      if (v instanceof Data_Maybe.Just) {
        var $44 = n === 0;

        if ($44) {
          $tco_done = true;
          return new Data_Maybe.Just(v.value0.head);
        }

        ;
        $tco_var_n = n - 1 | 0;
        $copy_s = v.value0.tail;
        return;
      }

      ;
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($tco_var_n, $copy_s);
    }

    ;
    return $tco_result;
  };
};

var codePointAt = function codePointAt(v) {
  return function (v1) {
    if (v < 0) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v === 0 && v1 === "") {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v === 0) {
      return new Data_Maybe.Just(unsafeCodePointAt0(v1));
    }

    ;
    return $foreign["_codePointAt"](codePointAtFallback)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(unsafeCodePointAt0)(v)(v1);
  };
};

var boundedCodePoint = new Data_Bounded.Bounded(function () {
  return ordCodePoint;
}, 0, 1114111);
var boundedEnumCodePoint = new Data_Enum.BoundedEnum(function () {
  return boundedCodePoint;
}, function () {
  return enumCodePoint;
}, 1114111 + 1 | 0, function (v) {
  return v;
}, function (n) {
  if (n >= 0 && n <= 1114111) {
    return new Data_Maybe.Just(n);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Data_Maybe.Nothing.value;
  }

  ;
  throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [n.constructor.name]);
});
var enumCodePoint = new Data_Enum.Enum(function () {
  return ordCodePoint;
}, Data_Enum.defaultPred(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)), Data_Enum.defaultSucc(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)));
module.exports = {
  codePointFromChar: codePointFromChar,
  singleton: singleton,
  fromCodePointArray: fromCodePointArray,
  toCodePointArray: toCodePointArray,
  codePointAt: codePointAt,
  uncons: uncons,
  length: length,
  countPrefix: countPrefix,
  indexOf: indexOf,
  "indexOf'": indexOf$prime,
  lastIndexOf: lastIndexOf,
  "lastIndexOf'": lastIndexOf$prime,
  take: take,
  takeWhile: takeWhile,
  drop: drop,
  dropWhile: dropWhile,
  splitAt: splitAt,
  eqCodePoint: eqCodePoint,
  ordCodePoint: ordCodePoint,
  showCodePoint: showCodePoint,
  boundedCodePoint: boundedCodePoint,
  enumCodePoint: enumCodePoint,
  boundedEnumCodePoint: boundedEnumCodePoint,
  contains: Data_String_CodeUnits.contains,
  stripPrefix: Data_String_CodeUnits.stripPrefix,
  stripSuffix: Data_String_CodeUnits.stripSuffix
};
},{"./foreign.js":"t65A","../Data.Array/index.js":"t4Co","../Data.Boolean/index.js":"ObQr","../Data.Bounded/index.js":"kcUU","../Data.Enum/index.js":"oOsU","../Data.Eq/index.js":"Pq4F","../Data.EuclideanRing/index.js":"IRBO","../Data.Functor/index.js":"AEHo","../Data.Int/index.js":"xNJb","../Data.Maybe/index.js":"mN7T","../Data.Ord/index.js":"r4Vb","../Data.Show/index.js":"mFY7","../Data.String.CodeUnits/index.js":"c6Xh","../Data.String.Common/index.js":"OSrc","../Data.String.Unsafe/index.js":"UWMK","../Data.Tuple/index.js":"IIOM","../Data.Unfoldable/index.js":"ZwHW"}],"hfA0":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Array = require("../Data.Array/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_String_CodePoints = require("../Data.String.CodePoints/index.js");

var Data_String_CodeUnits = require("../Data.String.CodeUnits/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_Unfoldable = require("../Data.Unfoldable/index.js");

var Doc = function Doc(x) {
  return x;
};

var Stack = function Stack(x) {
  return x;
};

var Columns = function Columns(x) {
  return x;
};

var width = function width(v) {
  return v.width;
};

var text = function text(s) {
  var lines = Data_String_Common.split(Data_Newtype.wrap()("\x0a"))(s);
  return {
    width: Data_Foldable.foldl(Data_Foldable.foldableArray)(Data_Ord.max(Data_Ord.ordInt))(0)(Data_Functor.map(Data_Functor.functorArray)(Data_String_CodePoints.length)(lines)),
    height: Data_Array.length(lines),
    lines: lines
  };
};

var render = function render(v) {
  return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\x0a")(v.lines);
};

var newtypeStack = new Data_Newtype.Newtype(function () {
  return undefined;
});
var newtypeColumns = new Data_Newtype.Newtype(function () {
  return undefined;
});

var height = function height(v) {
  return v.height;
};

var empty = function empty(w) {
  return function (h) {
    return {
      width: w,
      height: h,
      lines: function () {
        if (h === 0) {
          return [];
        }

        ;
        return Data_Functor.voidLeft(Data_Functor.functorArray)(Data_Array.range(1)(h))("");
      }()
    };
  };
};

var beside = function beside(v) {
  return function (v1) {
    var height_ = Data_Ord.max(Data_Ord.ordInt)(v.height)(v1.height);

    var emptyLine = function emptyLine(w) {
      return Data_String_CodeUnits.fromCharArray(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(w)(" "));
    };

    var padRight = function padRight(w) {
      return function (s) {
        return s + emptyLine(w - Data_String_CodePoints.length(s) | 0);
      };
    };

    var adjust = function adjust(d) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(d.lines)(Data_Unfoldable.replicate(Data_Unfoldable.unfoldableArray)(height_ - d.height | 0)(emptyLine(d.width)));
    };

    return {
      width: v.width + v1.width | 0,
      height: height_,
      lines: Data_Array.take(height_)(Data_Array.zipWith(Data_Semigroup.append(Data_Semigroup.semigroupString))(Data_Functor.map(Data_Functor.functorArray)(padRight(v.width))(adjust(v)))(adjust(v1)))
    };
  };
};

var semigroupColumns = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return beside(v)(v1);
  };
});
var monoidColumns = new Data_Monoid.Monoid(function () {
  return semigroupColumns;
}, empty(0)(0));

var hcat = function hcat(dictFoldable) {
  return Data_Newtype.ala()()()(Columns)(Data_Foldable.foldMap(dictFoldable)(monoidColumns));
};

var atop = function atop(v) {
  return function (v1) {
    return {
      width: Data_Ord.max(Data_Ord.ordInt)(v.width)(v1.width),
      height: v.height + v1.height | 0,
      lines: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.lines)(v1.lines)
    };
  };
};

var semigroupStack = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return atop(v)(v1);
  };
});
var monoidStack = new Data_Monoid.Monoid(function () {
  return semigroupStack;
}, empty(0)(0));

var vcat = function vcat(dictFoldable) {
  return Data_Newtype.ala()()()(Stack)(Data_Foldable.foldMap(dictFoldable)(monoidStack));
};

module.exports = {
  width: width,
  height: height,
  render: render,
  empty: empty,
  text: text,
  beside: beside,
  atop: atop,
  Stack: Stack,
  vcat: vcat,
  Columns: Columns,
  hcat: hcat,
  newtypeStack: newtypeStack,
  semigroupStack: semigroupStack,
  monoidStack: monoidStack,
  newtypeColumns: newtypeColumns,
  semigroupColumns: semigroupColumns,
  monoidColumns: monoidColumns
};
},{"../Data.Array/index.js":"t4Co","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.String.CodePoints/index.js":"mAJY","../Data.String.CodeUnits/index.js":"c6Xh","../Data.String.Common/index.js":"OSrc","../Data.Unfoldable/index.js":"ZwHW"}],"aglW":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Preload = require("../Preload/index.js");

var Text_Pretty = require("../Text.Pretty/index.js");

var Lines = function Lines(x) {
  return x;
};

var Display = function Display(display) {
  this.display = display;
};

var space = Data_Newtype.wrap()(Text_Pretty.empty(1)(0));

var words = function words(dictTraversable) {
  return Preload.using()()(dictTraversable.Functor0())(Text_Pretty.Columns)(Data_Foldable.intercalate(dictTraversable.Foldable1())(Text_Pretty.monoidColumns)(space));
};

var show = function show(dictShow) {
  var $18 = Data_Show.show(dictShow);
  return function ($19) {
    return Text_Pretty.text($18($19));
  };
};

var line = Text_Pretty.empty(0)(1);

var display = function display(dict) {
  return dict.display;
};

var comma = Data_Newtype.wrap()(Text_Pretty.text(","));

var columns = function columns(dictFoldable) {
  return Data_Newtype.ala()()()(Text_Pretty.Columns)(Data_Foldable.foldMap(dictFoldable)(Text_Pretty.monoidColumns));
};

var enclose = function enclose(l) {
  return function (r) {
    return function (d) {
      return columns(Data_Foldable.foldableArray)([l, d, r]);
    };
  };
};

var parens = enclose(Text_Pretty.text("("))(Text_Pretty.text(")"));

var tuple = function tuple(dictTraversable) {
  var $20 = Preload.using()()(dictTraversable.Functor0())(Text_Pretty.Columns)(Data_Foldable.intercalate(dictTraversable.Foldable1())(Text_Pretty.monoidColumns)(comma));
  return function ($21) {
    return parens($20($21));
  };
};

var quotes = enclose(Text_Pretty.text("\""))(Text_Pretty.text("\""));
var ticks = enclose(Text_Pretty.text("'"))(Text_Pretty.text("'"));

var indentWith = function indentWith(n) {
  return function (d) {
    return columns(Data_Foldable.foldableArray)([Text_Pretty.empty(n)(0), d]);
  };
};

var indent = indentWith(2);
var brackets = enclose(Text_Pretty.text("["))(Text_Pretty.text("]"));

var list = function list(dictTraversable) {
  var $22 = Preload.using()()(dictTraversable.Functor0())(Text_Pretty.Columns)(Data_Foldable.intercalate(dictTraversable.Foldable1())(Text_Pretty.monoidColumns)(comma));
  return function ($23) {
    return brackets($22($23));
  };
};

var braces = enclose(Text_Pretty.text("{"))(Text_Pretty.text("}"));

var record = function record(dictTraversable) {
  return function (sep) {
    var $24 = Preload.using()()(dictTraversable.Functor0())(Text_Pretty.Columns)(Data_Foldable.intercalate(dictTraversable.Foldable1())(Text_Pretty.monoidColumns)(comma));
    var $25 = Data_Functor.map(dictTraversable.Functor0())(function (v) {
      return columns(Data_Foldable.foldableArray)([v.value0, sep, v.value1]);
    });
    return function ($26) {
      return braces($24($25($26)));
    };
  };
};

var backticks = enclose(Text_Pretty.text("`"))(Text_Pretty.text("`"));
var $dollar_SemigroupLines_4 = new Data_Semigroup.Semigroup(function (v) {
  return function (v1) {
    return Text_Pretty.atop(v)(v1);
  };
});
var $dollar_NewtypeLines__3 = new Data_Newtype.Newtype(function () {
  return undefined;
});
var $dollar_MonoidLines_5 = new Data_Monoid.Monoid(function () {
  return $dollar_SemigroupLines_4;
}, Text_Pretty.empty(0)(0));

var lines = function lines(dictFoldable) {
  return Data_Newtype.ala()()()(Lines)(Data_Foldable.foldMap(dictFoldable)($dollar_MonoidLines_5));
};

module.exports = {
  Lines: Lines,
  Display: Display,
  display: display,
  show: show,
  space: space,
  line: line,
  comma: comma,
  columns: columns,
  lines: lines,
  words: words,
  indentWith: indentWith,
  indent: indent,
  enclose: enclose,
  parens: parens,
  brackets: brackets,
  braces: braces,
  quotes: quotes,
  ticks: ticks,
  backticks: backticks,
  list: list,
  tuple: tuple,
  record: record,
  "$_NewtypeLines__3": $dollar_NewtypeLines__3,
  "$_SemigroupLines_4": $dollar_SemigroupLines_4,
  "$_MonoidLines_5": $dollar_MonoidLines_5,
  Columns: Text_Pretty.Columns,
  render: Text_Pretty.render,
  text: Text_Pretty.text
};
},{"../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Preload/index.js":"yYWa","../Text.Pretty/index.js":"hfA0"}],"QkOy":[function(require,module,exports) {
"use strict";

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_HashSet = require("../Data.HashSet/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Show = require("../Data.Show/index.js");

var Preload = require("../Preload/index.js");

var showRow = function showRow(dictShow) {
  return function (beg) {
    return function (end) {
      return function (sep) {
        return function (as) {
          var check = function check(l) {
            return function (x) {
              var r = Data_Show.show(dictShow)(x);
              var $3 = l === r;

              if ($3) {
                return l;
              }

              ;
              return Preload.unwords(Data_Foldable.foldableArray)([l, sep, r]);
            };
          };

          return Preload.enclose(beg)(end)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(Data_HashMap.toArrayBy(check)(as)));
        };
      };
    };
  };
};

var showVariants = function showVariants(dictShow) {
  return showRow(dictShow)("[")("]")(":");
};

var showLabels = function () {
  var $4 = Preload.enclose("{")("}");
  var $5 = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(",");
  return function ($6) {
    return $4($5(Data_HashSet.toArray($6)));
  };
}();

var showFields = function showFields(dictShow) {
  return showRow(dictShow)("{")("}");
};

module.exports = {
  showLabels: showLabels,
  showFields: showFields,
  showVariants: showVariants
};
},{"../Data.Foldable/index.js":"eVDl","../Data.HashMap/index.js":"l6NS","../Data.HashSet/index.js":"Kjcf","../Data.Monoid/index.js":"TiEB","../Data.Show/index.js":"mFY7","../Preload/index.js":"yYWa"}],"WWnz":[function(require,module,exports) {
"use strict";

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Label = require("../Task.Script.Label/index.js");

var TBool = function () {
  function TBool() {}

  ;
  TBool.value = new TBool();
  return TBool;
}();

var TInt = function () {
  function TInt() {}

  ;
  TInt.value = new TInt();
  return TInt;
}();

var TString = function () {
  function TString() {}

  ;
  TString.value = new TString();
  return TString;
}();

var BName = function () {
  function BName(value0) {
    this.value0 = value0;
  }

  ;

  BName.create = function (value0) {
    return new BName(value0);
  };

  return BName;
}();

var BList = function () {
  function BList(value0) {
    this.value0 = value0;
  }

  ;

  BList.create = function (value0) {
    return new BList(value0);
  };

  return BList;
}();

var BRecord = function () {
  function BRecord(value0) {
    this.value0 = value0;
  }

  ;

  BRecord.create = function (value0) {
    return new BRecord(value0);
  };

  return BRecord;
}();

var BVariant = function () {
  function BVariant(value0) {
    this.value0 = value0;
  }

  ;

  BVariant.create = function (value0) {
    return new BVariant(value0);
  };

  return BVariant;
}();

var BPrimitive = function () {
  function BPrimitive(value0) {
    this.value0 = value0;
  }

  ;

  BPrimitive.create = function (value0) {
    return new BPrimitive(value0);
  };

  return BPrimitive;
}(); //-- Types ---------------------------------------------------------------------


var TFunction = function () {
  function TFunction(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  TFunction.create = function (value0) {
    return function (value1) {
      return new TFunction(value0, value1);
    };
  };

  return TFunction;
}(); //-- Types ---------------------------------------------------------------------


var TName = function () {
  function TName(value0) {
    this.value0 = value0;
  }

  ;

  TName.create = function (value0) {
    return new TName(value0);
  };

  return TName;
}(); //-- Types ---------------------------------------------------------------------


var TList = function () {
  function TList(value0) {
    this.value0 = value0;
  }

  ;

  TList.create = function (value0) {
    return new TList(value0);
  };

  return TList;
}(); //-- Types ---------------------------------------------------------------------


var TRecord = function () {
  function TRecord(value0) {
    this.value0 = value0;
  }

  ;

  TRecord.create = function (value0) {
    return new TRecord(value0);
  };

  return TRecord;
}(); //-- Types ---------------------------------------------------------------------


var TVariant = function () {
  function TVariant(value0) {
    this.value0 = value0;
  }

  ;

  TVariant.create = function (value0) {
    return new TVariant(value0);
  };

  return TVariant;
}(); //-- Types ---------------------------------------------------------------------


var TReference = function () {
  function TReference(value0) {
    this.value0 = value0;
  }

  ;

  TReference.create = function (value0) {
    return new TReference(value0);
  };

  return TReference;
}(); //-- Types ---------------------------------------------------------------------


var TTask = function () {
  function TTask(value0) {
    this.value0 = value0;
  }

  ;

  TTask.create = function (value0) {
    return new TTask(value0);
  };

  return TTask;
}(); //-- Types ---------------------------------------------------------------------


var TPrimitive = function () {
  function TPrimitive(value0) {
    this.value0 = value0;
  }

  ;

  TPrimitive.create = function (value0) {
    return new TPrimitive(value0);
  };

  return TPrimitive;
}();

var ofVariant = function ofVariant(v) {
  if (v instanceof TVariant) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var ofType = function ofType(v) {
  if (v instanceof TPrimitive) {
    return Data_Maybe.Just.create(new BPrimitive(v.value0));
  }

  ;

  if (v instanceof TName) {
    return Data_Maybe.Just.create(new BName(v.value0));
  }

  ;

  var v1 = function v1(v2) {
    if (v instanceof TList && Data_Boolean.otherwise) {
      return Data_Maybe.Nothing.value;
    }

    ;

    var v3 = function v3(v4) {
      if (v instanceof TRecord && Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;

      var v5 = function v5(v6) {
        if (v instanceof TVariant && Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof TFunction) {
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof TReference) {
          return Data_Maybe.Nothing.value;
        }

        ;

        if (v instanceof TTask) {
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Task.Script.Type (line 114, column 1 - line 114, column 38): " + [v.constructor.name]);
      };

      if (v instanceof TVariant) {
        var $76 = Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Maybe.applicativeMaybe)(ofType)(v.value0);

        if ($76 instanceof Data_Maybe.Just) {
          return Data_Maybe.Just.create(new BVariant($76.value0));
        }

        ;
        return v5(true);
      }

      ;
      return v5(true);
    };

    if (v instanceof TRecord) {
      var $80 = Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Maybe.applicativeMaybe)(ofType)(v.value0);

      if ($80 instanceof Data_Maybe.Just) {
        return Data_Maybe.Just.create(new BRecord($80.value0));
      }

      ;
      return v3(true);
    }

    ;
    return v3(true);
  };

  if (v instanceof TList) {
    var $84 = ofType(v.value0);

    if ($84 instanceof Data_Maybe.Just) {
      return Data_Maybe.Just.create(new BList($84.value0));
    }

    ;
    return v1(true);
  }

  ;
  return v1(true);
};

var ofTask = function ofTask(v) {
  if (v instanceof TTask) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var ofReference = function ofReference(v) {
  if (v instanceof TReference) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var ofRecord = function ofRecord(v) {
  if (v instanceof TRecord) {
    return new Data_Maybe.Just(v.value0);
  }

  ;
  return Data_Maybe.Nothing.value;
};

var ofBasic = function ofBasic(v) {
  if (v instanceof BList) {
    return TList.create(ofBasic(v.value0));
  }

  ;

  if (v instanceof BRecord) {
    return TRecord.create(Data_Functor.map(Data_HashMap.functorHashMap)(ofBasic)(v.value0));
  }

  ;

  if (v instanceof BVariant) {
    return TVariant.create(Data_Functor.map(Data_HashMap.functorHashMap)(ofBasic)(v.value0));
  }

  ;

  if (v instanceof BName) {
    return new TName(v.value0);
  }

  ;

  if (v instanceof BPrimitive) {
    return new TPrimitive(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Type (line 132, column 11 - line 137, column 31): " + [v.constructor.name]);
};

var isTask = function isTask(v) {
  if (v instanceof TFunction && v.value1 instanceof TTask) {
    return true;
  }

  ;
  return false;
};

var isReference = function isReference(v) {
  if (v instanceof TReference) {
    return true;
  }

  ;
  return false;
};

var isFunction = function isFunction(v) {
  if (v instanceof TFunction) {
    return true;
  }

  ;
  return false;
};

var isBasic = function isBasic(t) {
  var v = function v(v1) {
    if (Data_Boolean.otherwise) {
      return false;
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Type (line 139, column 1 - line 139, column 28): " + [t.constructor.name]);
  };

  var $110 = ofType(t);

  if ($110 instanceof Data_Maybe.Just) {
    return true;
  }

  ;
  return v(true);
};

var $dollar_ShowPrimType_49 = new Data_Show.Show(function (v) {
  if (v instanceof TBool) {
    return "Bool";
  }

  ;

  if (v instanceof TInt) {
    return "Int";
  }

  ;

  if (v instanceof TString) {
    return "String";
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Type (line 92, column 10 - line 95, column 24): " + [v.constructor.name]);
});
var $dollar_ShowBasicType_51 = new Data_Show.Show(function (v) {
  if (v instanceof BName) {
    return v.value0;
  }

  ;

  if (v instanceof BList) {
    return Preload.unwords(Data_Foldable.foldableArray)(["List", Data_Show.show($dollar_ShowBasicType_51)(v.value0)]);
  }

  ;

  if (v instanceof BRecord) {
    return Task_Script_Label.showFields($dollar_ShowBasicType_51)(":")(v.value0);
  }

  ;

  if (v instanceof BVariant) {
    return Task_Script_Label.showVariants($dollar_ShowBasicType_51)(v.value0);
  }

  ;

  if (v instanceof BPrimitive) {
    return Data_Show.show($dollar_ShowPrimType_49)(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Type (line 107, column 10 - line 112, column 27): " + [v.constructor.name]);
});
var $dollar_ShowFullType_47 = new Data_Show.Show(function (v) {
  if (v instanceof TFunction) {
    return Preload.enclose("(")(")")(Preload.unwords(Data_Foldable.foldableArray)([Data_Show.show($dollar_ShowFullType_47)(v.value0), "->", Data_Show.show($dollar_ShowFullType_47)(v.value1)]));
  }

  ;

  if (v instanceof TName) {
    return v.value0;
  }

  ;

  if (v instanceof TList) {
    return Preload.unwords(Data_Foldable.foldableArray)(["List", Data_Show.show($dollar_ShowFullType_47)(v.value0)]);
  }

  ;

  if (v instanceof TRecord) {
    return Task_Script_Label.showFields($dollar_ShowFullType_47)(":")(v.value0);
  }

  ;

  if (v instanceof TVariant) {
    return Task_Script_Label.showVariants($dollar_ShowFullType_47)(v.value0);
  }

  ;

  if (v instanceof TReference) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Ref", Data_Show.show($dollar_ShowBasicType_51)(v.value0)]);
  }

  ;

  if (v instanceof TTask) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Task", Task_Script_Label.showFields($dollar_ShowFullType_47)(":")(v.value0)]);
  }

  ;

  if (v instanceof TPrimitive) {
    return Data_Show.show($dollar_ShowPrimType_49)(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Type (line 37, column 10 - line 47, column 27): " + [v.constructor.name]);
});
var $dollar_EqPrimType_48 = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof TBool && y instanceof TBool) {
      return true;
    }

    ;

    if (x instanceof TInt && y instanceof TInt) {
      return true;
    }

    ;

    if (x instanceof TString && y instanceof TString) {
      return true;
    }

    ;
    return false;
  };
});
var $dollar_EqBasicType_50 = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof BName && y instanceof BName) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof BList && y instanceof BList) {
      return Data_Eq.eq($dollar_EqBasicType_50)(x.value0)(y.value0);
    }

    ;

    if (x instanceof BRecord && y instanceof BRecord) {
      return Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)($dollar_EqBasicType_50))(x.value0)(y.value0);
    }

    ;

    if (x instanceof BVariant && y instanceof BVariant) {
      return Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)($dollar_EqBasicType_50))(x.value0)(y.value0);
    }

    ;

    if (x instanceof BPrimitive && y instanceof BPrimitive) {
      return Data_Eq.eq($dollar_EqPrimType_48)(x.value0)(y.value0);
    }

    ;
    return false;
  };
});
var $dollar_EqFullType_46 = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof TFunction && y instanceof TFunction) {
      return Data_Eq.eq($dollar_EqFullType_46)(x.value0)(y.value0) && Data_Eq.eq($dollar_EqFullType_46)(x.value1)(y.value1);
    }

    ;

    if (x instanceof TName && y instanceof TName) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof TList && y instanceof TList) {
      return Data_Eq.eq($dollar_EqFullType_46)(x.value0)(y.value0);
    }

    ;

    if (x instanceof TRecord && y instanceof TRecord) {
      return Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)($dollar_EqFullType_46))(x.value0)(y.value0);
    }

    ;

    if (x instanceof TVariant && y instanceof TVariant) {
      return Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)($dollar_EqFullType_46))(x.value0)(y.value0);
    }

    ;

    if (x instanceof TReference && y instanceof TReference) {
      return Data_Eq.eq($dollar_EqBasicType_50)(x.value0)(y.value0);
    }

    ;

    if (x instanceof TTask && y instanceof TTask) {
      return Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)($dollar_EqFullType_46))(x.value0)(y.value0);
    }

    ;

    if (x instanceof TPrimitive && y instanceof TPrimitive) {
      return Data_Eq.eq($dollar_EqPrimType_48)(x.value0)(y.value0);
    }

    ;
    return false;
  };
});
module.exports = {
  TFunction: TFunction,
  TName: TName,
  TList: TList,
  TRecord: TRecord,
  TVariant: TVariant,
  TReference: TReference,
  TTask: TTask,
  TPrimitive: TPrimitive,
  isFunction: isFunction,
  isReference: isReference,
  isTask: isTask,
  ofRecord: ofRecord,
  ofVariant: ofVariant,
  ofReference: ofReference,
  ofTask: ofTask,
  TBool: TBool,
  TInt: TInt,
  TString: TString,
  BName: BName,
  BList: BList,
  BRecord: BRecord,
  BVariant: BVariant,
  BPrimitive: BPrimitive,
  ofType: ofType,
  ofBasic: ofBasic,
  isBasic: isBasic,
  "$_EqFullType_46": $dollar_EqFullType_46,
  "$_ShowFullType_47": $dollar_ShowFullType_47,
  "$_EqPrimType_48": $dollar_EqPrimType_48,
  "$_ShowPrimType_49": $dollar_ShowPrimType_49,
  "$_EqBasicType_50": $dollar_EqBasicType_50,
  "$_ShowBasicType_51": $dollar_ShowBasicType_51
};
},{"../Data.Boolean/index.js":"ObQr","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.Maybe/index.js":"mN7T","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Preload/index.js":"yYWa","../Task.Script.Label/index.js":"QkOy"}],"u63X":[function(require,module,exports) {
"use strict";

var Data_Array = require("../Data.Array/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_String_Common = require("../Data.String.Common/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var unreadable = Data_String_Common.replace(" ")("_");

var taskOf = function () {
  var $4 = Data_Functor.map(Data_HashMap.functorHashMap)(Task_Script_Type.ofBasic);
  var $5 = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString));
  return function ($6) {
    return Task_Script_Type.TTask.create($4($5($6)));
  };
}();

var showContext = function () {
  var $7 = Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\x0a");
  var $8 = Data_Functor.map(Data_Functor.functorArray)(function (v) {
    return v.value0 + (" : " + Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1));
  });
  var $9 = Data_Array.sortBy(Data_Function.on(Data_Ord.compare(Data_Ord.ordString))(Data_Tuple.fst));
  var $10 = Data_HashMap.toArrayBy(Data_Tuple.Tuple.create);
  return function ($11) {
    return $7($8($9($10($11))));
  };
}();

var shares = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("current date", new Task_Script_Type.TReference(new Task_Script_Type.BPrimitive(Task_Script_Type.TInt.value))), new Data_Tuple.Tuple("current time", new Task_Script_Type.TReference(new Task_Script_Type.BPrimitive(Task_Script_Type.TInt.value)))]);

var recordOf$prime = function () {
  var $12 = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString));
  return function ($13) {
    return Task_Script_Type.BRecord.create($12($13));
  };
}();

var recordOf = function recordOf($14) {
  return Task_Script_Type.ofBasic(recordOf$prime($14));
};

var readable = Data_String_Common.replace("_")(" ");
var operators = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("&&", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))), new Data_Tuple.Tuple("||", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))), new Data_Tuple.Tuple("==", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))), new Data_Tuple.Tuple("/=", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))), new Data_Tuple.Tuple("<", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))), new Data_Tuple.Tuple("<=", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))), new Data_Tuple.Tuple(">=", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))), new Data_Tuple.Tuple(">", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))), new Data_Tuple.Tuple("+", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value)))), new Data_Tuple.Tuple("*", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value)))), new Data_Tuple.Tuple("-", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value)))), new Data_Tuple.Tuple("/", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value))))]);

var listOf = function listOf($15) {
  return Task_Script_Type.ofBasic(Task_Script_Type.BList.create($15));
};

var isOperator = Data_Function.flip(Data_HashMap.member(Data_Hashable.hashableString))(operators);
var functions = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("not", new Task_Script_Type.TFunction(new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value), new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value)))]);
var builtins = Data_HashMap.union(Data_Hashable.hashableString)(operators)(Data_HashMap.union(Data_Hashable.hashableString)(functions)(shares));
var aliases = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("Bool", new Task_Script_Type.BPrimitive(Task_Script_Type.TBool.value)), new Data_Tuple.Tuple("Int", new Task_Script_Type.BPrimitive(Task_Script_Type.TInt.value)), new Data_Tuple.Tuple("Nat", new Task_Script_Type.BPrimitive(Task_Script_Type.TInt.value)), new Data_Tuple.Tuple("Date", new Task_Script_Type.BPrimitive(Task_Script_Type.TInt.value)), new Data_Tuple.Tuple("String", new Task_Script_Type.BPrimitive(Task_Script_Type.TString.value))]);
module.exports = {
  showContext: showContext,
  builtins: builtins,
  aliases: aliases,
  isOperator: isOperator,
  readable: readable,
  unreadable: unreadable,
  listOf: listOf,
  "recordOf'": recordOf$prime,
  recordOf: recordOf,
  taskOf: taskOf
};
},{"../Data.Array/index.js":"t4Co","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.Hashable/index.js":"PLrJ","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Show/index.js":"mFY7","../Data.String.Common/index.js":"OSrc","../Data.Tuple/index.js":"IIOM","../Preload/index.js":"yYWa","../Task.Script.Type/index.js":"WWnz"}],"vwvk":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Doc = require("../Data.Doc/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Context = require("../Task.Script.Context/index.js");

var Task_Script_Label = require("../Task.Script.Label/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var Text_Pretty = require("../Text.Pretty/index.js");

var MIgnore = function () {
  function MIgnore() {}

  ;
  MIgnore.value = new MIgnore();
  return MIgnore;
}();

var MBind = function () {
  function MBind(value0) {
    this.value0 = value0;
  }

  ;

  MBind.create = function (value0) {
    return new MBind(value0);
  };

  return MBind;
}();

var MRecord = function () {
  function MRecord(value0) {
    this.value0 = value0;
  }

  ;

  MRecord.create = function (value0) {
    return new MRecord(value0);
  };

  return MRecord;
}();

var MUnpack = function () {
  function MUnpack() {}

  ;
  MUnpack.value = new MUnpack();
  return MUnpack;
}();

var B = function () {
  function B(value0) {
    this.value0 = value0;
  }

  ;

  B.create = function (value0) {
    return new B(value0);
  };

  return B;
}();

var I = function () {
  function I(value0) {
    this.value0 = value0;
  }

  ;

  I.create = function (value0) {
    return new I(value0);
  };

  return I;
}();

var S = function () {
  function S(value0) {
    this.value0 = value0;
  }

  ;

  S.create = function (value0) {
    return new S(value0);
  };

  return S;
}();

var Lambda = function () {
  function Lambda(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Lambda.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Lambda(value0, value1, value2);
      };
    };
  };

  return Lambda;
}();

var Apply = function () {
  function Apply(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Apply.create = function (value0) {
    return function (value1) {
      return new Apply(value0, value1);
    };
  };

  return Apply;
}();

var Variable = function () {
  function Variable(value0) {
    this.value0 = value0;
  }

  ;

  Variable.create = function (value0) {
    return new Variable(value0);
  };

  return Variable;
}();

var IfThenElse = function () {
  function IfThenElse(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  IfThenElse.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new IfThenElse(value0, value1, value2);
      };
    };
  };

  return IfThenElse;
}();

var Case = function () {
  function Case(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Case.create = function (value0) {
    return function (value1) {
      return new Case(value0, value1);
    };
  };

  return Case;
}();

var Record = function () {
  function Record(value0) {
    this.value0 = value0;
  }

  ;

  Record.create = function (value0) {
    return new Record(value0);
  };

  return Record;
}();

var Wildcard = function () {
  function Wildcard() {}

  ;
  Wildcard.value = new Wildcard();
  return Wildcard;
}();

var Variant = function () {
  function Variant(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Variant.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Variant(value0, value1, value2);
      };
    };
  };

  return Variant;
}();

var Nil = function () {
  function Nil(value0) {
    this.value0 = value0;
  }

  ;

  Nil.create = function (value0) {
    return new Nil(value0);
  };

  return Nil;
}();

var Cons = function () {
  function Cons(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Cons.create = function (value0) {
    return function (value1) {
      return new Cons(value0, value1);
    };
  };

  return Cons;
}();

var Constant = function () {
  function Constant(value0) {
    this.value0 = value0;
  }

  ;

  Constant.create = function (value0) {
    return new Constant(value0);
  };

  return Constant;
}();

var ARecord = function () {
  function ARecord(value0) {
    this.value0 = value0;
  }

  ;

  ARecord.create = function (value0) {
    return new ARecord(value0);
  };

  return ARecord;
}();

var Step = function () {
  function Step(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  Step.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new Step(value0, value1, value2);
      };
    };
  };

  return Step;
}();

var Branch = function () {
  function Branch(value0) {
    this.value0 = value0;
  }

  ;

  Branch.create = function (value0) {
    return new Branch(value0);
  };

  return Branch;
}();

var Select = function () {
  function Select(value0) {
    this.value0 = value0;
  }

  ;

  Select.create = function (value0) {
    return new Select(value0);
  };

  return Select;
}();

var Enter = function () {
  function Enter(value0) {
    this.value0 = value0;
  }

  ;

  Enter.create = function (value0) {
    return new Enter(value0);
  };

  return Enter;
}();

var Update = function () {
  function Update(value0) {
    this.value0 = value0;
  }

  ;

  Update.create = function (value0) {
    return new Update(value0);
  };

  return Update;
}();

var Change = function () {
  function Change(value0) {
    this.value0 = value0;
  }

  ;

  Change.create = function (value0) {
    return new Change(value0);
  };

  return Change;
}();

var View = function () {
  function View(value0) {
    this.value0 = value0;
  }

  ;

  View.create = function (value0) {
    return new View(value0);
  };

  return View;
}();

var Watch = function () {
  function Watch(value0) {
    this.value0 = value0;
  }

  ;

  Watch.create = function (value0) {
    return new Watch(value0);
  };

  return Watch;
}();

var Lift = function () {
  function Lift(value0) {
    this.value0 = value0;
  }

  ;

  Lift.create = function (value0) {
    return new Lift(value0);
  };

  return Lift;
}();

var Pair = function () {
  function Pair(value0) {
    this.value0 = value0;
  }

  ;

  Pair.create = function (value0) {
    return new Pair(value0);
  };

  return Pair;
}();

var Choose = function () {
  function Choose(value0) {
    this.value0 = value0;
  }

  ;

  Choose.create = function (value0) {
    return new Choose(value0);
  };

  return Choose;
}();

var Execute = function () {
  function Execute(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Execute.create = function (value0) {
    return function (value1) {
      return new Execute(value0, value1);
    };
  };

  return Execute;
}();

var Hole = function () {
  function Hole(value0) {
    this.value0 = value0;
  }

  ;

  Hole.create = function (value0) {
    return new Hole(value0);
  };

  return Hole;
}();

var Share = function () {
  function Share(value0) {
    this.value0 = value0;
  }

  ;

  Share.create = function (value0) {
    return new Share(value0);
  };

  return Share;
}();

var Assign = function () {
  function Assign(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Assign.create = function (value0) {
    return function (value1) {
      return new Assign(value0, value1);
    };
  };

  return Assign;
}();

var $dollar_ShowMatch_133 = new Data_Show.Show(function (v) {
  if (v instanceof MIgnore) {
    return "_";
  }

  ;

  if (v instanceof MBind) {
    return v.value0;
  }

  ;

  if (v instanceof MRecord) {
    return Task_Script_Label.showFields($dollar_ShowMatch_133)("=")(v.value0);
  }

  ;

  if (v instanceof MUnpack) {
    return "{..}";
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Syntax (line 100, column 10 - line 104, column 22): " + [v.constructor.name]);
});
var $dollar_ShowConstant_131 = new Data_Show.Show(function (v) {
  if (v instanceof B && v.value0) {
    return "True";
  }

  ;

  if (v instanceof B && !v.value0) {
    return "False";
  }

  ;

  if (v instanceof I) {
    return Data_Show.show(Data_Show.showInt)(v.value0);
  }

  ;

  if (v instanceof S) {
    return Data_Show.show(Data_Show.showString)(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Syntax (line 83, column 10 - line 87, column 18): " + [v.constructor.name]);
});
var $dollar_ShowExpression_127 = new Data_Show.Show(function (v) {
  if (v instanceof Lambda) {
    return Preload.unwords(Data_Foldable.foldableArray)([Data_Show.show($dollar_ShowMatch_133)(v.value0), ":", Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1), ".", Data_Show.show($dollar_ShowExpression_127)(v.value2)]);
  }

  ;

  if (v instanceof Apply && v.value0 instanceof Apply && v.value0.value0 instanceof Variable) {
    var $153 = Task_Script_Context.isOperator(v.value0.value0.value0);

    if ($153) {
      return Preload.unwords(Data_Foldable.foldableArray)([Data_Show.show($dollar_ShowExpression_127)(v.value0.value1), v.value0.value0.value0, Data_Show.show($dollar_ShowExpression_127)(v.value1)]);
    }

    ;
    return Preload.unwords(Data_Foldable.foldableArray)([Task_Script_Context.unreadable(v.value0.value0.value0), Data_Show.show($dollar_ShowExpression_127)(v.value0.value1), Data_Show.show($dollar_ShowExpression_127)(v.value1)]);
  }

  ;

  if (v instanceof Apply) {
    return Preload.unwords(Data_Foldable.foldableArray)([Data_Show.show($dollar_ShowExpression_127)(v.value0), Data_Show.show($dollar_ShowExpression_127)(v.value1)]);
  }

  ;

  if (v instanceof Variable) {
    return Task_Script_Context.unreadable(v.value0);
  }

  ;

  if (v instanceof IfThenElse) {
    return Preload.unlines(Data_Foldable.foldableArray)([Preload.unwords(Data_Foldable.foldableArray)(["if", Data_Show.show($dollar_ShowExpression_127)(v.value0)]), Preload.indent(2)(Preload.unwords(Data_Foldable.foldableArray)(["then", Data_Show.show($dollar_ShowExpression_127)(v.value1)])), Preload.indent(2)(Preload.unwords(Data_Foldable.foldableArray)(["else", Data_Show.show($dollar_ShowExpression_127)(v.value2)]))]);
  }

  ;

  if (v instanceof Case) {
    return Preload.unlines(Data_Foldable.foldableArray)([Preload.unwords(Data_Foldable.foldableArray)(["case", Data_Show.show($dollar_ShowExpression_127)(v.value0), "of"]), Preload.unlines(Data_Foldable.foldableArray)(Data_HashMap.toArrayBy(function (m) {
      return function (e) {
        return Preload.indent(2)(Preload.unwords(Data_Foldable.foldableArray)([Data_Show.show(Data_Show.showString)(m), "|->", Data_Show.show(Data_Tuple.showTuple($dollar_ShowMatch_133)($dollar_ShowExpression_127))(e)]));
      };
    })(v.value1))]);
  }

  ;

  if (v instanceof Record) {
    return Task_Script_Label.showFields($dollar_ShowExpression_127)("=")(v.value0);
  }

  ;

  if (v instanceof Wildcard) {
    return "{..}";
  }

  ;

  if (v instanceof Variant) {
    return Preload.unwords(Data_Foldable.foldableArray)([v.value0, Data_Show.show($dollar_ShowExpression_127)(v.value1), "as", Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value2)]);
  }

  ;

  if (v instanceof Nil) {
    return Preload.unwords(Data_Foldable.foldableArray)(["[]", "as", Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)]);
  }

  ;

  if (v instanceof Cons) {
    return Preload.unwords(Data_Foldable.foldableArray)([Data_Show.show($dollar_ShowExpression_127)(v.value0), "::", Data_Show.show($dollar_ShowExpression_127)(v.value1)]);
  }

  ;

  if (v instanceof Constant) {
    return Data_Show.show($dollar_ShowConstant_131)(v.value0);
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Syntax (line 42, column 10 - line 65, column 25): " + [v.constructor.name]);
});
var $dollar_ShowArguments_129 = new Data_Show.Show(function (v) {
  return Task_Script_Label.showFields($dollar_ShowExpression_127)("=")(v.value0);
});
var $dollar_FunctorTask_135 = new Data_Functor.Functor(function (f) {
  return function (m) {
    if (m instanceof Step) {
      return new Step(m.value0, f(m.value1), f(m.value2));
    }

    ;

    if (m instanceof Branch) {
      return new Branch(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(f))(m.value0));
    }

    ;

    if (m instanceof Select) {
      return new Select(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(Data_Functor.map(Data_Tuple.functorTuple)(f)))(m.value0));
    }

    ;

    if (m instanceof Enter) {
      return new Enter(m.value0);
    }

    ;

    if (m instanceof Update) {
      return new Update(m.value0);
    }

    ;

    if (m instanceof Change) {
      return new Change(m.value0);
    }

    ;

    if (m instanceof View) {
      return new View(m.value0);
    }

    ;

    if (m instanceof Watch) {
      return new Watch(m.value0);
    }

    ;

    if (m instanceof Lift) {
      return new Lift(m.value0);
    }

    ;

    if (m instanceof Pair) {
      return new Pair(Data_Functor.map(Data_Functor.functorArray)(f)(m.value0));
    }

    ;

    if (m instanceof Choose) {
      return new Choose(Data_Functor.map(Data_Functor.functorArray)(f)(m.value0));
    }

    ;

    if (m instanceof Execute) {
      return new Execute(m.value0, m.value1);
    }

    ;

    if (m instanceof Hole) {
      return new Hole(m.value0);
    }

    ;

    if (m instanceof Share) {
      return new Share(m.value0);
    }

    ;

    if (m instanceof Assign) {
      return new Assign(m.value0, m.value1);
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Syntax (line 150, column 1 - line 150, column 29): " + [m.constructor.name]);
  };
});
var $dollar_EqMatch_132 = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof MIgnore && y instanceof MIgnore) {
      return true;
    }

    ;

    if (x instanceof MBind && y instanceof MBind) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof MRecord && y instanceof MRecord) {
      return Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)($dollar_EqMatch_132))(x.value0)(y.value0);
    }

    ;

    if (x instanceof MUnpack && y instanceof MUnpack) {
      return true;
    }

    ;
    return false;
  };
});
var $dollar_EqConstant_130 = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof B && y instanceof B) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof I && y instanceof I) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof S && y instanceof S) {
      return x.value0 === y.value0;
    }

    ;
    return false;
  };
});
var $dollar_EqExpression_126 = new Data_Eq.Eq(function (x) {
  return function (y) {
    if (x instanceof Lambda && y instanceof Lambda) {
      return Data_Eq.eq($dollar_EqMatch_132)(x.value0)(y.value0) && Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(x.value1)(y.value1) && Data_Eq.eq($dollar_EqExpression_126)(x.value2)(y.value2);
    }

    ;

    if (x instanceof Apply && y instanceof Apply) {
      return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0) && Data_Eq.eq($dollar_EqExpression_126)(x.value1)(y.value1);
    }

    ;

    if (x instanceof Variable && y instanceof Variable) {
      return x.value0 === y.value0;
    }

    ;

    if (x instanceof IfThenElse && y instanceof IfThenElse) {
      return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0) && Data_Eq.eq($dollar_EqExpression_126)(x.value1)(y.value1) && Data_Eq.eq($dollar_EqExpression_126)(x.value2)(y.value2);
    }

    ;

    if (x instanceof Case && y instanceof Case) {
      return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0) && Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)(Data_Tuple.eqTuple($dollar_EqMatch_132)($dollar_EqExpression_126)))(x.value1)(y.value1);
    }

    ;

    if (x instanceof Record && y instanceof Record) {
      return Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)($dollar_EqExpression_126))(x.value0)(y.value0);
    }

    ;

    if (x instanceof Wildcard && y instanceof Wildcard) {
      return true;
    }

    ;

    if (x instanceof Variant && y instanceof Variant) {
      return x.value0 === y.value0 && Data_Eq.eq($dollar_EqExpression_126)(x.value1)(y.value1) && Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(x.value2)(y.value2);
    }

    ;

    if (x instanceof Nil && y instanceof Nil) {
      return Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(x.value0)(y.value0);
    }

    ;

    if (x instanceof Cons && y instanceof Cons) {
      return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0) && Data_Eq.eq($dollar_EqExpression_126)(x.value1)(y.value1);
    }

    ;

    if (x instanceof Constant && y instanceof Constant) {
      return Data_Eq.eq($dollar_EqConstant_130)(x.value0)(y.value0);
    }

    ;
    return false;
  };
});
var $dollar_EqArguments_128 = new Data_Eq.Eq(function (x) {
  return function (y) {
    return Data_Eq.eq(Data_HashMap.eqHashMap(Data_Eq.eqString)($dollar_EqExpression_126))(x.value0)(y.value0);
  };
});

var $dollar_EqTask_134 = function $dollar_EqTask_134(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Step && y instanceof Step) {
        return Data_Eq.eq($dollar_EqMatch_132)(x.value0)(y.value0) && Data_Eq.eq(dictEq)(x.value1)(y.value1) && Data_Eq.eq(dictEq)(x.value2)(y.value2);
      }

      ;

      if (x instanceof Branch && y instanceof Branch) {
        return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple($dollar_EqExpression_126)(dictEq)))(x.value0)(y.value0);
      }

      ;

      if (x instanceof Select && y instanceof Select) {
        return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Tuple.eqTuple($dollar_EqExpression_126)(dictEq))))(x.value0)(y.value0);
      }

      ;

      if (x instanceof Enter && y instanceof Enter) {
        return x.value0 === y.value0;
      }

      ;

      if (x instanceof Update && y instanceof Update) {
        return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Change && y instanceof Change) {
        return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0);
      }

      ;

      if (x instanceof View && y instanceof View) {
        return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Watch && y instanceof Watch) {
        return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Lift && y instanceof Lift) {
        return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Pair && y instanceof Pair) {
        return Data_Eq.eq(Data_Eq.eqArray(dictEq))(x.value0)(y.value0);
      }

      ;

      if (x instanceof Choose && y instanceof Choose) {
        return Data_Eq.eq(Data_Eq.eqArray(dictEq))(x.value0)(y.value0);
      }

      ;

      if (x instanceof Execute && y instanceof Execute) {
        return x.value0 === y.value0 && Data_Eq.eq($dollar_EqArguments_128)(x.value1)(y.value1);
      }

      ;

      if (x instanceof Hole && y instanceof Hole) {
        return Data_Eq.eq($dollar_EqArguments_128)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Share && y instanceof Share) {
        return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Assign && y instanceof Assign) {
        return Data_Eq.eq($dollar_EqExpression_126)(x.value0)(y.value0) && Data_Eq.eq($dollar_EqExpression_126)(x.value1)(y.value1);
      }

      ;
      return false;
    };
  });
};

var $dollar_DisplayTask_137 = function $dollar_DisplayTask_137(dictDisplay) {
  return new Data_Doc.Display(function () {
    var inner$prime$prime = function () {
      var $329 = Data_Doc.lines(Data_Foldable.foldableArray);
      var $330 = Data_Functor.map(Data_Functor.functorArray)(function (v) {
        return Data_Doc.lines(Data_Foldable.foldableArray)([Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text(v.value0), Text_Pretty.text("|"), Data_Doc.show($dollar_ShowExpression_127)(v.value1.value0), Text_Pretty.text("->")]), Data_Doc.indent(Data_Doc.display(dictDisplay)(v.value1.value1))]);
      });
      return function ($331) {
        return Data_Doc.indent($329($330($331)));
      };
    }();

    var inner$prime = function () {
      var $332 = Data_Doc.lines(Data_Foldable.foldableArray);
      var $333 = Data_Functor.map(Data_Functor.functorArray)(function (v) {
        return Data_Doc.lines(Data_Foldable.foldableArray)([Data_Doc.words(Data_Traversable.traversableArray)([Data_Doc.show($dollar_ShowExpression_127)(v.value0), Text_Pretty.text("->")]), Data_Doc.indent(Data_Doc.display(dictDisplay)(v.value1))]);
      });
      return function ($334) {
        return Data_Doc.indent($332($333($334)));
      };
    }();

    var inner = function inner(comb) {
      var $335 = Data_Doc.lines(Data_Foldable.foldableArray);
      var $336 = Data_Functor.map(Data_Functor.functorArray)(function (s) {
        return Data_Doc.lines(Data_Foldable.foldableArray)([Text_Pretty.text(comb), Data_Doc.indent(Data_Doc.display(dictDisplay)(s))]);
      });
      return function ($337) {
        return $335($336($337));
      };
    };

    return function (v) {
      if (v instanceof Step) {
        return Data_Doc.lines(Data_Foldable.foldableArray)([Data_Doc.words(Data_Traversable.traversableArray)([Data_Doc.show($dollar_ShowMatch_133)(v.value0), Text_Pretty.text("<-"), Data_Doc.display(dictDisplay)(v.value1)]), Data_Doc.display(dictDisplay)(v.value2)]);
      }

      ;

      if (v instanceof Branch && v.value0.length === 1 && v["value0"][0].value0 instanceof Constant && v["value0"][0].value0.value0 instanceof B && v["value0"][0].value0.value0.value0) {
        return Data_Doc.display(dictDisplay)(v["value0"][0].value1);
      }

      ;

      if (v instanceof Branch) {
        return Data_Doc.lines(Data_Foldable.foldableArray)([Text_Pretty.text("branch"), inner$prime(v.value0)]);
      }

      ;

      if (v instanceof Select) {
        return Data_Doc.lines(Data_Foldable.foldableArray)([Text_Pretty.text("select"), inner$prime$prime(v.value0)]);
      }

      ;

      if (v instanceof Enter) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("enter"), Text_Pretty.text(v.value0)]);
      }

      ;

      if (v instanceof Update) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("update"), Data_Doc.show($dollar_ShowExpression_127)(v.value0)]);
      }

      ;

      if (v instanceof Change) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("change"), Data_Doc.show($dollar_ShowExpression_127)(v.value0)]);
      }

      ;

      if (v instanceof View) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("view"), Data_Doc.show($dollar_ShowExpression_127)(v.value0)]);
      }

      ;

      if (v instanceof Watch) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("watch"), Data_Doc.show($dollar_ShowExpression_127)(v.value0)]);
      }

      ;

      if (v instanceof Lift) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("done"), Data_Doc.show($dollar_ShowExpression_127)(v.value0)]);
      }

      ;

      if (v instanceof Pair) {
        return inner("and")(v.value0);
      }

      ;

      if (v instanceof Choose) {
        return inner("or")(v.value0);
      }

      ;

      if (v instanceof Execute) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text(Task_Script_Context.unreadable(v.value0)), Data_Doc.show($dollar_ShowArguments_129)(v.value1)]);
      }

      ;

      if (v instanceof Hole) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("?"), Data_Doc.show($dollar_ShowArguments_129)(v.value0)]);
      }

      ;

      if (v instanceof Share) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("share"), Data_Doc.show($dollar_ShowExpression_127)(v.value0)]);
      }

      ;

      if (v instanceof Assign) {
        return Data_Doc.words(Data_Traversable.traversableArray)([Data_Doc.show($dollar_ShowExpression_127)(v.value0), Text_Pretty.text(":="), Data_Doc.show($dollar_ShowExpression_127)(v.value1)]);
      }

      ;
      throw new Error("Failed pattern match at Task.Script.Syntax (line 156, column 13 - line 172, column 74): " + [v.constructor.name]);
    };
  }());
};

var $dollar_ShowTask_136 = function $dollar_ShowTask_136(dictDisplay) {
  return new Data_Show.Show(function () {
    var $338 = Data_Doc.display($dollar_DisplayTask_137(dictDisplay));
    return function ($339) {
      return Text_Pretty.render($338($339));
    };
  }());
};

module.exports = {
  Lambda: Lambda,
  Apply: Apply,
  Variable: Variable,
  IfThenElse: IfThenElse,
  Case: Case,
  Record: Record,
  Wildcard: Wildcard,
  Variant: Variant,
  Nil: Nil,
  Cons: Cons,
  Constant: Constant,
  ARecord: ARecord,
  B: B,
  I: I,
  S: S,
  MIgnore: MIgnore,
  MBind: MBind,
  MRecord: MRecord,
  MUnpack: MUnpack,
  Step: Step,
  Branch: Branch,
  Select: Select,
  Enter: Enter,
  Update: Update,
  Change: Change,
  View: View,
  Watch: Watch,
  Lift: Lift,
  Pair: Pair,
  Choose: Choose,
  Execute: Execute,
  Hole: Hole,
  Share: Share,
  Assign: Assign,
  "$_EqExpression_126": $dollar_EqExpression_126,
  "$_ShowExpression_127": $dollar_ShowExpression_127,
  "$_EqArguments_128": $dollar_EqArguments_128,
  "$_ShowArguments_129": $dollar_ShowArguments_129,
  "$_EqConstant_130": $dollar_EqConstant_130,
  "$_ShowConstant_131": $dollar_ShowConstant_131,
  "$_EqMatch_132": $dollar_EqMatch_132,
  "$_ShowMatch_133": $dollar_ShowMatch_133,
  "$_EqTask_134": $dollar_EqTask_134,
  "$_FunctorTask_135": $dollar_FunctorTask_135,
  "$_ShowTask_136": $dollar_ShowTask_136,
  "$_DisplayTask_137": $dollar_DisplayTask_137
};
},{"../Data.Doc/index.js":"aglW","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Preload/index.js":"yYWa","../Task.Script.Context/index.js":"u63X","../Task.Script.Label/index.js":"QkOy","../Task.Script.Type/index.js":"WWnz","../Text.Pretty/index.js":"hfA0"}],"JdID":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Show = require("../Data.Show/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Context = require("../Task.Script.Context/index.js");

var Task_Script_Label = require("../Task.Script.Label/index.js");

var Task_Script_Syntax = require("../Task.Script.Syntax/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var UnknownVariable = function () {
  function UnknownVariable(value0) {
    this.value0 = value0;
  }

  ;

  UnknownVariable.create = function (value0) {
    return new UnknownVariable(value0);
  };

  return UnknownVariable;
}();

var UnknownTypeName = function () {
  function UnknownTypeName(value0) {
    this.value0 = value0;
  }

  ;

  UnknownTypeName.create = function (value0) {
    return new UnknownTypeName(value0);
  };

  return UnknownTypeName;
}();

var UnknownLabel = function () {
  function UnknownLabel(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  UnknownLabel.create = function (value0) {
    return function (value1) {
      return new UnknownLabel(value0, value1);
    };
  };

  return UnknownLabel;
}();

var ArgumentError = function () {
  function ArgumentError(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ArgumentError.create = function (value0) {
    return function (value1) {
      return new ArgumentError(value0, value1);
    };
  };

  return ArgumentError;
}();

var VariantError = function () {
  function VariantError(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  ;

  VariantError.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new VariantError(value0, value1, value2);
      };
    };
  };

  return VariantError;
}();

var BranchError = function () {
  function BranchError(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  BranchError.create = function (value0) {
    return function (value1) {
      return new BranchError(value0, value1);
    };
  };

  return BranchError;
}();

var BranchesError = function () {
  function BranchesError(value0) {
    this.value0 = value0;
  }

  ;

  BranchesError.create = function (value0) {
    return new BranchesError(value0);
  };

  return BranchesError;
}();

var AssignError = function () {
  function AssignError(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  AssignError.create = function (value0) {
    return function (value1) {
      return new AssignError(value0, value1);
    };
  };

  return AssignError;
}();

var ListError = function () {
  function ListError(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  ListError.create = function (value0) {
    return function (value1) {
      return new ListError(value0, value1);
    };
  };

  return ListError;
}();

var FunctionNeeded = function () {
  function FunctionNeeded(value0) {
    this.value0 = value0;
  }

  ;

  FunctionNeeded.create = function (value0) {
    return new FunctionNeeded(value0);
  };

  return FunctionNeeded;
}();

var BoolNeeded = function () {
  function BoolNeeded(value0) {
    this.value0 = value0;
  }

  ;

  BoolNeeded.create = function (value0) {
    return new BoolNeeded(value0);
  };

  return BoolNeeded;
}();

var RecordNeeded = function () {
  function RecordNeeded(value0) {
    this.value0 = value0;
  }

  ;

  RecordNeeded.create = function (value0) {
    return new RecordNeeded(value0);
  };

  return RecordNeeded;
}();

var VariantNeeded = function () {
  function VariantNeeded(value0) {
    this.value0 = value0;
  }

  ;

  VariantNeeded.create = function (value0) {
    return new VariantNeeded(value0);
  };

  return VariantNeeded;
}();

var ListNeeded = function () {
  function ListNeeded(value0) {
    this.value0 = value0;
  }

  ;

  ListNeeded.create = function (value0) {
    return new ListNeeded(value0);
  };

  return ListNeeded;
}();

var ReferenceNeeded = function () {
  function ReferenceNeeded(value0) {
    this.value0 = value0;
  }

  ;

  ReferenceNeeded.create = function (value0) {
    return new ReferenceNeeded(value0);
  };

  return ReferenceNeeded;
}();

var TaskNeeded = function () {
  function TaskNeeded(value0) {
    this.value0 = value0;
  }

  ;

  TaskNeeded.create = function (value0) {
    return new TaskNeeded(value0);
  };

  return TaskNeeded;
}();

var BasicNeeded = function () {
  function BasicNeeded(value0) {
    this.value0 = value0;
  }

  ;

  BasicNeeded.create = function (value0) {
    return new BasicNeeded(value0);
  };

  return BasicNeeded;
}();

var UnknownLabels = function () {
  function UnknownLabels(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  UnknownLabels.create = function (value0) {
    return function (value1) {
      return new UnknownLabels(value0, value1);
    };
  };

  return UnknownLabels;
}();

var DoubleLabels = function () {
  function DoubleLabels(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  DoubleLabels.create = function (value0) {
    return function (value1) {
      return new DoubleLabels(value0, value1);
    };
  };

  return DoubleLabels;
}();

var UndeterminedType = function () {
  function UndeterminedType() {}

  ;
  UndeterminedType.value = new UndeterminedType();
  return UndeterminedType;
}();

var EmptyCase = function () {
  function EmptyCase() {}

  ;
  EmptyCase.value = new EmptyCase();
  return EmptyCase;
}();

var EmptyChoice = function () {
  function EmptyChoice() {}

  ;
  EmptyChoice.value = new EmptyChoice();
  return EmptyChoice;
}();

var HoleFound = function () {
  function HoleFound(value0) {
    this.value0 = value0;
  }

  ;

  HoleFound.create = function (value0) {
    return new HoleFound(value0);
  };

  return HoleFound;
}();

var RecordMismatch = function () {
  function RecordMismatch(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  RecordMismatch.create = function (value0) {
    return function (value1) {
      return new RecordMismatch(value0, value1);
    };
  };

  return RecordMismatch;
}();

var UnpackMismatch = function () {
  function UnpackMismatch(value0) {
    this.value0 = value0;
  }

  ;

  UnpackMismatch.create = function (value0) {
    return new UnpackMismatch(value0);
  };

  return UnpackMismatch;
}();

var $dollar_ShowError_1 = new Data_Show.Show(function (v) {
  if (v instanceof UnknownVariable) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Unknown variable", Preload.quote(v.value0)]);
  }

  ;

  if (v instanceof UnknownTypeName) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Unknown type name", Preload.quote(v.value0)]);
  }

  ;

  if (v instanceof UnknownLabel) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Unknown label", Preload.quote(v.value0), "in variant type", Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1)]);
  }

  ;

  if (v instanceof ArgumentError) {
    return Preload.unlines(Data_Foldable.foldableArray)(["This function needs it argument to be of type", Preload.indent(2)(Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0))), ", but it is of type", Preload.indent(2)(Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1)))]);
  }

  ;

  if (v instanceof VariantError) {
    return Preload.unwords(Data_Foldable.foldableArray)(["This variant with label", Preload.quote(Data_Show.show(Data_Show.showString)(v.value0)), "needs it argument to be of type", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1)), ", but it is of type", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value2))]);
  }

  ;

  if (v instanceof BranchError) {
    return Preload.unlines(Data_Foldable.foldableArray)(["This conditional's then-branch has type", Preload.indent(2)(Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0))), ", while the else-branch has type", Preload.indent(2)(Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1)))]);
  }

  ;

  if (v instanceof BranchesError) {
    return Preload.unwords(Data_Foldable.foldableArray)(["This case expression has branches of different types", Preload.quote(Data_Show.show(Data_HashMap.showHashMap(Data_Show.showString)(Task_Script_Type["$_ShowFullType_47"]))(v.value0))]);
  }

  ;

  if (v instanceof AssignError) {
    return Preload.unlines(Data_Foldable.foldableArray)(["This assignment tries to store something of type", Preload.indent(2)(Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1))), "into a reference of type", Preload.indent(2)(Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)))]);
  }

  ;

  if (v instanceof ListError) {
    return Preload.unlines(Data_Foldable.foldableArray)(["This element has type", Preload.indent(2)(Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0))), "but the list if of type", Preload.indent(2)(Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1)))]);
  }

  ;

  if (v instanceof FunctionNeeded) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Cannot use", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)), "as a function"]);
  }

  ;

  if (v instanceof RecordNeeded) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Cannot use", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)), "as a record"]);
  }

  ;

  if (v instanceof VariantNeeded) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Cannot use", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)), "as a variant"]);
  }

  ;

  if (v instanceof ListNeeded) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Cannot use", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)), "as a list"]);
  }

  ;

  if (v instanceof BoolNeeded) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Cannot use", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)), "as a boolean"]);
  }

  ;

  if (v instanceof ReferenceNeeded) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Cannot use", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)), "as a reference"]);
  }

  ;

  if (v instanceof TaskNeeded) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Cannot use", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)), "as a task"]);
  }

  ;

  if (v instanceof BasicNeeded) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Cannot use", Preload.quote(Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0)), "as a basic type"]);
  }

  ;

  if (v instanceof UnknownLabels) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Labels", Task_Script_Label.showLabels(v.value0), "are not part of row", Task_Script_Label.showLabels(v.value1)]);
  }

  ;

  if (v instanceof DoubleLabels) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Double occurence of labels", Task_Script_Label.showLabels(v.value0), "in row", Task_Script_Label.showLabels(v.value1)]);
  }

  ;

  if (v instanceof UndeterminedType) {
    return "The type of this part could not be determined due to a type check failure";
  }

  ;

  if (v instanceof EmptyCase) {
    return Preload.unwords(Data_Foldable.foldableArray)(["This case expression has no branches"]);
  }

  ;

  if (v instanceof EmptyChoice) {
    return Preload.unwords(Data_Foldable.foldableArray)(["This choice task has no branches"]);
  }

  ;

  if (v instanceof HoleFound) {
    return Preload.unlines(Data_Foldable.foldableArray)(["Found hole in context:", Task_Script_Context.showContext(v.value0)]);
  }

  ;

  if (v instanceof RecordMismatch) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Matching against", Data_Show.show(Data_HashMap.showHashMap(Data_Show.showString)(Task_Script_Syntax["$_ShowMatch_133"]))(v.value0), "needs", Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1), "to be a record type"]);
  }

  ;

  if (v instanceof UnpackMismatch) {
    return Preload.unwords(Data_Foldable.foldableArray)(["Unpacking needs", Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value0), "to be a record type"]);
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Error (line 42, column 10 - line 70, column 85): " + [v.constructor.name]);
});
module.exports = {
  UnknownVariable: UnknownVariable,
  UnknownTypeName: UnknownTypeName,
  UnknownLabel: UnknownLabel,
  ArgumentError: ArgumentError,
  VariantError: VariantError,
  BranchError: BranchError,
  BranchesError: BranchesError,
  AssignError: AssignError,
  ListError: ListError,
  FunctionNeeded: FunctionNeeded,
  BoolNeeded: BoolNeeded,
  RecordNeeded: RecordNeeded,
  VariantNeeded: VariantNeeded,
  ListNeeded: ListNeeded,
  ReferenceNeeded: ReferenceNeeded,
  TaskNeeded: TaskNeeded,
  BasicNeeded: BasicNeeded,
  UnknownLabels: UnknownLabels,
  DoubleLabels: DoubleLabels,
  UndeterminedType: UndeterminedType,
  EmptyCase: EmptyCase,
  EmptyChoice: EmptyChoice,
  HoleFound: HoleFound,
  RecordMismatch: RecordMismatch,
  UnpackMismatch: UnpackMismatch,
  "$_ShowError_1": $dollar_ShowError_1
};
},{"../Data.Foldable/index.js":"eVDl","../Data.HashMap/index.js":"l6NS","../Data.Show/index.js":"mFY7","../Preload/index.js":"yYWa","../Task.Script.Context/index.js":"u63X","../Task.Script.Label/index.js":"QkOy","../Task.Script.Syntax/index.js":"vwvk","../Task.Script.Type/index.js":"WWnz"}],"abUU":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Doc = require("../Data.Doc/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Task_Script_Error = require("../Task.Script.Error/index.js");

var Task_Script_Syntax = require("../Task.Script.Syntax/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var Text_Pretty = require("../Text.Pretty/index.js");

var Success = function () {
  function Success(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Success.create = function (value0) {
    return function (value1) {
      return new Success(value0, value1);
    };
  };

  return Success;
}();

var Failure = function () {
  function Failure(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Failure.create = function (value0) {
    return function (value1) {
      return new Failure(value0, value1);
    };
  };

  return Failure;
}();

var Unknown = function () {
  function Unknown() {}

  ;
  Unknown.value = new Unknown();
  return Unknown;
}();

var Annotated = function () {
  function Annotated(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Annotated.create = function (value0) {
    return function (value1) {
      return new Annotated(value0, value1);
    };
  };

  return Annotated;
}();

var withTypeOf = function withTypeOf(c) {
  return function (b) {
    return function (f) {
      if (c.value0 instanceof Success) {
        return f(c.value0.value1);
      }

      ;
      return new Annotated(Unknown.value, b);
    };
  };
};

var unchecked = Annotated.create(Unknown.value);

var unannotate = function unannotate(dictFunctor) {
  return function (v) {
    return new Annotated(Data_Unit.unit, Data_Functor.map(dictFunctor)(unannotate(dictFunctor))(v.value1));
  };
};

var sink = function sink(g) {
  return function (c) {
    return function (v) {
      if (v instanceof Data_Either.Left) {
        return new Annotated(Unknown.value, c);
      }

      ;

      if (v instanceof Data_Either.Right) {
        return new Annotated(new Success(g, v.value0), c);
      }

      ;
      throw new Error("Failed pattern match at Task.Script.Annotation (line 60, column 12 - line 62, column 39): " + [v.constructor.name]);
    };
  };
};

var pass = function pass(g) {
  return function (c) {
    return function (a) {
      return new Annotated(new Success(g, a), c);
    };
  };
};

var lift = function lift(g) {
  return function (u) {
    return function (c) {
      return function (v) {
        if (v instanceof Data_Either.Left) {
          return new Annotated(new Failure(g, v.value0), u);
        }

        ;

        if (v instanceof Data_Either.Right) {
          return new Annotated(new Success(g, v.value0), c);
        }

        ;
        throw new Error("Failed pattern match at Task.Script.Annotation (line 55, column 14 - line 57, column 39): " + [v.constructor.name]);
      };
    };
  };
};

var fail = function fail(g) {
  return function (u) {
    return function (e) {
      return new Annotated(new Failure(g, e), u);
    };
  };
};

var extractType = function extractType(v) {
  if (v.value0 instanceof Success) {
    return new Data_Either.Right(v.value0.value1);
  }

  ;
  return new Data_Either.Left(Task_Script_Error.UndeterminedType.value);
};

var extractError = function extractError(v) {
  if (v instanceof Failure) {
    return Data_Maybe.Just.create(Data_Show.show(Task_Script_Error["$_ShowError_1"])(v.value1));
  }

  ;
  return Data_Maybe.Nothing.value;
};

var extractContext = function extractContext(v) {
  if (v instanceof Failure) {
    return v.value0;
  }

  ;

  if (v instanceof Success) {
    return v.value0;
  }

  ;

  if (v instanceof Unknown) {
    return Data_HashMap.empty;
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Annotation (line 87, column 1 - line 87, column 36): " + [v.constructor.name]);
};

var bury = Annotated.create(Unknown.value);
var $dollar_DisplayUnannotatedTask_10 = new Data_Doc.Display(function (v) {
  return Data_Doc.display(Task_Script_Syntax["$_DisplayTask_137"]($dollar_DisplayUnannotatedTask_10))(v.value1);
});
var $dollar_ShowUnannotatedTask_11 = new Data_Show.Show(function () {
  var $51 = Data_Doc.display($dollar_DisplayUnannotatedTask_10);
  return function ($52) {
    return Text_Pretty.render($51($52));
  };
}());
var $dollar_DisplayCheckedTask_8 = new Data_Doc.Display(function (v) {
  if (v.value0 instanceof Success) {
    return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("("), Data_Doc.display(Task_Script_Syntax["$_DisplayTask_137"]($dollar_DisplayCheckedTask_8))(v.value1), Text_Pretty.text(":"), Data_Doc.show(Task_Script_Type["$_ShowFullType_47"])(v.value0.value1), Text_Pretty.text(")")]);
  }

  ;

  if (v.value0 instanceof Failure) {
    return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("(!"), Data_Doc.display(Task_Script_Syntax["$_DisplayTask_137"]($dollar_DisplayCheckedTask_8))(v.value1), Text_Pretty.text(":"), Data_Doc.show(Task_Script_Error["$_ShowError_1"])(v.value0.value1), Text_Pretty.text("!)")]);
  }

  ;

  if (v.value0 instanceof Unknown) {
    return Data_Doc.words(Data_Traversable.traversableArray)([Text_Pretty.text("(?"), Data_Doc.display(Task_Script_Syntax["$_DisplayTask_137"]($dollar_DisplayCheckedTask_8))(v.value1), Text_Pretty.text("?)")]);
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Annotation (line 28, column 29 - line 31, column 69): " + [v.value0.constructor.name]);
});
var $dollar_ShowCheckedTask_9 = new Data_Show.Show(function () {
  var $53 = Data_Doc.display($dollar_DisplayCheckedTask_8);
  return function ($54) {
    return Text_Pretty.render($53($54));
  };
}());
module.exports = {
  Annotated: Annotated,
  Success: Success,
  Failure: Failure,
  Unknown: Unknown,
  unannotate: unannotate,
  unchecked: unchecked,
  lift: lift,
  sink: sink,
  fail: fail,
  pass: pass,
  bury: bury,
  extractType: extractType,
  withTypeOf: withTypeOf,
  extractError: extractError,
  extractContext: extractContext,
  "$_DisplayCheckedTask_8": $dollar_DisplayCheckedTask_8,
  "$_ShowCheckedTask_9": $dollar_ShowCheckedTask_9,
  "$_DisplayUnannotatedTask_10": $dollar_DisplayUnannotatedTask_10,
  "$_ShowUnannotatedTask_11": $dollar_ShowUnannotatedTask_11
};
},{"../Data.Doc/index.js":"aglW","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.Maybe/index.js":"mN7T","../Data.Show/index.js":"mFY7","../Data.Traversable/index.js":"n7EE","../Data.Unit/index.js":"NhVk","../Task.Script.Error/index.js":"JdID","../Task.Script.Syntax/index.js":"vwvk","../Task.Script.Type/index.js":"WWnz","../Text.Pretty/index.js":"hfA0"}],"MyFA":[function(require,module,exports) {
"use strict";

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Annotation = require("../Task.Script.Annotation/index.js");

var Task_Script_Syntax = require("../Task.Script.Syntax/index.js");

var watch = function watch(e) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Watch(e));
};

var view = function view(e) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.View(e));
};

var update = function update(e) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Update(e));
};

var select = function select(m) {
  return function (t1) {
    return function (bs) {
      return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Step(m, t1, Task_Script_Annotation.unchecked(new Task_Script_Syntax.Select(bs))));
    };
  };
}; //-- Combinators ----


var pair = function pair(ts) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Pair(ts));
};

var never = new Task_Script_Syntax.Constant(new Task_Script_Syntax.B(false));

var lift = function lift(e) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Lift(e));
};

var hole = Task_Script_Annotation.unchecked(new Task_Script_Syntax.Hole(Task_Script_Syntax.ARecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([])))); //-- Tasks ----

var execute = function execute(n) {
  return function (as) {
    return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Execute(n, as));
  };
}; //-- Editors ----


var enter = function enter(n) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Enter(n));
};

var choose = function choose(ts) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Choose(ts));
};

var change = function change(e) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Change(e));
};

var branch = function branch(m) {
  return function (t1) {
    return function (bs) {
      return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Step(m, t1, Task_Script_Annotation.unchecked(new Task_Script_Syntax.Branch(bs))));
    };
  };
};

var always = new Task_Script_Syntax.Constant(new Task_Script_Syntax.B(true));

var cont = function cont(m) {
  return function (t1) {
    return function (t2) {
      return select(m)(t1)([new Data_Tuple.Tuple("Continue", new Data_Tuple.Tuple(always, t2))]);
    };
  };
}; // NOTE:
// Be aware of the INVARIANT: Branch and Select need to be inside a Step.
// 1. Inserting a new tasks into a step, means we have to create a Branch.
// 2. The new and empty branch needs to start with a Step,
//    otherwise we've a single branch.
// 3. The old branches need to be inserted into this Step.


var $$new = function $$new(t) {
  return Task_Script_Annotation.unchecked(new Task_Script_Syntax.Branch([new Data_Tuple.Tuple(always, Task_Script_Annotation.unchecked(new Task_Script_Syntax.Step(Task_Script_Syntax.MRecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([])), hole, t)))]));
}; //-- Steps ----


var step = function step(m) {
  return function (t1) {
    return function (t2) {
      return branch(m)(t1)([new Data_Tuple.Tuple(always, t2)]);
    };
  };
};

var item = step(Task_Script_Syntax.MRecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([])))(hole)(lift(Task_Script_Syntax.Wildcard.value));
module.exports = {
  enter: enter,
  update: update,
  view: view,
  watch: watch,
  change: change,
  step: step,
  cont: cont,
  branch: branch,
  select: select,
  always: always,
  never: never,
  "new": $$new,
  pair: pair,
  choose: choose,
  item: item,
  execute: execute,
  hole: hole,
  lift: lift
};
},{"../Data.Hashable/index.js":"PLrJ","../Data.Tuple/index.js":"IIOM","../Preload/index.js":"yYWa","../Task.Script.Annotation/index.js":"abUU","../Task.Script.Syntax/index.js":"vwvk"}],"VRh8":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Builder = require("../Task.Script.Builder/index.js");

var Task_Script_Context = require("../Task.Script.Context/index.js");

var Task_Script_Syntax = require("../Task.Script.Syntax/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var types = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("Citizen", new Task_Script_Type.BPrimitive(Task_Script_Type.TString.value)), new Data_Tuple.Tuple("Company", new Task_Script_Type.BPrimitive(Task_Script_Type.TString.value)), new Data_Tuple.Tuple("Address", new Task_Script_Type.BPrimitive(Task_Script_Type.TString.value)), new Data_Tuple.Tuple("Documents", new Task_Script_Type.BPrimitive(Task_Script_Type.TInt.value)), new Data_Tuple.Tuple("Declaration", new Task_Script_Type.BPrimitive(Task_Script_Type.TInt.value)), new Data_Tuple.Tuple("Dossier", Task_Script_Context["recordOf'"]([new Data_Tuple.Tuple("documents", new Task_Script_Type.BName("Documents")), new Data_Tuple.Tuple("declaration", new Task_Script_Type.BName("Declaration"))]))]);
var request_subsidy = Task_Script_Builder.step(Task_Script_Syntax.MRecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("value", new Task_Script_Syntax.MBind("details"))])))(Task_Script_Builder.enter("Citizen"))(Task_Script_Builder.branch(Task_Script_Syntax.MRecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("approved", new Task_Script_Syntax.MBind("approved"))])))(Task_Script_Builder.execute("check conditions")(Task_Script_Syntax.ARecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("details", new Task_Script_Syntax.Variable("details"))]))))([new Data_Tuple.Tuple(new Task_Script_Syntax.Apply(new Task_Script_Syntax.Variable("not"), new Task_Script_Syntax.Variable("approved")), Task_Script_Builder.view(new Task_Script_Syntax.Constant(new Task_Script_Syntax.S("Cannot approve")))), new Data_Tuple.Tuple(new Task_Script_Syntax.Variable("approved"), Task_Script_Builder.step(Task_Script_Syntax.MRecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("documents", new Task_Script_Syntax.MBind("documents")), new Data_Tuple.Tuple("declaration", new Task_Script_Syntax.MBind("declaration"))])))(Task_Script_Builder.pair([Task_Script_Builder.step(Task_Script_Syntax.MRecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("documents", new Task_Script_Syntax.MBind("documents"))])))(Task_Script_Builder.execute("provide documents")(Task_Script_Syntax.ARecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("details", new Task_Script_Syntax.Variable("details"))]))))(Task_Script_Builder.lift(Task_Script_Syntax.Record.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("documents", new Task_Script_Syntax.Variable("documents"))])))), Task_Script_Builder.step(Task_Script_Syntax.MRecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("contractor", new Task_Script_Syntax.MBind("contractor"))])))(Task_Script_Builder.execute("select contractor")(new Task_Script_Syntax.ARecord(Data_HashMap.empty)))(Task_Script_Builder.step(Task_Script_Syntax.MRecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("declaration", new Task_Script_Syntax.MBind("declaration"))])))(Task_Script_Builder.execute("provide declaration")(Task_Script_Syntax.ARecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("contractor", new Task_Script_Syntax.Variable("contractor")), new Data_Tuple.Tuple("details", new Task_Script_Syntax.Variable("details"))]))))(Task_Script_Builder.lift(Task_Script_Syntax.Record.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("contractor", new Task_Script_Syntax.Variable("contractor")), new Data_Tuple.Tuple("declaration", new Task_Script_Syntax.Variable("declaration"))])))))]))(Task_Script_Builder.execute("submit request")(Task_Script_Syntax.ARecord.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("declaration", new Task_Script_Syntax.Variable("declaration")), new Data_Tuple.Tuple("documents", new Task_Script_Syntax.Variable("documents"))])))))]));
var tasks = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("request subsidy", new Data_Tuple.Tuple(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([]), request_subsidy))]);
var context = Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("check conditions", new Task_Script_Type.TFunction(Task_Script_Context.recordOf([new Data_Tuple.Tuple("details", new Task_Script_Type.BName("Citizen"))]), Task_Script_Context.taskOf([new Data_Tuple.Tuple("approved", new Task_Script_Type.BName("Bool"))]))), new Data_Tuple.Tuple("provide documents", new Task_Script_Type.TFunction(Task_Script_Context.recordOf([new Data_Tuple.Tuple("details", new Task_Script_Type.BName("Citizen"))]), Task_Script_Context.taskOf([new Data_Tuple.Tuple("documents", new Task_Script_Type.BName("Documents"))]))), new Data_Tuple.Tuple("select contractor", new Task_Script_Type.TFunction(Task_Script_Context.recordOf([]), Task_Script_Context.taskOf([new Data_Tuple.Tuple("contractor", new Task_Script_Type.BName("Company"))]))), new Data_Tuple.Tuple("provide declaration", new Task_Script_Type.TFunction(Task_Script_Context.recordOf([new Data_Tuple.Tuple("contractor", new Task_Script_Type.BName("Company")), new Data_Tuple.Tuple("details", new Task_Script_Type.BName("Citizen"))]), Task_Script_Context.taskOf([new Data_Tuple.Tuple("declaration", new Task_Script_Type.BName("Declaration"))]))), new Data_Tuple.Tuple("submit request", new Task_Script_Type.TFunction(Task_Script_Context.recordOf([new Data_Tuple.Tuple("documents", new Task_Script_Type.BName("Documents")), new Data_Tuple.Tuple("declaration", new Task_Script_Type.BName("Declaration"))]), Task_Script_Context.taskOf([])))]);
var world = {
  types: types,
  context: context,
  tasks: tasks
};
module.exports = {
  types: types,
  context: context,
  tasks: tasks,
  request_subsidy: request_subsidy,
  world: world
};
},{"../Data.HashMap/index.js":"l6NS","../Data.Hashable/index.js":"PLrJ","../Data.Tuple/index.js":"IIOM","../Preload/index.js":"yYWa","../Task.Script.Builder/index.js":"MyFA","../Task.Script.Context/index.js":"u63X","../Task.Script.Syntax/index.js":"vwvk","../Task.Script.Type/index.js":"WWnz"}],"mGZW":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var withState = Control_Monad_State_Trans.withStateT;

var runState = function runState(v) {
  var $16 = Data_Newtype.unwrap();
  return function ($17) {
    return $16(v($17));
  };
};

var mapState = function mapState(f) {
  return Control_Monad_State_Trans.mapStateT(function () {
    var $18 = Data_Newtype.unwrap();
    return function ($19) {
      return Data_Identity.Identity(f($18($19)));
    };
  }());
};

var execState = function execState(v) {
  return function (s) {
    var v1 = v(s);
    return v1.value1;
  };
};

var evalState = function evalState(v) {
  return function (s) {
    var v1 = v(s);
    return v1.value0;
  };
};

module.exports = {
  runState: runState,
  evalState: evalState,
  execState: execState,
  mapState: mapState,
  withState: withState,
  MonadState: Control_Monad_State_Class.MonadState,
  get: Control_Monad_State_Class.get,
  gets: Control_Monad_State_Class.gets,
  modify: Control_Monad_State_Class.modify,
  modify_: Control_Monad_State_Class.modify_,
  put: Control_Monad_State_Class.put,
  state: Control_Monad_State_Class.state,
  StateT: Control_Monad_State_Trans.StateT,
  MonadTrans: Control_Monad_State_Trans.MonadTrans,
  evalStateT: Control_Monad_State_Trans.evalStateT,
  execStateT: Control_Monad_State_Trans.execStateT,
  lift: Control_Monad_State_Trans.lift,
  mapStateT: Control_Monad_State_Trans.mapStateT,
  runStateT: Control_Monad_State_Trans.runStateT,
  withStateT: Control_Monad_State_Trans.withStateT
};
},{"../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.State.Trans/index.js":"KpW9","../Data.Identity/index.js":"OKTm","../Data.Newtype/index.js":"lz8k"}],"BHJd":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Extend = require("../Control.Extend/index.js");

var Control_Lazy = require("../Control.Lazy/index.js");

var Control_Monad = require("../Control.Monad/index.js");

var Control_Monad_Free = require("../Control.Monad.Free/index.js");

var Control_Monad_Rec_Class = require("../Control.Monad.Rec.Class/index.js");

var Control_Monad_State = require("../Control.Monad.State/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Control_Monad_State_Trans = require("../Control.Monad.State.Trans/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Control_ShiftMap = require("../Control.ShiftMap/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Identity = require("../Data.Identity/index.js");

var Data_Lazy = require("../Data.Lazy/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Ordering = require("../Data.Ordering/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Cofree = function Cofree(x) {
  return x;
};

var tail = function tail(v) {
  return Data_Tuple.snd(Data_Lazy.force(v));
};

var mkCofree = function mkCofree(a) {
  return function (t) {
    return Data_Lazy.defer(function (v) {
      return new Data_Tuple.Tuple(a, t);
    });
  };
};

var lazyTail = function lazyTail(v) {
  return Data_Functor.map(Data_Lazy.functorLazy)(Data_Tuple.snd)(v);
};

var lazyHead = function lazyHead(v) {
  return Data_Functor.map(Data_Lazy.functorLazy)(Data_Tuple.fst)(v);
};

var lazyCofree = Cofree;
var isLazyCofree = new Control_Lazy.Lazy(function (k) {
  return Data_Lazy.defer(function (v) {
    var v1 = k(Data_Unit.unit);
    return Data_Lazy.force(v1);
  });
});

var mfix = function mfix(f) {
  return Control_Lazy.fix(isLazyCofree)(function (res) {
    return f(lazyHead(res));
  });
};

var hoistCofree = function hoistCofree(dictFunctor) {
  return function (nat) {
    return function (v) {
      return Data_Functor.map(Data_Lazy.functorLazy)(Data_Functor.map(Data_Tuple.functorTuple)(function () {
        var $78 = Data_Functor.map(dictFunctor)(hoistCofree(dictFunctor)(nat));
        return function ($79) {
          return nat($78($79));
        };
      }()))(v);
    };
  };
};

var head = function head(v) {
  return Data_Tuple.fst(Data_Lazy.force(v));
};

var functorCofree = function functorCofree(dictFunctor) {
  return new Data_Functor.Functor(function (f) {
    var loop = function loop(v) {
      return Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
        return new Data_Tuple.Tuple(f(v1.value0), Data_Functor.map(dictFunctor)(loop)(v1.value1));
      })(v);
    };

    return loop;
  });
};

var foldableCofree = function foldableCofree(dictFoldable) {
  return new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      var go = function go(fa) {
        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(head(fa)))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(go)(tail(fa)));
      };

      return go;
    };
  }, function (f) {
    var go = function go(b) {
      return function (fa) {
        return Data_Foldable.foldl(dictFoldable)(go)(f(b)(head(fa)))(tail(fa));
      };
    };

    return go;
  }, function (f) {
    var go = function go(fa) {
      return function (b) {
        return f(head(fa))(Data_Foldable.foldr(dictFoldable)(go)(b)(tail(fa)));
      };
    };

    return Data_Function.flip(go);
  });
};

var traversableCofree = function traversableCofree(dictTraversable) {
  return new Data_Traversable.Traversable(function () {
    return foldableCofree(dictTraversable.Foldable1());
  }, function () {
    return functorCofree(dictTraversable.Functor0());
  }, function (dictApplicative) {
    return Data_Traversable.traverse(traversableCofree(dictTraversable))(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
    return function (f) {
      var loop = function loop(ta) {
        return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(mkCofree)(f(head(ta))))(Data_Traversable.traverse(dictTraversable)(dictApplicative)(loop)(tail(ta)));
      };

      return loop;
    };
  });
};

var extendCofree = function extendCofree(dictFunctor) {
  return new Control_Extend.Extend(function () {
    return functorCofree(dictFunctor);
  }, function (f) {
    var loop = function loop(v) {
      return Data_Functor.map(Data_Lazy.functorLazy)(function (v1) {
        return new Data_Tuple.Tuple(f(v), Data_Functor.map(dictFunctor)(loop)(v1.value1));
      })(v);
    };

    return loop;
  });
};

var eqCofree = function eqCofree(dictEq1) {
  return function (dictEq) {
    return new Data_Eq.Eq(function (x) {
      return function (y) {
        return Data_Eq.eq(dictEq)(head(x))(head(y)) && Data_Eq.eq1(dictEq1)(eqCofree(dictEq1)(dictEq))(tail(x))(tail(y));
      };
    });
  };
};

var ordCofree = function ordCofree(dictOrd1) {
  return function (dictOrd) {
    return new Data_Ord.Ord(function () {
      return eqCofree(dictOrd1.Eq10())(dictOrd.Eq0());
    }, function (x) {
      return function (y) {
        var v = Data_Ord.compare(dictOrd)(head(x))(head(y));

        if (v instanceof Data_Ordering.EQ) {
          return Data_Ord.compare1(dictOrd1)(ordCofree(dictOrd1)(dictOrd))(tail(x))(tail(y));
        }

        ;
        return v;
      };
    });
  };
};

var eq1Cofree = function eq1Cofree(dictEq1) {
  return new Data_Eq.Eq1(function (dictEq) {
    return Data_Eq.eq(eqCofree(dictEq1)(dictEq));
  });
};

var ord1Cofree = function ord1Cofree(dictOrd1) {
  return new Data_Ord.Ord1(function () {
    return eq1Cofree(dictOrd1.Eq10());
  }, function (dictOrd) {
    return Data_Ord.compare(ordCofree(dictOrd1)(dictOrd));
  });
};

var deferCofree = function deferCofree($80) {
  return Cofree(Data_Lazy.defer($80));
};

var comonadCofree = function comonadCofree(dictFunctor) {
  return new Control_Comonad.Comonad(function () {
    return extendCofree(dictFunctor);
  }, head);
};

var explore = function explore(dictFunctor) {
  return function (dictFunctor1) {
    return function (pair) {
      return function (m) {
        return function (w) {
          var step = function step(ff) {
            return Control_Monad_State_Class.state(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function (cof) {
              return pair(Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create)(ff))(tail(cof));
            });
          };

          var v = Control_Monad_State.runState(Control_Monad_Free.runFreeM(dictFunctor)(Control_Monad_State_Trans.monadRecStateT(Control_Monad_Rec_Class.monadRecIdentity))(step)(m))(w);
          return v.value0(Control_Comonad.extract(comonadCofree(dictFunctor1))(v.value1));
        };
      };
    };
  };
};

var exploreM = function exploreM(dictFunctor) {
  return function (dictFunctor1) {
    return function (dictMonadRec) {
      return function (pair) {
        return function (m) {
          return function (w) {
            var step = function step(ff) {
              return function (cof) {
                return pair(Data_Functor.map(dictFunctor)(Data_Tuple.Tuple.create)(ff))(tail(cof));
              };
            };

            var $$eval = function $$eval(v) {
              return v.value0(Control_Comonad.extract(comonadCofree(dictFunctor1))(v.value1));
            };

            return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())($$eval)(Control_Monad_State_Trans.runStateT(Control_Monad_Free.runFreeM(dictFunctor)(Control_Monad_State_Trans.monadRecStateT(dictMonadRec))(step)(m))(w));
          };
        };
      };
    };
  };
};

var buildCofree = function buildCofree(dictFunctor) {
  return function (k) {
    return function (s) {
      return Data_Lazy.defer(function (v) {
        return Data_Functor.map(Data_Tuple.functorTuple)(Data_Functor.map(dictFunctor)(buildCofree(dictFunctor)(k)))(k(s));
      });
    };
  };
};

var unfoldCofree = function unfoldCofree(dictFunctor) {
  return function (e) {
    return function (n) {
      return buildCofree(dictFunctor)(function (s) {
        return new Data_Tuple.Tuple(e(s), n(s));
      });
    };
  };
};

var monadCofree = function monadCofree(dictAlternative) {
  return new Control_Monad.Monad(function () {
    return applicativeCofree(dictAlternative);
  }, function () {
    return bindCofree(dictAlternative);
  });
};

var bindCofree = function bindCofree(dictAlternative) {
  return new Control_Bind.Bind(function () {
    return applyCofree(dictAlternative);
  }, function (sa$prime) {
    return function (f) {
      var go$prime = function go$prime(sa) {
        return function (sb) {
          var msplit = Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(go$prime(sa))(tail(sb));
          var mrestart = Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(go)(tail(sa));
          return mkCofree(head(sb))(Control_Alt.alt(dictAlternative.Plus1().Alt0())(mrestart)(msplit));
        };
      };

      var go = function go(sa) {
        return go$prime(sa)(f(head(sa)));
      };

      return go(sa$prime);
    };
  });
};

var applyCofree = function applyCofree(dictAlternative) {
  return new Control_Apply.Apply(function () {
    return functorCofree(dictAlternative.Plus1().Alt0().Functor0());
  }, Control_Monad.ap(monadCofree(dictAlternative)));
};

var applicativeCofree = function applicativeCofree(dictAlternative) {
  return new Control_Applicative.Applicative(function () {
    return applyCofree(dictAlternative);
  }, function (a) {
    return mkCofree(a)(Control_Plus.empty(dictAlternative.Plus1()));
  });
};

var shiftMapCofree = function shiftMapCofree(dictMonoid) {
  return new Control_ShiftMap.ShiftMap(function (f) {
    return function (v) {
      return deferCofree(function (v1) {
        var v2 = Data_Lazy.force(v);
        return new Data_Tuple.Tuple(v2.value0, f(Control_Applicative.pure(applicativeCofree(Concur_Core_Types.widgetAlternative(dictMonoid))))(v2.value1));
      });
    };
  });
};

module.exports = {
  buildCofree: buildCofree,
  lazyCofree: lazyCofree,
  deferCofree: deferCofree,
  explore: explore,
  exploreM: exploreM,
  head: head,
  lazyHead: lazyHead,
  hoistCofree: hoistCofree,
  mkCofree: mkCofree,
  tail: tail,
  lazyTail: lazyTail,
  mfix: mfix,
  unfoldCofree: unfoldCofree,
  eqCofree: eqCofree,
  eq1Cofree: eq1Cofree,
  ordCofree: ordCofree,
  ord1Cofree: ord1Cofree,
  functorCofree: functorCofree,
  foldableCofree: foldableCofree,
  traversableCofree: traversableCofree,
  extendCofree: extendCofree,
  comonadCofree: comonadCofree,
  applyCofree: applyCofree,
  applicativeCofree: applicativeCofree,
  bindCofree: bindCofree,
  monadCofree: monadCofree,
  isLazyCofree: isLazyCofree,
  shiftMapCofree: shiftMapCofree
};
},{"../Concur.Core.Types/index.js":"qGwK","../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Comonad/index.js":"U0zO","../Control.Extend/index.js":"JIoJ","../Control.Lazy/index.js":"y9cE","../Control.Monad/index.js":"UIxr","../Control.Monad.Free/index.js":"pVbB","../Control.Monad.Rec.Class/index.js":"UVIy","../Control.Monad.State/index.js":"mGZW","../Control.Monad.State.Class/index.js":"u1pL","../Control.Monad.State.Trans/index.js":"KpW9","../Control.Plus/index.js":"oMBg","../Control.ShiftMap/index.js":"qpZO","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Identity/index.js":"OKTm","../Data.Lazy/index.js":"aRUE","../Data.Ord/index.js":"r4Vb","../Data.Ordering/index.js":"Eunj","../Data.Semigroup/index.js":"EsAJ","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Data.Unit/index.js":"NhVk"}],"Hotk":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Cofree = require("../Control.Cofree/index.js");

var Control_Comonad = require("../Control.Comonad/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Effect_Aff = require("../Effect.Aff/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var update = Control_Cofree.tail;
var step = Control_Cofree.mkCofree;

var poll = function poll(dictMonad) {
  return function (b) {
    return Control_Apply.apply(dictMonad.Bind1().Apply0())(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(step)(Control_Comonad.extract(Control_Cofree.comonadCofree(dictMonad.Bind1().Apply0().Functor0()))(b)))(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(poll(dictMonad))(update(b)));
  };
};

var oneShot = function oneShot(dictMonad) {
  return function (s) {
    var v = Control_Comonad.extract(Control_Cofree.comonadCofree(dictMonad.Bind1().Apply0().Functor0()))(s);

    if (v instanceof Data_Maybe.Nothing) {
      return Control_Bind.bind(dictMonad.Bind1())(update(s))(oneShot(dictMonad));
    }

    ;

    if (v instanceof Data_Maybe.Just) {
      return Control_Applicative.pure(dictMonad.Applicative0())(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Concur.Core.FRP (line 164, column 13 - line 166, column 19): " + [v.constructor.name]);
  };
};

var loopW = function loopW(dictMonad) {
  return function (a) {
    return function (f) {
      var go = function go(x) {
        return loopW(dictMonad)(x)(f);
      };

      return step(a)(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(go)(f(a)));
    };
  };
};

var loopS = function loopS(dictMonad) {
  return function (a) {
    return function (f) {
      var $$this = f(a);
      return step(Control_Comonad.extract(Control_Cofree.comonadCofree(dictMonad.Bind1().Apply0().Functor0()))($$this))(Control_Bind.bind(dictMonad.Bind1())(update($$this))(function (s) {
        return Control_Applicative.pure(dictMonad.Applicative0())(loopS(dictMonad)(Control_Comonad.extract(Control_Cofree.comonadCofree(dictMonad.Bind1().Apply0().Functor0()))(s))(f));
      }));
    };
  };
};

var stateLoopS = function stateLoopS(dictMonad) {
  return function (dictAlternative) {
    return function (def) {
      return function (w) {
        return Data_Functor.map(Control_Cofree.functorCofree(dictAlternative.Plus1().Alt0().Functor0()))(Data_Either.hush)(loopS(dictMonad)(new Data_Either.Left(def))(Data_Either.either(w)(function () {
          var $34 = Control_Applicative.pure(Control_Cofree.applicativeCofree(dictAlternative));
          return function ($35) {
            return $34(Data_Either.Right.create($35));
          };
        }())));
      };
    };
  };
};

var justWait = function justWait(dictMonad) {
  return function (dictAlternative) {
    return function (b) {
      return function (s) {
        return function (f) {
          return Control_Bind.bind(Control_Cofree.bindCofree(dictAlternative))(s)(function (m) {
            if (m instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Control_Cofree.applicativeCofree(dictAlternative))(b);
            }

            ;

            if (m instanceof Data_Maybe.Just) {
              return f(m.value0);
            }

            ;
            throw new Error("Failed pattern match at Concur.Core.FRP (line 61, column 3 - line 63, column 18): " + [m.constructor.name]);
          });
        };
      };
    };
  };
};

var hold = function hold(dictMonad) {
  return function (a) {
    return function (w) {
      return step(a)(Control_Bind.bind(dictMonad.Bind1())(w)(function (a$prime) {
        return Control_Applicative.pure(dictMonad.Applicative0())(hold(dictMonad)(a$prime)(w));
      }));
    };
  };
};

var foldp = function foldp(dictFunctor) {
  return function (f) {
    return function (a) {
      return function (sb) {
        var a$prime = f(a)(Control_Comonad.extract(Control_Cofree.comonadCofree(dictFunctor))(sb));
        return step(a$prime)(Data_Functor.map(dictFunctor)(foldp(dictFunctor)(f)(a$prime))(update(sb)));
      };
    };
  };
};

var fireOnce = function fireOnce(dictMonad) {
  return function (dictPlus) {
    return function (w) {
      return step(Data_Maybe.Nothing.value)(Control_Bind.bind(dictMonad.Bind1())(w)(function (a) {
        return Control_Applicative.pure(dictMonad.Applicative0())(step(new Data_Maybe.Just(a))(Control_Plus.empty(dictPlus)));
      }));
    };
  };
};

var justEffect = function justEffect(dictMonadEffect) {
  return function (dictMonad) {
    return function (dictAlternative) {
      return function (b) {
        return function (e) {
          return function (f) {
            return justWait(dictMonad)(dictAlternative)(b)(fireOnce(dictMonad)(dictAlternative.Plus1())(Effect_Class.liftEffect(dictMonadEffect)(e)))(f);
          };
        };
      };
    };
  };
};

var dyn = function dyn(dictMonad) {
  return function (s) {
    return Control_Bind.bind(dictMonad.Bind1())(update(s))(dyn(dictMonad));
  };
};

var display = function display(w) {
  return step(Data_Unit.unit)(w);
};

var fireOnce_ = function fireOnce_(dictMonad) {
  return function (dictPlus) {
    return function (w) {
      return display(Control_Apply.applySecond(dictMonad.Bind1().Apply0())(w)(Control_Plus.empty(dictPlus)));
    };
  };
};

var demand$prime = function demand$prime(dictMonad) {
  return function (f) {
    return oneShot(dictMonad)(f(Data_Maybe.Nothing.value));
  };
};

var demand = function demand(dictMonad) {
  return oneShot(dictMonad);
};

var demandLoop = function demandLoop(dictMonad) {
  return function (dictAlternative) {
    return function (def) {
      return function (w) {
        return demand(dictMonad)(stateLoopS(dictMonad)(dictAlternative)(def)(w));
      };
    };
  };
};

var debounce = function debounce(dictMonad) {
  return function (dictAlt) {
    return function (dictMonadAff) {
      return function (timeoutMs) {
        return function (ainit) {
          return function (winit) {
            var go$prime = function go$prime(a) {
              return function (w) {
                return Control_Bind.bind(dictMonad.Bind1())(Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Data_Maybe.Just.create)(w(a)))(Data_Functor.voidRight(dictAlt.Functor0())(Data_Maybe.Nothing.value)(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.delay(timeoutMs)))))(function (res) {
                  if (res instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(go(a)(w));
                  }

                  ;

                  if (res instanceof Data_Maybe.Just) {
                    return go$prime(res.value0)(w);
                  }

                  ;
                  throw new Error("Failed pattern match at Concur.Core.FRP (line 214, column 7 - line 218, column 28): " + [res.constructor.name]);
                });
              };
            };

            var go = function go(a) {
              return function (w) {
                return step(a)(Control_Bind.bind(dictMonad.Bind1())(w(a))(function (a$prime) {
                  return go$prime(a$prime)(w);
                }));
              };
            };

            return go(ainit)(winit);
          };
        };
      };
    };
  };
};

var always = function always(dictMonad) {
  return function (dictAlternative) {
    return Control_Applicative.pure(Control_Cofree.applicativeCofree(dictAlternative));
  };
};

module.exports = {
  step: step,
  display: display,
  fireOnce: fireOnce,
  fireOnce_: fireOnce_,
  justWait: justWait,
  justEffect: justEffect,
  always: always,
  update: update,
  poll: poll,
  hold: hold,
  loopW: loopW,
  loopS: loopS,
  foldp: foldp,
  dyn: dyn,
  oneShot: oneShot,
  demand: demand,
  "demand'": demand$prime,
  demandLoop: demandLoop,
  stateLoopS: stateLoopS,
  debounce: debounce
};
},{"../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Cofree/index.js":"BHJd","../Control.Comonad/index.js":"U0zO","../Control.Plus/index.js":"oMBg","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Unit/index.js":"NhVk","../Effect.Aff/index.js":"I7lu","../Effect.Aff.Class/index.js":"I4H2","../Effect.Class/index.js":"dWtH"}],"i7fd":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Identity = require("../Data.Identity/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Star = require("../Data.Profunctor.Star/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Wander = function Wander(Choice1, Strong0, wander) {
  this.Choice1 = Choice1;
  this.Strong0 = Strong0;
  this.wander = wander;
};

var wanderStar = function wanderStar(dictApplicative) {
  return new Wander(function () {
    return Data_Profunctor_Star.choiceStar(dictApplicative);
  }, function () {
    return Data_Profunctor_Star.strongStar(dictApplicative.Apply0().Functor0());
  }, function (t) {
    return function (v) {
      return t(dictApplicative)(v);
    };
  });
};

var wanderFunction = new Wander(function () {
  return Data_Profunctor_Choice.choiceFn;
}, function () {
  return Data_Profunctor_Strong.strongFn;
}, function (t) {
  return Data_Newtype.alaF()()()()(Data_Identity.Identity)(t(Data_Identity.applicativeIdentity));
});

var wander = function wander(dict) {
  return dict.wander;
};

module.exports = {
  wander: wander,
  Wander: Wander,
  wanderFunction: wanderFunction,
  wanderStar: wanderStar
};
},{"../Data.Identity/index.js":"OKTm","../Data.Newtype/index.js":"lz8k","../Data.Profunctor.Choice/index.js":"nkqb","../Data.Profunctor.Star/index.js":"tj5E","../Data.Profunctor.Strong/index.js":"w9p6"}],"V4Hg":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Indexed = function Indexed(x) {
  return x;
};

var profunctorIndexed = function profunctorIndexed(dictProfunctor) {
  return new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        return Data_Profunctor.dimap(dictProfunctor)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(f))(g)(v);
      };
    };
  });
};

var strongIndexed = function strongIndexed(dictStrong) {
  return new Data_Profunctor_Strong.Strong(function () {
    return profunctorIndexed(dictStrong.Profunctor0());
  }, function (v) {
    return Indexed(Data_Profunctor.lcmap(dictStrong.Profunctor0())(function (v1) {
      return new Data_Tuple.Tuple(new Data_Tuple.Tuple(v1.value0, v1.value1.value0), v1.value1.value1);
    })(Data_Profunctor_Strong.first(dictStrong)(v)));
  }, function (v) {
    return Indexed(Data_Profunctor.lcmap(dictStrong.Profunctor0())(function (v1) {
      return new Data_Tuple.Tuple(v1.value1.value0, new Data_Tuple.Tuple(v1.value0, v1.value1.value1));
    })(Data_Profunctor_Strong.second(dictStrong)(v)));
  });
};

var newtypeIndexed = new Data_Newtype.Newtype(function () {
  return undefined;
});

var choiceIndexed = function choiceIndexed(dictChoice) {
  return new Data_Profunctor_Choice.Choice(function () {
    return profunctorIndexed(dictChoice.Profunctor0());
  }, function (v) {
    return Indexed(Data_Profunctor.lcmap(dictChoice.Profunctor0())(function (v1) {
      return Data_Either.either(function () {
        var $44 = Data_Tuple.Tuple.create(v1.value0);
        return function ($45) {
          return Data_Either.Left.create($44($45));
        };
      }())(Data_Either.Right.create)(v1.value1);
    })(Data_Profunctor_Choice.left(dictChoice)(v)));
  }, function (v) {
    return Indexed(Data_Profunctor.lcmap(dictChoice.Profunctor0())(function (v1) {
      return Data_Either.either(Data_Either.Left.create)(function () {
        var $46 = Data_Tuple.Tuple.create(v1.value0);
        return function ($47) {
          return Data_Either.Right.create($46($47));
        };
      }())(v1.value1);
    })(Data_Profunctor_Choice.right(dictChoice)(v)));
  });
};

var wanderIndexed = function wanderIndexed(dictWander) {
  return new Data_Lens_Internal_Wander.Wander(function () {
    return choiceIndexed(dictWander.Choice1());
  }, function () {
    return strongIndexed(dictWander.Strong0());
  }, function (trav) {
    return function (v) {
      return Indexed(Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
        return function (ia2fb) {
          return function (v1) {
            return trav(dictApplicative)(function () {
              var $48 = Data_Tuple.Tuple.create(v1.value0);
              return function ($49) {
                return ia2fb($48($49));
              };
            }())(v1.value1);
          };
        };
      })(v));
    };
  });
};

module.exports = {
  Indexed: Indexed,
  newtypeIndexed: newtypeIndexed,
  profunctorIndexed: profunctorIndexed,
  strongIndexed: strongIndexed,
  choiceIndexed: choiceIndexed,
  wanderIndexed: wanderIndexed
};
},{"../Data.Either/index.js":"B2JL","../Data.Lens.Internal.Wander/index.js":"i7fd","../Data.Newtype/index.js":"lz8k","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Choice/index.js":"nkqb","../Data.Profunctor.Strong/index.js":"w9p6","../Data.Tuple/index.js":"IIOM"}],"eUa0":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Exchange = function () {
  function Exchange(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Exchange.create = function (value0) {
    return function (value1) {
      return new Exchange(value0, value1);
    };
  };

  return Exchange;
}();

var profunctorExchange = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Exchange(function ($11) {
        return v.value0(f($11));
      }, function ($12) {
        return g(v.value1($12));
      });
    };
  };
});
var functorExchange = new Data_Functor.Functor(function (f) {
  return function (v) {
    return new Exchange(v.value0, function ($13) {
      return f(v.value1($13));
    });
  };
});
module.exports = {
  Exchange: Exchange,
  functorExchange: functorExchange,
  profunctorExchange: profunctorExchange
};
},{"../Data.Functor/index.js":"AEHo","../Data.Profunctor/index.js":"DaDq"}],"FnLc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Cochoice = function Cochoice(Profunctor0, unleft, unright) {
  this.Profunctor0 = Profunctor0;
  this.unleft = unleft;
  this.unright = unright;
};

var unright = function unright(dict) {
  return dict.unright;
};

var unleft = function unleft(dict) {
  return dict.unleft;
};

module.exports = {
  unleft: unleft,
  unright: unright,
  Cochoice: Cochoice
};
},{}],"mj9z":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Const = require("../Data.Const/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Forget = function Forget(x) {
  return x;
};

var semigroupForget = function semigroupForget(dictSemigroup) {
  return Data_Semigroup.semigroupFn(dictSemigroup);
};

var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
  return function (v) {
    return function (v1) {
      return function ($24) {
        return v1(f($24));
      };
    };
  };
});
var strongForget = new Data_Profunctor_Strong.Strong(function () {
  return profunctorForget;
}, function (v) {
  return function ($25) {
    return v(Data_Tuple.fst($25));
  };
}, function (v) {
  return function ($26) {
    return v(Data_Tuple.snd($26));
  };
});
var newtypeForget = new Data_Newtype.Newtype(function () {
  return undefined;
});

var monoidForget = function monoidForget(dictMonoid) {
  return Data_Monoid.monoidFn(dictMonoid);
};

var cochoiceForget = new Data_Profunctor_Cochoice.Cochoice(function () {
  return profunctorForget;
}, function (v) {
  return function ($27) {
    return v(Data_Either.Left.create($27));
  };
}, function (v) {
  return function ($28) {
    return v(Data_Either.Right.create($28));
  };
});

var choiceForget = function choiceForget(dictMonoid) {
  return new Data_Profunctor_Choice.Choice(function () {
    return profunctorForget;
  }, function (v) {
    return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
  }, function (v) {
    return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
  });
};

var wanderForget = function wanderForget(dictMonoid) {
  return new Data_Lens_Internal_Wander.Wander(function () {
    return choiceForget(dictMonoid);
  }, function () {
    return strongForget;
  }, function (f) {
    return function (v) {
      return Data_Newtype.alaF()()()()(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
    };
  });
};

module.exports = {
  Forget: Forget,
  newtypeForget: newtypeForget,
  semigroupForget: semigroupForget,
  monoidForget: monoidForget,
  profunctorForget: profunctorForget,
  choiceForget: choiceForget,
  strongForget: strongForget,
  cochoiceForget: cochoiceForget,
  wanderForget: wanderForget
};
},{"../Data.Const/index.js":"OmNG","../Data.Either/index.js":"B2JL","../Data.Lens.Internal.Wander/index.js":"i7fd","../Data.Monoid/index.js":"TiEB","../Data.Newtype/index.js":"lz8k","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Choice/index.js":"nkqb","../Data.Profunctor.Cochoice/index.js":"FnLc","../Data.Profunctor.Strong/index.js":"w9p6","../Data.Semigroup/index.js":"EsAJ","../Data.Tuple/index.js":"IIOM"}],"mBBz":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Grating = function Grating(x) {
  return x;
};

var profunctorGrating = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return function (d) {
        return g(v(function (k) {
          return d(function ($6) {
            return k(f($6));
          });
        }));
      };
    };
  };
});
var newtypeGrating = new Data_Newtype.Newtype(function () {
  return undefined;
});
var closedGrating = new Data_Profunctor_Closed.Closed(function () {
  return profunctorGrating;
}, function (v) {
  return function (f) {
    return function (x) {
      return v(function (k) {
        return f(function (g) {
          return k(g(x));
        });
      });
    };
  };
});
module.exports = {
  Grating: Grating,
  newtypeGrating: newtypeGrating,
  profunctorGrating: profunctorGrating,
  closedGrating: closedGrating
};
},{"../Data.Newtype/index.js":"lz8k","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Closed/index.js":"af4y"}],"KFxX":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Market = function () {
  function Market(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Market.create = function (value0) {
    return function (value1) {
      return new Market(value0, value1);
    };
  };

  return Market;
}();

var profunctorMarket = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Market(function ($19) {
        return g(v.value0($19));
      }, function () {
        var $20 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(g);
        return function ($21) {
          return $20(v.value1(f($21)));
        };
      }());
    };
  };
});
var functorMarket = new Data_Functor.Functor(function (f) {
  return function (v) {
    return new Market(function ($22) {
      return f(v.value0($22));
    }, function () {
      var $23 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(f);
      return function ($24) {
        return $23(v.value1($24));
      };
    }());
  };
});
var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
  return profunctorMarket;
}, function (v) {
  return new Market(function ($25) {
    return Data_Either.Left.create(v.value0($25));
  }, Data_Either.either(function () {
    var $26 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Either.Left.create);
    return function ($27) {
      return $26(v.value1($27));
    };
  }())(function ($28) {
    return Data_Either.Left.create(Data_Either.Right.create($28));
  }));
}, function (v) {
  return new Market(function ($29) {
    return Data_Either.Right.create(v.value0($29));
  }, Data_Either.either(function ($30) {
    return Data_Either.Left.create(Data_Either.Left.create($30));
  })(function () {
    var $31 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Either.Right.create);
    return function ($32) {
      return $31(v.value1($32));
    };
  }()));
});
module.exports = {
  Market: Market,
  functorMarket: functorMarket,
  profunctorMarket: profunctorMarket,
  choiceMarket: choiceMarket
};
},{"../Data.Bifunctor/index.js":"e2Wc","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Choice/index.js":"nkqb"}],"NfU6":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Costrong = function Costrong(Profunctor0, unfirst, unsecond) {
  this.Profunctor0 = Profunctor0;
  this.unfirst = unfirst;
  this.unsecond = unsecond;
};

var unsecond = function unsecond(dict) {
  return dict.unsecond;
};

var unfirst = function unfirst(dict) {
  return dict.unfirst;
};

module.exports = {
  unfirst: unfirst,
  unsecond: unsecond,
  Costrong: Costrong
};
},{}],"IZDD":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Cochoice = require("../Data.Profunctor.Cochoice/index.js");

var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Re = function Re(x) {
  return x;
};

var profunctorRe = function profunctorRe(dictProfunctor) {
  return new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        var $25 = Data_Profunctor.dimap(dictProfunctor)(g)(f);
        return function ($26) {
          return v($25($26));
        };
      };
    };
  });
};

var strongRe = function strongRe(dictStrong) {
  return new Data_Profunctor_Costrong.Costrong(function () {
    return profunctorRe(dictStrong.Profunctor0());
  }, function (v) {
    var $27 = Data_Profunctor_Strong.first(dictStrong);
    return function ($28) {
      return v($27($28));
    };
  }, function (v) {
    var $29 = Data_Profunctor_Strong.second(dictStrong);
    return function ($30) {
      return v($29($30));
    };
  });
};

var newtypeRe = new Data_Newtype.Newtype(function () {
  return undefined;
});

var costrongRe = function costrongRe(dictCostrong) {
  return new Data_Profunctor_Strong.Strong(function () {
    return profunctorRe(dictCostrong.Profunctor0());
  }, function (v) {
    var $31 = Data_Profunctor_Costrong.unfirst(dictCostrong);
    return function ($32) {
      return v($31($32));
    };
  }, function (v) {
    var $33 = Data_Profunctor_Costrong.unsecond(dictCostrong);
    return function ($34) {
      return v($33($34));
    };
  });
};

var cochoiceRe = function cochoiceRe(dictCochoice) {
  return new Data_Profunctor_Choice.Choice(function () {
    return profunctorRe(dictCochoice.Profunctor0());
  }, function (v) {
    var $35 = Data_Profunctor_Cochoice.unleft(dictCochoice);
    return function ($36) {
      return v($35($36));
    };
  }, function (v) {
    var $37 = Data_Profunctor_Cochoice.unright(dictCochoice);
    return function ($38) {
      return v($37($38));
    };
  });
};

var choiceRe = function choiceRe(dictChoice) {
  return new Data_Profunctor_Cochoice.Cochoice(function () {
    return profunctorRe(dictChoice.Profunctor0());
  }, function (v) {
    var $39 = Data_Profunctor_Choice.left(dictChoice);
    return function ($40) {
      return v($39($40));
    };
  }, function (v) {
    var $41 = Data_Profunctor_Choice.right(dictChoice);
    return function ($42) {
      return v($41($42));
    };
  });
};

module.exports = {
  Re: Re,
  newtypeRe: newtypeRe,
  profunctorRe: profunctorRe,
  choiceRe: choiceRe,
  cochoiceRe: cochoiceRe,
  strongRe: strongRe,
  costrongRe: costrongRe
};
},{"../Data.Newtype/index.js":"lz8k","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Choice/index.js":"nkqb","../Data.Profunctor.Cochoice/index.js":"FnLc","../Data.Profunctor.Costrong/index.js":"NfU6","../Data.Profunctor.Strong/index.js":"w9p6"}],"kg0W":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Shop = function () {
  function Shop(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Shop.create = function (value0) {
    return function (value1) {
      return new Shop(value0, value1);
    };
  };

  return Shop;
}();

var profunctorShop = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Shop(function ($30) {
        return v.value0(f($30));
      }, function (s) {
        var $31 = v.value1(f(s));
        return function ($32) {
          return g($31($32));
        };
      });
    };
  };
});
var strongShop = new Data_Profunctor_Strong.Strong(function () {
  return profunctorShop;
}, function (v) {
  return new Shop(function (v1) {
    return v.value0(v1.value0);
  }, function (v1) {
    return function (b) {
      return new Data_Tuple.Tuple(v.value1(v1.value0)(b), v1.value1);
    };
  });
}, function (v) {
  return new Shop(function (v1) {
    return v.value0(v1.value1);
  }, function (v1) {
    return function (b) {
      return new Data_Tuple.Tuple(v1.value0, v.value1(v1.value1)(b));
    };
  });
});
module.exports = {
  Shop: Shop,
  profunctorShop: profunctorShop,
  strongShop: strongShop
};
},{"../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Strong/index.js":"w9p6","../Data.Tuple/index.js":"IIOM"}],"JjMS":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Bifunctor = require("../Data.Bifunctor/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Stall = function () {
  function Stall(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }

  ;

  Stall.create = function (value0) {
    return function (value1) {
      return new Stall(value0, value1);
    };
  };

  return Stall;
}();

var profunctorStall = new Data_Profunctor.Profunctor(function (f) {
  return function (g) {
    return function (v) {
      return new Stall(function () {
        var $61 = Data_Functor.map(Data_Functor.functorFn)(g);
        return function ($62) {
          return $61(v.value0(f($62)));
        };
      }(), function () {
        var $63 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(g);
        return function ($64) {
          return $63(v.value1(f($64)));
        };
      }());
    };
  };
});
var strongStall = new Data_Profunctor_Strong.Strong(function () {
  return profunctorStall;
}, function (v) {
  return new Stall(function (v1) {
    return function (b) {
      return new Data_Tuple.Tuple(v.value0(v1.value0)(b), v1.value1);
    };
  }, function (v1) {
    return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(function (t) {
      return new Data_Tuple.Tuple(t, v1.value1);
    })(v.value1(v1.value0));
  });
}, function (v) {
  return new Stall(function (v1) {
    return function (b) {
      return new Data_Tuple.Tuple(v1.value0, v.value0(v1.value1)(b));
    };
  }, function (v1) {
    return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Tuple.Tuple.create(v1.value0))(v.value1(v1.value1));
  });
});
var functorStall = new Data_Functor.Functor(function (f) {
  return function (v) {
    return new Stall(function () {
      var $65 = Data_Functor.map(Data_Functor.functorFn)(f);
      return function ($66) {
        return $65(v.value0($66));
      };
    }(), function () {
      var $67 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(f);
      return function ($68) {
        return $67(v.value1($68));
      };
    }());
  };
});
var choiceStall = new Data_Profunctor_Choice.Choice(function () {
  return profunctorStall;
}, function (v) {
  return new Stall(function (v1) {
    if (v1 instanceof Data_Either.Left) {
      return function (b) {
        return new Data_Either.Left(v.value0(v1.value0)(b));
      };
    }

    ;

    if (v1 instanceof Data_Either.Right) {
      return function (v2) {
        return new Data_Either.Right(v1.value0);
      };
    }

    ;
    throw new Error("Failed pattern match at Data.Lens.Internal.Stall (line 36, column 8 - line 38, column 33): " + [v1.constructor.name]);
  }, function (v1) {
    if (v1 instanceof Data_Either.Left) {
      return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Either.Left.create)(v.value1(v1.value0));
    }

    ;

    if (v1 instanceof Data_Either.Right) {
      return new Data_Either.Left(new Data_Either.Right(v1.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Lens.Internal.Stall (line 39, column 8 - line 41, column 34): " + [v1.constructor.name]);
  });
}, function (v) {
  return new Stall(function (v1) {
    if (v1 instanceof Data_Either.Left) {
      return function (v2) {
        return new Data_Either.Left(v1.value0);
      };
    }

    ;

    if (v1 instanceof Data_Either.Right) {
      return function (b) {
        return new Data_Either.Right(v.value0(v1.value0)(b));
      };
    }

    ;
    throw new Error("Failed pattern match at Data.Lens.Internal.Stall (line 45, column 8 - line 47, column 39): " + [v1.constructor.name]);
  }, function (v1) {
    if (v1 instanceof Data_Either.Left) {
      return new Data_Either.Left(new Data_Either.Left(v1.value0));
    }

    ;

    if (v1 instanceof Data_Either.Right) {
      return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Either.Right.create)(v.value1(v1.value0));
    }

    ;
    throw new Error("Failed pattern match at Data.Lens.Internal.Stall (line 48, column 8 - line 50, column 36): " + [v1.constructor.name]);
  });
});
module.exports = {
  Stall: Stall,
  functorStall: functorStall,
  profunctorStall: profunctorStall,
  strongStall: strongStall,
  choiceStall: choiceStall
};
},{"../Data.Bifunctor/index.js":"e2Wc","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Choice/index.js":"nkqb","../Data.Profunctor.Strong/index.js":"w9p6","../Data.Tuple/index.js":"IIOM"}],"h1YV":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Profunctor = require("../Data.Profunctor/index.js");

var Data_Profunctor_Choice = require("../Data.Profunctor.Choice/index.js");

var Data_Profunctor_Closed = require("../Data.Profunctor.Closed/index.js");

var Data_Profunctor_Costrong = require("../Data.Profunctor.Costrong/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Tagged = function Tagged(x) {
  return x;
};

var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
  return function (g) {
    return function (v1) {
      return g(v1);
    };
  };
});
var taggedCostrong = new Data_Profunctor_Costrong.Costrong(function () {
  return taggedProfunctor;
}, function (v) {
  return v.value0;
}, function (v) {
  return v.value1;
});
var taggedClosed = new Data_Profunctor_Closed.Closed(function () {
  return taggedProfunctor;
}, function (v) {
  return Data_Function["const"](v);
});
var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
  return taggedProfunctor;
}, function (v) {
  return new Data_Either.Left(v);
}, function (v) {
  return new Data_Either.Right(v);
});
var newtypeTagged = new Data_Newtype.Newtype(function () {
  return undefined;
});
var functorTagged = new Data_Functor.Functor(function (f) {
  return function (m) {
    return f(m);
  };
});
var foldableTagged = new Data_Foldable.Foldable(function (dictMonoid) {
  return function (f) {
    return function (v) {
      return f(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return f(b)(v);
    };
  };
}, function (f) {
  return function (b) {
    return function (v) {
      return f(v)(b);
    };
  };
});
var traversableTagged = new Data_Traversable.Traversable(function () {
  return foldableTagged;
}, function () {
  return functorTagged;
}, function (dictApplicative) {
  return function (v) {
    return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tagged)(v);
  };
}, function (dictApplicative) {
  return function (f) {
    return function (v) {
      return Data_Functor.map(dictApplicative.Apply0().Functor0())(Tagged)(f(v));
    };
  };
});

var eqTagged = function eqTagged(dictEq) {
  return new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(dictEq)(x)(y);
    };
  });
};

var ordTagged = function ordTagged(dictOrd) {
  return new Data_Ord.Ord(function () {
    return eqTagged(dictOrd.Eq0());
  }, function (x) {
    return function (y) {
      return Data_Ord.compare(dictOrd)(x)(y);
    };
  });
};

var eq1Tagged = new Data_Eq.Eq1(function (dictEq) {
  return Data_Eq.eq(eqTagged(dictEq));
});
var ord1Tagged = new Data_Ord.Ord1(function () {
  return eq1Tagged;
}, function (dictOrd) {
  return Data_Ord.compare(ordTagged(dictOrd));
});
module.exports = {
  Tagged: Tagged,
  newtypeTagged: newtypeTagged,
  eqTagged: eqTagged,
  eq1Tagged: eq1Tagged,
  ordTagged: ordTagged,
  ord1Tagged: ord1Tagged,
  functorTagged: functorTagged,
  taggedProfunctor: taggedProfunctor,
  taggedChoice: taggedChoice,
  taggedCostrong: taggedCostrong,
  taggedClosed: taggedClosed,
  foldableTagged: foldableTagged,
  traversableTagged: traversableTagged
};
},{"../Data.Either/index.js":"B2JL","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Newtype/index.js":"lz8k","../Data.Ord/index.js":"r4Vb","../Data.Profunctor/index.js":"DaDq","../Data.Profunctor.Choice/index.js":"nkqb","../Data.Profunctor.Closed/index.js":"af4y","../Data.Profunctor.Costrong/index.js":"NfU6","../Data.Traversable/index.js":"n7EE"}],"jpcc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Lens_Internal_Exchange = require("../Data.Lens.Internal.Exchange/index.js");

var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");

var Data_Lens_Internal_Grating = require("../Data.Lens.Internal.Grating/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Internal_Market = require("../Data.Lens.Internal.Market/index.js");

var Data_Lens_Internal_Re = require("../Data.Lens.Internal.Re/index.js");

var Data_Lens_Internal_Shop = require("../Data.Lens.Internal.Shop/index.js");

var Data_Lens_Internal_Stall = require("../Data.Lens.Internal.Stall/index.js");

var Data_Lens_Internal_Tagged = require("../Data.Lens.Internal.Tagged/index.js");

var Data_Lens_Internal_Wander = require("../Data.Lens.Internal.Wander/index.js");

module.exports = {
  Exchange: Data_Lens_Internal_Exchange.Exchange,
  Forget: Data_Lens_Internal_Forget.Forget,
  Indexed: Data_Lens_Internal_Indexed.Indexed,
  Market: Data_Lens_Internal_Market.Market,
  Re: Data_Lens_Internal_Re.Re,
  Shop: Data_Lens_Internal_Shop.Shop,
  Stall: Data_Lens_Internal_Stall.Stall,
  Tagged: Data_Lens_Internal_Tagged.Tagged,
  Wander: Data_Lens_Internal_Wander.Wander,
  wander: Data_Lens_Internal_Wander.wander
};
},{"../Data.Lens.Internal.Exchange/index.js":"eUa0","../Data.Lens.Internal.Forget/index.js":"mj9z","../Data.Lens.Internal.Grating/index.js":"mBBz","../Data.Lens.Internal.Indexed/index.js":"V4Hg","../Data.Lens.Internal.Market/index.js":"KFxX","../Data.Lens.Internal.Re/index.js":"IZDD","../Data.Lens.Internal.Shop/index.js":"kg0W","../Data.Lens.Internal.Stall/index.js":"JjMS","../Data.Lens.Internal.Tagged/index.js":"h1YV","../Data.Lens.Internal.Wander/index.js":"i7fd"}],"OPOX":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Category = require("../Control.Category/index.js");

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Newtype = require("../Data.Newtype/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var view = function view(l) {
  return Data_Newtype.unwrap()(l(Control_Category.identity(Control_Category.categoryFn)));
};

var viewOn = function viewOn(s) {
  return function (l) {
    return view(l)(s);
  };
};

var use = function use(dictMonadState) {
  return function (p) {
    return Control_Monad_State_Class.gets(dictMonadState)(function (v) {
      return viewOn(v)(p);
    });
  };
};

var to = function to(f) {
  return function (p) {
    var $3 = Data_Newtype.unwrap()(p);
    return function ($4) {
      return $3(f($4));
    };
  };
};

var takeBoth = function takeBoth(l) {
  return function (r) {
    return to(Data_Profunctor_Strong.fanout(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(view(l))(view(r)));
  };
};

var iview = function iview(l) {
  return Data_Newtype.unwrap()(l(Data_Lens_Internal_Indexed.Indexed(Control_Category.identity(Control_Category.categoryFn))));
};

var iuse = function iuse(dictMonadState) {
  return function (p) {
    return Control_Monad_State_Class.gets(dictMonadState)(iview(p));
  };
};

var cloneGetter = function cloneGetter(g) {
  return to(view(g));
};

module.exports = {
  viewOn: viewOn,
  view: view,
  to: to,
  takeBoth: takeBoth,
  use: use,
  iview: iview,
  iuse: iuse,
  cloneGetter: cloneGetter,
  Indexed: Data_Lens_Types.Indexed
};
},{"../Control.Category/index.js":"IAi2","../Control.Monad.State.Class/index.js":"u1pL","../Data.Lens.Internal.Indexed/index.js":"V4Hg","../Data.Lens.Types/index.js":"jpcc","../Data.Newtype/index.js":"lz8k","../Data.Profunctor.Strong/index.js":"w9p6"}],"nB7H":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Monad_State_Class = require("../Control.Monad.State.Class/index.js");

var Data_EuclideanRing = require("../Data.EuclideanRing/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Lens_Internal_Indexed = require("../Data.Lens.Internal.Indexed/index.js");

var Data_Lens_Types = require("../Data.Lens.Types/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Ring = require("../Data.Ring/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Semiring = require("../Data.Semiring/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var over = function over(l) {
  return l;
};

var set = function set(l) {
  return function (b) {
    return over(l)(Data_Function["const"](b));
  };
};

var setJust = function setJust(p) {
  var $24 = set(p);
  return function ($25) {
    return $24(Data_Maybe.Just.create($25));
  };
};

var subOver = function subOver(dictRing) {
  return function (p) {
    var $26 = over(p);
    var $27 = Data_Function.flip(Data_Ring.sub(dictRing));
    return function ($28) {
      return $26($27($28));
    };
  };
};

var mulOver = function mulOver(dictSemiring) {
  return function (p) {
    var $29 = over(p);
    var $30 = Data_Function.flip(Data_Semiring.mul(dictSemiring));
    return function ($31) {
      return $29($30($31));
    };
  };
};

var modifying = function modifying(dictMonadState) {
  return function (p) {
    return function (f) {
      return Data_Functor["void"](dictMonadState.Monad0().Bind1().Apply0().Functor0())(Control_Monad_State_Class.modify(dictMonadState)(over(p)(f)));
    };
  };
};

var mulModifying = function mulModifying(dictMonadState) {
  return function (dictSemiring) {
    return function (p) {
      var $32 = modifying(dictMonadState)(p);
      var $33 = Data_Function.flip(Data_Semiring.mul(dictSemiring));
      return function ($34) {
        return $32($33($34));
      };
    };
  };
};

var subModifying = function subModifying(dictMonadState) {
  return function (dictRing) {
    return function (p) {
      var $35 = modifying(dictMonadState)(p);
      var $36 = Data_Function.flip(Data_Ring.sub(dictRing));
      return function ($37) {
        return $35($36($37));
      };
    };
  };
};

var iover = function iover(l) {
  return function (f) {
    return l(Data_Lens_Internal_Indexed.Indexed(Data_Tuple.uncurry(f)));
  };
};

var divOver = function divOver(dictEuclideanRing) {
  return function (p) {
    var $38 = over(p);
    var $39 = Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing));
    return function ($40) {
      return $38($39($40));
    };
  };
};

var divModifying = function divModifying(dictMonadState) {
  return function (dictEuclideanRing) {
    return function (p) {
      var $41 = modifying(dictMonadState)(p);
      var $42 = Data_Function.flip(Data_EuclideanRing.div(dictEuclideanRing));
      return function ($43) {
        return $41($42($43));
      };
    };
  };
};

var disjOver = function disjOver(dictHeytingAlgebra) {
  return function (p) {
    var $44 = over(p);
    var $45 = Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra));
    return function ($46) {
      return $44($45($46));
    };
  };
};

var disjModifying = function disjModifying(dictMonadState) {
  return function (dictHeytingAlgebra) {
    return function (p) {
      var $47 = modifying(dictMonadState)(p);
      var $48 = Data_Function.flip(Data_HeytingAlgebra.disj(dictHeytingAlgebra));
      return function ($49) {
        return $47($48($49));
      };
    };
  };
};

var conjOver = function conjOver(dictHeytingAlgebra) {
  return function (p) {
    var $50 = over(p);
    var $51 = Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra));
    return function ($52) {
      return $50($51($52));
    };
  };
};

var conjModifying = function conjModifying(dictMonadState) {
  return function (dictHeytingAlgebra) {
    return function (p) {
      var $53 = modifying(dictMonadState)(p);
      var $54 = Data_Function.flip(Data_HeytingAlgebra.conj(dictHeytingAlgebra));
      return function ($55) {
        return $53($54($55));
      };
    };
  };
};

var assign = function assign(dictMonadState) {
  return function (p) {
    return function (b) {
      return Data_Functor["void"](dictMonadState.Monad0().Bind1().Apply0().Functor0())(Control_Monad_State_Class.modify(dictMonadState)(set(p)(b)));
    };
  };
};

var assignJust = function assignJust(dictMonadState) {
  return function (p) {
    var $56 = assign(dictMonadState)(p);
    return function ($57) {
      return $56(Data_Maybe.Just.create($57));
    };
  };
};

var appendOver = function appendOver(dictSemigroup) {
  return function (p) {
    var $58 = over(p);
    var $59 = Data_Function.flip(Data_Semigroup.append(dictSemigroup));
    return function ($60) {
      return $58($59($60));
    };
  };
};

var appendModifying = function appendModifying(dictMonadState) {
  return function (dictSemigroup) {
    return function (p) {
      var $61 = modifying(dictMonadState)(p);
      var $62 = Data_Function.flip(Data_Semigroup.append(dictSemigroup));
      return function ($63) {
        return $61($62($63));
      };
    };
  };
};

var addOver = function addOver(dictSemiring) {
  return function (p) {
    var $64 = over(p);
    var $65 = Data_Semiring.add(dictSemiring);
    return function ($66) {
      return $64($65($66));
    };
  };
};

var addModifying = function addModifying(dictMonadState) {
  return function (dictSemiring) {
    return function (p) {
      var $67 = modifying(dictMonadState)(p);
      var $68 = Data_Semiring.add(dictSemiring);
      return function ($69) {
        return $67($68($69));
      };
    };
  };
};

module.exports = {
  over: over,
  iover: iover,
  set: set,
  addOver: addOver,
  subOver: subOver,
  mulOver: mulOver,
  divOver: divOver,
  disjOver: disjOver,
  conjOver: conjOver,
  appendOver: appendOver,
  setJust: setJust,
  assign: assign,
  modifying: modifying,
  addModifying: addModifying,
  mulModifying: mulModifying,
  subModifying: subModifying,
  divModifying: divModifying,
  disjModifying: disjModifying,
  conjModifying: conjModifying,
  appendModifying: appendModifying,
  assignJust: assignJust,
  Indexed: Data_Lens_Types.Indexed
};
},{"../Control.Monad.State.Class/index.js":"u1pL","../Data.EuclideanRing/index.js":"IRBO","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.HeytingAlgebra/index.js":"paZe","../Data.Lens.Internal.Indexed/index.js":"V4Hg","../Data.Lens.Types/index.js":"jpcc","../Data.Maybe/index.js":"mN7T","../Data.Ring/index.js":"E2qH","../Data.Semigroup/index.js":"EsAJ","../Data.Semiring/index.js":"NFPD","../Data.Tuple/index.js":"IIOM"}],"OEFy":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Alt = require("../Control.Alt/index.js");

var Control_Applicative = require("../Control.Applicative/index.js");

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Lens_Getter = require("../Data.Lens.Getter/index.js");

var Data_Lens_Internal_Forget = require("../Data.Lens.Internal.Forget/index.js");

var Data_Lens_Setter = require("../Data.Lens.Setter/index.js");

var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Effect_AVar = require("../Effect.AVar/index.js");

var Effect_Aff_AVar = require("../Effect.Aff.AVar/index.js");

var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");

var Effect_Class = require("../Effect.Class/index.js");

var tea = function tea(dictMonad) {
  return function (s) {
    return function (render) {
      return function (update) {
        var go = function go(st) {
          return Control_Bind.bind(dictMonad.Bind1())(render(st))(function () {
            var $32 = Data_Function.flip(update)(st);
            return function ($33) {
              return go($32($33));
            };
          }());
        };

        return go(s);
      };
    };
  };
};

var retryUntilLoop = function retryUntilLoop(dictMonad) {
  return function (p) {
    return function (w) {
      return function (a) {
        return Control_Bind.bind(dictMonad.Bind1())(w(a))(function (a$prime) {
          var $21 = p(a$prime);

          if ($21) {
            return Control_Applicative.pure(dictMonad.Applicative0())(a$prime);
          }

          ;
          return retryUntilLoop(dictMonad)(p)(w)(a$prime);
        });
      };
    };
  };
};

var retryUntil = function retryUntil(dictMonad) {
  return function (p) {
    return function (w) {
      return Control_Bind.bind(dictMonad.Bind1())(w)(function (a) {
        var $22 = p(a);

        if ($22) {
          return Control_Applicative.pure(dictMonad.Applicative0())(a);
        }

        ;
        return retryUntil(dictMonad)(p)(w);
      });
    };
  };
};

var remoteWidget = function remoteWidget(dictMonadEffect) {
  return function (dictMonadAff) {
    return function (dictMonadEffect1) {
      return function (dictPlus) {
        return function (axn) {
          return Control_Bind.bind(dictMonadEffect.Monad0().Bind1())(Effect_Class.liftEffect(dictMonadEffect)(Effect_AVar.empty))(function ($$var) {
            return Control_Applicative.pure(dictMonadEffect.Monad0().Applicative0())(new Data_Tuple.Tuple(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.take($$var)), Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(axn)(function (f) {
              return Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(Effect_Class.liftEffect(dictMonadAff.MonadEffect0())(Effect_AVar.tryPut(f)($$var)))(function () {
                return Control_Plus.empty(dictPlus);
              });
            })));
          });
        };
      };
    };
  };
};

var mapWire = function mapWire(dictFunctor) {
  return function (lens) {
    return function (wire) {
      return {
        value: Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget))(wire.value),
        send: function send(a) {
          return wire.send(Data_Lens_Setter.set(lens(Data_Profunctor_Strong.strongFn))(a)(wire.value));
        },
        receive: Data_Functor.map(dictFunctor)(Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget)))(wire.receive)
      };
    };
  };
};

var loopState = function loopState(dictMonad) {
  return function (s) {
    return function (f) {
      return Control_Bind.bind(dictMonad.Bind1())(f(s))(function (v) {
        if (v instanceof Data_Either.Left) {
          return loopState(dictMonad)(v.value0)(f);
        }

        ;

        if (v instanceof Data_Either.Right) {
          return Control_Applicative.pure(dictMonad.Applicative0())(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Concur.Core.Patterns (line 23, column 25 - line 25, column 20): " + [v.constructor.name]);
      });
    };
  };
};

var local = function local(dictAlt) {
  return function (dictMonadEffect) {
    return function (dictMonadAff) {
      return function (dictPlus) {
        return function (a) {
          return function (f) {
            var updateWire = function updateWire(wire) {
              return function (a$prime) {
                return {
                  value: a$prime,
                  receive: wire.receive,
                  send: wire.send
                };
              };
            };

            var go = function go(wire) {
              return Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Data_Either.Left.create)(f(wire)))(Data_Functor.map(dictAlt.Functor0())(Data_Either.Right.create)(wire.receive)))(function (res) {
                return Data_Either.either(Control_Applicative.pure(dictMonadAff.MonadEffect0().Monad0().Applicative0()))(function () {
                  var $34 = updateWire(wire);
                  return function ($35) {
                    return go($34($35));
                  };
                }())(res);
              });
            };

            return Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(Effect_Class.liftEffect(dictMonadAff.MonadEffect0())(Effect_AVar.empty))(function ($$var) {
              return go({
                value: a,
                send: function send(a$prime) {
                  return Control_Apply.applySecond(dictMonadAff.MonadEffect0().Monad0().Bind1().Apply0())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.put(a$prime)($$var)))(Control_Plus.empty(dictPlus));
                },
                receive: Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff_AVar.take($$var))
              });
            });
          };
        };
      };
    };
  };
};

var forkAction = function forkAction(dictMonadEffect) {
  return function (dictMonadAff) {
    return function (dictPlus) {
      return function (axn) {
        return function (rest) {
          return Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(remoteWidget(dictMonadAff.MonadEffect0())(dictMonadAff)(dictMonadAff.MonadEffect0())(dictPlus)(axn))(function (v) {
            return Control_Alt.alt(dictPlus.Alt0())(v.value1)(rest(v.value0));
          });
        };
      };
    };
  };
};

var forkActionState = function forkActionState(dictPlus) {
  return function (dictMonadAff) {
    return function (axn) {
      return function (render) {
        return function (st) {
          var go = function go(st$prime) {
            return function (axn$prime) {
              return Control_Bind.bind(dictMonadAff.MonadEffect0().Monad0().Bind1())(Control_Alt.alt(dictPlus.Alt0())(Data_Functor.map(dictMonadAff.MonadEffect0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Left.create)(render(st$prime)))(Data_Functor.map(dictMonadAff.MonadEffect0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(axn$prime)))(function (e) {
                if (e instanceof Data_Either.Left) {
                  return go(e.value0)(axn$prime);
                }

                ;

                if (e instanceof Data_Either.Right) {
                  return render(e.value0(st$prime));
                }

                ;
                throw new Error("Failed pattern match at Concur.Core.Patterns (line 93, column 5 - line 95, column 32): " + [e.constructor.name]);
              });
            };
          };

          return forkAction(dictMonadAff.MonadEffect0())(dictMonadAff)(dictPlus)(axn)(go(st));
        };
      };
    };
  };
};

module.exports = {
  loopState: loopState,
  retryUntil: retryUntil,
  retryUntilLoop: retryUntilLoop,
  tea: tea,
  remoteWidget: remoteWidget,
  forkAction: forkAction,
  forkActionState: forkActionState,
  mapWire: mapWire,
  local: local
};
},{"../Control.Alt/index.js":"lNMK","../Control.Applicative/index.js":"qYya","../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Control.Plus/index.js":"oMBg","../Data.Either/index.js":"B2JL","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.Lens.Getter/index.js":"OPOX","../Data.Lens.Internal.Forget/index.js":"mj9z","../Data.Lens.Setter/index.js":"nB7H","../Data.Profunctor.Strong/index.js":"w9p6","../Data.Tuple/index.js":"IIOM","../Effect.AVar/index.js":"XiHq","../Effect.Aff.AVar/index.js":"hACG","../Effect.Aff.Class/index.js":"I4H2","../Effect.Class/index.js":"dWtH"}],"ks1e":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_FRP = require("../Concur.Core.FRP/index.js");

var Concur_Core_Patterns = require("../Concur.Core.Patterns/index.js");

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_MultiAlternative = require("../Control.MultiAlternative/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Preload = require("../Preload/index.js");

var Shift = function Shift(ShiftMap0) {
  this.ShiftMap0 = ShiftMap0;
};

var Merge = function Merge(MultiAlternative0) {
  this.MultiAlternative0 = MultiAlternative0;
};

var Lift = function Lift(Alternative3, LiftWidget0, Monad2, Shift1) {
  this.Alternative3 = Alternative3;
  this.LiftWidget0 = LiftWidget0;
  this.Monad2 = Monad2;
  this.Shift1 = Shift1;
};

var wither = function wither(dictMonoid) {
  return function (render) {
    return function (elements) {
      var indexedElements = Data_Array.mapWithIndex(function (index) {
        return function (element) {
          return Data_Functor.map(Concur_Core_Types.widgetFunctor)(function (v) {
            return new Data_Tuple.Tuple(index, v);
          })(render(element));
        };
      })(elements);
      return Control_Bind.bind(Concur_Core_Types.widgetBind)(Control_MultiAlternative.orr(Concur_Core_Types.widgetMultiAlternative(dictMonoid))(indexedElements))(function (v) {
        return Preload.done(Concur_Core_Types.widgetApplicative)(function () {
          if (v.value1 instanceof Data_Maybe.Nothing) {
            return Preload.withDefault(Data_Array.deleteAt(v.value0)(elements))(elements);
          }

          ;

          if (v.value1 instanceof Data_Maybe.Just) {
            return Preload.withDefault(Data_Array.updateAt(v.value0)(v.value1.value0)(elements))(elements);
          }

          ;
          throw new Error("Failed pattern match at Concur (line 84, column 11 - line 86, column 72): " + [v.value1.constructor.name]);
        }());
      });
    };
  };
};

var traverse = function traverse(dictMonoid) {
  return function (render) {
    return function (elements) {
      var indexedElements = Data_Array.mapWithIndex(function (index) {
        return function (element) {
          return Data_Functor.map(Concur_Core_Types.widgetFunctor)(function (v) {
            return new Data_Tuple.Tuple(index, v);
          })(render(element));
        };
      })(elements);
      return Control_Bind.bind(Concur_Core_Types.widgetBind)(Control_MultiAlternative.orr(Concur_Core_Types.widgetMultiAlternative(dictMonoid))(indexedElements))(function (v) {
        return Preload.done(Concur_Core_Types.widgetApplicative)(Preload.withDefault(Data_Array.updateAt(v.value0)(v.value1)(elements))(elements));
      });
    };
  };
};

var repeat = function repeat(dictBind) {
  return function (x) {
    return function (w) {
      return Control_Bind.bind(dictBind)(w(x))(function (x$prime) {
        return repeat(dictBind)(x$prime)(w);
      });
    };
  };
};

var merge = function merge(dictMerge) {
  return Control_MultiAlternative.orr(dictMerge.MultiAlternative0());
};

var loop = function loop(dictMonad) {
  return Concur_Core_FRP.loopW(dictMonad);
};

var local = function local(dictAlt) {
  return function (dictMonadEffect) {
    return function (dictMonadAff) {
      return function (dictPlus) {
        return Concur_Core_Patterns.local(dictAlt)(dictMonadAff.MonadEffect0())(dictMonadAff)(dictPlus);
      };
    };
  };
};

var focus = function focus(dictFunctor) {
  return Concur_Core_Patterns.mapWire(dictFunctor);
};

var fix = function fix(dictMonad) {
  return Concur_Core_FRP.loopS(dictMonad);
};

var dynamic = function dynamic(dictMonad) {
  return Concur_Core_FRP.dyn(dictMonad);
};

var combine = function combine(dictMonoid) {
  return Concur_Core_Types.andd(dictMonoid);
};

var $dollar_Shift_4 = function $dollar_Shift_4(dictShiftMap) {
  return new Shift(function () {
    return dictShiftMap;
  });
};

var $dollar_Merge_6 = function $dollar_Merge_6(dictMultiAlternative) {
  return new Merge(function () {
    return dictMultiAlternative;
  });
};

var $dollar_Lift_5 = function $dollar_Lift_5(dictLiftWidget) {
  return function (dictShift) {
    return function (dictMonad) {
      return function (dictAlternative) {
        return new Lift(function () {
          return dictAlternative;
        }, function () {
          return dictLiftWidget;
        }, function () {
          return dictMonad;
        }, function () {
          return dictShift;
        });
      };
    };
  };
};

module.exports = {
  Shift: Shift,
  Lift: Lift,
  Merge: Merge,
  combine: combine,
  merge: merge,
  repeat: repeat,
  dynamic: dynamic,
  loop: loop,
  fix: fix,
  local: local,
  focus: focus,
  wither: wither,
  traverse: traverse,
  "$_Shift_4": $dollar_Shift_4,
  "$_Lift_5": $dollar_Lift_5,
  "$_Merge_6": $dollar_Merge_6,
  always: Concur_Core_FRP.always,
  display: Concur_Core_FRP.display,
  foldp: Concur_Core_FRP.foldp,
  hold: Concur_Core_FRP.hold,
  poll: Concur_Core_FRP.poll,
  step: Concur_Core_FRP.step,
  update: Concur_Core_FRP.update
};
},{"../Concur.Core.FRP/index.js":"Hotk","../Concur.Core.Patterns/index.js":"OEFy","../Concur.Core.Types/index.js":"qGwK","../Control.Bind/index.js":"VcTy","../Control.MultiAlternative/index.js":"c2nd","../Data.Array/index.js":"t4Co","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Tuple/index.js":"IIOM","../Preload/index.js":"yYWa"}],"LDGR":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Dom = require("../Concur.Dom/index.js");

var zhihu = Concur_Dom.inline(["fas", " fa-zhihu"])([]);
var youtube_square = Concur_Dom.inline(["fas", " fa-youtube-square"])([]);
var youtube = Concur_Dom.inline(["fas", " fa-youtube"])([]);
var yoast = Concur_Dom.inline(["fas", " fa-yoast"])([]);
var yin_yang = Concur_Dom.inline(["fas", " fa-yin-yang"])([]);
var yen_sign = Concur_Dom.inline(["fas", " fa-yen-sign"])([]);
var yelp = Concur_Dom.inline(["fas", " fa-yelp"])([]);
var yarn = Concur_Dom.inline(["fas", " fa-yarn"])([]);
var yandex_international = Concur_Dom.inline(["fas", " fa-yandex-international"])([]);
var yandex = Concur_Dom.inline(["fas", " fa-yandex"])([]);
var yammer = Concur_Dom.inline(["fas", " fa-yammer"])([]);
var yahoo = Concur_Dom.inline(["fas", " fa-yahoo"])([]);
var y_combinator = Concur_Dom.inline(["fas", " fa-y-combinator"])([]);
var xing_square = Concur_Dom.inline(["fas", " fa-xing-square"])([]);
var xing = Concur_Dom.inline(["fas", " fa-xing"])([]);
var xbox = Concur_Dom.inline(["fas", " fa-xbox"])([]);
var x_ray = Concur_Dom.inline(["fas", " fa-x-ray"])([]);
var wrench = Concur_Dom.inline(["fas", " fa-wrench"])([]);
var wpressr = Concur_Dom.inline(["fas", " fa-wpressr"])([]);
var wpforms = Concur_Dom.inline(["fas", " fa-wpforms"])([]);
var wpexplorer = Concur_Dom.inline(["fas", " fa-wpexplorer"])([]);
var wpbeginner = Concur_Dom.inline(["fas", " fa-wpbeginner"])([]);
var wordpress_simple = Concur_Dom.inline(["fas", " fa-wordpress-simple"])([]);
var wordpress = Concur_Dom.inline(["fas", " fa-wordpress"])([]);
var won_sign = Concur_Dom.inline(["fas", " fa-won-sign"])([]);
var wolf_pack_battalion = Concur_Dom.inline(["fas", " fa-wolf-pack-battalion"])([]);
var wodu = Concur_Dom.inline(["fas", " fa-wodu"])([]);
var wizards_of_the_coast = Concur_Dom.inline(["fas", " fa-wizards-of-the-coast"])([]);
var wix = Concur_Dom.inline(["fas", " fa-wix"])([]);
var wine_glass_alt = Concur_Dom.inline(["fas", " fa-wine-glass-alt"])([]);
var wine_glass = Concur_Dom.inline(["fas", " fa-wine-glass"])([]);
var wine_bottle = Concur_Dom.inline(["fas", " fa-wine-bottle"])([]);
var windows = Concur_Dom.inline(["fas", " fa-windows"])([]);
var window_restore = Concur_Dom.inline(["fas", " fa-window-restore"])([]);
var window_minimize = Concur_Dom.inline(["fas", " fa-window-minimize"])([]);
var window_maximize = Concur_Dom.inline(["fas", " fa-window-maximize"])([]);
var window_close = Concur_Dom.inline(["fas", " fa-window-close"])([]);
var wind = Concur_Dom.inline(["fas", " fa-wind"])([]);
var wikipedia_w = Concur_Dom.inline(["fas", " fa-wikipedia-w"])([]);
var wifi = Concur_Dom.inline(["fas", " fa-wifi"])([]);
var whmcs = Concur_Dom.inline(["fas", " fa-whmcs"])([]);
var wheelchair = Concur_Dom.inline(["fas", " fa-wheelchair"])([]);
var whatsapp_square = Concur_Dom.inline(["fas", " fa-whatsapp-square"])([]);
var whatsapp = Concur_Dom.inline(["fas", " fa-whatsapp"])([]);
var weixin = Concur_Dom.inline(["fas", " fa-weixin"])([]);
var weight_hanging = Concur_Dom.inline(["fas", " fa-weight-hanging"])([]);
var weight = Concur_Dom.inline(["fas", " fa-weight"])([]);
var weibo = Concur_Dom.inline(["fas", " fa-weibo"])([]);
var weebly = Concur_Dom.inline(["fas", " fa-weebly"])([]);
var waze = Concur_Dom.inline(["fas", " fa-waze"])([]);
var wave_square = Concur_Dom.inline(["fas", " fa-wave-square"])([]);
var water = Concur_Dom.inline(["fas", " fa-water"])([]);
var watchman_monitoring = Concur_Dom.inline(["fas", " fa-watchman-monitoring"])([]);
var warehouse = Concur_Dom.inline(["fas", " fa-warehouse"])([]);
var wallet = Concur_Dom.inline(["fas", " fa-wallet"])([]);
var walking = Concur_Dom.inline(["fas", " fa-walking"])([]);
var vuejs = Concur_Dom.inline(["fas", " fa-vuejs"])([]);
var vr_cardboard = Concur_Dom.inline(["fas", " fa-vr-cardboard"])([]);
var vote_yea = Concur_Dom.inline(["fas", " fa-vote-yea"])([]);
var volume_up = Concur_Dom.inline(["fas", " fa-volume-up"])([]);
var volume_off = Concur_Dom.inline(["fas", " fa-volume-off"])([]);
var volume_mute = Concur_Dom.inline(["fas", " fa-volume-mute"])([]);
var volume_down = Concur_Dom.inline(["fas", " fa-volume-down"])([]);
var volleyball_ball = Concur_Dom.inline(["fas", " fa-volleyball-ball"])([]);
var voicemail = Concur_Dom.inline(["fas", " fa-voicemail"])([]);
var vnv = Concur_Dom.inline(["fas", " fa-vnv"])([]);
var vk = Concur_Dom.inline(["fas", " fa-vk"])([]);
var viruses = Concur_Dom.inline(["fas", " fa-viruses"])([]);
var virus_slash = Concur_Dom.inline(["fas", " fa-virus-slash"])([]);
var virus = Concur_Dom.inline(["fas", " fa-virus"])([]);
var vine = Concur_Dom.inline(["fas", " fa-vine"])([]);
var vimeo_v = Concur_Dom.inline(["fas", " fa-vimeo-v"])([]);
var vimeo_square = Concur_Dom.inline(["fas", " fa-vimeo-square"])([]);
var vimeo = Concur_Dom.inline(["fas", " fa-vimeo"])([]);
var vihara = Concur_Dom.inline(["fas", " fa-vihara"])([]);
var video_slash = Concur_Dom.inline(["fas", " fa-video-slash"])([]);
var video = Concur_Dom.inline(["fas", " fa-video"])([]);
var viber = Concur_Dom.inline(["fas", " fa-viber"])([]);
var vials = Concur_Dom.inline(["fas", " fa-vials"])([]);
var vial = Concur_Dom.inline(["fas", " fa-vial"])([]);
var viadeo_square = Concur_Dom.inline(["fas", " fa-viadeo-square"])([]);
var viadeo = Concur_Dom.inline(["fas", " fa-viadeo"])([]);
var viacoin = Concur_Dom.inline(["fas", " fa-viacoin"])([]);
var vest_patches = Concur_Dom.inline(["fas", " fa-vest-patches"])([]);
var vest = Concur_Dom.inline(["fas", " fa-vest"])([]);
var venus_mars = Concur_Dom.inline(["fas", " fa-venus-mars"])([]);
var venus_double = Concur_Dom.inline(["fas", " fa-venus-double"])([]);
var venus = Concur_Dom.inline(["fas", " fa-venus"])([]);
var vector_square = Concur_Dom.inline(["fas", " fa-vector-square"])([]);
var vaadin = Concur_Dom.inline(["fas", " fa-vaadin"])([]);
var utensils = Concur_Dom.inline(["fas", " fa-utensils"])([]);
var utensil_spoon = Concur_Dom.inline(["fas", " fa-utensil-spoon"])([]);
var ussunnah = Concur_Dom.inline(["fas", " fa-ussunnah"])([]);
var usps = Concur_Dom.inline(["fas", " fa-usps"])([]);
var users_slash = Concur_Dom.inline(["fas", " fa-users-slash"])([]);
var users_cog = Concur_Dom.inline(["fas", " fa-users-cog"])([]);
var users = Concur_Dom.inline(["fas", " fa-users"])([]);
var user_times = Concur_Dom.inline(["fas", " fa-user-times"])([]);
var user_tie = Concur_Dom.inline(["fas", " fa-user-tie"])([]);
var user_tag = Concur_Dom.inline(["fas", " fa-user-tag"])([]);
var user_slash = Concur_Dom.inline(["fas", " fa-user-slash"])([]);
var user_shield = Concur_Dom.inline(["fas", " fa-user-shield"])([]);
var user_secret = Concur_Dom.inline(["fas", " fa-user-secret"])([]);
var user_plus = Concur_Dom.inline(["fas", " fa-user-plus"])([]);
var user_nurse = Concur_Dom.inline(["fas", " fa-user-nurse"])([]);
var user_ninja = Concur_Dom.inline(["fas", " fa-user-ninja"])([]);
var user_minus = Concur_Dom.inline(["fas", " fa-user-minus"])([]);
var user_md = Concur_Dom.inline(["fas", " fa-user-md"])([]);
var user_lock = Concur_Dom.inline(["fas", " fa-user-lock"])([]);
var user_injured = Concur_Dom.inline(["fas", " fa-user-injured"])([]);
var user_graduate = Concur_Dom.inline(["fas", " fa-user-graduate"])([]);
var user_friends = Concur_Dom.inline(["fas", " fa-user-friends"])([]);
var user_edit = Concur_Dom.inline(["fas", " fa-user-edit"])([]);
var user_cog = Concur_Dom.inline(["fas", " fa-user-cog"])([]);
var user_clock = Concur_Dom.inline(["fas", " fa-user-clock"])([]);
var user_circle = Concur_Dom.inline(["fas", " fa-user-circle"])([]);
var user_check = Concur_Dom.inline(["fas", " fa-user-check"])([]);
var user_astronaut = Concur_Dom.inline(["fas", " fa-user-astronaut"])([]);
var user_alt_slash = Concur_Dom.inline(["fas", " fa-user-alt-slash"])([]);
var user_alt = Concur_Dom.inline(["fas", " fa-user-alt"])([]);
var user = Concur_Dom.inline(["fas", " fa-user"])([]);
var usb = Concur_Dom.inline(["fas", " fa-usb"])([]);
var ups = Concur_Dom.inline(["fas", " fa-ups"])([]);
var upload = Concur_Dom.inline(["fas", " fa-upload"])([]);
var untappd = Concur_Dom.inline(["fas", " fa-untappd"])([]);
var unsplash = Concur_Dom.inline(["fas", " fa-unsplash"])([]);
var unlock_alt = Concur_Dom.inline(["fas", " fa-unlock-alt"])([]);
var unlock = Concur_Dom.inline(["fas", " fa-unlock"])([]);
var unlink = Concur_Dom.inline(["fas", " fa-unlink"])([]);
var university = Concur_Dom.inline(["fas", " fa-university"])([]);
var universal_access = Concur_Dom.inline(["fas", " fa-universal-access"])([]);
var unity = Concur_Dom.inline(["fas", " fa-unity"])([]);
var uniregistry = Concur_Dom.inline(["fas", " fa-uniregistry"])([]);
var undo_alt = Concur_Dom.inline(["fas", " fa-undo-alt"])([]);
var undo = Concur_Dom.inline(["fas", " fa-undo"])([]);
var underline = Concur_Dom.inline(["fas", " fa-underline"])([]);
var uncharted = Concur_Dom.inline(["fas", " fa-uncharted"])([]);
var umbrella_beach = Concur_Dom.inline(["fas", " fa-umbrella-beach"])([]);
var umbrella = Concur_Dom.inline(["fas", " fa-umbrella"])([]);
var umbraco = Concur_Dom.inline(["fas", " fa-umbraco"])([]);
var uikit = Concur_Dom.inline(["fas", " fa-uikit"])([]);
var ubuntu = Concur_Dom.inline(["fas", " fa-ubuntu"])([]);
var uber = Concur_Dom.inline(["fas", " fa-uber"])([]);
var typo3 = Concur_Dom.inline(["fas", " fa-typo3"])([]);
var twitter_square = Concur_Dom.inline(["fas", " fa-twitter-square"])([]);
var twitter = Concur_Dom.inline(["fas", " fa-twitter"])([]);
var twitch = Concur_Dom.inline(["fas", " fa-twitch"])([]);
var tv = Concur_Dom.inline(["fas", " fa-tv"])([]);
var tumblr_square = Concur_Dom.inline(["fas", " fa-tumblr-square"])([]);
var tumblr = Concur_Dom.inline(["fas", " fa-tumblr"])([]);
var tty = Concur_Dom.inline(["fas", " fa-tty"])([]);
var tshirt = Concur_Dom.inline(["fas", " fa-tshirt"])([]);
var truck_pickup = Concur_Dom.inline(["fas", " fa-truck-pickup"])([]);
var truck_moving = Concur_Dom.inline(["fas", " fa-truck-moving"])([]);
var truck_monster = Concur_Dom.inline(["fas", " fa-truck-monster"])([]);
var truck_loading = Concur_Dom.inline(["fas", " fa-truck-loading"])([]);
var truck = Concur_Dom.inline(["fas", " fa-truck"])([]);
var trophy = Concur_Dom.inline(["fas", " fa-trophy"])([]);
var tripadvisor = Concur_Dom.inline(["fas", " fa-tripadvisor"])([]);
var trello = Concur_Dom.inline(["fas", " fa-trello"])([]);
var tree = Concur_Dom.inline(["fas", " fa-tree"])([]);
var trash_restore_alt = Concur_Dom.inline(["fas", " fa-trash-restore-alt"])([]);
var trash_restore = Concur_Dom.inline(["fas", " fa-trash-restore"])([]);
var trash_alt = Concur_Dom.inline(["fas", " fa-trash-alt"])([]);
var trash = Concur_Dom.inline(["fas", " fa-trash"])([]);
var transgender_alt = Concur_Dom.inline(["fas", " fa-transgender-alt"])([]);
var transgender = Concur_Dom.inline(["fas", " fa-transgender"])([]);
var tram = Concur_Dom.inline(["fas", " fa-tram"])([]);
var train = Concur_Dom.inline(["fas", " fa-train"])([]);
var trailer = Concur_Dom.inline(["fas", " fa-trailer"])([]);
var traffic_light = Concur_Dom.inline(["fas", " fa-traffic-light"])([]);
var trademark = Concur_Dom.inline(["fas", " fa-trademark"])([]);
var trade_federation = Concur_Dom.inline(["fas", " fa-trade-federation"])([]);
var tractor = Concur_Dom.inline(["fas", " fa-tractor"])([]);
var torii_gate = Concur_Dom.inline(["fas", " fa-torii-gate"])([]);
var torah = Concur_Dom.inline(["fas", " fa-torah"])([]);
var tooth = Concur_Dom.inline(["fas", " fa-tooth"])([]);
var tools = Concur_Dom.inline(["fas", " fa-tools"])([]);
var toolbox = Concur_Dom.inline(["fas", " fa-toolbox"])([]);
var toilet_paper_slash = Concur_Dom.inline(["fas", " fa-toilet-paper-slash"])([]);
var toilet_paper = Concur_Dom.inline(["fas", " fa-toilet-paper"])([]);
var toilet = Concur_Dom.inline(["fas", " fa-toilet"])([]);
var toggle_on = Concur_Dom.inline(["fas", " fa-toggle-on"])([]);
var toggle_off = Concur_Dom.inline(["fas", " fa-toggle-off"])([]);
var tired = Concur_Dom.inline(["fas", " fa-tired"])([]);
var tint_slash = Concur_Dom.inline(["fas", " fa-tint-slash"])([]);
var tint = Concur_Dom.inline(["fas", " fa-tint"])([]);
var times_circle = Concur_Dom.inline(["fas", " fa-times-circle"])([]);
var times = Concur_Dom.inline(["fas", " fa-times"])([]);
var tiktok = Concur_Dom.inline(["fas", " fa-tiktok"])([]);
var ticket_alt = Concur_Dom.inline(["fas", " fa-ticket-alt"])([]);
var thumbtack = Concur_Dom.inline(["fas", " fa-thumbtack"])([]);
var thumbs_up = Concur_Dom.inline(["fas", " fa-thumbs-up"])([]);
var thumbs_down = Concur_Dom.inline(["fas", " fa-thumbs-down"])([]);
var think_peaks = Concur_Dom.inline(["fas", " fa-think-peaks"])([]);
var thermometer_three_quarters = Concur_Dom.inline(["fas", " fa-thermometer-three-quarters"])([]);
var thermometer_quarter = Concur_Dom.inline(["fas", " fa-thermometer-quarter"])([]);
var thermometer_half = Concur_Dom.inline(["fas", " fa-thermometer-half"])([]);
var thermometer_full = Concur_Dom.inline(["fas", " fa-thermometer-full"])([]);
var thermometer_empty = Concur_Dom.inline(["fas", " fa-thermometer-empty"])([]);
var thermometer = Concur_Dom.inline(["fas", " fa-thermometer"])([]);
var themeisle = Concur_Dom.inline(["fas", " fa-themeisle"])([]);
var themeco = Concur_Dom.inline(["fas", " fa-themeco"])([]);
var theater_masks = Concur_Dom.inline(["fas", " fa-theater-masks"])([]);
var the_red_yeti = Concur_Dom.inline(["fas", " fa-the-red-yeti"])([]);
var th_list = Concur_Dom.inline(["fas", " fa-th-list"])([]);
var th_large = Concur_Dom.inline(["fas", " fa-th-large"])([]);
var th = Concur_Dom.inline(["fas", " fa-th"])([]);
var text_width = Concur_Dom.inline(["fas", " fa-text-width"])([]);
var text_height = Concur_Dom.inline(["fas", " fa-text-height"])([]);
var terminal = Concur_Dom.inline(["fas", " fa-terminal"])([]);
var tenge = Concur_Dom.inline(["fas", " fa-tenge"])([]);
var tencent_weibo = Concur_Dom.inline(["fas", " fa-tencent-weibo"])([]);
var temperature_low = Concur_Dom.inline(["fas", " fa-temperature-low"])([]);
var temperature_high = Concur_Dom.inline(["fas", " fa-temperature-high"])([]);
var telegram_plane = Concur_Dom.inline(["fas", " fa-telegram-plane"])([]);
var telegram = Concur_Dom.inline(["fas", " fa-telegram"])([]);
var teeth_open = Concur_Dom.inline(["fas", " fa-teeth-open"])([]);
var teeth = Concur_Dom.inline(["fas", " fa-teeth"])([]);
var teamspeak = Concur_Dom.inline(["fas", " fa-teamspeak"])([]);
var taxi = Concur_Dom.inline(["fas", " fa-taxi"])([]);
var tasks = Concur_Dom.inline(["fas", " fa-tasks"])([]);
var tape = Concur_Dom.inline(["fas", " fa-tape"])([]);
var tags = Concur_Dom.inline(["fas", " fa-tags"])([]);
var tag = Concur_Dom.inline(["fas", " fa-tag"])([]);
var tachometer_alt = Concur_Dom.inline(["fas", " fa-tachometer-alt"])([]);
var tablets = Concur_Dom.inline(["fas", " fa-tablets"])([]);
var tablet_alt = Concur_Dom.inline(["fas", " fa-tablet-alt"])([]);
var tablet = Concur_Dom.inline(["fas", " fa-tablet"])([]);
var table_tennis = Concur_Dom.inline(["fas", " fa-table-tennis"])([]);
var table = Concur_Dom.inline(["fas", " fa-table"])([]);
var syringe = Concur_Dom.inline(["fas", " fa-syringe"])([]);
var sync_alt = Concur_Dom.inline(["fas", " fa-sync-alt"])([]);
var sync = Concur_Dom.inline(["fas", " fa-sync"])([]);
var synagogue = Concur_Dom.inline(["fas", " fa-synagogue"])([]);
var symfony = Concur_Dom.inline(["fas", " fa-symfony"])([]);
var swimming_pool = Concur_Dom.inline(["fas", " fa-swimming-pool"])([]);
var swimmer = Concur_Dom.inline(["fas", " fa-swimmer"])([]);
var swift = Concur_Dom.inline(["fas", " fa-swift"])([]);
var swatchbook = Concur_Dom.inline(["fas", " fa-swatchbook"])([]);
var suse = Concur_Dom.inline(["fas", " fa-suse"])([]);
var surprise = Concur_Dom.inline(["fas", " fa-surprise"])([]);
var supple = Concur_Dom.inline(["fas", " fa-supple"])([]);
var superscript = Concur_Dom.inline(["fas", " fa-superscript"])([]);
var superpowers = Concur_Dom.inline(["fas", " fa-superpowers"])([]);
var sun = Concur_Dom.inline(["fas", " fa-sun"])([]);
var suitcase_rolling = Concur_Dom.inline(["fas", " fa-suitcase-rolling"])([]);
var suitcase = Concur_Dom.inline(["fas", " fa-suitcase"])([]);
var subway = Concur_Dom.inline(["fas", " fa-subway"])([]);
var subscript = Concur_Dom.inline(["fas", " fa-subscript"])([]);
var stumbleupon_circle = Concur_Dom.inline(["fas", " fa-stumbleupon-circle"])([]);
var stumbleupon = Concur_Dom.inline(["fas", " fa-stumbleupon"])([]);
var studiovinari = Concur_Dom.inline(["fas", " fa-studiovinari"])([]);
var stroopwafel = Concur_Dom.inline(["fas", " fa-stroopwafel"])([]);
var stripe_s = Concur_Dom.inline(["fas", " fa-stripe-s"])([]);
var stripe = Concur_Dom.inline(["fas", " fa-stripe"])([]);
var strikethrough = Concur_Dom.inline(["fas", " fa-strikethrough"])([]);
var street_view = Concur_Dom.inline(["fas", " fa-street-view"])([]);
var stream = Concur_Dom.inline(["fas", " fa-stream"])([]);
var strava = Concur_Dom.inline(["fas", " fa-strava"])([]);
var store_slash = Concur_Dom.inline(["fas", " fa-store-slash"])([]);
var store_alt_slash = Concur_Dom.inline(["fas", " fa-store-alt-slash"])([]);
var store_alt = Concur_Dom.inline(["fas", " fa-store-alt"])([]);
var store = Concur_Dom.inline(["fas", " fa-store"])([]);
var stopwatch_20 = Concur_Dom.inline(["fas", " fa-stopwatch-20"])([]);
var stopwatch = Concur_Dom.inline(["fas", " fa-stopwatch"])([]);
var stop_circle = Concur_Dom.inline(["fas", " fa-stop-circle"])([]);
var stop = Concur_Dom.inline(["fas", " fa-stop"])([]);
var sticky_note = Concur_Dom.inline(["fas", " fa-sticky-note"])([]);
var sticker_mule = Concur_Dom.inline(["fas", " fa-sticker-mule"])([]);
var stethoscope = Concur_Dom.inline(["fas", " fa-stethoscope"])([]);
var step_forward = Concur_Dom.inline(["fas", " fa-step-forward"])([]);
var step_backward = Concur_Dom.inline(["fas", " fa-step-backward"])([]);
var steam_symbol = Concur_Dom.inline(["fas", " fa-steam-symbol"])([]);
var steam_square = Concur_Dom.inline(["fas", " fa-steam-square"])([]);
var steam = Concur_Dom.inline(["fas", " fa-steam"])([]);
var staylinked = Concur_Dom.inline(["fas", " fa-staylinked"])([]);
var star_of_life = Concur_Dom.inline(["fas", " fa-star-of-life"])([]);
var star_of_david = Concur_Dom.inline(["fas", " fa-star-of-david"])([]);
var star_half_alt = Concur_Dom.inline(["fas", " fa-star-half-alt"])([]);
var star_half = Concur_Dom.inline(["fas", " fa-star-half"])([]);
var star_and_crescent = Concur_Dom.inline(["fas", " fa-star-and-crescent"])([]);
var star = Concur_Dom.inline(["fas", " fa-star"])([]);
var stamp = Concur_Dom.inline(["fas", " fa-stamp"])([]);
var stackpath = Concur_Dom.inline(["fas", " fa-stackpath"])([]);
var stack_overflow = Concur_Dom.inline(["fas", " fa-stack-overflow"])([]);
var stack_exchange = Concur_Dom.inline(["fas", " fa-stack-exchange"])([]);
var squarespace = Concur_Dom.inline(["fas", " fa-squarespace"])([]);
var square_root_alt = Concur_Dom.inline(["fas", " fa-square-root-alt"])([]);
var square_full = Concur_Dom.inline(["fas", " fa-square-full"])([]);
var square = Concur_Dom.inline(["fas", " fa-square"])([]);
var spray_can = Concur_Dom.inline(["fas", " fa-spray-can"])([]);
var spotify = Concur_Dom.inline(["fas", " fa-spotify"])([]);
var splotch = Concur_Dom.inline(["fas", " fa-splotch"])([]);
var spinner = Concur_Dom.inline(["fas", " fa-spinner"])([]);
var spider = Concur_Dom.inline(["fas", " fa-spider"])([]);
var spell_check = Concur_Dom.inline(["fas", " fa-spell-check"])([]);
var speaker_deck = Concur_Dom.inline(["fas", " fa-speaker-deck"])([]);
var speakap = Concur_Dom.inline(["fas", " fa-speakap"])([]);
var space_shuttle = Concur_Dom.inline(["fas", " fa-space-shuttle"])([]);
var spa = Concur_Dom.inline(["fas", " fa-spa"])([]);
var sourcetree = Concur_Dom.inline(["fas", " fa-sourcetree"])([]);
var soundcloud = Concur_Dom.inline(["fas", " fa-soundcloud"])([]);
var sort_up = Concur_Dom.inline(["fas", " fa-sort-up"])([]);
var sort_numeric_up_alt = Concur_Dom.inline(["fas", " fa-sort-numeric-up-alt"])([]);
var sort_numeric_up = Concur_Dom.inline(["fas", " fa-sort-numeric-up"])([]);
var sort_numeric_down_alt = Concur_Dom.inline(["fas", " fa-sort-numeric-down-alt"])([]);
var sort_numeric_down = Concur_Dom.inline(["fas", " fa-sort-numeric-down"])([]);
var sort_down = Concur_Dom.inline(["fas", " fa-sort-down"])([]);
var sort_amount_up_alt = Concur_Dom.inline(["fas", " fa-sort-amount-up-alt"])([]);
var sort_amount_up = Concur_Dom.inline(["fas", " fa-sort-amount-up"])([]);
var sort_amount_down_alt = Concur_Dom.inline(["fas", " fa-sort-amount-down-alt"])([]);
var sort_amount_down = Concur_Dom.inline(["fas", " fa-sort-amount-down"])([]);
var sort_alpha_up_alt = Concur_Dom.inline(["fas", " fa-sort-alpha-up-alt"])([]);
var sort_alpha_up = Concur_Dom.inline(["fas", " fa-sort-alpha-up"])([]);
var sort_alpha_down_alt = Concur_Dom.inline(["fas", " fa-sort-alpha-down-alt"])([]);
var sort_alpha_down = Concur_Dom.inline(["fas", " fa-sort-alpha-down"])([]);
var sort = Concur_Dom.inline(["fas", " fa-sort"])([]);
var solar_panel = Concur_Dom.inline(["fas", " fa-solar-panel"])([]);
var socks = Concur_Dom.inline(["fas", " fa-socks"])([]);
var soap = Concur_Dom.inline(["fas", " fa-soap"])([]);
var snowplow = Concur_Dom.inline(["fas", " fa-snowplow"])([]);
var snowman = Concur_Dom.inline(["fas", " fa-snowman"])([]);
var snowflake = Concur_Dom.inline(["fas", " fa-snowflake"])([]);
var snowboarding = Concur_Dom.inline(["fas", " fa-snowboarding"])([]);
var snapchat_square = Concur_Dom.inline(["fas", " fa-snapchat-square"])([]);
var snapchat_ghost = Concur_Dom.inline(["fas", " fa-snapchat-ghost"])([]);
var snapchat = Concur_Dom.inline(["fas", " fa-snapchat"])([]);
var sms = Concur_Dom.inline(["fas", " fa-sms"])([]);
var smoking_ban = Concur_Dom.inline(["fas", " fa-smoking-ban"])([]);
var smoking = Concur_Dom.inline(["fas", " fa-smoking"])([]);
var smog = Concur_Dom.inline(["fas", " fa-smog"])([]);
var smile_wink = Concur_Dom.inline(["fas", " fa-smile-wink"])([]);
var smile_beam = Concur_Dom.inline(["fas", " fa-smile-beam"])([]);
var smile = Concur_Dom.inline(["fas", " fa-smile"])([]);
var slideshare = Concur_Dom.inline(["fas", " fa-slideshare"])([]);
var sliders_h = Concur_Dom.inline(["fas", " fa-sliders-h"])([]);
var sleigh = Concur_Dom.inline(["fas", " fa-sleigh"])([]);
var slash = Concur_Dom.inline(["fas", " fa-slash"])([]);
var slack_hash = Concur_Dom.inline(["fas", " fa-slack-hash"])([]);
var slack = Concur_Dom.inline(["fas", " fa-slack"])([]);
var skype = Concur_Dom.inline(["fas", " fa-skype"])([]);
var skyatlas = Concur_Dom.inline(["fas", " fa-skyatlas"])([]);
var skull_crossbones = Concur_Dom.inline(["fas", " fa-skull-crossbones"])([]);
var skull = Concur_Dom.inline(["fas", " fa-skull"])([]);
var skiing_nordic = Concur_Dom.inline(["fas", " fa-skiing-nordic"])([]);
var skiing = Concur_Dom.inline(["fas", " fa-skiing"])([]);
var sketch = Concur_Dom.inline(["fas", " fa-sketch"])([]);
var skating = Concur_Dom.inline(["fas", " fa-skating"])([]);
var sith = Concur_Dom.inline(["fas", " fa-sith"])([]);
var sitemap = Concur_Dom.inline(["fas", " fa-sitemap"])([]);
var sistrix = Concur_Dom.inline(["fas", " fa-sistrix"])([]);
var sink = Concur_Dom.inline(["fas", " fa-sink"])([]);
var simplybuilt = Concur_Dom.inline(["fas", " fa-simplybuilt"])([]);
var sim_card = Concur_Dom.inline(["fas", " fa-sim-card"])([]);
var signature = Concur_Dom.inline(["fas", " fa-signature"])([]);
var signal = Concur_Dom.inline(["fas", " fa-signal"])([]);
var sign_out_alt = Concur_Dom.inline(["fas", " fa-sign-out-alt"])([]);
var sign_language = Concur_Dom.inline(["fas", " fa-sign-language"])([]);
var sign_in_alt = Concur_Dom.inline(["fas", " fa-sign-in-alt"])([]);
var sign = Concur_Dom.inline(["fas", " fa-sign"])([]);
var shuttle_van = Concur_Dom.inline(["fas", " fa-shuttle-van"])([]);
var shower = Concur_Dom.inline(["fas", " fa-shower"])([]);
var shopware = Concur_Dom.inline(["fas", " fa-shopware"])([]);
var shopping_cart = Concur_Dom.inline(["fas", " fa-shopping-cart"])([]);
var shopping_basket = Concur_Dom.inline(["fas", " fa-shopping-basket"])([]);
var shopping_bag = Concur_Dom.inline(["fas", " fa-shopping-bag"])([]);
var shopify = Concur_Dom.inline(["fas", " fa-shopify"])([]);
var shoe_prints = Concur_Dom.inline(["fas", " fa-shoe-prints"])([]);
var shirtsinbulk = Concur_Dom.inline(["fas", " fa-shirtsinbulk"])([]);
var shipping_fast = Concur_Dom.inline(["fas", " fa-shipping-fast"])([]);
var ship = Concur_Dom.inline(["fas", " fa-ship"])([]);
var shield_virus = Concur_Dom.inline(["fas", " fa-shield-virus"])([]);
var shield_alt = Concur_Dom.inline(["fas", " fa-shield-alt"])([]);
var shekel_sign = Concur_Dom.inline(["fas", " fa-shekel-sign"])([]);
var share_square = Concur_Dom.inline(["fas", " fa-share-square"])([]);
var share_alt_square = Concur_Dom.inline(["fas", " fa-share-alt-square"])([]);
var share_alt = Concur_Dom.inline(["fas", " fa-share-alt"])([]);
var share = Concur_Dom.inline(["fas", " fa-share"])([]);
var shapes = Concur_Dom.inline(["fas", " fa-shapes"])([]);
var servicestack = Concur_Dom.inline(["fas", " fa-servicestack"])([]);
var server = Concur_Dom.inline(["fas", " fa-server"])([]);
var sellsy = Concur_Dom.inline(["fas", " fa-sellsy"])([]);
var sellcast = Concur_Dom.inline(["fas", " fa-sellcast"])([]);
var seedling = Concur_Dom.inline(["fas", " fa-seedling"])([]);
var searchengin = Concur_Dom.inline(["fas", " fa-searchengin"])([]);
var search_plus = Concur_Dom.inline(["fas", " fa-search-plus"])([]);
var search_minus = Concur_Dom.inline(["fas", " fa-search-minus"])([]);
var search_location = Concur_Dom.inline(["fas", " fa-search-location"])([]);
var search_dollar = Concur_Dom.inline(["fas", " fa-search-dollar"])([]);
var search = Concur_Dom.inline(["fas", " fa-search"])([]);
var sd_card = Concur_Dom.inline(["fas", " fa-sd-card"])([]);
var scroll = Concur_Dom.inline(["fas", " fa-scroll"])([]);
var scribd = Concur_Dom.inline(["fas", " fa-scribd"])([]);
var screwdriver = Concur_Dom.inline(["fas", " fa-screwdriver"])([]);
var school = Concur_Dom.inline(["fas", " fa-school"])([]);
var schlix = Concur_Dom.inline(["fas", " fa-schlix"])([]);
var save = Concur_Dom.inline(["fas", " fa-save"])([]);
var satellite_dish = Concur_Dom.inline(["fas", " fa-satellite-dish"])([]);
var satellite = Concur_Dom.inline(["fas", " fa-satellite"])([]);
var sass = Concur_Dom.inline(["fas", " fa-sass"])([]);
var salesforce = Concur_Dom.inline(["fas", " fa-salesforce"])([]);
var safari = Concur_Dom.inline(["fas", " fa-safari"])([]);
var sad_tear = Concur_Dom.inline(["fas", " fa-sad-tear"])([]);
var sad_cry = Concur_Dom.inline(["fas", " fa-sad-cry"])([]);
var rust = Concur_Dom.inline(["fas", " fa-rust"])([]);
var rupee_sign = Concur_Dom.inline(["fas", " fa-rupee-sign"])([]);
var running = Concur_Dom.inline(["fas", " fa-running"])([]);
var ruler_vertical = Concur_Dom.inline(["fas", " fa-ruler-vertical"])([]);
var ruler_horizontal = Concur_Dom.inline(["fas", " fa-ruler-horizontal"])([]);
var ruler_combined = Concur_Dom.inline(["fas", " fa-ruler-combined"])([]);
var ruler = Concur_Dom.inline(["fas", " fa-ruler"])([]);
var ruble_sign = Concur_Dom.inline(["fas", " fa-ruble-sign"])([]);
var rss_square = Concur_Dom.inline(["fas", " fa-rss-square"])([]);
var rss = Concur_Dom.inline(["fas", " fa-rss"])([]);
var route = Concur_Dom.inline(["fas", " fa-route"])([]);
var rockrms = Concur_Dom.inline(["fas", " fa-rockrms"])([]);
var rocketchat = Concur_Dom.inline(["fas", " fa-rocketchat"])([]);
var rocket = Concur_Dom.inline(["fas", " fa-rocket"])([]);
var robot = Concur_Dom.inline(["fas", " fa-robot"])([]);
var road = Concur_Dom.inline(["fas", " fa-road"])([]);
var ring = Concur_Dom.inline(["fas", " fa-ring"])([]);
var ribbon = Concur_Dom.inline(["fas", " fa-ribbon"])([]);
var rev = Concur_Dom.inline(["fas", " fa-rev"])([]);
var retweet = Concur_Dom.inline(["fas", " fa-retweet"])([]);
var restroom = Concur_Dom.inline(["fas", " fa-restroom"])([]);
var resolving = Concur_Dom.inline(["fas", " fa-resolving"])([]);
var researchgate = Concur_Dom.inline(["fas", " fa-researchgate"])([]);
var republican = Concur_Dom.inline(["fas", " fa-republican"])([]);
var replyd = Concur_Dom.inline(["fas", " fa-replyd"])([]);
var reply_all = Concur_Dom.inline(["fas", " fa-reply-all"])([]);
var reply = Concur_Dom.inline(["fas", " fa-reply"])([]);
var renren = Concur_Dom.inline(["fas", " fa-renren"])([]);
var remove_format = Concur_Dom.inline(["fas", " fa-remove-format"])([]);
var registered = Concur_Dom.inline(["fas", " fa-registered"])([]);
var redo_alt = Concur_Dom.inline(["fas", " fa-redo-alt"])([]);
var redo = Concur_Dom.inline(["fas", " fa-redo"])([]);
var redhat = Concur_Dom.inline(["fas", " fa-redhat"])([]);
var reddit_square = Concur_Dom.inline(["fas", " fa-reddit-square"])([]);
var reddit_alien = Concur_Dom.inline(["fas", " fa-reddit-alien"])([]);
var reddit = Concur_Dom.inline(["fas", " fa-reddit"])([]);
var red_river = Concur_Dom.inline(["fas", " fa-red-river"])([]);
var recycle = Concur_Dom.inline(["fas", " fa-recycle"])([]);
var record_vinyl = Concur_Dom.inline(["fas", " fa-record-vinyl"])([]);
var receipt = Concur_Dom.inline(["fas", " fa-receipt"])([]);
var rebel = Concur_Dom.inline(["fas", " fa-rebel"])([]);
var readme = Concur_Dom.inline(["fas", " fa-readme"])([]);
var reacteurope = Concur_Dom.inline(["fas", " fa-reacteurope"])([]);
var react = Concur_Dom.inline(["fas", " fa-react"])([]);
var ravelry = Concur_Dom.inline(["fas", " fa-ravelry"])([]);
var raspberry_pi = Concur_Dom.inline(["fas", " fa-raspberry-pi"])([]);
var random = Concur_Dom.inline(["fas", " fa-random"])([]);
var rainbow = Concur_Dom.inline(["fas", " fa-rainbow"])([]);
var radiation_alt = Concur_Dom.inline(["fas", " fa-radiation-alt"])([]);
var radiation = Concur_Dom.inline(["fas", " fa-radiation"])([]);
var r_project = Concur_Dom.inline(["fas", " fa-r-project"])([]);
var quran = Concur_Dom.inline(["fas", " fa-quran"])([]);
var quote_right = Concur_Dom.inline(["fas", " fa-quote-right"])([]);
var quote_left = Concur_Dom.inline(["fas", " fa-quote-left"])([]);
var quora = Concur_Dom.inline(["fas", " fa-quora"])([]);
var quinscape = Concur_Dom.inline(["fas", " fa-quinscape"])([]);
var quidditch = Concur_Dom.inline(["fas", " fa-quidditch"])([]);
var question_circle = Concur_Dom.inline(["fas", " fa-question-circle"])([]);
var question = Concur_Dom.inline(["fas", " fa-question"])([]);
var qrcode = Concur_Dom.inline(["fas", " fa-qrcode"])([]);
var qq = Concur_Dom.inline(["fas", " fa-qq"])([]);
var python = Concur_Dom.inline(["fas", " fa-python"])([]);
var puzzle_piece = Concur_Dom.inline(["fas", " fa-puzzle-piece"])([]);
var pushed = Concur_Dom.inline(["fas", " fa-pushed"])([]);
var pump_soap = Concur_Dom.inline(["fas", " fa-pump-soap"])([]);
var pump_medical = Concur_Dom.inline(["fas", " fa-pump-medical"])([]);
var project_diagram = Concur_Dom.inline(["fas", " fa-project-diagram"])([]);
var product_hunt = Concur_Dom.inline(["fas", " fa-product-hunt"])([]);
var procedures = Concur_Dom.inline(["fas", " fa-procedures"])([]);
var print = Concur_Dom.inline(["fas", " fa-print"])([]);
var prescription_bottle_alt = Concur_Dom.inline(["fas", " fa-prescription-bottle-alt"])([]);
var prescription_bottle = Concur_Dom.inline(["fas", " fa-prescription-bottle"])([]);
var prescription = Concur_Dom.inline(["fas", " fa-prescription"])([]);
var praying_hands = Concur_Dom.inline(["fas", " fa-praying-hands"])([]);
var pray = Concur_Dom.inline(["fas", " fa-pray"])([]);
var power_off = Concur_Dom.inline(["fas", " fa-power-off"])([]);
var pound_sign = Concur_Dom.inline(["fas", " fa-pound-sign"])([]);
var portrait = Concur_Dom.inline(["fas", " fa-portrait"])([]);
var poop = Concur_Dom.inline(["fas", " fa-poop"])([]);
var poo_storm = Concur_Dom.inline(["fas", " fa-poo-storm"])([]);
var poo = Concur_Dom.inline(["fas", " fa-poo"])([]);
var poll_h = Concur_Dom.inline(["fas", " fa-poll-h"])([]);
var poll = Concur_Dom.inline(["fas", " fa-poll"])([]);
var podcast = Concur_Dom.inline(["fas", " fa-podcast"])([]);
var plus_square = Concur_Dom.inline(["fas", " fa-plus-square"])([]);
var plus_circle = Concur_Dom.inline(["fas", " fa-plus-circle"])([]);
var plus = Concur_Dom.inline(["fas", " fa-plus"])([]);
var plug = Concur_Dom.inline(["fas", " fa-plug"])([]);
var playstation = Concur_Dom.inline(["fas", " fa-playstation"])([]);
var play_circle = Concur_Dom.inline(["fas", " fa-play-circle"])([]);
var play = Concur_Dom.inline(["fas", " fa-play"])([]);
var plane_slash = Concur_Dom.inline(["fas", " fa-plane-slash"])([]);
var plane_departure = Concur_Dom.inline(["fas", " fa-plane-departure"])([]);
var plane_arrival = Concur_Dom.inline(["fas", " fa-plane-arrival"])([]);
var plane = Concur_Dom.inline(["fas", " fa-plane"])([]);
var place_of_worship = Concur_Dom.inline(["fas", " fa-place-of-worship"])([]);
var pizza_slice = Concur_Dom.inline(["fas", " fa-pizza-slice"])([]);
var pinterest_square = Concur_Dom.inline(["fas", " fa-pinterest-square"])([]);
var pinterest_p = Concur_Dom.inline(["fas", " fa-pinterest-p"])([]);
var pinterest = Concur_Dom.inline(["fas", " fa-pinterest"])([]);
var pills = Concur_Dom.inline(["fas", " fa-pills"])([]);
var piggy_bank = Concur_Dom.inline(["fas", " fa-piggy-bank"])([]);
var pied_piper_square = Concur_Dom.inline(["fas", " fa-pied-piper-square"])([]);
var pied_piper_pp = Concur_Dom.inline(["fas", " fa-pied-piper-pp"])([]);
var pied_piper_hat = Concur_Dom.inline(["fas", " fa-pied-piper-hat"])([]);
var pied_piper_alt = Concur_Dom.inline(["fas", " fa-pied-piper-alt"])([]);
var pied_piper = Concur_Dom.inline(["fas", " fa-pied-piper"])([]);
var php = Concur_Dom.inline(["fas", " fa-php"])([]);
var photo_video = Concur_Dom.inline(["fas", " fa-photo-video"])([]);
var phone_volume = Concur_Dom.inline(["fas", " fa-phone-volume"])([]);
var phone_square_alt = Concur_Dom.inline(["fas", " fa-phone-square-alt"])([]);
var phone_square = Concur_Dom.inline(["fas", " fa-phone-square"])([]);
var phone_slash = Concur_Dom.inline(["fas", " fa-phone-slash"])([]);
var phone_alt = Concur_Dom.inline(["fas", " fa-phone-alt"])([]);
var phone = Concur_Dom.inline(["fas", " fa-phone"])([]);
var phoenix_squadron = Concur_Dom.inline(["fas", " fa-phoenix-squadron"])([]);
var phoenix_framework = Concur_Dom.inline(["fas", " fa-phoenix-framework"])([]);
var phabricator = Concur_Dom.inline(["fas", " fa-phabricator"])([]);
var person_booth = Concur_Dom.inline(["fas", " fa-person-booth"])([]);
var periscope = Concur_Dom.inline(["fas", " fa-periscope"])([]);
var percentage = Concur_Dom.inline(["fas", " fa-percentage"])([]);
var percent = Concur_Dom.inline(["fas", " fa-percent"])([]);
var perbyte = Concur_Dom.inline(["fas", " fa-perbyte"])([]);
var pepper_hot = Concur_Dom.inline(["fas", " fa-pepper-hot"])([]);
var people_carry = Concur_Dom.inline(["fas", " fa-people-carry"])([]);
var people_arrows = Concur_Dom.inline(["fas", " fa-people-arrows"])([]);
var penny_arcade = Concur_Dom.inline(["fas", " fa-penny-arcade"])([]);
var pencil_ruler = Concur_Dom.inline(["fas", " fa-pencil-ruler"])([]);
var pencil_alt = Concur_Dom.inline(["fas", " fa-pencil-alt"])([]);
var pen_square = Concur_Dom.inline(["fas", " fa-pen-square"])([]);
var pen_nib = Concur_Dom.inline(["fas", " fa-pen-nib"])([]);
var pen_fancy = Concur_Dom.inline(["fas", " fa-pen-fancy"])([]);
var pen_alt = Concur_Dom.inline(["fas", " fa-pen-alt"])([]);
var pen = Concur_Dom.inline(["fas", " fa-pen"])([]);
var peace = Concur_Dom.inline(["fas", " fa-peace"])([]);
var paypal = Concur_Dom.inline(["fas", " fa-paypal"])([]);
var paw = Concur_Dom.inline(["fas", " fa-paw"])([]);
var pause_circle = Concur_Dom.inline(["fas", " fa-pause-circle"])([]);
var pause = Concur_Dom.inline(["fas", " fa-pause"])([]);
var patreon = Concur_Dom.inline(["fas", " fa-patreon"])([]);
var paste = Concur_Dom.inline(["fas", " fa-paste"])([]);
var pastafarianism = Concur_Dom.inline(["fas", " fa-pastafarianism"])([]);
var passport = Concur_Dom.inline(["fas", " fa-passport"])([]);
var parking = Concur_Dom.inline(["fas", " fa-parking"])([]);
var paragraph = Concur_Dom.inline(["fas", " fa-paragraph"])([]);
var parachute_box = Concur_Dom.inline(["fas", " fa-parachute-box"])([]);
var paperclip = Concur_Dom.inline(["fas", " fa-paperclip"])([]);
var paper_plane = Concur_Dom.inline(["fas", " fa-paper-plane"])([]);
var pallet = Concur_Dom.inline(["fas", " fa-pallet"])([]);
var palfed = Concur_Dom.inline(["fas", " fa-palfed"])([]);
var palette = Concur_Dom.inline(["fas", " fa-palette"])([]);
var paint_roller = Concur_Dom.inline(["fas", " fa-paint-roller"])([]);
var paint_brush = Concur_Dom.inline(["fas", " fa-paint-brush"])([]);
var pager = Concur_Dom.inline(["fas", " fa-pager"])([]);
var pagelines = Concur_Dom.inline(["fas", " fa-pagelines"])([]);
var page4 = Concur_Dom.inline(["fas", " fa-page4"])([]);
var outdent = Concur_Dom.inline(["fas", " fa-outdent"])([]);
var otter = Concur_Dom.inline(["fas", " fa-otter"])([]);
var osi = Concur_Dom.inline(["fas", " fa-osi"])([]);
var orcid = Concur_Dom.inline(["fas", " fa-orcid"])([]);
var optin_monster = Concur_Dom.inline(["fas", " fa-optin-monster"])([]);
var opera = Concur_Dom.inline(["fas", " fa-opera"])([]);
var openid = Concur_Dom.inline(["fas", " fa-openid"])([]);
var opencart = Concur_Dom.inline(["fas", " fa-opencart"])([]);
var om = Concur_Dom.inline(["fas", " fa-om"])([]);
var old_republic = Concur_Dom.inline(["fas", " fa-old-republic"])([]);
var oil_can = Concur_Dom.inline(["fas", " fa-oil-can"])([]);
var odnoklassniki_square = Concur_Dom.inline(["fas", " fa-odnoklassniki-square"])([]);
var odnoklassniki = Concur_Dom.inline(["fas", " fa-odnoklassniki"])([]);
var octopus_deploy = Concur_Dom.inline(["fas", " fa-octopus-deploy"])([]);
var object_ungroup = Concur_Dom.inline(["fas", " fa-object-ungroup"])([]);
var object_group = Concur_Dom.inline(["fas", " fa-object-group"])([]);
var nutritionix = Concur_Dom.inline(["fas", " fa-nutritionix"])([]);
var ns8 = Concur_Dom.inline(["fas", " fa-ns8"])([]);
var npm = Concur_Dom.inline(["fas", " fa-npm"])([]);
var notes_medical = Concur_Dom.inline(["fas", " fa-notes-medical"])([]);
var not_equal = Concur_Dom.inline(["fas", " fa-not-equal"])([]);
var none = Concur_Dom.inline([])([]);
var node_js = Concur_Dom.inline(["fas", " fa-node-js"])([]);
var node = Concur_Dom.inline(["fas", " fa-node"])([]);
var nimblr = Concur_Dom.inline(["fas", " fa-nimblr"])([]);
var newspaper = Concur_Dom.inline(["fas", " fa-newspaper"])([]);
var neuter = Concur_Dom.inline(["fas", " fa-neuter"])([]);
var network_wired = Concur_Dom.inline(["fas", " fa-network-wired"])([]);
var neos = Concur_Dom.inline(["fas", " fa-neos"])([]);
var napster = Concur_Dom.inline(["fas", " fa-napster"])([]);
var music = Concur_Dom.inline(["fas", " fa-music"])([]);
var mug_hot = Concur_Dom.inline(["fas", " fa-mug-hot"])([]);
var mouse_pointer = Concur_Dom.inline(["fas", " fa-mouse-pointer"])([]);
var mouse = Concur_Dom.inline(["fas", " fa-mouse"])([]);
var mountain = Concur_Dom.inline(["fas", " fa-mountain"])([]);
var motorcycle = Concur_Dom.inline(["fas", " fa-motorcycle"])([]);
var mosque = Concur_Dom.inline(["fas", " fa-mosque"])([]);
var mortar_pestle = Concur_Dom.inline(["fas", " fa-mortar-pestle"])([]);
var moon = Concur_Dom.inline(["fas", " fa-moon"])([]);
var monument = Concur_Dom.inline(["fas", " fa-monument"])([]);
var money_check_alt = Concur_Dom.inline(["fas", " fa-money-check-alt"])([]);
var money_check = Concur_Dom.inline(["fas", " fa-money-check"])([]);
var money_bill_wave_alt = Concur_Dom.inline(["fas", " fa-money-bill-wave-alt"])([]);
var money_bill_wave = Concur_Dom.inline(["fas", " fa-money-bill-wave"])([]);
var money_bill_alt = Concur_Dom.inline(["fas", " fa-money-bill-alt"])([]);
var money_bill = Concur_Dom.inline(["fas", " fa-money-bill"])([]);
var monero = Concur_Dom.inline(["fas", " fa-monero"])([]);
var modx = Concur_Dom.inline(["fas", " fa-modx"])([]);
var mobile_alt = Concur_Dom.inline(["fas", " fa-mobile-alt"])([]);
var mobile = Concur_Dom.inline(["fas", " fa-mobile"])([]);
var mizuni = Concur_Dom.inline(["fas", " fa-mizuni"])([]);
var mixer = Concur_Dom.inline(["fas", " fa-mixer"])([]);
var mixcloud = Concur_Dom.inline(["fas", " fa-mixcloud"])([]);
var mix = Concur_Dom.inline(["fas", " fa-mix"])([]);
var mitten = Concur_Dom.inline(["fas", " fa-mitten"])([]);
var minus_square = Concur_Dom.inline(["fas", " fa-minus-square"])([]);
var minus_circle = Concur_Dom.inline(["fas", " fa-minus-circle"])([]);
var minus = Concur_Dom.inline(["fas", " fa-minus"])([]);
var microsoft = Concur_Dom.inline(["fas", " fa-microsoft"])([]);
var microscope = Concur_Dom.inline(["fas", " fa-microscope"])([]);
var microphone_slash = Concur_Dom.inline(["fas", " fa-microphone-slash"])([]);
var microphone_alt_slash = Concur_Dom.inline(["fas", " fa-microphone-alt-slash"])([]);
var microphone_alt = Concur_Dom.inline(["fas", " fa-microphone-alt"])([]);
var microphone = Concur_Dom.inline(["fas", " fa-microphone"])([]);
var microchip = Concur_Dom.inline(["fas", " fa-microchip"])([]);
var microblog = Concur_Dom.inline(["fas", " fa-microblog"])([]);
var meteor = Concur_Dom.inline(["fas", " fa-meteor"])([]);
var mercury = Concur_Dom.inline(["fas", " fa-mercury"])([]);
var menorah = Concur_Dom.inline(["fas", " fa-menorah"])([]);
var mendeley = Concur_Dom.inline(["fas", " fa-mendeley"])([]);
var memory = Concur_Dom.inline(["fas", " fa-memory"])([]);
var meh_rolling_eyes = Concur_Dom.inline(["fas", " fa-meh-rolling-eyes"])([]);
var meh_blank = Concur_Dom.inline(["fas", " fa-meh-blank"])([]);
var meh = Concur_Dom.inline(["fas", " fa-meh"])([]);
var megaport = Concur_Dom.inline(["fas", " fa-megaport"])([]);
var meetup = Concur_Dom.inline(["fas", " fa-meetup"])([]);
var medrt = Concur_Dom.inline(["fas", " fa-medrt"])([]);
var medkit = Concur_Dom.inline(["fas", " fa-medkit"])([]);
var medium_m = Concur_Dom.inline(["fas", " fa-medium-m"])([]);
var medium = Concur_Dom.inline(["fas", " fa-medium"])([]);
var medapps = Concur_Dom.inline(["fas", " fa-medapps"])([]);
var medal = Concur_Dom.inline(["fas", " fa-medal"])([]);
var mdb = Concur_Dom.inline(["fas", " fa-mdb"])([]);
var maxcdn = Concur_Dom.inline(["fas", " fa-maxcdn"])([]);
var mastodon = Concur_Dom.inline(["fas", " fa-mastodon"])([]);
var mask = Concur_Dom.inline(["fas", " fa-mask"])([]);
var mars_stroke_v = Concur_Dom.inline(["fas", " fa-mars-stroke-v"])([]);
var mars_stroke_h = Concur_Dom.inline(["fas", " fa-mars-stroke-h"])([]);
var mars_stroke = Concur_Dom.inline(["fas", " fa-mars-stroke"])([]);
var mars_double = Concur_Dom.inline(["fas", " fa-mars-double"])([]);
var mars = Concur_Dom.inline(["fas", " fa-mars"])([]);
var marker = Concur_Dom.inline(["fas", " fa-marker"])([]);
var markdown = Concur_Dom.inline(["fas", " fa-markdown"])([]);
var map_signs = Concur_Dom.inline(["fas", " fa-map-signs"])([]);
var map_pin = Concur_Dom.inline(["fas", " fa-map-pin"])([]);
var map_marker_alt = Concur_Dom.inline(["fas", " fa-map-marker-alt"])([]);
var map_marker = Concur_Dom.inline(["fas", " fa-map-marker"])([]);
var map_marked_alt = Concur_Dom.inline(["fas", " fa-map-marked-alt"])([]);
var map_marked = Concur_Dom.inline(["fas", " fa-map-marked"])([]);
var map = Concur_Dom.inline(["fas", " fa-map"])([]);
var mandalorian = Concur_Dom.inline(["fas", " fa-mandalorian"])([]);
var male = Concur_Dom.inline(["fas", " fa-male"])([]);
var mailchimp = Concur_Dom.inline(["fas", " fa-mailchimp"])([]);
var mail_bulk = Concur_Dom.inline(["fas", " fa-mail-bulk"])([]);
var magnet = Concur_Dom.inline(["fas", " fa-magnet"])([]);
var magic = Concur_Dom.inline(["fas", " fa-magic"])([]);
var magento = Concur_Dom.inline(["fas", " fa-magento"])([]);
var lyft = Concur_Dom.inline(["fas", " fa-lyft"])([]);
var lungs_virus = Concur_Dom.inline(["fas", " fa-lungs-virus"])([]);
var lungs = Concur_Dom.inline(["fas", " fa-lungs"])([]);
var luggage_cart = Concur_Dom.inline(["fas", " fa-luggage-cart"])([]);
var low_vision = Concur_Dom.inline(["fas", " fa-low-vision"])([]);
var long_arrow_alt_up = Concur_Dom.inline(["fas", " fa-long-arrow-alt-up"])([]);
var long_arrow_alt_right = Concur_Dom.inline(["fas", " fa-long-arrow-alt-right"])([]);
var long_arrow_alt_left = Concur_Dom.inline(["fas", " fa-long-arrow-alt-left"])([]);
var long_arrow_alt_down = Concur_Dom.inline(["fas", " fa-long-arrow-alt-down"])([]);
var lock_open = Concur_Dom.inline(["fas", " fa-lock-open"])([]);
var lock = Concur_Dom.inline(["fas", " fa-lock"])([]);
var location_arrow = Concur_Dom.inline(["fas", " fa-location-arrow"])([]);
var list_ul = Concur_Dom.inline(["fas", " fa-list-ul"])([]);
var list_ol = Concur_Dom.inline(["fas", " fa-list-ol"])([]);
var list_alt = Concur_Dom.inline(["fas", " fa-list-alt"])([]);
var list = Concur_Dom.inline(["fas", " fa-list"])([]);
var lira_sign = Concur_Dom.inline(["fas", " fa-lira-sign"])([]);
var linux = Concur_Dom.inline(["fas", " fa-linux"])([]);
var linode = Concur_Dom.inline(["fas", " fa-linode"])([]);
var linkedin_in = Concur_Dom.inline(["fas", " fa-linkedin-in"])([]);
var linkedin = Concur_Dom.inline(["fas", " fa-linkedin"])([]);
var link = Concur_Dom.inline(["fas", " fa-link"])([]);
var line = Concur_Dom.inline(["fas", " fa-line"])([]);
var lightbulb = Concur_Dom.inline(["fas", " fa-lightbulb"])([]);
var life_ring = Concur_Dom.inline(["fas", " fa-life-ring"])([]);
var level_up_alt = Concur_Dom.inline(["fas", " fa-level-up-alt"])([]);
var level_down_alt = Concur_Dom.inline(["fas", " fa-level-down-alt"])([]);
var less_than_equal = Concur_Dom.inline(["fas", " fa-less-than-equal"])([]);
var less_than = Concur_Dom.inline(["fas", " fa-less-than"])([]);
var less = Concur_Dom.inline(["fas", " fa-less"])([]);
var lemon = Concur_Dom.inline(["fas", " fa-lemon"])([]);
var leanpub = Concur_Dom.inline(["fas", " fa-leanpub"])([]);
var leaf = Concur_Dom.inline(["fas", " fa-leaf"])([]);
var layer_group = Concur_Dom.inline(["fas", " fa-layer-group"])([]);
var laugh_wink = Concur_Dom.inline(["fas", " fa-laugh-wink"])([]);
var laugh_squint = Concur_Dom.inline(["fas", " fa-laugh-squint"])([]);
var laugh_beam = Concur_Dom.inline(["fas", " fa-laugh-beam"])([]);
var laugh = Concur_Dom.inline(["fas", " fa-laugh"])([]);
var lastfm_square = Concur_Dom.inline(["fas", " fa-lastfm-square"])([]);
var lastfm = Concur_Dom.inline(["fas", " fa-lastfm"])([]);
var laravel = Concur_Dom.inline(["fas", " fa-laravel"])([]);
var laptop_medical = Concur_Dom.inline(["fas", " fa-laptop-medical"])([]);
var laptop_house = Concur_Dom.inline(["fas", " fa-laptop-house"])([]);
var laptop_code = Concur_Dom.inline(["fas", " fa-laptop-code"])([]);
var laptop = Concur_Dom.inline(["fas", " fa-laptop"])([]);
var language = Concur_Dom.inline(["fas", " fa-language"])([]);
var landmark = Concur_Dom.inline(["fas", " fa-landmark"])([]);
var korvue = Concur_Dom.inline(["fas", " fa-korvue"])([]);
var kiwi_bird = Concur_Dom.inline(["fas", " fa-kiwi-bird"])([]);
var kiss_wink_heart = Concur_Dom.inline(["fas", " fa-kiss-wink-heart"])([]);
var kiss_beam = Concur_Dom.inline(["fas", " fa-kiss-beam"])([]);
var kiss = Concur_Dom.inline(["fas", " fa-kiss"])([]);
var kickstarter_k = Concur_Dom.inline(["fas", " fa-kickstarter-k"])([]);
var kickstarter = Concur_Dom.inline(["fas", " fa-kickstarter"])([]);
var khanda = Concur_Dom.inline(["fas", " fa-khanda"])([]);
var keycdn = Concur_Dom.inline(["fas", " fa-keycdn"])([]);
var keyboard = Concur_Dom.inline(["fas", " fa-keyboard"])([]);
var keybase = Concur_Dom.inline(["fas", " fa-keybase"])([]);
var key = Concur_Dom.inline(["fas", " fa-key"])([]);
var kaggle = Concur_Dom.inline(["fas", " fa-kaggle"])([]);
var kaaba = Concur_Dom.inline(["fas", " fa-kaaba"])([]);
var jsfiddle = Concur_Dom.inline(["fas", " fa-jsfiddle"])([]);
var js_square = Concur_Dom.inline(["fas", " fa-js-square"])([]);
var js = Concur_Dom.inline(["fas", " fa-js"])([]);
var journal_whills = Concur_Dom.inline(["fas", " fa-journal-whills"])([]);
var joomla = Concur_Dom.inline(["fas", " fa-joomla"])([]);
var joint = Concur_Dom.inline(["fas", " fa-joint"])([]);
var joget = Concur_Dom.inline(["fas", " fa-joget"])([]);
var jira = Concur_Dom.inline(["fas", " fa-jira"])([]);
var jenkins = Concur_Dom.inline(["fas", " fa-jenkins"])([]);
var jedi_order = Concur_Dom.inline(["fas", " fa-jedi-order"])([]);
var jedi = Concur_Dom.inline(["fas", " fa-jedi"])([]);
var java = Concur_Dom.inline(["fas", " fa-java"])([]);
var itunes_note = Concur_Dom.inline(["fas", " fa-itunes-note"])([]);
var itunes = Concur_Dom.inline(["fas", " fa-itunes"])([]);
var itch_io = Concur_Dom.inline(["fas", " fa-itch-io"])([]);
var italic = Concur_Dom.inline(["fas", " fa-italic"])([]);
var ioxhost = Concur_Dom.inline(["fas", " fa-ioxhost"])([]);
var invision = Concur_Dom.inline(["fas", " fa-invision"])([]);
var internet_explorer = Concur_Dom.inline(["fas", " fa-internet-explorer"])([]);
var intercom = Concur_Dom.inline(["fas", " fa-intercom"])([]);
var instalod = Concur_Dom.inline(["fas", " fa-instalod"])([]);
var instagram_square = Concur_Dom.inline(["fas", " fa-instagram-square"])([]);
var instagram = Concur_Dom.inline(["fas", " fa-instagram"])([]);
var innosoft = Concur_Dom.inline(["fas", " fa-innosoft"])([]);
var info_circle = Concur_Dom.inline(["fas", " fa-info-circle"])([]);
var info = Concur_Dom.inline(["fas", " fa-info"])([]);
var infinity = Concur_Dom.inline(["fas", " fa-infinity"])([]);
var industry = Concur_Dom.inline(["fas", " fa-industry"])([]);
var indent = Concur_Dom.inline(["fas", " fa-indent"])([]);
var inbox = Concur_Dom.inline(["fas", " fa-inbox"])([]);
var imdb = Concur_Dom.inline(["fas", " fa-imdb"])([]);
var images = Concur_Dom.inline(["fas", " fa-images"])([]);
var image = Concur_Dom.inline(["fas", " fa-image"])([]);
var igloo = Concur_Dom.inline(["fas", " fa-igloo"])([]);
var ideal = Concur_Dom.inline(["fas", " fa-ideal"])([]);
var id_card_alt = Concur_Dom.inline(["fas", " fa-id-card-alt"])([]);
var id_card = Concur_Dom.inline(["fas", " fa-id-card"])([]);
var id_badge = Concur_Dom.inline(["fas", " fa-id-badge"])([]);
var icons = Concur_Dom.inline(["fas", " fa-icons"])([]);
var icicles = Concur_Dom.inline(["fas", " fa-icicles"])([]);
var ice_cream = Concur_Dom.inline(["fas", " fa-ice-cream"])([]);
var i_cursor = Concur_Dom.inline(["fas", " fa-i-cursor"])([]);
var hubspot = Concur_Dom.inline(["fas", " fa-hubspot"])([]);
var html5 = Concur_Dom.inline(["fas", " fa-html5"])([]);
var hryvnia = Concur_Dom.inline(["fas", " fa-hryvnia"])([]);
var houzz = Concur_Dom.inline(["fas", " fa-houzz"])([]);
var house_user = Concur_Dom.inline(["fas", " fa-house-user"])([]);
var house_damage = Concur_Dom.inline(["fas", " fa-house-damage"])([]);
var hourglass_start = Concur_Dom.inline(["fas", " fa-hourglass-start"])([]);
var hourglass_half = Concur_Dom.inline(["fas", " fa-hourglass-half"])([]);
var hourglass_end = Concur_Dom.inline(["fas", " fa-hourglass-end"])([]);
var hourglass = Concur_Dom.inline(["fas", " fa-hourglass"])([]);
var hotjar = Concur_Dom.inline(["fas", " fa-hotjar"])([]);
var hotel = Concur_Dom.inline(["fas", " fa-hotel"])([]);
var hotdog = Concur_Dom.inline(["fas", " fa-hotdog"])([]);
var hot_tub = Concur_Dom.inline(["fas", " fa-hot-tub"])([]);
var hospital_user = Concur_Dom.inline(["fas", " fa-hospital-user"])([]);
var hospital_symbol = Concur_Dom.inline(["fas", " fa-hospital-symbol"])([]);
var hospital_alt = Concur_Dom.inline(["fas", " fa-hospital-alt"])([]);
var hospital = Concur_Dom.inline(["fas", " fa-hospital"])([]);
var horse_head = Concur_Dom.inline(["fas", " fa-horse-head"])([]);
var horse = Concur_Dom.inline(["fas", " fa-horse"])([]);
var hornbill = Concur_Dom.inline(["fas", " fa-hornbill"])([]);
var hooli = Concur_Dom.inline(["fas", " fa-hooli"])([]);
var home = Concur_Dom.inline(["fas", " fa-home"])([]);
var holly_berry = Concur_Dom.inline(["fas", " fa-holly-berry"])([]);
var hockey_puck = Concur_Dom.inline(["fas", " fa-hockey-puck"])([]);
var hive = Concur_Dom.inline(["fas", " fa-hive"])([]);
var history = Concur_Dom.inline(["fas", " fa-history"])([]);
var hire_a_helper = Concur_Dom.inline(["fas", " fa-hire-a-helper"])([]);
var hips = Concur_Dom.inline(["fas", " fa-hips"])([]);
var hippo = Concur_Dom.inline(["fas", " fa-hippo"])([]);
var hiking = Concur_Dom.inline(["fas", " fa-hiking"])([]);
var highlighter = Concur_Dom.inline(["fas", " fa-highlighter"])([]);
var helicopter = Concur_Dom.inline(["fas", " fa-helicopter"])([]);
var heartbeat = Concur_Dom.inline(["fas", " fa-heartbeat"])([]);
var heart_broken = Concur_Dom.inline(["fas", " fa-heart-broken"])([]);
var heart = Concur_Dom.inline(["fas", " fa-heart"])([]);
var headset = Concur_Dom.inline(["fas", " fa-headset"])([]);
var headphones_alt = Concur_Dom.inline(["fas", " fa-headphones-alt"])([]);
var headphones = Concur_Dom.inline(["fas", " fa-headphones"])([]);
var heading = Concur_Dom.inline(["fas", " fa-heading"])([]);
var head_side_virus = Concur_Dom.inline(["fas", " fa-head-side-virus"])([]);
var head_side_mask = Concur_Dom.inline(["fas", " fa-head-side-mask"])([]);
var head_side_cough_slash = Concur_Dom.inline(["fas", " fa-head-side-cough-slash"])([]);
var head_side_cough = Concur_Dom.inline(["fas", " fa-head-side-cough"])([]);
var hdd = Concur_Dom.inline(["fas", " fa-hdd"])([]);
var hat_wizard = Concur_Dom.inline(["fas", " fa-hat-wizard"])([]);
var hat_cowboy_side = Concur_Dom.inline(["fas", " fa-hat-cowboy-side"])([]);
var hat_cowboy = Concur_Dom.inline(["fas", " fa-hat-cowboy"])([]);
var hashtag = Concur_Dom.inline(["fas", " fa-hashtag"])([]);
var hard_hat = Concur_Dom.inline(["fas", " fa-hard-hat"])([]);
var hanukiah = Concur_Dom.inline(["fas", " fa-hanukiah"])([]);
var handshake_slash = Concur_Dom.inline(["fas", " fa-handshake-slash"])([]);
var handshake_alt_slash = Concur_Dom.inline(["fas", " fa-handshake-alt-slash"])([]);
var handshake = Concur_Dom.inline(["fas", " fa-handshake"])([]);
var hands_wash = Concur_Dom.inline(["fas", " fa-hands-wash"])([]);
var hands_helping = Concur_Dom.inline(["fas", " fa-hands-helping"])([]);
var hands = Concur_Dom.inline(["fas", " fa-hands"])([]);
var hand_spock = Concur_Dom.inline(["fas", " fa-hand-spock"])([]);
var hand_sparkles = Concur_Dom.inline(["fas", " fa-hand-sparkles"])([]);
var hand_scissors = Concur_Dom.inline(["fas", " fa-hand-scissors"])([]);
var hand_rock = Concur_Dom.inline(["fas", " fa-hand-rock"])([]);
var hand_pointer = Concur_Dom.inline(["fas", " fa-hand-pointer"])([]);
var hand_point_up = Concur_Dom.inline(["fas", " fa-hand-point-up"])([]);
var hand_point_right = Concur_Dom.inline(["fas", " fa-hand-point-right"])([]);
var hand_point_left = Concur_Dom.inline(["fas", " fa-hand-point-left"])([]);
var hand_point_down = Concur_Dom.inline(["fas", " fa-hand-point-down"])([]);
var hand_peace = Concur_Dom.inline(["fas", " fa-hand-peace"])([]);
var hand_paper = Concur_Dom.inline(["fas", " fa-hand-paper"])([]);
var hand_middle_finger = Concur_Dom.inline(["fas", " fa-hand-middle-finger"])([]);
var hand_lizard = Concur_Dom.inline(["fas", " fa-hand-lizard"])([]);
var hand_holding_water = Concur_Dom.inline(["fas", " fa-hand-holding-water"])([]);
var hand_holding_usd = Concur_Dom.inline(["fas", " fa-hand-holding-usd"])([]);
var hand_holding_medical = Concur_Dom.inline(["fas", " fa-hand-holding-medical"])([]);
var hand_holding_heart = Concur_Dom.inline(["fas", " fa-hand-holding-heart"])([]);
var hand_holding = Concur_Dom.inline(["fas", " fa-hand-holding"])([]);
var hamsa = Concur_Dom.inline(["fas", " fa-hamsa"])([]);
var hammer = Concur_Dom.inline(["fas", " fa-hammer"])([]);
var hamburger = Concur_Dom.inline(["fas", " fa-hamburger"])([]);
var hackerrank = Concur_Dom.inline(["fas", " fa-hackerrank"])([]);
var hacker_news_square = Concur_Dom.inline(["fas", " fa-hacker-news-square"])([]);
var hacker_news = Concur_Dom.inline(["fas", " fa-hacker-news"])([]);
var h_square = Concur_Dom.inline(["fas", " fa-h-square"])([]);
var gulp = Concur_Dom.inline(["fas", " fa-gulp"])([]);
var guitar = Concur_Dom.inline(["fas", " fa-guitar"])([]);
var guilded = Concur_Dom.inline(["fas", " fa-guilded"])([]);
var grunt = Concur_Dom.inline(["fas", " fa-grunt"])([]);
var gripfire = Concur_Dom.inline(["fas", " fa-gripfire"])([]);
var grip_vertical = Concur_Dom.inline(["fas", " fa-grip-vertical"])([]);
var grip_lines_vertical = Concur_Dom.inline(["fas", " fa-grip-lines-vertical"])([]);
var grip_lines = Concur_Dom.inline(["fas", " fa-grip-lines"])([]);
var grip_horizontal = Concur_Dom.inline(["fas", " fa-grip-horizontal"])([]);
var grin_wink = Concur_Dom.inline(["fas", " fa-grin-wink"])([]);
var grin_tongue_wink = Concur_Dom.inline(["fas", " fa-grin-tongue-wink"])([]);
var grin_tongue_squint = Concur_Dom.inline(["fas", " fa-grin-tongue-squint"])([]);
var grin_tongue = Concur_Dom.inline(["fas", " fa-grin-tongue"])([]);
var grin_tears = Concur_Dom.inline(["fas", " fa-grin-tears"])([]);
var grin_stars = Concur_Dom.inline(["fas", " fa-grin-stars"])([]);
var grin_squint_tears = Concur_Dom.inline(["fas", " fa-grin-squint-tears"])([]);
var grin_squint = Concur_Dom.inline(["fas", " fa-grin-squint"])([]);
var grin_hearts = Concur_Dom.inline(["fas", " fa-grin-hearts"])([]);
var grin_beam_sweat = Concur_Dom.inline(["fas", " fa-grin-beam-sweat"])([]);
var grin_beam = Concur_Dom.inline(["fas", " fa-grin-beam"])([]);
var grin_alt = Concur_Dom.inline(["fas", " fa-grin-alt"])([]);
var grin = Concur_Dom.inline(["fas", " fa-grin"])([]);
var grimace = Concur_Dom.inline(["fas", " fa-grimace"])([]);
var greater_than_equal = Concur_Dom.inline(["fas", " fa-greater-than-equal"])([]);
var greater_than = Concur_Dom.inline(["fas", " fa-greater-than"])([]);
var grav = Concur_Dom.inline(["fas", " fa-grav"])([]);
var gratipay = Concur_Dom.inline(["fas", " fa-gratipay"])([]);
var graduation_cap = Concur_Dom.inline(["fas", " fa-graduation-cap"])([]);
var gopuram = Concur_Dom.inline(["fas", " fa-gopuram"])([]);
var google_wallet = Concur_Dom.inline(["fas", " fa-google-wallet"])([]);
var google_plus_square = Concur_Dom.inline(["fas", " fa-google-plus-square"])([]);
var google_plus_g = Concur_Dom.inline(["fas", " fa-google-plus-g"])([]);
var google_plus = Concur_Dom.inline(["fas", " fa-google-plus"])([]);
var google_play = Concur_Dom.inline(["fas", " fa-google-play"])([]);
var google_pay = Concur_Dom.inline(["fas", " fa-google-pay"])([]);
var google_drive = Concur_Dom.inline(["fas", " fa-google-drive"])([]);
var google = Concur_Dom.inline(["fas", " fa-google"])([]);
var goodreads_g = Concur_Dom.inline(["fas", " fa-goodreads-g"])([]);
var goodreads = Concur_Dom.inline(["fas", " fa-goodreads"])([]);
var golf_ball = Concur_Dom.inline(["fas", " fa-golf-ball"])([]);
var gofore = Concur_Dom.inline(["fas", " fa-gofore"])([]);
var globe_europe = Concur_Dom.inline(["fas", " fa-globe-europe"])([]);
var globe_asia = Concur_Dom.inline(["fas", " fa-globe-asia"])([]);
var globe_americas = Concur_Dom.inline(["fas", " fa-globe-americas"])([]);
var globe_africa = Concur_Dom.inline(["fas", " fa-globe-africa"])([]);
var globe = Concur_Dom.inline(["fas", " fa-globe"])([]);
var glide_g = Concur_Dom.inline(["fas", " fa-glide-g"])([]);
var glide = Concur_Dom.inline(["fas", " fa-glide"])([]);
var glasses = Concur_Dom.inline(["fas", " fa-glasses"])([]);
var glass_whiskey = Concur_Dom.inline(["fas", " fa-glass-whiskey"])([]);
var glass_martini_alt = Concur_Dom.inline(["fas", " fa-glass-martini-alt"])([]);
var glass_martini = Concur_Dom.inline(["fas", " fa-glass-martini"])([]);
var glass_cheers = Concur_Dom.inline(["fas", " fa-glass-cheers"])([]);
var gitter = Concur_Dom.inline(["fas", " fa-gitter"])([]);
var gitlab = Concur_Dom.inline(["fas", " fa-gitlab"])([]);
var gitkraken = Concur_Dom.inline(["fas", " fa-gitkraken"])([]);
var github_square = Concur_Dom.inline(["fas", " fa-github-square"])([]);
var github_alt = Concur_Dom.inline(["fas", " fa-github-alt"])([]);
var github = Concur_Dom.inline(["fas", " fa-github"])([]);
var git_square = Concur_Dom.inline(["fas", " fa-git-square"])([]);
var git_alt = Concur_Dom.inline(["fas", " fa-git-alt"])([]);
var git = Concur_Dom.inline(["fas", " fa-git"])([]);
var gifts = Concur_Dom.inline(["fas", " fa-gifts"])([]);
var gift = Concur_Dom.inline(["fas", " fa-gift"])([]);
var ghost = Concur_Dom.inline(["fas", " fa-ghost"])([]);
var gg_circle = Concur_Dom.inline(["fas", " fa-gg-circle"])([]);
var gg = Concur_Dom.inline(["fas", " fa-gg"])([]);
var get_pocket = Concur_Dom.inline(["fas", " fa-get-pocket"])([]);
var genderless = Concur_Dom.inline(["fas", " fa-genderless"])([]);
var gem = Concur_Dom.inline(["fas", " fa-gem"])([]);
var gavel = Concur_Dom.inline(["fas", " fa-gavel"])([]);
var gas_pump = Concur_Dom.inline(["fas", " fa-gas-pump"])([]);
var gamepad = Concur_Dom.inline(["fas", " fa-gamepad"])([]);
var galactic_senate = Concur_Dom.inline(["fas", " fa-galactic-senate"])([]);
var galactic_republic = Concur_Dom.inline(["fas", " fa-galactic-republic"])([]);
var futbol = Concur_Dom.inline(["fas", " fa-futbol"])([]);
var funnel_dollar = Concur_Dom.inline(["fas", " fa-funnel-dollar"])([]);
var fulcrum = Concur_Dom.inline(["fas", " fa-fulcrum"])([]);
var frown_open = Concur_Dom.inline(["fas", " fa-frown-open"])([]);
var frown = Concur_Dom.inline(["fas", " fa-frown"])([]);
var frog = Concur_Dom.inline(["fas", " fa-frog"])([]);
var freebsd = Concur_Dom.inline(["fas", " fa-freebsd"])([]);
var free_code_camp = Concur_Dom.inline(["fas", " fa-free-code-camp"])([]);
var foursquare = Concur_Dom.inline(["fas", " fa-foursquare"])([]);
var forward = Concur_Dom.inline(["fas", " fa-forward"])([]);
var forumbee = Concur_Dom.inline(["fas", " fa-forumbee"])([]);
var fort_awesome_alt = Concur_Dom.inline(["fas", " fa-fort-awesome-alt"])([]);
var fort_awesome = Concur_Dom.inline(["fas", " fa-fort-awesome"])([]);
var football_ball = Concur_Dom.inline(["fas", " fa-football-ball"])([]);
var fonticons_fi = Concur_Dom.inline(["fas", " fa-fonticons-fi"])([]);
var fonticons = Concur_Dom.inline(["fas", " fa-fonticons"])([]);
var font_awesome_logo_full = Concur_Dom.inline(["fas", " fa-font-awesome-logo-full"])([]);
var font_awesome_flag = Concur_Dom.inline(["fas", " fa-font-awesome-flag"])([]);
var font_awesome_alt = Concur_Dom.inline(["fas", " fa-font-awesome-alt"])([]);
var font_awesome = Concur_Dom.inline(["fas", " fa-font-awesome"])([]);
var font = Concur_Dom.inline(["fas", " fa-font"])([]);
var folder_plus = Concur_Dom.inline(["fas", " fa-folder-plus"])([]);
var folder_open = Concur_Dom.inline(["fas", " fa-folder-open"])([]);
var folder_minus = Concur_Dom.inline(["fas", " fa-folder-minus"])([]);
var folder = Concur_Dom.inline(["fas", " fa-folder"])([]);
var fly = Concur_Dom.inline(["fas", " fa-fly"])([]);
var flushed = Concur_Dom.inline(["fas", " fa-flushed"])([]);
var flipboard = Concur_Dom.inline(["fas", " fa-flipboard"])([]);
var flickr = Concur_Dom.inline(["fas", " fa-flickr"])([]);
var flask = Concur_Dom.inline(["fas", " fa-flask"])([]);
var flag_usa = Concur_Dom.inline(["fas", " fa-flag-usa"])([]);
var flag_checkered = Concur_Dom.inline(["fas", " fa-flag-checkered"])([]);
var flag = Concur_Dom.inline(["fas", " fa-flag"])([]);
var fist_raised = Concur_Dom.inline(["fas", " fa-fist-raised"])([]);
var fish = Concur_Dom.inline(["fas", " fa-fish"])([]);
var firstdraft = Concur_Dom.inline(["fas", " fa-firstdraft"])([]);
var first_order_alt = Concur_Dom.inline(["fas", " fa-first-order-alt"])([]);
var first_order = Concur_Dom.inline(["fas", " fa-first-order"])([]);
var first_aid = Concur_Dom.inline(["fas", " fa-first-aid"])([]);
var firefox_browser = Concur_Dom.inline(["fas", " fa-firefox-browser"])([]);
var firefox = Concur_Dom.inline(["fas", " fa-firefox"])([]);
var fire_extinguisher = Concur_Dom.inline(["fas", " fa-fire-extinguisher"])([]);
var fire_alt = Concur_Dom.inline(["fas", " fa-fire-alt"])([]);
var fire = Concur_Dom.inline(["fas", " fa-fire"])([]);
var fingerprint = Concur_Dom.inline(["fas", " fa-fingerprint"])([]);
var filter = Concur_Dom.inline(["fas", " fa-filter"])([]);
var film = Concur_Dom.inline(["fas", " fa-film"])([]);
var fill_drip = Concur_Dom.inline(["fas", " fa-fill-drip"])([]);
var fill = Concur_Dom.inline(["fas", " fa-fill"])([]);
var file_word = Concur_Dom.inline(["fas", " fa-file-word"])([]);
var file_video = Concur_Dom.inline(["fas", " fa-file-video"])([]);
var file_upload = Concur_Dom.inline(["fas", " fa-file-upload"])([]);
var file_signature = Concur_Dom.inline(["fas", " fa-file-signature"])([]);
var file_prescription = Concur_Dom.inline(["fas", " fa-file-prescription"])([]);
var file_powerpoint = Concur_Dom.inline(["fas", " fa-file-powerpoint"])([]);
var file_pdf = Concur_Dom.inline(["fas", " fa-file-pdf"])([]);
var file_medical_alt = Concur_Dom.inline(["fas", " fa-file-medical-alt"])([]);
var file_medical = Concur_Dom.inline(["fas", " fa-file-medical"])([]);
var file_invoice_dollar = Concur_Dom.inline(["fas", " fa-file-invoice-dollar"])([]);
var file_invoice = Concur_Dom.inline(["fas", " fa-file-invoice"])([]);
var file_import = Concur_Dom.inline(["fas", " fa-file-import"])([]);
var file_image = Concur_Dom.inline(["fas", " fa-file-image"])([]);
var file_export = Concur_Dom.inline(["fas", " fa-file-export"])([]);
var file_excel = Concur_Dom.inline(["fas", " fa-file-excel"])([]);
var file_download = Concur_Dom.inline(["fas", " fa-file-download"])([]);
var file_csv = Concur_Dom.inline(["fas", " fa-file-csv"])([]);
var file_contract = Concur_Dom.inline(["fas", " fa-file-contract"])([]);
var file_code = Concur_Dom.inline(["fas", " fa-file-code"])([]);
var file_audio = Concur_Dom.inline(["fas", " fa-file-audio"])([]);
var file_archive = Concur_Dom.inline(["fas", " fa-file-archive"])([]);
var file_alt = Concur_Dom.inline(["fas", " fa-file-alt"])([]);
var file = Concur_Dom.inline(["fas", " fa-file"])([]);
var figma = Concur_Dom.inline(["fas", " fa-figma"])([]);
var fighter_jet = Concur_Dom.inline(["fas", " fa-fighter-jet"])([]);
var female = Concur_Dom.inline(["fas", " fa-female"])([]);
var fedora = Concur_Dom.inline(["fas", " fa-fedora"])([]);
var fedex = Concur_Dom.inline(["fas", " fa-fedex"])([]);
var feather_alt = Concur_Dom.inline(["fas", " fa-feather-alt"])([]);
var feather = Concur_Dom.inline(["fas", " fa-feather"])([]);
var fax = Concur_Dom.inline(["fas", " fa-fax"])([]);
var faucet = Concur_Dom.inline(["fas", " fa-faucet"])([]);
var fast_forward = Concur_Dom.inline(["fas", " fa-fast-forward"])([]);
var fast_backward = Concur_Dom.inline(["fas", " fa-fast-backward"])([]);
var fantasy_flight_games = Concur_Dom.inline(["fas", " fa-fantasy-flight-games"])([]);
var fan = Concur_Dom.inline(["fas", " fa-fan"])([]);
var facebook_square = Concur_Dom.inline(["fas", " fa-facebook-square"])([]);
var facebook_messenger = Concur_Dom.inline(["fas", " fa-facebook-messenger"])([]);
var facebook_f = Concur_Dom.inline(["fas", " fa-facebook-f"])([]);
var facebook = Concur_Dom.inline(["fas", " fa-facebook"])([]);
var eye_slash = Concur_Dom.inline(["fas", " fa-eye-slash"])([]);
var eye_dropper = Concur_Dom.inline(["fas", " fa-eye-dropper"])([]);
var eye = Concur_Dom.inline(["fas", " fa-eye"])([]);
var external_link_square_alt = Concur_Dom.inline(["fas", " fa-external-link-square-alt"])([]);
var external_link_alt = Concur_Dom.inline(["fas", " fa-external-link-alt"])([]);
var expeditedssl = Concur_Dom.inline(["fas", " fa-expeditedssl"])([]);
var expand_arrows_alt = Concur_Dom.inline(["fas", " fa-expand-arrows-alt"])([]);
var expand_alt = Concur_Dom.inline(["fas", " fa-expand-alt"])([]);
var expand = Concur_Dom.inline(["fas", " fa-expand"])([]);
var exclamation_triangle = Concur_Dom.inline(["fas", " fa-exclamation-triangle"])([]);
var exclamation_circle = Concur_Dom.inline(["fas", " fa-exclamation-circle"])([]);
var exclamation = Concur_Dom.inline(["fas", " fa-exclamation"])([]);
var exchange_alt = Concur_Dom.inline(["fas", " fa-exchange-alt"])([]);
var evernote = Concur_Dom.inline(["fas", " fa-evernote"])([]);
var euro_sign = Concur_Dom.inline(["fas", " fa-euro-sign"])([]);
var etsy = Concur_Dom.inline(["fas", " fa-etsy"])([]);
var ethernet = Concur_Dom.inline(["fas", " fa-ethernet"])([]);
var ethereum = Concur_Dom.inline(["fas", " fa-ethereum"])([]);
var erlang = Concur_Dom.inline(["fas", " fa-erlang"])([]);
var eraser = Concur_Dom.inline(["fas", " fa-eraser"])([]);
var equals = Concur_Dom.inline(["fas", " fa-equals"])([]);
var envira = Concur_Dom.inline(["fas", " fa-envira"])([]);
var envelope_square = Concur_Dom.inline(["fas", " fa-envelope-square"])([]);
var envelope_open_text = Concur_Dom.inline(["fas", " fa-envelope-open-text"])([]);
var envelope_open = Concur_Dom.inline(["fas", " fa-envelope-open"])([]);
var envelope = Concur_Dom.inline(["fas", " fa-envelope"])([]);
var empire = Concur_Dom.inline(["fas", " fa-empire"])([]);
var ember = Concur_Dom.inline(["fas", " fa-ember"])([]);
var ello = Concur_Dom.inline(["fas", " fa-ello"])([]);
var ellipsis_v = Concur_Dom.inline(["fas", " fa-ellipsis-v"])([]);
var ellipsis_h = Concur_Dom.inline(["fas", " fa-ellipsis-h"])([]);
var elementor = Concur_Dom.inline(["fas", " fa-elementor"])([]);
var eject = Concur_Dom.inline(["fas", " fa-eject"])([]);
var egg = Concur_Dom.inline(["fas", " fa-egg"])([]);
var edit = Concur_Dom.inline(["fas", " fa-edit"])([]);
var edge_legacy = Concur_Dom.inline(["fas", " fa-edge-legacy"])([]);
var edge = Concur_Dom.inline(["fas", " fa-edge"])([]);
var ebay = Concur_Dom.inline(["fas", " fa-ebay"])([]);
var earlybirds = Concur_Dom.inline(["fas", " fa-earlybirds"])([]);
var dyalog = Concur_Dom.inline(["fas", " fa-dyalog"])([]);
var dungeon = Concur_Dom.inline(["fas", " fa-dungeon"])([]);
var dumpster_fire = Concur_Dom.inline(["fas", " fa-dumpster-fire"])([]);
var dumpster = Concur_Dom.inline(["fas", " fa-dumpster"])([]);
var dumbbell = Concur_Dom.inline(["fas", " fa-dumbbell"])([]);
var drupal = Concur_Dom.inline(["fas", " fa-drupal"])([]);
var drumstick_bite = Concur_Dom.inline(["fas", " fa-drumstick-bite"])([]);
var drum_steelpan = Concur_Dom.inline(["fas", " fa-drum-steelpan"])([]);
var drum = Concur_Dom.inline(["fas", " fa-drum"])([]);
var dropbox = Concur_Dom.inline(["fas", " fa-dropbox"])([]);
var dribbble_square = Concur_Dom.inline(["fas", " fa-dribbble-square"])([]);
var dribbble = Concur_Dom.inline(["fas", " fa-dribbble"])([]);
var draw_polygon = Concur_Dom.inline(["fas", " fa-draw-polygon"])([]);
var dragon = Concur_Dom.inline(["fas", " fa-dragon"])([]);
var drafting_compass = Concur_Dom.inline(["fas", " fa-drafting-compass"])([]);
var draft2digital = Concur_Dom.inline(["fas", " fa-draft2digital"])([]);
var download = Concur_Dom.inline(["fas", " fa-download"])([]);
var dove = Concur_Dom.inline(["fas", " fa-dove"])([]);
var dot_circle = Concur_Dom.inline(["fas", " fa-dot-circle"])([]);
var door_open = Concur_Dom.inline(["fas", " fa-door-open"])([]);
var door_closed = Concur_Dom.inline(["fas", " fa-door-closed"])([]);
var donate = Concur_Dom.inline(["fas", " fa-donate"])([]);
var dolly_flatbed = Concur_Dom.inline(["fas", " fa-dolly-flatbed"])([]);
var dolly = Concur_Dom.inline(["fas", " fa-dolly"])([]);
var dollar_sign = Concur_Dom.inline(["fas", " fa-dollar-sign"])([]);
var dog = Concur_Dom.inline(["fas", " fa-dog"])([]);
var docker = Concur_Dom.inline(["fas", " fa-docker"])([]);
var dochub = Concur_Dom.inline(["fas", " fa-dochub"])([]);
var dna = Concur_Dom.inline(["fas", " fa-dna"])([]);
var dizzy = Concur_Dom.inline(["fas", " fa-dizzy"])([]);
var divide = Concur_Dom.inline(["fas", " fa-divide"])([]);
var disease = Concur_Dom.inline(["fas", " fa-disease"])([]);
var discourse = Concur_Dom.inline(["fas", " fa-discourse"])([]);
var discord = Concur_Dom.inline(["fas", " fa-discord"])([]);
var directions = Concur_Dom.inline(["fas", " fa-directions"])([]);
var digital_tachograph = Concur_Dom.inline(["fas", " fa-digital-tachograph"])([]);
var digital_ocean = Concur_Dom.inline(["fas", " fa-digital-ocean"])([]);
var digg = Concur_Dom.inline(["fas", " fa-digg"])([]);
var dice_two = Concur_Dom.inline(["fas", " fa-dice-two"])([]);
var dice_three = Concur_Dom.inline(["fas", " fa-dice-three"])([]);
var dice_six = Concur_Dom.inline(["fas", " fa-dice-six"])([]);
var dice_one = Concur_Dom.inline(["fas", " fa-dice-one"])([]);
var dice_four = Concur_Dom.inline(["fas", " fa-dice-four"])([]);
var dice_five = Concur_Dom.inline(["fas", " fa-dice-five"])([]);
var dice_d6 = Concur_Dom.inline(["fas", " fa-dice-d6"])([]);
var dice_d20 = Concur_Dom.inline(["fas", " fa-dice-d20"])([]);
var dice = Concur_Dom.inline(["fas", " fa-dice"])([]);
var diaspora = Concur_Dom.inline(["fas", " fa-diaspora"])([]);
var diagnoses = Concur_Dom.inline(["fas", " fa-diagnoses"])([]);
var dhl = Concur_Dom.inline(["fas", " fa-dhl"])([]);
var dharmachakra = Concur_Dom.inline(["fas", " fa-dharmachakra"])([]);
var deviantart = Concur_Dom.inline(["fas", " fa-deviantart"])([]);
var dev = Concur_Dom.inline(["fas", " fa-dev"])([]);
var desktop = Concur_Dom.inline(["fas", " fa-desktop"])([]);
var deskpro = Concur_Dom.inline(["fas", " fa-deskpro"])([]);
var deploydog = Concur_Dom.inline(["fas", " fa-deploydog"])([]);
var democrat = Concur_Dom.inline(["fas", " fa-democrat"])([]);
var delicious = Concur_Dom.inline(["fas", " fa-delicious"])([]);
var deezer = Concur_Dom.inline(["fas", " fa-deezer"])([]);
var deaf = Concur_Dom.inline(["fas", " fa-deaf"])([]);
var database = Concur_Dom.inline(["fas", " fa-database"])([]);
var dashcube = Concur_Dom.inline(["fas", " fa-dashcube"])([]);
var dailymotion = Concur_Dom.inline(["fas", " fa-dailymotion"])([]);
var d_and_d_beyond = Concur_Dom.inline(["fas", " fa-d-and-d-beyond"])([]);
var d_and_d = Concur_Dom.inline(["fas", " fa-d-and-d"])([]);
var cuttlefish = Concur_Dom.inline(["fas", " fa-cuttlefish"])([]);
var cut = Concur_Dom.inline(["fas", " fa-cut"])([]);
var cubes = Concur_Dom.inline(["fas", " fa-cubes"])([]);
var cube = Concur_Dom.inline(["fas", " fa-cube"])([]);
var css3_alt = Concur_Dom.inline(["fas", " fa-css3-alt"])([]);
var css3 = Concur_Dom.inline(["fas", " fa-css3"])([]);
var crutch = Concur_Dom.inline(["fas", " fa-crutch"])([]);
var crown = Concur_Dom.inline(["fas", " fa-crown"])([]);
var crow = Concur_Dom.inline(["fas", " fa-crow"])([]);
var crosshairs = Concur_Dom.inline(["fas", " fa-crosshairs"])([]);
var cross = Concur_Dom.inline(["fas", " fa-cross"])([]);
var crop_alt = Concur_Dom.inline(["fas", " fa-crop-alt"])([]);
var crop = Concur_Dom.inline(["fas", " fa-crop"])([]);
var critical_role = Concur_Dom.inline(["fas", " fa-critical-role"])([]);
var credit_card = Concur_Dom.inline(["fas", " fa-credit-card"])([]);
var creative_commons_zero = Concur_Dom.inline(["fas", " fa-creative-commons-zero"])([]);
var creative_commons_share = Concur_Dom.inline(["fas", " fa-creative-commons-share"])([]);
var creative_commons_sampling_plus = Concur_Dom.inline(["fas", " fa-creative-commons-sampling-plus"])([]);
var creative_commons_sampling = Concur_Dom.inline(["fas", " fa-creative-commons-sampling"])([]);
var creative_commons_sa = Concur_Dom.inline(["fas", " fa-creative-commons-sa"])([]);
var creative_commons_remix = Concur_Dom.inline(["fas", " fa-creative-commons-remix"])([]);
var creative_commons_pd_alt = Concur_Dom.inline(["fas", " fa-creative-commons-pd-alt"])([]);
var creative_commons_pd = Concur_Dom.inline(["fas", " fa-creative-commons-pd"])([]);
var creative_commons_nd = Concur_Dom.inline(["fas", " fa-creative-commons-nd"])([]);
var creative_commons_nc_jp = Concur_Dom.inline(["fas", " fa-creative-commons-nc-jp"])([]);
var creative_commons_nc_eu = Concur_Dom.inline(["fas", " fa-creative-commons-nc-eu"])([]);
var creative_commons_nc = Concur_Dom.inline(["fas", " fa-creative-commons-nc"])([]);
var creative_commons_by = Concur_Dom.inline(["fas", " fa-creative-commons-by"])([]);
var creative_commons = Concur_Dom.inline(["fas", " fa-creative-commons"])([]);
var cpanel = Concur_Dom.inline(["fas", " fa-cpanel"])([]);
var couch = Concur_Dom.inline(["fas", " fa-couch"])([]);
var cotton_bureau = Concur_Dom.inline(["fas", " fa-cotton-bureau"])([]);
var copyright = Concur_Dom.inline(["fas", " fa-copyright"])([]);
var copy = Concur_Dom.inline(["fas", " fa-copy"])([]);
var cookie_bite = Concur_Dom.inline(["fas", " fa-cookie-bite"])([]);
var cookie = Concur_Dom.inline(["fas", " fa-cookie"])([]);
var contao = Concur_Dom.inline(["fas", " fa-contao"])([]);
var connectdevelop = Concur_Dom.inline(["fas", " fa-connectdevelop"])([]);
var confluence = Concur_Dom.inline(["fas", " fa-confluence"])([]);
var concierge_bell = Concur_Dom.inline(["fas", " fa-concierge-bell"])([]);
var compress_arrows_alt = Concur_Dom.inline(["fas", " fa-compress-arrows-alt"])([]);
var compress_alt = Concur_Dom.inline(["fas", " fa-compress-alt"])([]);
var compress = Concur_Dom.inline(["fas", " fa-compress"])([]);
var compass = Concur_Dom.inline(["fas", " fa-compass"])([]);
var compact_disc = Concur_Dom.inline(["fas", " fa-compact-disc"])([]);
var comments_dollar = Concur_Dom.inline(["fas", " fa-comments-dollar"])([]);
var comments = Concur_Dom.inline(["fas", " fa-comments"])([]);
var comment_slash = Concur_Dom.inline(["fas", " fa-comment-slash"])([]);
var comment_medical = Concur_Dom.inline(["fas", " fa-comment-medical"])([]);
var comment_dots = Concur_Dom.inline(["fas", " fa-comment-dots"])([]);
var comment_dollar = Concur_Dom.inline(["fas", " fa-comment-dollar"])([]);
var comment_alt = Concur_Dom.inline(["fas", " fa-comment-alt"])([]);
var comment = Concur_Dom.inline(["fas", " fa-comment"])([]);
var columns = Concur_Dom.inline(["fas", " fa-columns"])([]);
var coins = Concur_Dom.inline(["fas", " fa-coins"])([]);
var cogs = Concur_Dom.inline(["fas", " fa-cogs"])([]);
var cog = Concur_Dom.inline(["fas", " fa-cog"])([]);
var coffee = Concur_Dom.inline(["fas", " fa-coffee"])([]);
var codiepie = Concur_Dom.inline(["fas", " fa-codiepie"])([]);
var codepen = Concur_Dom.inline(["fas", " fa-codepen"])([]);
var code_branch = Concur_Dom.inline(["fas", " fa-code-branch"])([]);
var code = Concur_Dom.inline(["fas", " fa-code"])([]);
var cocktail = Concur_Dom.inline(["fas", " fa-cocktail"])([]);
var cloudversify = Concur_Dom.inline(["fas", " fa-cloudversify"])([]);
var cloudsmith = Concur_Dom.inline(["fas", " fa-cloudsmith"])([]);
var cloudscale = Concur_Dom.inline(["fas", " fa-cloudscale"])([]);
var cloudflare = Concur_Dom.inline(["fas", " fa-cloudflare"])([]);
var cloud_upload_alt = Concur_Dom.inline(["fas", " fa-cloud-upload-alt"])([]);
var cloud_sun_rain = Concur_Dom.inline(["fas", " fa-cloud-sun-rain"])([]);
var cloud_sun = Concur_Dom.inline(["fas", " fa-cloud-sun"])([]);
var cloud_showers_heavy = Concur_Dom.inline(["fas", " fa-cloud-showers-heavy"])([]);
var cloud_rain = Concur_Dom.inline(["fas", " fa-cloud-rain"])([]);
var cloud_moon_rain = Concur_Dom.inline(["fas", " fa-cloud-moon-rain"])([]);
var cloud_moon = Concur_Dom.inline(["fas", " fa-cloud-moon"])([]);
var cloud_meatball = Concur_Dom.inline(["fas", " fa-cloud-meatball"])([]);
var cloud_download_alt = Concur_Dom.inline(["fas", " fa-cloud-download-alt"])([]);
var cloud = Concur_Dom.inline(["fas", " fa-cloud"])([]);
var closed_captioning = Concur_Dom.inline(["fas", " fa-closed-captioning"])([]);
var clone = Concur_Dom.inline(["fas", " fa-clone"])([]);
var clock = Concur_Dom.inline(["fas", " fa-clock"])([]);
var clipboard_list = Concur_Dom.inline(["fas", " fa-clipboard-list"])([]);
var clipboard_check = Concur_Dom.inline(["fas", " fa-clipboard-check"])([]);
var clipboard = Concur_Dom.inline(["fas", " fa-clipboard"])([]);
var clinic_medical = Concur_Dom.inline(["fas", " fa-clinic-medical"])([]);
var city = Concur_Dom.inline(["fas", " fa-city"])([]);
var circle_notch = Concur_Dom.inline(["fas", " fa-circle-notch"])([]);
var circle = Concur_Dom.inline(["fas", " fa-circle"])([]);
var church = Concur_Dom.inline(["fas", " fa-church"])([]);
var chromecast = Concur_Dom.inline(["fas", " fa-chromecast"])([]);
var chrome = Concur_Dom.inline(["fas", " fa-chrome"])([]);
var child = Concur_Dom.inline(["fas", " fa-child"])([]);
var chevron_up = Concur_Dom.inline(["fas", " fa-chevron-up"])([]);
var chevron_right = Concur_Dom.inline(["fas", " fa-chevron-right"])([]);
var chevron_left = Concur_Dom.inline(["fas", " fa-chevron-left"])([]);
var chevron_down = Concur_Dom.inline(["fas", " fa-chevron-down"])([]);
var chevron_circle_up = Concur_Dom.inline(["fas", " fa-chevron-circle-up"])([]);
var chevron_circle_right = Concur_Dom.inline(["fas", " fa-chevron-circle-right"])([]);
var chevron_circle_left = Concur_Dom.inline(["fas", " fa-chevron-circle-left"])([]);
var chevron_circle_down = Concur_Dom.inline(["fas", " fa-chevron-circle-down"])([]);
var chess_rook = Concur_Dom.inline(["fas", " fa-chess-rook"])([]);
var chess_queen = Concur_Dom.inline(["fas", " fa-chess-queen"])([]);
var chess_pawn = Concur_Dom.inline(["fas", " fa-chess-pawn"])([]);
var chess_knight = Concur_Dom.inline(["fas", " fa-chess-knight"])([]);
var chess_king = Concur_Dom.inline(["fas", " fa-chess-king"])([]);
var chess_board = Concur_Dom.inline(["fas", " fa-chess-board"])([]);
var chess_bishop = Concur_Dom.inline(["fas", " fa-chess-bishop"])([]);
var chess = Concur_Dom.inline(["fas", " fa-chess"])([]);
var cheese = Concur_Dom.inline(["fas", " fa-cheese"])([]);
var check_square = Concur_Dom.inline(["fas", " fa-check-square"])([]);
var check_double = Concur_Dom.inline(["fas", " fa-check-double"])([]);
var check_circle = Concur_Dom.inline(["fas", " fa-check-circle"])([]);
var check = Concur_Dom.inline(["fas", " fa-check"])([]);
var chart_pie = Concur_Dom.inline(["fas", " fa-chart-pie"])([]);
var chart_line = Concur_Dom.inline(["fas", " fa-chart-line"])([]);
var chart_bar = Concur_Dom.inline(["fas", " fa-chart-bar"])([]);
var chart_area = Concur_Dom.inline(["fas", " fa-chart-area"])([]);
var charging_station = Concur_Dom.inline(["fas", " fa-charging-station"])([]);
var chalkboard_teacher = Concur_Dom.inline(["fas", " fa-chalkboard-teacher"])([]);
var chalkboard = Concur_Dom.inline(["fas", " fa-chalkboard"])([]);
var chair = Concur_Dom.inline(["fas", " fa-chair"])([]);
var certificate = Concur_Dom.inline(["fas", " fa-certificate"])([]);
var centos = Concur_Dom.inline(["fas", " fa-centos"])([]);
var centercode = Concur_Dom.inline(["fas", " fa-centercode"])([]);
var cc_visa = Concur_Dom.inline(["fas", " fa-cc-visa"])([]);
var cc_stripe = Concur_Dom.inline(["fas", " fa-cc-stripe"])([]);
var cc_paypal = Concur_Dom.inline(["fas", " fa-cc-paypal"])([]);
var cc_mastercard = Concur_Dom.inline(["fas", " fa-cc-mastercard"])([]);
var cc_jcb = Concur_Dom.inline(["fas", " fa-cc-jcb"])([]);
var cc_discover = Concur_Dom.inline(["fas", " fa-cc-discover"])([]);
var cc_diners_club = Concur_Dom.inline(["fas", " fa-cc-diners-club"])([]);
var cc_apple_pay = Concur_Dom.inline(["fas", " fa-cc-apple-pay"])([]);
var cc_amex = Concur_Dom.inline(["fas", " fa-cc-amex"])([]);
var cc_amazon_pay = Concur_Dom.inline(["fas", " fa-cc-amazon-pay"])([]);
var cat = Concur_Dom.inline(["fas", " fa-cat"])([]);
var cash_register = Concur_Dom.inline(["fas", " fa-cash-register"])([]);
var cart_plus = Concur_Dom.inline(["fas", " fa-cart-plus"])([]);
var cart_arrow_down = Concur_Dom.inline(["fas", " fa-cart-arrow-down"])([]);
var carrot = Concur_Dom.inline(["fas", " fa-carrot"])([]);
var caret_up = Concur_Dom.inline(["fas", " fa-caret-up"])([]);
var caret_square_up = Concur_Dom.inline(["fas", " fa-caret-square-up"])([]);
var caret_square_right = Concur_Dom.inline(["fas", " fa-caret-square-right"])([]);
var caret_square_left = Concur_Dom.inline(["fas", " fa-caret-square-left"])([]);
var caret_square_down = Concur_Dom.inline(["fas", " fa-caret-square-down"])([]);
var caret_right = Concur_Dom.inline(["fas", " fa-caret-right"])([]);
var caret_left = Concur_Dom.inline(["fas", " fa-caret-left"])([]);
var caret_down = Concur_Dom.inline(["fas", " fa-caret-down"])([]);
var caravan = Concur_Dom.inline(["fas", " fa-caravan"])([]);
var car_side = Concur_Dom.inline(["fas", " fa-car-side"])([]);
var car_crash = Concur_Dom.inline(["fas", " fa-car-crash"])([]);
var car_battery = Concur_Dom.inline(["fas", " fa-car-battery"])([]);
var car_alt = Concur_Dom.inline(["fas", " fa-car-alt"])([]);
var car = Concur_Dom.inline(["fas", " fa-car"])([]);
var capsules = Concur_Dom.inline(["fas", " fa-capsules"])([]);
var cannabis = Concur_Dom.inline(["fas", " fa-cannabis"])([]);
var candy_cane = Concur_Dom.inline(["fas", " fa-candy-cane"])([]);
var canadian_maple_leaf = Concur_Dom.inline(["fas", " fa-canadian-maple-leaf"])([]);
var campground = Concur_Dom.inline(["fas", " fa-campground"])([]);
var camera_retro = Concur_Dom.inline(["fas", " fa-camera-retro"])([]);
var camera = Concur_Dom.inline(["fas", " fa-camera"])([]);
var calendar_week = Concur_Dom.inline(["fas", " fa-calendar-week"])([]);
var calendar_times = Concur_Dom.inline(["fas", " fa-calendar-times"])([]);
var calendar_plus = Concur_Dom.inline(["fas", " fa-calendar-plus"])([]);
var calendar_minus = Concur_Dom.inline(["fas", " fa-calendar-minus"])([]);
var calendar_day = Concur_Dom.inline(["fas", " fa-calendar-day"])([]);
var calendar_check = Concur_Dom.inline(["fas", " fa-calendar-check"])([]);
var calendar_alt = Concur_Dom.inline(["fas", " fa-calendar-alt"])([]);
var calendar = Concur_Dom.inline(["fas", " fa-calendar"])([]);
var calculator = Concur_Dom.inline(["fas", " fa-calculator"])([]);
var buysellads = Concur_Dom.inline(["fas", " fa-buysellads"])([]);
var buy_n_large = Concur_Dom.inline(["fas", " fa-buy-n-large"])([]);
var business_time = Concur_Dom.inline(["fas", " fa-business-time"])([]);
var bus_alt = Concur_Dom.inline(["fas", " fa-bus-alt"])([]);
var bus = Concur_Dom.inline(["fas", " fa-bus"])([]);
var buromobelexperte = Concur_Dom.inline(["fas", " fa-buromobelexperte"])([]);
var burn = Concur_Dom.inline(["fas", " fa-burn"])([]);
var bullseye = Concur_Dom.inline(["fas", " fa-bullseye"])([]);
var bullhorn = Concur_Dom.inline(["fas", " fa-bullhorn"])([]);
var building = Concur_Dom.inline(["fas", " fa-building"])([]);
var bug = Concur_Dom.inline(["fas", " fa-bug"])([]);
var buffer = Concur_Dom.inline(["fas", " fa-buffer"])([]);
var btc = Concur_Dom.inline(["fas", " fa-btc"])([]);
var brush = Concur_Dom.inline(["fas", " fa-brush"])([]);
var broom = Concur_Dom.inline(["fas", " fa-broom"])([]);
var broadcast_tower = Concur_Dom.inline(["fas", " fa-broadcast-tower"])([]);
var briefcase_medical = Concur_Dom.inline(["fas", " fa-briefcase-medical"])([]);
var briefcase = Concur_Dom.inline(["fas", " fa-briefcase"])([]);
var bread_slice = Concur_Dom.inline(["fas", " fa-bread-slice"])([]);
var brain = Concur_Dom.inline(["fas", " fa-brain"])([]);
var braille = Concur_Dom.inline(["fas", " fa-braille"])([]);
var boxes = Concur_Dom.inline(["fas", " fa-boxes"])([]);
var box_tissue = Concur_Dom.inline(["fas", " fa-box-tissue"])([]);
var box_open = Concur_Dom.inline(["fas", " fa-box-open"])([]);
var box = Concur_Dom.inline(["fas", " fa-box"])([]);
var bowling_ball = Concur_Dom.inline(["fas", " fa-bowling-ball"])([]);
var border_style = Concur_Dom.inline(["fas", " fa-border-style"])([]);
var border_none = Concur_Dom.inline(["fas", " fa-border-none"])([]);
var border_all = Concur_Dom.inline(["fas", " fa-border-all"])([]);
var bootstrap = Concur_Dom.inline(["fas", " fa-bootstrap"])([]);
var bookmark = Concur_Dom.inline(["fas", " fa-bookmark"])([]);
var book_reader = Concur_Dom.inline(["fas", " fa-book-reader"])([]);
var book_open = Concur_Dom.inline(["fas", " fa-book-open"])([]);
var book_medical = Concur_Dom.inline(["fas", " fa-book-medical"])([]);
var book_dead = Concur_Dom.inline(["fas", " fa-book-dead"])([]);
var book = Concur_Dom.inline(["fas", " fa-book"])([]);
var bong = Concur_Dom.inline(["fas", " fa-bong"])([]);
var bone = Concur_Dom.inline(["fas", " fa-bone"])([]);
var bomb = Concur_Dom.inline(["fas", " fa-bomb"])([]);
var bolt = Concur_Dom.inline(["fas", " fa-bolt"])([]);
var bold = Concur_Dom.inline(["fas", " fa-bold"])([]);
var bluetooth_b = Concur_Dom.inline(["fas", " fa-bluetooth-b"])([]);
var bluetooth = Concur_Dom.inline(["fas", " fa-bluetooth"])([]);
var blogger_b = Concur_Dom.inline(["fas", " fa-blogger-b"])([]);
var blogger = Concur_Dom.inline(["fas", " fa-blogger"])([]);
var blog = Concur_Dom.inline(["fas", " fa-blog"])([]);
var blind = Concur_Dom.inline(["fas", " fa-blind"])([]);
var blender_phone = Concur_Dom.inline(["fas", " fa-blender-phone"])([]);
var blender = Concur_Dom.inline(["fas", " fa-blender"])([]);
var blackberry = Concur_Dom.inline(["fas", " fa-blackberry"])([]);
var black_tie = Concur_Dom.inline(["fas", " fa-black-tie"])([]);
var bity = Concur_Dom.inline(["fas", " fa-bity"])([]);
var bitcoin = Concur_Dom.inline(["fas", " fa-bitcoin"])([]);
var bitbucket = Concur_Dom.inline(["fas", " fa-bitbucket"])([]);
var birthday_cake = Concur_Dom.inline(["fas", " fa-birthday-cake"])([]);
var biohazard = Concur_Dom.inline(["fas", " fa-biohazard"])([]);
var binoculars = Concur_Dom.inline(["fas", " fa-binoculars"])([]);
var bimobject = Concur_Dom.inline(["fas", " fa-bimobject"])([]);
var biking = Concur_Dom.inline(["fas", " fa-biking"])([]);
var bicycle = Concur_Dom.inline(["fas", " fa-bicycle"])([]);
var bible = Concur_Dom.inline(["fas", " fa-bible"])([]);
var bezier_curve = Concur_Dom.inline(["fas", " fa-bezier-curve"])([]);
var bell_slash = Concur_Dom.inline(["fas", " fa-bell-slash"])([]);
var bell = Concur_Dom.inline(["fas", " fa-bell"])([]);
var behance_square = Concur_Dom.inline(["fas", " fa-behance-square"])([]);
var behance = Concur_Dom.inline(["fas", " fa-behance"])([]);
var beer = Concur_Dom.inline(["fas", " fa-beer"])([]);
var bed = Concur_Dom.inline(["fas", " fa-bed"])([]);
var battle_net = Concur_Dom.inline(["fas", " fa-battle-net"])([]);
var battery_three_quarters = Concur_Dom.inline(["fas", " fa-battery-three-quarters"])([]);
var battery_quarter = Concur_Dom.inline(["fas", " fa-battery-quarter"])([]);
var battery_half = Concur_Dom.inline(["fas", " fa-battery-half"])([]);
var battery_full = Concur_Dom.inline(["fas", " fa-battery-full"])([]);
var battery_empty = Concur_Dom.inline(["fas", " fa-battery-empty"])([]);
var bath = Concur_Dom.inline(["fas", " fa-bath"])([]);
var basketball_ball = Concur_Dom.inline(["fas", " fa-basketball-ball"])([]);
var baseball_ball = Concur_Dom.inline(["fas", " fa-baseball-ball"])([]);
var bars = Concur_Dom.inline(["fas", " fa-bars"])([]);
var barcode = Concur_Dom.inline(["fas", " fa-barcode"])([]);
var bandcamp = Concur_Dom.inline(["fas", " fa-bandcamp"])([]);
var band_aid = Concur_Dom.inline(["fas", " fa-band-aid"])([]);
var ban = Concur_Dom.inline(["fas", " fa-ban"])([]);
var balance_scale_right = Concur_Dom.inline(["fas", " fa-balance-scale-right"])([]);
var balance_scale_left = Concur_Dom.inline(["fas", " fa-balance-scale-left"])([]);
var balance_scale = Concur_Dom.inline(["fas", " fa-balance-scale"])([]);
var bahai = Concur_Dom.inline(["fas", " fa-bahai"])([]);
var bacterium = Concur_Dom.inline(["fas", " fa-bacterium"])([]);
var bacteria = Concur_Dom.inline(["fas", " fa-bacteria"])([]);
var bacon = Concur_Dom.inline(["fas", " fa-bacon"])([]);
var backward = Concur_Dom.inline(["fas", " fa-backward"])([]);
var backspace = Concur_Dom.inline(["fas", " fa-backspace"])([]);
var baby_carriage = Concur_Dom.inline(["fas", " fa-baby-carriage"])([]);
var baby = Concur_Dom.inline(["fas", " fa-baby"])([]);
var aws = Concur_Dom.inline(["fas", " fa-aws"])([]);
var award = Concur_Dom.inline(["fas", " fa-award"])([]);
var aviato = Concur_Dom.inline(["fas", " fa-aviato"])([]);
var avianex = Concur_Dom.inline(["fas", " fa-avianex"])([]);
var autoprefixer = Concur_Dom.inline(["fas", " fa-autoprefixer"])([]);
var audio_description = Concur_Dom.inline(["fas", " fa-audio-description"])([]);
var audible = Concur_Dom.inline(["fas", " fa-audible"])([]);
var atom = Concur_Dom.inline(["fas", " fa-atom"])([]);
var atlassian = Concur_Dom.inline(["fas", " fa-atlassian"])([]);
var atlas = Concur_Dom.inline(["fas", " fa-atlas"])([]);
var at = Concur_Dom.inline(["fas", " fa-at"])([]);
var asymmetrik = Concur_Dom.inline(["fas", " fa-asymmetrik"])([]);
var asterisk = Concur_Dom.inline(["fas", " fa-asterisk"])([]);
var assistive_listening_systems = Concur_Dom.inline(["fas", " fa-assistive-listening-systems"])([]);
var artstation = Concur_Dom.inline(["fas", " fa-artstation"])([]);
var arrows_alt_v = Concur_Dom.inline(["fas", " fa-arrows-alt-v"])([]);
var arrows_alt_h = Concur_Dom.inline(["fas", " fa-arrows-alt-h"])([]);
var arrows_alt = Concur_Dom.inline(["fas", " fa-arrows-alt"])([]);
var arrow_up = Concur_Dom.inline(["fas", " fa-arrow-up"])([]);
var arrow_right = Concur_Dom.inline(["fas", " fa-arrow-right"])([]);
var arrow_left = Concur_Dom.inline(["fas", " fa-arrow-left"])([]);
var arrow_down = Concur_Dom.inline(["fas", " fa-arrow-down"])([]);
var arrow_circle_up = Concur_Dom.inline(["fas", " fa-arrow-circle-up"])([]);
var arrow_circle_right = Concur_Dom.inline(["fas", " fa-arrow-circle-right"])([]);
var arrow_circle_left = Concur_Dom.inline(["fas", " fa-arrow-circle-left"])([]);
var arrow_circle_down = Concur_Dom.inline(["fas", " fa-arrow-circle-down"])([]);
var arrow_alt_circle_up = Concur_Dom.inline(["fas", " fa-arrow-alt-circle-up"])([]);
var arrow_alt_circle_right = Concur_Dom.inline(["fas", " fa-arrow-alt-circle-right"])([]);
var arrow_alt_circle_left = Concur_Dom.inline(["fas", " fa-arrow-alt-circle-left"])([]);
var arrow_alt_circle_down = Concur_Dom.inline(["fas", " fa-arrow-alt-circle-down"])([]);
var archway = Concur_Dom.inline(["fas", " fa-archway"])([]);
var archive = Concur_Dom.inline(["fas", " fa-archive"])([]);
var apple_pay = Concur_Dom.inline(["fas", " fa-apple-pay"])([]);
var apple_alt = Concur_Dom.inline(["fas", " fa-apple-alt"])([]);
var apple = Concur_Dom.inline(["fas", " fa-apple"])([]);
var apper = Concur_Dom.inline(["fas", " fa-apper"])([]);
var app_store_ios = Concur_Dom.inline(["fas", " fa-app-store-ios"])([]);
var app_store = Concur_Dom.inline(["fas", " fa-app-store"])([]);
var ankh = Concur_Dom.inline(["fas", " fa-ankh"])([]);
var angular = Concur_Dom.inline(["fas", " fa-angular"])([]);
var angrycreative = Concur_Dom.inline(["fas", " fa-angrycreative"])([]);
var angry = Concur_Dom.inline(["fas", " fa-angry"])([]);
var angle_up = Concur_Dom.inline(["fas", " fa-angle-up"])([]);
var angle_right = Concur_Dom.inline(["fas", " fa-angle-right"])([]);
var angle_left = Concur_Dom.inline(["fas", " fa-angle-left"])([]);
var angle_down = Concur_Dom.inline(["fas", " fa-angle-down"])([]);
var angle_double_up = Concur_Dom.inline(["fas", " fa-angle-double-up"])([]);
var angle_double_right = Concur_Dom.inline(["fas", " fa-angle-double-right"])([]);
var angle_double_left = Concur_Dom.inline(["fas", " fa-angle-double-left"])([]);
var angle_double_down = Concur_Dom.inline(["fas", " fa-angle-double-down"])([]);
var angellist = Concur_Dom.inline(["fas", " fa-angellist"])([]);
var android = Concur_Dom.inline(["fas", " fa-android"])([]);
var anchor = Concur_Dom.inline(["fas", " fa-anchor"])([]);
var amilia = Concur_Dom.inline(["fas", " fa-amilia"])([]);
var american_sign_language_interpreting = Concur_Dom.inline(["fas", " fa-american-sign-language-interpreting"])([]);
var ambulance = Concur_Dom.inline(["fas", " fa-ambulance"])([]);
var amazon_pay = Concur_Dom.inline(["fas", " fa-amazon-pay"])([]);
var amazon = Concur_Dom.inline(["fas", " fa-amazon"])([]);
var allergies = Concur_Dom.inline(["fas", " fa-allergies"])([]);
var alipay = Concur_Dom.inline(["fas", " fa-alipay"])([]);
var align_right = Concur_Dom.inline(["fas", " fa-align-right"])([]);
var align_left = Concur_Dom.inline(["fas", " fa-align-left"])([]);
var align_justify = Concur_Dom.inline(["fas", " fa-align-justify"])([]);
var align_center = Concur_Dom.inline(["fas", " fa-align-center"])([]);
var algolia = Concur_Dom.inline(["fas", " fa-algolia"])([]);
var airbnb = Concur_Dom.inline(["fas", " fa-airbnb"])([]);
var air_freshener = Concur_Dom.inline(["fas", " fa-air-freshener"])([]);
var affiliatetheme = Concur_Dom.inline(["fas", " fa-affiliatetheme"])([]);
var adversal = Concur_Dom.inline(["fas", " fa-adversal"])([]);
var adn = Concur_Dom.inline(["fas", " fa-adn"])([]);
var adjust = Concur_Dom.inline(["fas", " fa-adjust"])([]);
var address_card = Concur_Dom.inline(["fas", " fa-address-card"])([]);
var address_book = Concur_Dom.inline(["fas", " fa-address-book"])([]);
var ad = Concur_Dom.inline(["fas", " fa-ad"])([]);
var acquisitions_incorporated = Concur_Dom.inline(["fas", " fa-acquisitions-incorporated"])([]);
var accusoft = Concur_Dom.inline(["fas", " fa-accusoft"])([]);
var accessible_icon = Concur_Dom.inline(["fas", " fa-accessible-icon"])([]);
module.exports = {
  none: none,
  accessible_icon: accessible_icon,
  accusoft: accusoft,
  acquisitions_incorporated: acquisitions_incorporated,
  ad: ad,
  address_book: address_book,
  address_card: address_card,
  adjust: adjust,
  adn: adn,
  adversal: adversal,
  affiliatetheme: affiliatetheme,
  air_freshener: air_freshener,
  airbnb: airbnb,
  algolia: algolia,
  align_center: align_center,
  align_justify: align_justify,
  align_left: align_left,
  align_right: align_right,
  alipay: alipay,
  allergies: allergies,
  amazon: amazon,
  amazon_pay: amazon_pay,
  ambulance: ambulance,
  american_sign_language_interpreting: american_sign_language_interpreting,
  amilia: amilia,
  anchor: anchor,
  android: android,
  angellist: angellist,
  angle_double_down: angle_double_down,
  angle_double_left: angle_double_left,
  angle_double_right: angle_double_right,
  angle_double_up: angle_double_up,
  angle_down: angle_down,
  angle_left: angle_left,
  angle_right: angle_right,
  angle_up: angle_up,
  angry: angry,
  angrycreative: angrycreative,
  angular: angular,
  ankh: ankh,
  app_store: app_store,
  app_store_ios: app_store_ios,
  apper: apper,
  apple: apple,
  apple_alt: apple_alt,
  apple_pay: apple_pay,
  archive: archive,
  archway: archway,
  arrow_alt_circle_down: arrow_alt_circle_down,
  arrow_alt_circle_left: arrow_alt_circle_left,
  arrow_alt_circle_right: arrow_alt_circle_right,
  arrow_alt_circle_up: arrow_alt_circle_up,
  arrow_circle_down: arrow_circle_down,
  arrow_circle_left: arrow_circle_left,
  arrow_circle_right: arrow_circle_right,
  arrow_circle_up: arrow_circle_up,
  arrow_down: arrow_down,
  arrow_left: arrow_left,
  arrow_right: arrow_right,
  arrow_up: arrow_up,
  arrows_alt: arrows_alt,
  arrows_alt_h: arrows_alt_h,
  arrows_alt_v: arrows_alt_v,
  artstation: artstation,
  assistive_listening_systems: assistive_listening_systems,
  asterisk: asterisk,
  asymmetrik: asymmetrik,
  at: at,
  atlas: atlas,
  atlassian: atlassian,
  atom: atom,
  audible: audible,
  audio_description: audio_description,
  autoprefixer: autoprefixer,
  avianex: avianex,
  aviato: aviato,
  award: award,
  aws: aws,
  baby: baby,
  baby_carriage: baby_carriage,
  backspace: backspace,
  backward: backward,
  bacon: bacon,
  bacteria: bacteria,
  bacterium: bacterium,
  bahai: bahai,
  balance_scale: balance_scale,
  balance_scale_left: balance_scale_left,
  balance_scale_right: balance_scale_right,
  ban: ban,
  band_aid: band_aid,
  bandcamp: bandcamp,
  barcode: barcode,
  bars: bars,
  baseball_ball: baseball_ball,
  basketball_ball: basketball_ball,
  bath: bath,
  battery_empty: battery_empty,
  battery_full: battery_full,
  battery_half: battery_half,
  battery_quarter: battery_quarter,
  battery_three_quarters: battery_three_quarters,
  battle_net: battle_net,
  bed: bed,
  beer: beer,
  behance: behance,
  behance_square: behance_square,
  bell: bell,
  bell_slash: bell_slash,
  bezier_curve: bezier_curve,
  bible: bible,
  bicycle: bicycle,
  biking: biking,
  bimobject: bimobject,
  binoculars: binoculars,
  biohazard: biohazard,
  birthday_cake: birthday_cake,
  bitbucket: bitbucket,
  bitcoin: bitcoin,
  bity: bity,
  black_tie: black_tie,
  blackberry: blackberry,
  blender: blender,
  blender_phone: blender_phone,
  blind: blind,
  blog: blog,
  blogger: blogger,
  blogger_b: blogger_b,
  bluetooth: bluetooth,
  bluetooth_b: bluetooth_b,
  bold: bold,
  bolt: bolt,
  bomb: bomb,
  bone: bone,
  bong: bong,
  book: book,
  book_dead: book_dead,
  book_medical: book_medical,
  book_open: book_open,
  book_reader: book_reader,
  bookmark: bookmark,
  bootstrap: bootstrap,
  border_all: border_all,
  border_none: border_none,
  border_style: border_style,
  bowling_ball: bowling_ball,
  box: box,
  box_open: box_open,
  box_tissue: box_tissue,
  boxes: boxes,
  braille: braille,
  brain: brain,
  bread_slice: bread_slice,
  briefcase: briefcase,
  briefcase_medical: briefcase_medical,
  broadcast_tower: broadcast_tower,
  broom: broom,
  brush: brush,
  btc: btc,
  buffer: buffer,
  bug: bug,
  building: building,
  bullhorn: bullhorn,
  bullseye: bullseye,
  burn: burn,
  buromobelexperte: buromobelexperte,
  bus: bus,
  bus_alt: bus_alt,
  business_time: business_time,
  buy_n_large: buy_n_large,
  buysellads: buysellads,
  calculator: calculator,
  calendar: calendar,
  calendar_alt: calendar_alt,
  calendar_check: calendar_check,
  calendar_day: calendar_day,
  calendar_minus: calendar_minus,
  calendar_plus: calendar_plus,
  calendar_times: calendar_times,
  calendar_week: calendar_week,
  camera: camera,
  camera_retro: camera_retro,
  campground: campground,
  canadian_maple_leaf: canadian_maple_leaf,
  candy_cane: candy_cane,
  cannabis: cannabis,
  capsules: capsules,
  car: car,
  car_alt: car_alt,
  car_battery: car_battery,
  car_crash: car_crash,
  car_side: car_side,
  caravan: caravan,
  caret_down: caret_down,
  caret_left: caret_left,
  caret_right: caret_right,
  caret_square_down: caret_square_down,
  caret_square_left: caret_square_left,
  caret_square_right: caret_square_right,
  caret_square_up: caret_square_up,
  caret_up: caret_up,
  carrot: carrot,
  cart_arrow_down: cart_arrow_down,
  cart_plus: cart_plus,
  cash_register: cash_register,
  cat: cat,
  cc_amazon_pay: cc_amazon_pay,
  cc_amex: cc_amex,
  cc_apple_pay: cc_apple_pay,
  cc_diners_club: cc_diners_club,
  cc_discover: cc_discover,
  cc_jcb: cc_jcb,
  cc_mastercard: cc_mastercard,
  cc_paypal: cc_paypal,
  cc_stripe: cc_stripe,
  cc_visa: cc_visa,
  centercode: centercode,
  centos: centos,
  certificate: certificate,
  chair: chair,
  chalkboard: chalkboard,
  chalkboard_teacher: chalkboard_teacher,
  charging_station: charging_station,
  chart_area: chart_area,
  chart_bar: chart_bar,
  chart_line: chart_line,
  chart_pie: chart_pie,
  check: check,
  check_circle: check_circle,
  check_double: check_double,
  check_square: check_square,
  cheese: cheese,
  chess: chess,
  chess_bishop: chess_bishop,
  chess_board: chess_board,
  chess_king: chess_king,
  chess_knight: chess_knight,
  chess_pawn: chess_pawn,
  chess_queen: chess_queen,
  chess_rook: chess_rook,
  chevron_circle_down: chevron_circle_down,
  chevron_circle_left: chevron_circle_left,
  chevron_circle_right: chevron_circle_right,
  chevron_circle_up: chevron_circle_up,
  chevron_down: chevron_down,
  chevron_left: chevron_left,
  chevron_right: chevron_right,
  chevron_up: chevron_up,
  child: child,
  chrome: chrome,
  chromecast: chromecast,
  church: church,
  circle: circle,
  circle_notch: circle_notch,
  city: city,
  clinic_medical: clinic_medical,
  clipboard: clipboard,
  clipboard_check: clipboard_check,
  clipboard_list: clipboard_list,
  clock: clock,
  clone: clone,
  closed_captioning: closed_captioning,
  cloud: cloud,
  cloud_download_alt: cloud_download_alt,
  cloud_meatball: cloud_meatball,
  cloud_moon: cloud_moon,
  cloud_moon_rain: cloud_moon_rain,
  cloud_rain: cloud_rain,
  cloud_showers_heavy: cloud_showers_heavy,
  cloud_sun: cloud_sun,
  cloud_sun_rain: cloud_sun_rain,
  cloud_upload_alt: cloud_upload_alt,
  cloudflare: cloudflare,
  cloudscale: cloudscale,
  cloudsmith: cloudsmith,
  cloudversify: cloudversify,
  cocktail: cocktail,
  code: code,
  code_branch: code_branch,
  codepen: codepen,
  codiepie: codiepie,
  coffee: coffee,
  cog: cog,
  cogs: cogs,
  coins: coins,
  columns: columns,
  comment: comment,
  comment_alt: comment_alt,
  comment_dollar: comment_dollar,
  comment_dots: comment_dots,
  comment_medical: comment_medical,
  comment_slash: comment_slash,
  comments: comments,
  comments_dollar: comments_dollar,
  compact_disc: compact_disc,
  compass: compass,
  compress: compress,
  compress_alt: compress_alt,
  compress_arrows_alt: compress_arrows_alt,
  concierge_bell: concierge_bell,
  confluence: confluence,
  connectdevelop: connectdevelop,
  contao: contao,
  cookie: cookie,
  cookie_bite: cookie_bite,
  copy: copy,
  copyright: copyright,
  cotton_bureau: cotton_bureau,
  couch: couch,
  cpanel: cpanel,
  creative_commons: creative_commons,
  creative_commons_by: creative_commons_by,
  creative_commons_nc: creative_commons_nc,
  creative_commons_nc_eu: creative_commons_nc_eu,
  creative_commons_nc_jp: creative_commons_nc_jp,
  creative_commons_nd: creative_commons_nd,
  creative_commons_pd: creative_commons_pd,
  creative_commons_pd_alt: creative_commons_pd_alt,
  creative_commons_remix: creative_commons_remix,
  creative_commons_sa: creative_commons_sa,
  creative_commons_sampling: creative_commons_sampling,
  creative_commons_sampling_plus: creative_commons_sampling_plus,
  creative_commons_share: creative_commons_share,
  creative_commons_zero: creative_commons_zero,
  credit_card: credit_card,
  critical_role: critical_role,
  crop: crop,
  crop_alt: crop_alt,
  cross: cross,
  crosshairs: crosshairs,
  crow: crow,
  crown: crown,
  crutch: crutch,
  css3: css3,
  css3_alt: css3_alt,
  cube: cube,
  cubes: cubes,
  cut: cut,
  cuttlefish: cuttlefish,
  d_and_d: d_and_d,
  d_and_d_beyond: d_and_d_beyond,
  dailymotion: dailymotion,
  dashcube: dashcube,
  database: database,
  deaf: deaf,
  deezer: deezer,
  delicious: delicious,
  democrat: democrat,
  deploydog: deploydog,
  deskpro: deskpro,
  desktop: desktop,
  dev: dev,
  deviantart: deviantart,
  dharmachakra: dharmachakra,
  dhl: dhl,
  diagnoses: diagnoses,
  diaspora: diaspora,
  dice: dice,
  dice_d20: dice_d20,
  dice_d6: dice_d6,
  dice_five: dice_five,
  dice_four: dice_four,
  dice_one: dice_one,
  dice_six: dice_six,
  dice_three: dice_three,
  dice_two: dice_two,
  digg: digg,
  digital_ocean: digital_ocean,
  digital_tachograph: digital_tachograph,
  directions: directions,
  discord: discord,
  discourse: discourse,
  disease: disease,
  divide: divide,
  dizzy: dizzy,
  dna: dna,
  dochub: dochub,
  docker: docker,
  dog: dog,
  dollar_sign: dollar_sign,
  dolly: dolly,
  dolly_flatbed: dolly_flatbed,
  donate: donate,
  door_closed: door_closed,
  door_open: door_open,
  dot_circle: dot_circle,
  dove: dove,
  download: download,
  draft2digital: draft2digital,
  drafting_compass: drafting_compass,
  dragon: dragon,
  draw_polygon: draw_polygon,
  dribbble: dribbble,
  dribbble_square: dribbble_square,
  dropbox: dropbox,
  drum: drum,
  drum_steelpan: drum_steelpan,
  drumstick_bite: drumstick_bite,
  drupal: drupal,
  dumbbell: dumbbell,
  dumpster: dumpster,
  dumpster_fire: dumpster_fire,
  dungeon: dungeon,
  dyalog: dyalog,
  earlybirds: earlybirds,
  ebay: ebay,
  edge: edge,
  edge_legacy: edge_legacy,
  edit: edit,
  egg: egg,
  eject: eject,
  elementor: elementor,
  ellipsis_h: ellipsis_h,
  ellipsis_v: ellipsis_v,
  ello: ello,
  ember: ember,
  empire: empire,
  envelope: envelope,
  envelope_open: envelope_open,
  envelope_open_text: envelope_open_text,
  envelope_square: envelope_square,
  envira: envira,
  equals: equals,
  eraser: eraser,
  erlang: erlang,
  ethereum: ethereum,
  ethernet: ethernet,
  etsy: etsy,
  euro_sign: euro_sign,
  evernote: evernote,
  exchange_alt: exchange_alt,
  exclamation: exclamation,
  exclamation_circle: exclamation_circle,
  exclamation_triangle: exclamation_triangle,
  expand: expand,
  expand_alt: expand_alt,
  expand_arrows_alt: expand_arrows_alt,
  expeditedssl: expeditedssl,
  external_link_alt: external_link_alt,
  external_link_square_alt: external_link_square_alt,
  eye: eye,
  eye_dropper: eye_dropper,
  eye_slash: eye_slash,
  facebook: facebook,
  facebook_f: facebook_f,
  facebook_messenger: facebook_messenger,
  facebook_square: facebook_square,
  fan: fan,
  fantasy_flight_games: fantasy_flight_games,
  fast_backward: fast_backward,
  fast_forward: fast_forward,
  faucet: faucet,
  fax: fax,
  feather: feather,
  feather_alt: feather_alt,
  fedex: fedex,
  fedora: fedora,
  female: female,
  fighter_jet: fighter_jet,
  figma: figma,
  file: file,
  file_alt: file_alt,
  file_archive: file_archive,
  file_audio: file_audio,
  file_code: file_code,
  file_contract: file_contract,
  file_csv: file_csv,
  file_download: file_download,
  file_excel: file_excel,
  file_export: file_export,
  file_image: file_image,
  file_import: file_import,
  file_invoice: file_invoice,
  file_invoice_dollar: file_invoice_dollar,
  file_medical: file_medical,
  file_medical_alt: file_medical_alt,
  file_pdf: file_pdf,
  file_powerpoint: file_powerpoint,
  file_prescription: file_prescription,
  file_signature: file_signature,
  file_upload: file_upload,
  file_video: file_video,
  file_word: file_word,
  fill: fill,
  fill_drip: fill_drip,
  film: film,
  filter: filter,
  fingerprint: fingerprint,
  fire: fire,
  fire_alt: fire_alt,
  fire_extinguisher: fire_extinguisher,
  firefox: firefox,
  firefox_browser: firefox_browser,
  first_aid: first_aid,
  first_order: first_order,
  first_order_alt: first_order_alt,
  firstdraft: firstdraft,
  fish: fish,
  fist_raised: fist_raised,
  flag: flag,
  flag_checkered: flag_checkered,
  flag_usa: flag_usa,
  flask: flask,
  flickr: flickr,
  flipboard: flipboard,
  flushed: flushed,
  fly: fly,
  folder: folder,
  folder_minus: folder_minus,
  folder_open: folder_open,
  folder_plus: folder_plus,
  font: font,
  font_awesome: font_awesome,
  font_awesome_alt: font_awesome_alt,
  font_awesome_flag: font_awesome_flag,
  font_awesome_logo_full: font_awesome_logo_full,
  fonticons: fonticons,
  fonticons_fi: fonticons_fi,
  football_ball: football_ball,
  fort_awesome: fort_awesome,
  fort_awesome_alt: fort_awesome_alt,
  forumbee: forumbee,
  forward: forward,
  foursquare: foursquare,
  free_code_camp: free_code_camp,
  freebsd: freebsd,
  frog: frog,
  frown: frown,
  frown_open: frown_open,
  fulcrum: fulcrum,
  funnel_dollar: funnel_dollar,
  futbol: futbol,
  galactic_republic: galactic_republic,
  galactic_senate: galactic_senate,
  gamepad: gamepad,
  gas_pump: gas_pump,
  gavel: gavel,
  gem: gem,
  genderless: genderless,
  get_pocket: get_pocket,
  gg: gg,
  gg_circle: gg_circle,
  ghost: ghost,
  gift: gift,
  gifts: gifts,
  git: git,
  git_alt: git_alt,
  git_square: git_square,
  github: github,
  github_alt: github_alt,
  github_square: github_square,
  gitkraken: gitkraken,
  gitlab: gitlab,
  gitter: gitter,
  glass_cheers: glass_cheers,
  glass_martini: glass_martini,
  glass_martini_alt: glass_martini_alt,
  glass_whiskey: glass_whiskey,
  glasses: glasses,
  glide: glide,
  glide_g: glide_g,
  globe: globe,
  globe_africa: globe_africa,
  globe_americas: globe_americas,
  globe_asia: globe_asia,
  globe_europe: globe_europe,
  gofore: gofore,
  golf_ball: golf_ball,
  goodreads: goodreads,
  goodreads_g: goodreads_g,
  google: google,
  google_drive: google_drive,
  google_pay: google_pay,
  google_play: google_play,
  google_plus: google_plus,
  google_plus_g: google_plus_g,
  google_plus_square: google_plus_square,
  google_wallet: google_wallet,
  gopuram: gopuram,
  graduation_cap: graduation_cap,
  gratipay: gratipay,
  grav: grav,
  greater_than: greater_than,
  greater_than_equal: greater_than_equal,
  grimace: grimace,
  grin: grin,
  grin_alt: grin_alt,
  grin_beam: grin_beam,
  grin_beam_sweat: grin_beam_sweat,
  grin_hearts: grin_hearts,
  grin_squint: grin_squint,
  grin_squint_tears: grin_squint_tears,
  grin_stars: grin_stars,
  grin_tears: grin_tears,
  grin_tongue: grin_tongue,
  grin_tongue_squint: grin_tongue_squint,
  grin_tongue_wink: grin_tongue_wink,
  grin_wink: grin_wink,
  grip_horizontal: grip_horizontal,
  grip_lines: grip_lines,
  grip_lines_vertical: grip_lines_vertical,
  grip_vertical: grip_vertical,
  gripfire: gripfire,
  grunt: grunt,
  guilded: guilded,
  guitar: guitar,
  gulp: gulp,
  h_square: h_square,
  hacker_news: hacker_news,
  hacker_news_square: hacker_news_square,
  hackerrank: hackerrank,
  hamburger: hamburger,
  hammer: hammer,
  hamsa: hamsa,
  hand_holding: hand_holding,
  hand_holding_heart: hand_holding_heart,
  hand_holding_medical: hand_holding_medical,
  hand_holding_usd: hand_holding_usd,
  hand_holding_water: hand_holding_water,
  hand_lizard: hand_lizard,
  hand_middle_finger: hand_middle_finger,
  hand_paper: hand_paper,
  hand_peace: hand_peace,
  hand_point_down: hand_point_down,
  hand_point_left: hand_point_left,
  hand_point_right: hand_point_right,
  hand_point_up: hand_point_up,
  hand_pointer: hand_pointer,
  hand_rock: hand_rock,
  hand_scissors: hand_scissors,
  hand_sparkles: hand_sparkles,
  hand_spock: hand_spock,
  hands: hands,
  hands_helping: hands_helping,
  hands_wash: hands_wash,
  handshake: handshake,
  handshake_alt_slash: handshake_alt_slash,
  handshake_slash: handshake_slash,
  hanukiah: hanukiah,
  hard_hat: hard_hat,
  hashtag: hashtag,
  hat_cowboy: hat_cowboy,
  hat_cowboy_side: hat_cowboy_side,
  hat_wizard: hat_wizard,
  hdd: hdd,
  head_side_cough: head_side_cough,
  head_side_cough_slash: head_side_cough_slash,
  head_side_mask: head_side_mask,
  head_side_virus: head_side_virus,
  heading: heading,
  headphones: headphones,
  headphones_alt: headphones_alt,
  headset: headset,
  heart: heart,
  heart_broken: heart_broken,
  heartbeat: heartbeat,
  helicopter: helicopter,
  highlighter: highlighter,
  hiking: hiking,
  hippo: hippo,
  hips: hips,
  hire_a_helper: hire_a_helper,
  history: history,
  hive: hive,
  hockey_puck: hockey_puck,
  holly_berry: holly_berry,
  home: home,
  hooli: hooli,
  hornbill: hornbill,
  horse: horse,
  horse_head: horse_head,
  hospital: hospital,
  hospital_alt: hospital_alt,
  hospital_symbol: hospital_symbol,
  hospital_user: hospital_user,
  hot_tub: hot_tub,
  hotdog: hotdog,
  hotel: hotel,
  hotjar: hotjar,
  hourglass: hourglass,
  hourglass_end: hourglass_end,
  hourglass_half: hourglass_half,
  hourglass_start: hourglass_start,
  house_damage: house_damage,
  house_user: house_user,
  houzz: houzz,
  hryvnia: hryvnia,
  html5: html5,
  hubspot: hubspot,
  i_cursor: i_cursor,
  ice_cream: ice_cream,
  icicles: icicles,
  icons: icons,
  id_badge: id_badge,
  id_card: id_card,
  id_card_alt: id_card_alt,
  ideal: ideal,
  igloo: igloo,
  image: image,
  images: images,
  imdb: imdb,
  inbox: inbox,
  indent: indent,
  industry: industry,
  infinity: infinity,
  info: info,
  info_circle: info_circle,
  innosoft: innosoft,
  instagram: instagram,
  instagram_square: instagram_square,
  instalod: instalod,
  intercom: intercom,
  internet_explorer: internet_explorer,
  invision: invision,
  ioxhost: ioxhost,
  italic: italic,
  itch_io: itch_io,
  itunes: itunes,
  itunes_note: itunes_note,
  java: java,
  jedi: jedi,
  jedi_order: jedi_order,
  jenkins: jenkins,
  jira: jira,
  joget: joget,
  joint: joint,
  joomla: joomla,
  journal_whills: journal_whills,
  js: js,
  js_square: js_square,
  jsfiddle: jsfiddle,
  kaaba: kaaba,
  kaggle: kaggle,
  key: key,
  keybase: keybase,
  keyboard: keyboard,
  keycdn: keycdn,
  khanda: khanda,
  kickstarter: kickstarter,
  kickstarter_k: kickstarter_k,
  kiss: kiss,
  kiss_beam: kiss_beam,
  kiss_wink_heart: kiss_wink_heart,
  kiwi_bird: kiwi_bird,
  korvue: korvue,
  landmark: landmark,
  language: language,
  laptop: laptop,
  laptop_code: laptop_code,
  laptop_house: laptop_house,
  laptop_medical: laptop_medical,
  laravel: laravel,
  lastfm: lastfm,
  lastfm_square: lastfm_square,
  laugh: laugh,
  laugh_beam: laugh_beam,
  laugh_squint: laugh_squint,
  laugh_wink: laugh_wink,
  layer_group: layer_group,
  leaf: leaf,
  leanpub: leanpub,
  lemon: lemon,
  less: less,
  less_than: less_than,
  less_than_equal: less_than_equal,
  level_down_alt: level_down_alt,
  level_up_alt: level_up_alt,
  life_ring: life_ring,
  lightbulb: lightbulb,
  line: line,
  link: link,
  linkedin: linkedin,
  linkedin_in: linkedin_in,
  linode: linode,
  linux: linux,
  lira_sign: lira_sign,
  list: list,
  list_alt: list_alt,
  list_ol: list_ol,
  list_ul: list_ul,
  location_arrow: location_arrow,
  lock: lock,
  lock_open: lock_open,
  long_arrow_alt_down: long_arrow_alt_down,
  long_arrow_alt_left: long_arrow_alt_left,
  long_arrow_alt_right: long_arrow_alt_right,
  long_arrow_alt_up: long_arrow_alt_up,
  low_vision: low_vision,
  luggage_cart: luggage_cart,
  lungs: lungs,
  lungs_virus: lungs_virus,
  lyft: lyft,
  magento: magento,
  magic: magic,
  magnet: magnet,
  mail_bulk: mail_bulk,
  mailchimp: mailchimp,
  male: male,
  mandalorian: mandalorian,
  map: map,
  map_marked: map_marked,
  map_marked_alt: map_marked_alt,
  map_marker: map_marker,
  map_marker_alt: map_marker_alt,
  map_pin: map_pin,
  map_signs: map_signs,
  markdown: markdown,
  marker: marker,
  mars: mars,
  mars_double: mars_double,
  mars_stroke: mars_stroke,
  mars_stroke_h: mars_stroke_h,
  mars_stroke_v: mars_stroke_v,
  mask: mask,
  mastodon: mastodon,
  maxcdn: maxcdn,
  mdb: mdb,
  medal: medal,
  medapps: medapps,
  medium: medium,
  medium_m: medium_m,
  medkit: medkit,
  medrt: medrt,
  meetup: meetup,
  megaport: megaport,
  meh: meh,
  meh_blank: meh_blank,
  meh_rolling_eyes: meh_rolling_eyes,
  memory: memory,
  mendeley: mendeley,
  menorah: menorah,
  mercury: mercury,
  meteor: meteor,
  microblog: microblog,
  microchip: microchip,
  microphone: microphone,
  microphone_alt: microphone_alt,
  microphone_alt_slash: microphone_alt_slash,
  microphone_slash: microphone_slash,
  microscope: microscope,
  microsoft: microsoft,
  minus: minus,
  minus_circle: minus_circle,
  minus_square: minus_square,
  mitten: mitten,
  mix: mix,
  mixcloud: mixcloud,
  mixer: mixer,
  mizuni: mizuni,
  mobile: mobile,
  mobile_alt: mobile_alt,
  modx: modx,
  monero: monero,
  money_bill: money_bill,
  money_bill_alt: money_bill_alt,
  money_bill_wave: money_bill_wave,
  money_bill_wave_alt: money_bill_wave_alt,
  money_check: money_check,
  money_check_alt: money_check_alt,
  monument: monument,
  moon: moon,
  mortar_pestle: mortar_pestle,
  mosque: mosque,
  motorcycle: motorcycle,
  mountain: mountain,
  mouse: mouse,
  mouse_pointer: mouse_pointer,
  mug_hot: mug_hot,
  music: music,
  napster: napster,
  neos: neos,
  network_wired: network_wired,
  neuter: neuter,
  newspaper: newspaper,
  nimblr: nimblr,
  node: node,
  node_js: node_js,
  not_equal: not_equal,
  notes_medical: notes_medical,
  npm: npm,
  ns8: ns8,
  nutritionix: nutritionix,
  object_group: object_group,
  object_ungroup: object_ungroup,
  octopus_deploy: octopus_deploy,
  odnoklassniki: odnoklassniki,
  odnoklassniki_square: odnoklassniki_square,
  oil_can: oil_can,
  old_republic: old_republic,
  om: om,
  opencart: opencart,
  openid: openid,
  opera: opera,
  optin_monster: optin_monster,
  orcid: orcid,
  osi: osi,
  otter: otter,
  outdent: outdent,
  page4: page4,
  pagelines: pagelines,
  pager: pager,
  paint_brush: paint_brush,
  paint_roller: paint_roller,
  palette: palette,
  palfed: palfed,
  pallet: pallet,
  paper_plane: paper_plane,
  paperclip: paperclip,
  parachute_box: parachute_box,
  paragraph: paragraph,
  parking: parking,
  passport: passport,
  pastafarianism: pastafarianism,
  paste: paste,
  patreon: patreon,
  pause: pause,
  pause_circle: pause_circle,
  paw: paw,
  paypal: paypal,
  peace: peace,
  pen: pen,
  pen_alt: pen_alt,
  pen_fancy: pen_fancy,
  pen_nib: pen_nib,
  pen_square: pen_square,
  pencil_alt: pencil_alt,
  pencil_ruler: pencil_ruler,
  penny_arcade: penny_arcade,
  people_arrows: people_arrows,
  people_carry: people_carry,
  pepper_hot: pepper_hot,
  perbyte: perbyte,
  percent: percent,
  percentage: percentage,
  periscope: periscope,
  person_booth: person_booth,
  phabricator: phabricator,
  phoenix_framework: phoenix_framework,
  phoenix_squadron: phoenix_squadron,
  phone: phone,
  phone_alt: phone_alt,
  phone_slash: phone_slash,
  phone_square: phone_square,
  phone_square_alt: phone_square_alt,
  phone_volume: phone_volume,
  photo_video: photo_video,
  php: php,
  pied_piper: pied_piper,
  pied_piper_alt: pied_piper_alt,
  pied_piper_hat: pied_piper_hat,
  pied_piper_pp: pied_piper_pp,
  pied_piper_square: pied_piper_square,
  piggy_bank: piggy_bank,
  pills: pills,
  pinterest: pinterest,
  pinterest_p: pinterest_p,
  pinterest_square: pinterest_square,
  pizza_slice: pizza_slice,
  place_of_worship: place_of_worship,
  plane: plane,
  plane_arrival: plane_arrival,
  plane_departure: plane_departure,
  plane_slash: plane_slash,
  play: play,
  play_circle: play_circle,
  playstation: playstation,
  plug: plug,
  plus: plus,
  plus_circle: plus_circle,
  plus_square: plus_square,
  podcast: podcast,
  poll: poll,
  poll_h: poll_h,
  poo: poo,
  poo_storm: poo_storm,
  poop: poop,
  portrait: portrait,
  pound_sign: pound_sign,
  power_off: power_off,
  pray: pray,
  praying_hands: praying_hands,
  prescription: prescription,
  prescription_bottle: prescription_bottle,
  prescription_bottle_alt: prescription_bottle_alt,
  print: print,
  procedures: procedures,
  product_hunt: product_hunt,
  project_diagram: project_diagram,
  pump_medical: pump_medical,
  pump_soap: pump_soap,
  pushed: pushed,
  puzzle_piece: puzzle_piece,
  python: python,
  qq: qq,
  qrcode: qrcode,
  question: question,
  question_circle: question_circle,
  quidditch: quidditch,
  quinscape: quinscape,
  quora: quora,
  quote_left: quote_left,
  quote_right: quote_right,
  quran: quran,
  r_project: r_project,
  radiation: radiation,
  radiation_alt: radiation_alt,
  rainbow: rainbow,
  random: random,
  raspberry_pi: raspberry_pi,
  ravelry: ravelry,
  react: react,
  reacteurope: reacteurope,
  readme: readme,
  rebel: rebel,
  receipt: receipt,
  record_vinyl: record_vinyl,
  recycle: recycle,
  red_river: red_river,
  reddit: reddit,
  reddit_alien: reddit_alien,
  reddit_square: reddit_square,
  redhat: redhat,
  redo: redo,
  redo_alt: redo_alt,
  registered: registered,
  remove_format: remove_format,
  renren: renren,
  reply: reply,
  reply_all: reply_all,
  replyd: replyd,
  republican: republican,
  researchgate: researchgate,
  resolving: resolving,
  restroom: restroom,
  retweet: retweet,
  rev: rev,
  ribbon: ribbon,
  ring: ring,
  road: road,
  robot: robot,
  rocket: rocket,
  rocketchat: rocketchat,
  rockrms: rockrms,
  route: route,
  rss: rss,
  rss_square: rss_square,
  ruble_sign: ruble_sign,
  ruler: ruler,
  ruler_combined: ruler_combined,
  ruler_horizontal: ruler_horizontal,
  ruler_vertical: ruler_vertical,
  running: running,
  rupee_sign: rupee_sign,
  rust: rust,
  sad_cry: sad_cry,
  sad_tear: sad_tear,
  safari: safari,
  salesforce: salesforce,
  sass: sass,
  satellite: satellite,
  satellite_dish: satellite_dish,
  save: save,
  schlix: schlix,
  school: school,
  screwdriver: screwdriver,
  scribd: scribd,
  scroll: scroll,
  sd_card: sd_card,
  search: search,
  search_dollar: search_dollar,
  search_location: search_location,
  search_minus: search_minus,
  search_plus: search_plus,
  searchengin: searchengin,
  seedling: seedling,
  sellcast: sellcast,
  sellsy: sellsy,
  server: server,
  servicestack: servicestack,
  shapes: shapes,
  share: share,
  share_alt: share_alt,
  share_alt_square: share_alt_square,
  share_square: share_square,
  shekel_sign: shekel_sign,
  shield_alt: shield_alt,
  shield_virus: shield_virus,
  ship: ship,
  shipping_fast: shipping_fast,
  shirtsinbulk: shirtsinbulk,
  shoe_prints: shoe_prints,
  shopify: shopify,
  shopping_bag: shopping_bag,
  shopping_basket: shopping_basket,
  shopping_cart: shopping_cart,
  shopware: shopware,
  shower: shower,
  shuttle_van: shuttle_van,
  sign: sign,
  sign_in_alt: sign_in_alt,
  sign_language: sign_language,
  sign_out_alt: sign_out_alt,
  signal: signal,
  signature: signature,
  sim_card: sim_card,
  simplybuilt: simplybuilt,
  sink: sink,
  sistrix: sistrix,
  sitemap: sitemap,
  sith: sith,
  skating: skating,
  sketch: sketch,
  skiing: skiing,
  skiing_nordic: skiing_nordic,
  skull: skull,
  skull_crossbones: skull_crossbones,
  skyatlas: skyatlas,
  skype: skype,
  slack: slack,
  slack_hash: slack_hash,
  slash: slash,
  sleigh: sleigh,
  sliders_h: sliders_h,
  slideshare: slideshare,
  smile: smile,
  smile_beam: smile_beam,
  smile_wink: smile_wink,
  smog: smog,
  smoking: smoking,
  smoking_ban: smoking_ban,
  sms: sms,
  snapchat: snapchat,
  snapchat_ghost: snapchat_ghost,
  snapchat_square: snapchat_square,
  snowboarding: snowboarding,
  snowflake: snowflake,
  snowman: snowman,
  snowplow: snowplow,
  soap: soap,
  socks: socks,
  solar_panel: solar_panel,
  sort: sort,
  sort_alpha_down: sort_alpha_down,
  sort_alpha_down_alt: sort_alpha_down_alt,
  sort_alpha_up: sort_alpha_up,
  sort_alpha_up_alt: sort_alpha_up_alt,
  sort_amount_down: sort_amount_down,
  sort_amount_down_alt: sort_amount_down_alt,
  sort_amount_up: sort_amount_up,
  sort_amount_up_alt: sort_amount_up_alt,
  sort_down: sort_down,
  sort_numeric_down: sort_numeric_down,
  sort_numeric_down_alt: sort_numeric_down_alt,
  sort_numeric_up: sort_numeric_up,
  sort_numeric_up_alt: sort_numeric_up_alt,
  sort_up: sort_up,
  soundcloud: soundcloud,
  sourcetree: sourcetree,
  spa: spa,
  space_shuttle: space_shuttle,
  speakap: speakap,
  speaker_deck: speaker_deck,
  spell_check: spell_check,
  spider: spider,
  spinner: spinner,
  splotch: splotch,
  spotify: spotify,
  spray_can: spray_can,
  square: square,
  square_full: square_full,
  square_root_alt: square_root_alt,
  squarespace: squarespace,
  stack_exchange: stack_exchange,
  stack_overflow: stack_overflow,
  stackpath: stackpath,
  stamp: stamp,
  star: star,
  star_and_crescent: star_and_crescent,
  star_half: star_half,
  star_half_alt: star_half_alt,
  star_of_david: star_of_david,
  star_of_life: star_of_life,
  staylinked: staylinked,
  steam: steam,
  steam_square: steam_square,
  steam_symbol: steam_symbol,
  step_backward: step_backward,
  step_forward: step_forward,
  stethoscope: stethoscope,
  sticker_mule: sticker_mule,
  sticky_note: sticky_note,
  stop: stop,
  stop_circle: stop_circle,
  stopwatch: stopwatch,
  stopwatch_20: stopwatch_20,
  store: store,
  store_alt: store_alt,
  store_alt_slash: store_alt_slash,
  store_slash: store_slash,
  strava: strava,
  stream: stream,
  street_view: street_view,
  strikethrough: strikethrough,
  stripe: stripe,
  stripe_s: stripe_s,
  stroopwafel: stroopwafel,
  studiovinari: studiovinari,
  stumbleupon: stumbleupon,
  stumbleupon_circle: stumbleupon_circle,
  subscript: subscript,
  subway: subway,
  suitcase: suitcase,
  suitcase_rolling: suitcase_rolling,
  sun: sun,
  superpowers: superpowers,
  superscript: superscript,
  supple: supple,
  surprise: surprise,
  suse: suse,
  swatchbook: swatchbook,
  swift: swift,
  swimmer: swimmer,
  swimming_pool: swimming_pool,
  symfony: symfony,
  synagogue: synagogue,
  sync: sync,
  sync_alt: sync_alt,
  syringe: syringe,
  table: table,
  table_tennis: table_tennis,
  tablet: tablet,
  tablet_alt: tablet_alt,
  tablets: tablets,
  tachometer_alt: tachometer_alt,
  tag: tag,
  tags: tags,
  tape: tape,
  tasks: tasks,
  taxi: taxi,
  teamspeak: teamspeak,
  teeth: teeth,
  teeth_open: teeth_open,
  telegram: telegram,
  telegram_plane: telegram_plane,
  temperature_high: temperature_high,
  temperature_low: temperature_low,
  tencent_weibo: tencent_weibo,
  tenge: tenge,
  terminal: terminal,
  text_height: text_height,
  text_width: text_width,
  th: th,
  th_large: th_large,
  th_list: th_list,
  the_red_yeti: the_red_yeti,
  theater_masks: theater_masks,
  themeco: themeco,
  themeisle: themeisle,
  thermometer: thermometer,
  thermometer_empty: thermometer_empty,
  thermometer_full: thermometer_full,
  thermometer_half: thermometer_half,
  thermometer_quarter: thermometer_quarter,
  thermometer_three_quarters: thermometer_three_quarters,
  think_peaks: think_peaks,
  thumbs_down: thumbs_down,
  thumbs_up: thumbs_up,
  thumbtack: thumbtack,
  ticket_alt: ticket_alt,
  tiktok: tiktok,
  times: times,
  times_circle: times_circle,
  tint: tint,
  tint_slash: tint_slash,
  tired: tired,
  toggle_off: toggle_off,
  toggle_on: toggle_on,
  toilet: toilet,
  toilet_paper: toilet_paper,
  toilet_paper_slash: toilet_paper_slash,
  toolbox: toolbox,
  tools: tools,
  tooth: tooth,
  torah: torah,
  torii_gate: torii_gate,
  tractor: tractor,
  trade_federation: trade_federation,
  trademark: trademark,
  traffic_light: traffic_light,
  trailer: trailer,
  train: train,
  tram: tram,
  transgender: transgender,
  transgender_alt: transgender_alt,
  trash: trash,
  trash_alt: trash_alt,
  trash_restore: trash_restore,
  trash_restore_alt: trash_restore_alt,
  tree: tree,
  trello: trello,
  tripadvisor: tripadvisor,
  trophy: trophy,
  truck: truck,
  truck_loading: truck_loading,
  truck_monster: truck_monster,
  truck_moving: truck_moving,
  truck_pickup: truck_pickup,
  tshirt: tshirt,
  tty: tty,
  tumblr: tumblr,
  tumblr_square: tumblr_square,
  tv: tv,
  twitch: twitch,
  twitter: twitter,
  twitter_square: twitter_square,
  typo3: typo3,
  uber: uber,
  ubuntu: ubuntu,
  uikit: uikit,
  umbraco: umbraco,
  umbrella: umbrella,
  umbrella_beach: umbrella_beach,
  uncharted: uncharted,
  underline: underline,
  undo: undo,
  undo_alt: undo_alt,
  uniregistry: uniregistry,
  unity: unity,
  universal_access: universal_access,
  university: university,
  unlink: unlink,
  unlock: unlock,
  unlock_alt: unlock_alt,
  unsplash: unsplash,
  untappd: untappd,
  upload: upload,
  ups: ups,
  usb: usb,
  user: user,
  user_alt: user_alt,
  user_alt_slash: user_alt_slash,
  user_astronaut: user_astronaut,
  user_check: user_check,
  user_circle: user_circle,
  user_clock: user_clock,
  user_cog: user_cog,
  user_edit: user_edit,
  user_friends: user_friends,
  user_graduate: user_graduate,
  user_injured: user_injured,
  user_lock: user_lock,
  user_md: user_md,
  user_minus: user_minus,
  user_ninja: user_ninja,
  user_nurse: user_nurse,
  user_plus: user_plus,
  user_secret: user_secret,
  user_shield: user_shield,
  user_slash: user_slash,
  user_tag: user_tag,
  user_tie: user_tie,
  user_times: user_times,
  users: users,
  users_cog: users_cog,
  users_slash: users_slash,
  usps: usps,
  ussunnah: ussunnah,
  utensil_spoon: utensil_spoon,
  utensils: utensils,
  vaadin: vaadin,
  vector_square: vector_square,
  venus: venus,
  venus_double: venus_double,
  venus_mars: venus_mars,
  vest: vest,
  vest_patches: vest_patches,
  viacoin: viacoin,
  viadeo: viadeo,
  viadeo_square: viadeo_square,
  vial: vial,
  vials: vials,
  viber: viber,
  video: video,
  video_slash: video_slash,
  vihara: vihara,
  vimeo: vimeo,
  vimeo_square: vimeo_square,
  vimeo_v: vimeo_v,
  vine: vine,
  virus: virus,
  virus_slash: virus_slash,
  viruses: viruses,
  vk: vk,
  vnv: vnv,
  voicemail: voicemail,
  volleyball_ball: volleyball_ball,
  volume_down: volume_down,
  volume_mute: volume_mute,
  volume_off: volume_off,
  volume_up: volume_up,
  vote_yea: vote_yea,
  vr_cardboard: vr_cardboard,
  vuejs: vuejs,
  walking: walking,
  wallet: wallet,
  warehouse: warehouse,
  watchman_monitoring: watchman_monitoring,
  water: water,
  wave_square: wave_square,
  waze: waze,
  weebly: weebly,
  weibo: weibo,
  weight: weight,
  weight_hanging: weight_hanging,
  weixin: weixin,
  whatsapp: whatsapp,
  whatsapp_square: whatsapp_square,
  wheelchair: wheelchair,
  whmcs: whmcs,
  wifi: wifi,
  wikipedia_w: wikipedia_w,
  wind: wind,
  window_close: window_close,
  window_maximize: window_maximize,
  window_minimize: window_minimize,
  window_restore: window_restore,
  windows: windows,
  wine_bottle: wine_bottle,
  wine_glass: wine_glass,
  wine_glass_alt: wine_glass_alt,
  wix: wix,
  wizards_of_the_coast: wizards_of_the_coast,
  wodu: wodu,
  wolf_pack_battalion: wolf_pack_battalion,
  won_sign: won_sign,
  wordpress: wordpress,
  wordpress_simple: wordpress_simple,
  wpbeginner: wpbeginner,
  wpexplorer: wpexplorer,
  wpforms: wpforms,
  wpressr: wpressr,
  wrench: wrench,
  x_ray: x_ray,
  xbox: xbox,
  xing: xing,
  xing_square: xing_square,
  y_combinator: y_combinator,
  yahoo: yahoo,
  yammer: yammer,
  yandex: yandex,
  yandex_international: yandex_international,
  yarn: yarn,
  yelp: yelp,
  yen_sign: yen_sign,
  yin_yang: yin_yang,
  yoast: yoast,
  youtube: youtube,
  youtube_square: youtube_square,
  zhihu: zhihu
};
},{"../Concur.Dom/index.js":"vptB"}],"bh6e":[function(require,module,exports) {
// | Horribly intertwined with `style.sass`...
"use strict";

var Concur_Dom = require("../Concur.Dom/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Show = require("../Data.Show/index.js");

var Preload = require("../Preload/index.js");

var Outlined = function () {
  function Outlined() {}

  ;
  Outlined.value = new Outlined();
  return Outlined;
}();

var Filled = function () {
  function Filled() {}

  ;
  Filled.value = new Filled();
  return Filled;
}();

var Dotted = function () {
  function Dotted() {}

  ;
  Dotted.value = new Dotted();
  return Dotted;
}();

var Dashed = function () {
  function Dashed() {}

  ;
  Dashed.value = new Dashed();
  return Dashed;
}();

var Solid = function () {
  function Solid() {}

  ;
  Solid.value = new Solid();
  return Solid;
}();

var Double = function () {
  function Double() {}

  ;
  Double.value = new Double();
  return Double;
}();

var Large = function () {
  function Large() {}

  ;
  Large.value = new Large();
  return Large;
}();

var Medium = function () {
  function Medium() {}

  ;
  Medium.value = new Medium();
  return Medium;
}();

var Small = function () {
  function Small() {}

  ;
  Small.value = new Small();
  return Small;
}();

var Above = function () {
  function Above() {}

  ;
  Above.value = new Above();
  return Above;
}();

var Below = function () {
  function Below() {}

  ;
  Below.value = new Below();
  return Below;
}();

var Before = function () {
  function Before() {}

  ;
  Before.value = new Before();
  return Before;
}();

var After = function () {
  function After() {}

  ;
  After.value = new After();
  return After;
}(); // data Anchor = North | East | South | West


var Horizontal = function () {
  function Horizontal() {}

  ;
  Horizontal.value = new Horizontal();
  return Horizontal;
}(); // data Anchor = North | East | South | West


var Vertical = function () {
  function Vertical() {}

  ;
  Vertical.value = new Vertical();
  return Vertical;
}(); //-- Types ---------------------------------------------------------------------


var Normal = function () {
  function Normal() {}

  ;
  Normal.value = new Normal();
  return Normal;
}(); //-- Types ---------------------------------------------------------------------


var Primary = function () {
  function Primary() {}

  ;
  Primary.value = new Primary();
  return Primary;
}(); //-- Types ---------------------------------------------------------------------


var Secondary = function () {
  function Secondary() {}

  ;
  Secondary.value = new Secondary();
  return Secondary;
}(); //-- Types ---------------------------------------------------------------------


var Link = function () {
  function Link() {}

  ;
  Link.value = new Link();
  return Link;
}(); //-- Types ---------------------------------------------------------------------


var Success = function () {
  function Success() {}

  ;
  Success.value = new Success();
  return Success;
}(); //-- Types ---------------------------------------------------------------------


var Warning = function () {
  function Warning() {}

  ;
  Warning.value = new Warning();
  return Warning;
}(); //-- Types ---------------------------------------------------------------------


var $$Error = function () {
  function $$Error() {}

  ;
  $$Error.value = new $$Error();
  return $$Error;
}();

var Default = function () {
  function Default() {}

  ;
  Default.value = new Default();
  return Default;
}();

var Action = function () {
  function Action() {}

  ;
  Action.value = new Action();
  return Action;
}();

var row = Concur_Dom.block(["layout-row"]); //-- Layout --------------------------------------------------------------------

var element = Concur_Dom.blockWithAttr;
var column = Concur_Dom.block(["layout-column"]);
var branch = Concur_Dom.block(["layout-row", "layout-branch"]);
var $dollar_ShowStyle_12 = new Data_Show.Show(function (v) {
  if (v instanceof Outlined) {
    return "outlined";
  }

  ;

  if (v instanceof Filled) {
    return "filled";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Style (line 83, column 10 - line 85, column 23): " + [v.constructor.name]);
});

var triangle = function triangle(style) {
  return Concur_Dom.block(["shape-triangle", "style-" + Data_Show.show($dollar_ShowStyle_12)(style)]);
};

var $dollar_ShowStroke_13 = new Data_Show.Show(function (v) {
  if (v instanceof Dotted) {
    return "dotted";
  }

  ;

  if (v instanceof Dashed) {
    return "dashed";
  }

  ;

  if (v instanceof Solid) {
    return "solid";
  }

  ;

  if (v instanceof Double) {
    return "double";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Style (line 88, column 10 - line 92, column 23): " + [v.constructor.name]);
});

var group = function group(stroke) {
  return Concur_Dom.block(["layout-row", "layout-group", "stroke-" + Data_Show.show($dollar_ShowStroke_13)(stroke)]);
}; //-- Shapes --------------------------------------------------------------------


var line = function line(stroke) {
  return Concur_Dom.block(["shape-line", "stroke-" + Data_Show.show($dollar_ShowStroke_13)(stroke)]);
};

var $dollar_ShowSize_9 = new Data_Show.Show(function (v) {
  if (v instanceof Large) {
    return "lg";
  }

  ;

  if (v instanceof Medium) {
    return "md";
  }

  ;

  if (v instanceof Small) {
    return "sm";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Style (line 65, column 10 - line 68, column 18): " + [v.constructor.name]);
});

var dot = function dot(size) {
  return function (style) {
    return Concur_Dom.block(["shape-dot", "style-" + Data_Show.show($dollar_ShowStyle_12)(style), "radius-" + Data_Show.show($dollar_ShowSize_9)(size)]);
  };
};

var $dollar_ShowPosition_11 = new Data_Show.Show(function (v) {
  if (v instanceof Above) {
    return "top";
  }

  ;

  if (v instanceof Below) {
    return "bottom";
  }

  ;

  if (v instanceof Before) {
    return "left";
  }

  ;

  if (v instanceof After) {
    return "right";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Style (line 76, column 10 - line 80, column 21): " + [v.constructor.name]);
});

var place = function place(pos) {
  return function (dist) {
    return Concur_Dom.block(["layout-side", "side-" + Data_Show.show($dollar_ShowPosition_11)(pos), "dist-" + Data_Show.show($dollar_ShowSize_9)(dist)]);
  };
};

var $dollar_ShowOrientation_10 = new Data_Show.Show(function (v) {
  if (v instanceof Horizontal) {
    return "hori";
  }

  ;

  if (v instanceof Vertical) {
    return "vert";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Style (line 71, column 10 - line 73, column 23): " + [v.constructor.name]);
});

var divider = function divider(orient) {
  return function (text) {
    return Concur_Dom.blockWithData(["divider", "divider-" + Data_Show.show($dollar_ShowOrientation_10)(orient), function () {
      var $19 = Data_Maybe.isJust(text);

      if ($19) {
        return "text-center";
      }

      ;
      return "";
    }()])({
      content: Preload.withDefault(text)("")
    })([]);
  };
};

var $dollar_ShowKind_7 = new Data_Show.Show(function (v) {
  if (v instanceof Normal) {
    return "normal";
  }

  ;

  if (v instanceof Primary) {
    return "primary";
  }

  ;

  if (v instanceof Secondary) {
    return "secondary";
  }

  ;

  if (v instanceof Link) {
    return "link";
  }

  ;

  if (v instanceof Success) {
    return "success";
  }

  ;

  if (v instanceof Warning) {
    return "warning";
  }

  ;

  if (v instanceof $$Error) {
    return "error";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Style (line 50, column 10 - line 57, column 21): " + [v.constructor.name]);
});

var has = function has(k) {
  return Concur_Dom.block(["has-" + Data_Show.show($dollar_ShowKind_7)(k)]);
};

var $dollar_ShowButton_8 = new Data_Show.Show(function (v) {
  if (v instanceof Default) {
    return "default";
  }

  ;

  if (v instanceof Action) {
    return "action";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Style (line 60, column 10 - line 62, column 23): " + [v.constructor.name]);
});
module.exports = {
  Normal: Normal,
  Primary: Primary,
  Secondary: Secondary,
  Link: Link,
  Success: Success,
  Warning: Warning,
  "Error": $$Error,
  Default: Default,
  Action: Action,
  Large: Large,
  Medium: Medium,
  Small: Small,
  Horizontal: Horizontal,
  Vertical: Vertical,
  Above: Above,
  Below: Below,
  Before: Before,
  After: After,
  Outlined: Outlined,
  Filled: Filled,
  Dotted: Dotted,
  Dashed: Dashed,
  Solid: Solid,
  Double: Double,
  element: element,
  has: has,
  column: column,
  row: row,
  branch: branch,
  group: group,
  place: place,
  divider: divider,
  line: line,
  triangle: triangle,
  dot: dot,
  "$_ShowKind_7": $dollar_ShowKind_7,
  "$_ShowButton_8": $dollar_ShowButton_8,
  "$_ShowSize_9": $dollar_ShowSize_9,
  "$_ShowOrientation_10": $dollar_ShowOrientation_10,
  "$_ShowPosition_11": $dollar_ShowPosition_11,
  "$_ShowStyle_12": $dollar_ShowStyle_12,
  "$_ShowStroke_13": $dollar_ShowStroke_13
};
},{"../Concur.Dom/index.js":"vptB","../Data.Maybe/index.js":"mN7T","../Data.Show/index.js":"mFY7","../Preload/index.js":"yYWa"}],"tCQD":[function(require,module,exports) {
"use strict";

var Concur_Core_LiftWidget = require("../Concur.Core.LiftWidget/index.js");

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Concur_Dom = require("../Concur.Dom/index.js");

var Concur_Dom_Attr = require("../Concur.Dom.Attr/index.js");

var Concur_React_DOM = require("../Concur.React.DOM/index.js");

var Concur_React_Props = require("../Concur.React.Props/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Monoid = require("../Data.Monoid/index.js"); //-- Text ----------------------------------------------------------------------
// type TextStyle r
//   = { face :: Face
//     , size :: Int
//     , shape :: Shape
//     , weight :: Weight
//     , decoration :: Line
//     | r
//     }


var text = Concur_React_DOM.text(Concur_Core_LiftWidget.widgetLiftWidget); // lines :: forall a. Array String -> Widget a
// lines xs = Layout.column <| map Node.text xs
//-- Heads ----------------------------------------------------------------------
// title = h1
// subtitle = h2
// heading = h3
// subheading = h4
// emph

var title = function title(s) {
  return Concur_React_DOM["h1'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([text(s)]);
};

var subtitle = function subtitle(s) {
  return Concur_React_DOM["h2'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([text(s)]);
};

var subsubhead = function subsubhead(s) {
  return Concur_React_DOM["h5'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([text(s)]);
};

var subhead = function subhead(s) {
  return Concur_React_DOM["h4'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([text(s)]);
};

var numbers = Concur_React_DOM["ol'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap);

var item = function item(x) {
  return Concur_React_DOM["li'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([x]);
};

var head = function head(s) {
  return Concur_React_DOM["h3'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([text(s)]);
};

var gray = function gray(s) {
  return Concur_Dom.block(["text-gray"])([text(s)]);
};

var code = function code(lang) {
  return function (str) {
    return Concur_React_DOM.pre(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(["code"]), Concur_React_Props["_data"]({
      lang: lang
    })])([Concur_React_DOM.code(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([])([text(str)])]);
  };
}; //-- Lists ---------------------------------------------------------------------


var bullets = Concur_React_DOM["ul'"](Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap);
module.exports = {
  text: text,
  gray: gray,
  code: code,
  title: title,
  subtitle: subtitle,
  head: head,
  subhead: subhead,
  subsubhead: subsubhead,
  bullets: bullets,
  numbers: numbers,
  item: item
};
},{"../Concur.Core.LiftWidget/index.js":"sFj5","../Concur.Core.Types/index.js":"qGwK","../Concur.Dom/index.js":"vptB","../Concur.Dom.Attr/index.js":"wrur","../Concur.React.DOM/index.js":"Lx0R","../Concur.React.Props/index.js":"twSw","../Data.Foldable/index.js":"eVDl","../Data.Monoid/index.js":"TiEB"}],"Gx00":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Concur_Core_LiftWidget = require("../Concur.Core.LiftWidget/index.js");

var Concur_Core_Props = require("../Concur.Core.Props/index.js");

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Concur_Dom = require("../Concur.Dom/index.js");

var Concur_Dom_Attr = require("../Concur.Dom.Attr/index.js");

var Concur_Dom_Style = require("../Concur.Dom.Style/index.js");

var Concur_Dom_Text = require("../Concur.Dom.Text/index.js");

var Concur_React_DOM = require("../Concur.React.DOM/index.js");

var Concur_React_Props = require("../Concur.React.Props/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Unit = require("../Data.Unit/index.js");

var Preload = require("../Preload/index.js");

var Switch = function () {
  function Switch() {}

  ;
  Switch.value = new Switch();
  return Switch;
}();

var Checkbox = function () {
  function Checkbox() {}

  ;
  Checkbox.value = new Checkbox();
  return Checkbox;
}();

var Add = function () {
  function Add() {}

  ;
  Add.value = new Add();
  return Add;
}();

var Remove = function () {
  function Remove() {}

  ;
  Remove.value = new Remove();
  return Remove;
}();

var None = function () {
  function None() {}

  ;
  None.value = new None();
  return None;
}();

var tooltip = function tooltip(pos) {
  return function (text) {
    return function (widget) {
      return Concur_Dom.blockWithData(["tooltip", "tooltip-" + Data_Show.show(Concur_Dom_Style["$_ShowPosition_11"])(pos)])({
        tooltip: text
      })([widget]);
    };
  };
};

var popover = function popover(pos) {
  return function (contents) {
    return function (widget) {
      return Concur_Dom.block(["popover", "popover-" + Data_Show.show(Concur_Dom_Style["$_ShowPosition_11"])(pos)])([widget, Concur_Dom.block(["popover-container"])([contents])]);
    };
  };
};

var picker_generic = function picker_generic(dictShow) {
  return function (dictEq) {
    return function (options) {
      return function ($$default) {
        var go = function go(i) {
          return function (x) {
            return Concur_React_DOM.option(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_React_Props.value(Data_Show.show(Data_Show.showInt)(i))])([Concur_React_DOM.text(Concur_Core_LiftWidget.widgetLiftWidget)(Data_Show.show(dictShow)(x))]);
          };
        };

        return Control_Bind.bind(Concur_Core_Types.widgetBind)(Concur_React_DOM.select(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_React_Props.onChange, Concur_React_Props.defaultValue(Data_Show.show(dictShow)($$default))])(Data_Array.mapWithIndex(go)(options)))(function (result) {
          var v = Control_Bind.bind(Data_Maybe.bindMaybe)(Concur_Dom.intValue(result))(Data_Array.index(options));

          if (v instanceof Data_Maybe.Just) {
            return Preload.done(Concur_Core_Types.widgetApplicative)(v.value0);
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            return picker_generic(dictShow)(dictEq)(options)($$default);
          }

          ;
          throw new Error("Failed pattern match at Concur.Dom.Input (line 94, column 3 - line 96, column 46): " + [v.constructor.name]);
        });
      };
    };
  };
};

var picker = function picker(groups) {
  return function ($$default) {
    var go$prime = function go$prime(option) {
      return Concur_React_DOM.option(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_React_Props.value(option)])([Concur_React_DOM.text(Concur_Core_LiftWidget.widgetLiftWidget)(option)]);
    };

    var go = function go(v) {
      return Concur_React_DOM.optgroup(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_React_Props.label(v.value0)])(Data_Functor.map(Data_Functor.functorArray)(go$prime)(v.value1));
    };

    return Control_Bind.bind(Concur_Core_Types.widgetBind)(Concur_React_DOM.select(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(["form-select"]), Concur_React_Props.onChange, Concur_React_Props.defaultValue($$default)])(Data_Functor.map(Data_Functor.functorArray)(go)(groups)))(function (result) {
      return Preload.done(Concur_Core_Types.widgetApplicative)(Concur_Dom.stringValue(result));
    });
  };
};

var group = Concur_Dom.block(["btn-group", "btn-group-block"]);

var entry = function entry(size) {
  return function (placeholder) {
    return function (value) {
      return Control_Bind.bind(Concur_Core_Types.widgetBind)(Concur_React_DOM.input(Concur_Core_LiftWidget.widgetLiftWidget)([Concur_React_Props["_type"]("text"), Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(["form-input", "input-" + Data_Show.show(Concur_Dom_Style["$_ShowSize_9"])(size)]), Concur_React_Props.defaultValue(value), Concur_React_Props.placeholder(placeholder), Data_Functor.mapFlipped(Concur_Core_Props.functorProps)(Concur_React_Props.onInput)(Data_Either.Left.create), Data_Functor.mapFlipped(Concur_Core_Props.functorProps)(Concur_React_Props.onKeyDown)(Data_Either.Right.create)]))(function (result) {
        if (result instanceof Data_Either.Left) {
          return entry(size)(placeholder)(Concur_Dom.stringValue(result.value0));
        }

        ;

        if (result instanceof Data_Either.Right) {
          var $15 = Concur_React_Props.isEnterEvent(result.value0);

          if ($15) {
            return Preload.done(Concur_Core_Types.widgetApplicative)(value);
          }

          ;
          return entry(size)(placeholder)(value);
        }

        ;
        throw new Error("Failed pattern match at Concur.Dom.Input (line 148, column 3 - line 154, column 37): " + [result.constructor.name]);
      });
    };
  };
};

var card = function card(header) {
  return function (body) {
    return function (footer) {
      return Concur_Dom.block(["card"])([function () {
        var $17 = Data_Array["null"](header);

        if ($17) {
          return Control_Plus.empty(Concur_Core_Types.widgetPlus(Data_Monoid.monoidArray));
        }

        ;
        return Concur_Dom.block(["card-header"])(header);
      }(), Concur_Dom.block(["card-body"])(body), function () {
        var $18 = Data_Array["null"](footer);

        if ($18) {
          return Control_Plus.empty(Concur_Core_Types.widgetPlus(Data_Monoid.monoidArray));
        }

        ;
        return Concur_Dom.block(["card-footer"])(footer);
      }()]);
    };
  };
};

var button = function button(but) {
  return function (kind) {
    return function (size) {
      return function (label) {
        return Control_Bind.bind(Concur_Core_Types.widgetBind)(Concur_React_DOM.input(Concur_Core_LiftWidget.widgetLiftWidget)([Concur_React_Props["_type"]("button"), Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(["btn", "btn-" + Data_Show.show(Concur_Dom_Style["$_ShowButton_8"])(but), "btn-" + Data_Show.show(Concur_Dom_Style["$_ShowKind_7"])(kind), "btn-" + Data_Show.show(Concur_Dom_Style["$_ShowSize_9"])(size)]), Concur_React_Props.value(label), Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Concur_React_Props.onClick)(Data_Maybe.Nothing.value), Data_Functor.mapFlipped(Concur_Core_Props.functorProps)(Concur_React_Props.onKeyDown)(Data_Maybe.Just.create)]))(function (result) {
          if (result instanceof Data_Maybe.Nothing) {
            return Preload.done(Concur_Core_Types.widgetApplicative)(Data_Unit.unit);
          }

          ;

          if (result instanceof Data_Maybe.Just) {
            var $20 = Concur_React_Props.isEnterEvent(result.value0);

            if ($20) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(Data_Unit.unit);
            }

            ;
            return button(but)(kind)(size)(label);
          }

          ;
          throw new Error("Failed pattern match at Concur.Dom.Input (line 42, column 3 - line 48, column 35): " + [result.constructor.name]);
        });
      };
    };
  };
};

var area = function area(lines) {
  return function (placeholder) {
    return function (value) {
      return Control_Bind.bind(Concur_Core_Types.widgetBind)(Concur_React_DOM.textarea(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(["form-input"]), Concur_React_Props.rows(lines), Concur_React_Props.placeholder(placeholder), Data_Functor.mapFlipped(Concur_Core_Props.functorProps)(Concur_React_Props.onInput)(Data_Either.Left.create), Data_Functor.mapFlipped(Concur_Core_Props.functorProps)(Concur_React_Props.onKeyDown)(Data_Either.Right.create)])([Concur_React_DOM.text(Concur_Core_LiftWidget.widgetLiftWidget)(value)]))(function (result) {
        if (result instanceof Data_Either.Left) {
          return area(lines)(placeholder)(Concur_Dom.stringValue(result.value0));
        }

        ;

        if (result instanceof Data_Either.Right) {
          var $24 = Concur_React_Props.isEnterEvent(result.value0);

          if ($24) {
            return Preload.done(Concur_Core_Types.widgetApplicative)(value);
          }

          ;
          return area(lines)(placeholder)(value);
        }

        ;
        throw new Error("Failed pattern match at Concur.Dom.Input (line 167, column 3 - line 173, column 37): " + [result.constructor.name]);
      });
    };
  };
};

var addon = function addon(size) {
  return function (contents) {
    return function (widget) {
      return Concur_Dom.block(["input-group"])([Concur_Dom.block(["input-group-addon", "addon-" + Data_Show.show(Concur_Dom_Style["$_ShowSize_9"])(size)])([contents]), widget]);
    };
  };
};

var $dollar_ShowToggle_3 = new Data_Show.Show(function (v) {
  if (v instanceof Switch) {
    return "switch";
  }

  ;

  if (v instanceof Checkbox) {
    return "checkbox";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Input (line 79, column 10 - line 81, column 27): " + [v.constructor.name]);
});

var toggle = function toggle(typ) {
  return function (label) {
    return function (checked) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Concur_Core_Types.widgetBind)(Concur_Dom.block(["form-group"])([Concur_React_DOM.label(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(["form-" + Data_Show.show($dollar_ShowToggle_3)(typ)])])([Concur_React_DOM.input(Concur_Core_LiftWidget.widgetLiftWidget)([Concur_React_Props["_type"]("checkbox"), Concur_React_Props.checked(checked), Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Concur_React_Props.onInput)(Data_Unit.unit)]), Concur_React_DOM.i(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(["form-icon"])])([Concur_React_DOM.text(Concur_Core_LiftWidget.widgetLiftWidget)(label)])])]))(function () {
        return Preload.done(Concur_Core_Types.widgetApplicative)(!checked);
      });
    };
  };
};

var checkbox = toggle(Checkbox.value);
var $$switch = toggle(Switch.value);
var $dollar_ShowAction_4 = new Data_Show.Show(function (v) {
  if (v instanceof Add) {
    return "add";
  }

  ;

  if (v instanceof Remove) {
    return "clear";
  }

  ;

  if (v instanceof None) {
    return "none";
  }

  ;
  throw new Error("Failed pattern match at Concur.Dom.Input (line 212, column 10 - line 215, column 19): " + [v.constructor.name]);
});

var chip = function chip(kind) {
  return function (action) {
    return function (text) {
      return Concur_Dom.block(["chip", "chip-" + Data_Show.show(Concur_Dom_Style["$_ShowKind_7"])(kind)])([Concur_Dom_Text.text(text), function () {
        if (action instanceof None) {
          return Control_Plus.empty(Concur_Core_Types.widgetPlus(Data_Monoid.monoidArray));
        }

        ;
        return Concur_React_DOM.a(Concur_Core_Types.widgetMultiAlternative(Data_Monoid.monoidArray))(Concur_Core_Types.widgetShiftMap)([Concur_Dom_Attr.classes(Data_Foldable.foldableArray)(["btn", "btn-" + Data_Show.show($dollar_ShowAction_4)(action)]), Concur_React_Props.role("button"), Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Concur_React_Props.onClick)(Data_Unit.unit)])([]);
      }()]);
    };
  };
};

module.exports = {
  button: button,
  group: group,
  "switch": $$switch,
  checkbox: checkbox,
  entry: entry,
  area: area,
  picker: picker,
  picker_generic: picker_generic,
  addon: addon,
  tooltip: tooltip,
  popover: popover,
  card: card,
  Add: Add,
  Remove: Remove,
  None: None,
  chip: chip,
  "$_ShowAction_4": $dollar_ShowAction_4
};
},{"../Concur.Core.LiftWidget/index.js":"sFj5","../Concur.Core.Props/index.js":"uj7M","../Concur.Core.Types/index.js":"qGwK","../Concur.Dom/index.js":"vptB","../Concur.Dom.Attr/index.js":"wrur","../Concur.Dom.Style/index.js":"bh6e","../Concur.Dom.Text/index.js":"tCQD","../Concur.React.DOM/index.js":"Lx0R","../Concur.React.Props/index.js":"twSw","../Control.Bind/index.js":"VcTy","../Control.Plus/index.js":"oMBg","../Data.Array/index.js":"t4Co","../Data.Either/index.js":"B2JL","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Show/index.js":"mFY7","../Data.Unit/index.js":"NhVk","../Preload/index.js":"yYWa"}],"d6M4":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Data_Either = require("../Data.Either/index.js");

var Data_Void = require("../Data.Void/index.js");

var in9 = function in9(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))))));
};

var in8 = function in8(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))));
};

var in7 = function in7(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))));
};

var in6 = function in6(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))));
};

var in5 = function in5(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))));
};

var in4 = function in4(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))));
};

var in3 = function in3(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
};

var in2 = function in2(v) {
  return new Data_Either.Right(new Data_Either.Left(v));
};

var in10 = function in10(v) {
  return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))))));
};

var in1 = Data_Either.Left.create;

var either9 = function either9(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (i) {
                  return function (y) {
                    if (y instanceof Data_Either.Left) {
                      return a(y.value0);
                    }

                    ;

                    if (y instanceof Data_Either.Right) {
                      if (y.value0 instanceof Data_Either.Left) {
                        return b(y.value0.value0);
                      }

                      ;

                      if (y.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0 instanceof Data_Either.Left) {
                          return c(y.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0 instanceof Data_Either.Left) {
                            return d(y.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return e(y.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return f(y.value0.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return g(y.value0.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                    return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                  }

                                  ;

                                  if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                      return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                    }

                                    ;

                                    if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                      return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                    }

                                    ;
                                    throw new Error("Failed pattern match at Data.Either.Nested (line 253, column 29 - line 255, column 40): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                  }

                                  ;
                                  throw new Error("Failed pattern match at Data.Either.Nested (line 251, column 27 - line 255, column 40): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Either.Nested (line 249, column 25 - line 255, column 40): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Either.Nested (line 247, column 23 - line 255, column 40): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Either.Nested (line 245, column 21 - line 255, column 40): " + [y.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Either.Nested (line 243, column 19 - line 255, column 40): " + [y.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 241, column 17 - line 255, column 40): " + [y.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 239, column 15 - line 255, column 40): " + [y.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 237, column 31 - line 255, column 40): " + [y.constructor.name]);
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

var either8 = function either8(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (y) {
                  if (y instanceof Data_Either.Left) {
                    return a(y.value0);
                  }

                  ;

                  if (y instanceof Data_Either.Right) {
                    if (y.value0 instanceof Data_Either.Left) {
                      return b(y.value0.value0);
                    }

                    ;

                    if (y.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0 instanceof Data_Either.Left) {
                        return c(y.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0 instanceof Data_Either.Left) {
                          return d(y.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                            return e(y.value0.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return f(y.value0.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return g(y.value0.value0.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Either.Nested (line 232, column 27 - line 234, column 38): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Either.Nested (line 230, column 25 - line 234, column 38): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Either.Nested (line 228, column 23 - line 234, column 38): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Either.Nested (line 226, column 21 - line 234, column 38): " + [y.value0.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 224, column 19 - line 234, column 38): " + [y.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 222, column 17 - line 234, column 38): " + [y.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 220, column 15 - line 234, column 38): " + [y.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Either.Nested (line 218, column 29 - line 234, column 38): " + [y.constructor.name]);
                };
              };
            };
          };
        };
      };
    };
  };
};

var either7 = function either7(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (y) {
                if (y instanceof Data_Either.Left) {
                  return a(y.value0);
                }

                ;

                if (y instanceof Data_Either.Right) {
                  if (y.value0 instanceof Data_Either.Left) {
                    return b(y.value0.value0);
                  }

                  ;

                  if (y.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0 instanceof Data_Either.Left) {
                      return c(y.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0.value0 instanceof Data_Either.Left) {
                        return d(y.value0.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                          return e(y.value0.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                            return f(y.value0.value0.value0.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                              return g(y.value0.value0.value0.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                              return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Either.Nested (line 213, column 25 - line 215, column 36): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Either.Nested (line 211, column 23 - line 215, column 36): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 209, column 21 - line 215, column 36): " + [y.value0.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 207, column 19 - line 215, column 36): " + [y.value0.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 205, column 17 - line 215, column 36): " + [y.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Either.Nested (line 203, column 15 - line 215, column 36): " + [y.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Either.Nested (line 201, column 27 - line 215, column 36): " + [y.constructor.name]);
              };
            };
          };
        };
      };
    };
  };
};

var either6 = function either6(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (y) {
              if (y instanceof Data_Either.Left) {
                return a(y.value0);
              }

              ;

              if (y instanceof Data_Either.Right) {
                if (y.value0 instanceof Data_Either.Left) {
                  return b(y.value0.value0);
                }

                ;

                if (y.value0 instanceof Data_Either.Right) {
                  if (y.value0.value0 instanceof Data_Either.Left) {
                    return c(y.value0.value0.value0);
                  }

                  ;

                  if (y.value0.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0.value0 instanceof Data_Either.Left) {
                      return d(y.value0.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0.value0 instanceof Data_Either.Right) {
                      if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                        return e(y.value0.value0.value0.value0.value0);
                      }

                      ;

                      if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                          return f(y.value0.value0.value0.value0.value0.value0);
                        }

                        ;

                        if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                          return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 196, column 23 - line 198, column 34): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 194, column 21 - line 198, column 34): " + [y.value0.value0.value0.value0.constructor.name]);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 192, column 19 - line 198, column 34): " + [y.value0.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Either.Nested (line 190, column 17 - line 198, column 34): " + [y.value0.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Either.Nested (line 188, column 15 - line 198, column 34): " + [y.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Either.Nested (line 186, column 25 - line 198, column 34): " + [y.constructor.name]);
            };
          };
        };
      };
    };
  };
};

var either5 = function either5(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (y) {
            if (y instanceof Data_Either.Left) {
              return a(y.value0);
            }

            ;

            if (y instanceof Data_Either.Right) {
              if (y.value0 instanceof Data_Either.Left) {
                return b(y.value0.value0);
              }

              ;

              if (y.value0 instanceof Data_Either.Right) {
                if (y.value0.value0 instanceof Data_Either.Left) {
                  return c(y.value0.value0.value0);
                }

                ;

                if (y.value0.value0 instanceof Data_Either.Right) {
                  if (y.value0.value0.value0 instanceof Data_Either.Left) {
                    return d(y.value0.value0.value0.value0);
                  }

                  ;

                  if (y.value0.value0.value0 instanceof Data_Either.Right) {
                    if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                      return e(y.value0.value0.value0.value0.value0);
                    }

                    ;

                    if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                      return Data_Void.absurd(y.value0.value0.value0.value0.value0);
                    }

                    ;
                    throw new Error("Failed pattern match at Data.Either.Nested (line 181, column 21 - line 183, column 32): " + [y.value0.value0.value0.value0.constructor.name]);
                  }

                  ;
                  throw new Error("Failed pattern match at Data.Either.Nested (line 179, column 19 - line 183, column 32): " + [y.value0.value0.value0.constructor.name]);
                }

                ;
                throw new Error("Failed pattern match at Data.Either.Nested (line 177, column 17 - line 183, column 32): " + [y.value0.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Either.Nested (line 175, column 15 - line 183, column 32): " + [y.value0.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Either.Nested (line 173, column 23 - line 183, column 32): " + [y.constructor.name]);
          };
        };
      };
    };
  };
};

var either4 = function either4(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (y) {
          if (y instanceof Data_Either.Left) {
            return a(y.value0);
          }

          ;

          if (y instanceof Data_Either.Right) {
            if (y.value0 instanceof Data_Either.Left) {
              return b(y.value0.value0);
            }

            ;

            if (y.value0 instanceof Data_Either.Right) {
              if (y.value0.value0 instanceof Data_Either.Left) {
                return c(y.value0.value0.value0);
              }

              ;

              if (y.value0.value0 instanceof Data_Either.Right) {
                if (y.value0.value0.value0 instanceof Data_Either.Left) {
                  return d(y.value0.value0.value0.value0);
                }

                ;

                if (y.value0.value0.value0 instanceof Data_Either.Right) {
                  return Data_Void.absurd(y.value0.value0.value0.value0);
                }

                ;
                throw new Error("Failed pattern match at Data.Either.Nested (line 168, column 19 - line 170, column 30): " + [y.value0.value0.value0.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Either.Nested (line 166, column 17 - line 170, column 30): " + [y.value0.value0.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Either.Nested (line 164, column 15 - line 170, column 30): " + [y.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Either.Nested (line 162, column 21 - line 170, column 30): " + [y.constructor.name]);
        };
      };
    };
  };
};

var either3 = function either3(a) {
  return function (b) {
    return function (c) {
      return function (y) {
        if (y instanceof Data_Either.Left) {
          return a(y.value0);
        }

        ;

        if (y instanceof Data_Either.Right) {
          if (y.value0 instanceof Data_Either.Left) {
            return b(y.value0.value0);
          }

          ;

          if (y.value0 instanceof Data_Either.Right) {
            if (y.value0.value0 instanceof Data_Either.Left) {
              return c(y.value0.value0.value0);
            }

            ;

            if (y.value0.value0 instanceof Data_Either.Right) {
              return Data_Void.absurd(y.value0.value0.value0);
            }

            ;
            throw new Error("Failed pattern match at Data.Either.Nested (line 157, column 17 - line 159, column 28): " + [y.value0.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Either.Nested (line 155, column 15 - line 159, column 28): " + [y.value0.constructor.name]);
        }

        ;
        throw new Error("Failed pattern match at Data.Either.Nested (line 153, column 19 - line 159, column 28): " + [y.constructor.name]);
      };
    };
  };
};

var either2 = function either2(a) {
  return function (b) {
    return function (y) {
      if (y instanceof Data_Either.Left) {
        return a(y.value0);
      }

      ;

      if (y instanceof Data_Either.Right) {
        if (y.value0 instanceof Data_Either.Left) {
          return b(y.value0.value0);
        }

        ;

        if (y.value0 instanceof Data_Either.Right) {
          return Data_Void.absurd(y.value0.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either.Nested (line 148, column 15 - line 150, column 26): " + [y.value0.constructor.name]);
      }

      ;
      throw new Error("Failed pattern match at Data.Either.Nested (line 146, column 17 - line 150, column 26): " + [y.constructor.name]);
    };
  };
};

var either10 = function either10(a) {
  return function (b) {
    return function (c) {
      return function (d) {
        return function (e) {
          return function (f) {
            return function (g) {
              return function (h) {
                return function (i) {
                  return function (j) {
                    return function (y) {
                      if (y instanceof Data_Either.Left) {
                        return a(y.value0);
                      }

                      ;

                      if (y instanceof Data_Either.Right) {
                        if (y.value0 instanceof Data_Either.Left) {
                          return b(y.value0.value0);
                        }

                        ;

                        if (y.value0 instanceof Data_Either.Right) {
                          if (y.value0.value0 instanceof Data_Either.Left) {
                            return c(y.value0.value0.value0);
                          }

                          ;

                          if (y.value0.value0 instanceof Data_Either.Right) {
                            if (y.value0.value0.value0 instanceof Data_Either.Left) {
                              return d(y.value0.value0.value0.value0);
                            }

                            ;

                            if (y.value0.value0.value0 instanceof Data_Either.Right) {
                              if (y.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                return e(y.value0.value0.value0.value0.value0);
                              }

                              ;

                              if (y.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                  return f(y.value0.value0.value0.value0.value0.value0);
                                }

                                ;

                                if (y.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                  if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                    return g(y.value0.value0.value0.value0.value0.value0.value0);
                                  }

                                  ;

                                  if (y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                      return h(y.value0.value0.value0.value0.value0.value0.value0.value0);
                                    }

                                    ;

                                    if (y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                      if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                        return i(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                      }

                                      ;

                                      if (y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
                                          return j(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                        }

                                        ;

                                        if (y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right) {
                                          return Data_Void.absurd(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
                                        }

                                        ;
                                        throw new Error("Failed pattern match at Data.Either.Nested (line 276, column 31 - line 278, column 44): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                      }

                                      ;
                                      throw new Error("Failed pattern match at Data.Either.Nested (line 274, column 29 - line 278, column 44): " + [y.value0.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                    }

                                    ;
                                    throw new Error("Failed pattern match at Data.Either.Nested (line 272, column 27 - line 278, column 44): " + [y.value0.value0.value0.value0.value0.value0.value0.constructor.name]);
                                  }

                                  ;
                                  throw new Error("Failed pattern match at Data.Either.Nested (line 270, column 25 - line 278, column 44): " + [y.value0.value0.value0.value0.value0.value0.constructor.name]);
                                }

                                ;
                                throw new Error("Failed pattern match at Data.Either.Nested (line 268, column 23 - line 278, column 44): " + [y.value0.value0.value0.value0.value0.constructor.name]);
                              }

                              ;
                              throw new Error("Failed pattern match at Data.Either.Nested (line 266, column 21 - line 278, column 44): " + [y.value0.value0.value0.value0.constructor.name]);
                            }

                            ;
                            throw new Error("Failed pattern match at Data.Either.Nested (line 264, column 19 - line 278, column 44): " + [y.value0.value0.value0.constructor.name]);
                          }

                          ;
                          throw new Error("Failed pattern match at Data.Either.Nested (line 262, column 17 - line 278, column 44): " + [y.value0.value0.constructor.name]);
                        }

                        ;
                        throw new Error("Failed pattern match at Data.Either.Nested (line 260, column 15 - line 278, column 44): " + [y.value0.constructor.name]);
                      }

                      ;
                      throw new Error("Failed pattern match at Data.Either.Nested (line 258, column 34 - line 278, column 44): " + [y.constructor.name]);
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
  };
};

var either1 = function either1(y) {
  if (y instanceof Data_Either.Left) {
    return y.value0;
  }

  ;

  if (y instanceof Data_Either.Right) {
    return Data_Void.absurd(y.value0);
  }

  ;
  throw new Error("Failed pattern match at Data.Either.Nested (line 141, column 13 - line 143, column 24): " + [y.constructor.name]);
};

var at9 = function at9(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at8 = function at8(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at7 = function at7(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at6 = function at6(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at5 = function at5(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at4 = function at4(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at3 = function at3(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at2 = function at2(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at10 = function at10(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
        return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
      }

      ;
      return b;
    };
  };
};

var at1 = function at1(b) {
  return function (f) {
    return function (y) {
      if (y instanceof Data_Either.Left) {
        return f(y.value0);
      }

      ;
      return b;
    };
  };
};

module.exports = {
  in1: in1,
  in2: in2,
  in3: in3,
  in4: in4,
  in5: in5,
  in6: in6,
  in7: in7,
  in8: in8,
  in9: in9,
  in10: in10,
  at1: at1,
  at2: at2,
  at3: at3,
  at4: at4,
  at5: at5,
  at6: at6,
  at7: at7,
  at8: at8,
  at9: at9,
  at10: at10,
  either1: either1,
  either2: either2,
  either3: either3,
  either4: either4,
  either5: either5,
  either6: either6,
  either7: either7,
  either8: either8,
  either9: either9,
  either10: either10
};
},{"../Data.Either/index.js":"B2JL","../Data.Void/index.js":"bncE"}],"OXDP":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Boolean = require("../Data.Boolean/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_HashSet = require("../Data.HashSet/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Error = require("../Task.Script.Error/index.js");

var Task_Script_Syntax = require("../Task.Script.Syntax/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var Check = function Check(check) {
  this.check = check;
};

var wrapValue = function wrapValue(t) {
  return Task_Script_Type.TTask.create(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple("value", t)]));
};

var smash = function smash(r) {
  var v = Data_Array.uncons(Data_HashMap.values(r));

  if (v instanceof Data_Maybe.Nothing) {
    return Preload["throw"](Task_Script_Error.EmptyCase.value);
  }

  ;

  if (v instanceof Data_Maybe.Just) {
    var $28 = Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v1) {
      return Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(v1)(v.value0.head);
    })(v.value0.tail);

    if ($28) {
      return Preload.done(Data_Either.applicativeEither)(v.value0.head);
    }

    ;
    return Preload["throw"](new Task_Script_Error.BranchesError(r));
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Checker (line 219, column 11 - line 225, column 31): " + [v.constructor.name]);
};

var outofTask = function outofTask(t) {
  var v = function v(v1) {
    if (Data_Boolean.otherwise) {
      return Preload["throw"](new Task_Script_Error.TaskNeeded(t));
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Checker (line 249, column 1 - line 249, column 50): " + [t.constructor.name]);
  };

  var $34 = Task_Script_Type.ofTask(t);

  if ($34 instanceof Data_Maybe.Just) {
    return Preload.done(Data_Either.applicativeEither)($34.value0);
  }

  ;
  return v(true);
};

var outofReference = function outofReference(t) {
  var v = function v(v1) {
    if (Data_Boolean.otherwise) {
      return Preload["throw"](new Task_Script_Error.ReferenceNeeded(t));
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Checker (line 244, column 1 - line 244, column 47): " + [t.constructor.name]);
  };

  var $38 = Task_Script_Type.ofReference(t);

  if ($38 instanceof Data_Maybe.Just) {
    return Preload.done(Data_Either.applicativeEither)(Task_Script_Type.ofBasic($38.value0));
  }

  ;
  return v(true);
};

var outofRecord = function outofRecord(t) {
  var v = function v(v1) {
    if (Data_Boolean.otherwise) {
      return Preload["throw"](new Task_Script_Error.RecordNeeded(t));
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Checker (line 239, column 1 - line 239, column 52): " + [t.constructor.name]);
  };

  var $42 = Task_Script_Type.ofRecord(t);

  if ($42 instanceof Data_Maybe.Just) {
    return Preload.done(Data_Either.applicativeEither)($42.value0);
  }

  ;
  return v(true);
};

var outofBasic = function outofBasic(t) {
  var v = function v(v1) {
    if (Data_Boolean.otherwise) {
      return Preload["throw"](new Task_Script_Error.BasicNeeded(t));
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Checker (line 234, column 1 - line 234, column 44): " + [t.constructor.name]);
  };

  var $46 = Task_Script_Type.ofType(t);

  if ($46 instanceof Data_Maybe.Just) {
    return Preload.done(Data_Either.applicativeEither)($46.value0);
  }

  ;
  return v(true);
};

var needBasic = function needBasic(t) {
  if (Task_Script_Type.isBasic(t)) {
    return Preload.done(Data_Either.applicativeEither)(t);
  }

  ;

  if (Data_Boolean.otherwise) {
    return Preload["throw"](new Task_Script_Error.BasicNeeded(t));
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Checker (line 229, column 1 - line 229, column 42): " + [t.constructor.name]);
};

var keys = function keys(dictHashable) {
  var $151 = Preload.from(Preload["$_InitialiseHashSet_13"](dictHashable));
  return function ($152) {
    return $151(Data_HashMap.keys($152));
  };
};

var merge = function merge(r1) {
  return function (r2) {
    var ds = Data_HashMap.difference(Data_Hashable.hashableString)(r1)(r2);
    var $49 = Data_HashMap.isEmpty(ds);

    if ($49) {
      return Preload.done(Data_Either.applicativeEither)(Data_HashMap.intersectionWith(Data_Hashable.hashableString)(Data_Tuple.Tuple.create)(r1)(r2));
    }

    ;
    return Preload["throw"](new Task_Script_Error.UnknownLabels(keys(Data_Hashable.hashableString)(ds), keys(Data_Hashable.hashableString)(r2)));
  };
};

var unite = function unite(dictFoldable) {
  var go = function go(acc) {
    return function (r) {
      var is = Data_HashSet.intersection(Data_Hashable.hashableString)(keys(Data_Hashable.hashableString)(r))(keys(Data_Hashable.hashableString)(acc));
      var $50 = Data_Foldable["null"](Data_HashSet.foldableHashSet)(is);

      if ($50) {
        return Preload.done(Data_Either.applicativeEither)(Data_HashMap.union(Data_Hashable.hashableString)(acc)(r));
      }

      ;
      return Preload["throw"](new Task_Script_Error.DoubleLabels(is, keys(Data_Hashable.hashableString)(r)));
    };
  };

  return Preload.gather(dictFoldable)(Data_Either.monadEither)(go)(Data_HashMap.empty);
};

var match = function match(m) {
  return function (t) {
    if (m instanceof Task_Script_Syntax.MIgnore) {
      return Preload.done(Data_Either.applicativeEither)(Data_HashMap.empty);
    }

    ;

    if (m instanceof Task_Script_Syntax.MBind) {
      return Preload.done(Data_Either.applicativeEither)(Preload.from(Preload["$_InitialiseHashMap*_14"](Data_Hashable.hashableString))([new Data_Tuple.Tuple(m.value0, t)]));
    }

    ;

    if (m instanceof Task_Script_Syntax.MRecord) {
      if (t instanceof Task_Script_Type.TRecord) {
        return Control_Bind.bind(Data_Either.bindEither)(Control_Bind.bind(Data_Either.bindEither)(merge(m.value0)(t.value0))(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(Data_Tuple.uncurry(match))))(unite(Data_HashMap.foldableHashMap));
      }

      ;
      return Preload["throw"](new Task_Script_Error.RecordMismatch(m.value0, t));
    }

    ;

    if (m instanceof Task_Script_Syntax.MUnpack) {
      if (t instanceof Task_Script_Type.TRecord) {
        return Preload.done(Data_Either.applicativeEither)(t.value0);
      }

      ;
      return Preload["throw"](new Task_Script_Error.UnpackMismatch(t));
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Checker (line 166, column 13 - line 176, column 37): " + [m.constructor.name]);
  };
};

var intersect = function intersect(dictFoldable) {
  return function (rs) {
    return Data_Either.note(Task_Script_Error.EmptyChoice.value)(Preload.foldr1(dictFoldable)(Data_HashMap.intersection(Data_Hashable.hashableString))(rs));
  };
};

var check = function check(dict) {
  return dict.check;
};

var $dollar_CheckExpression_8 = new Check(function (s) {
  return function (g) {
    return function (v) {
      if (v instanceof Task_Script_Syntax.Variable) {
        return Data_Either.note(new Task_Script_Error.UnknownVariable(v.value0))(Data_HashMap.lookup(Data_Hashable.hashableString)(v.value0)(g));
      }

      ;

      if (v instanceof Task_Script_Syntax.Lambda) {
        return Control_Bind.bind(Data_Either.bindEither)(match(v.value0)(v.value1))(function (d) {
          return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(Data_HashMap.union(Data_Hashable.hashableString)(g)(d))(v.value2))(function (t$prime) {
            return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TFunction(v.value1, t$prime));
          });
        });
      }

      ;

      if (v instanceof Task_Script_Syntax.Apply) {
        return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(function (t1) {
          if (t1 instanceof Task_Script_Type.TFunction) {
            return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value1))(function (t2) {
              var $64 = Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(t1.value0)(t2);

              if ($64) {
                return Preload.done(Data_Either.applicativeEither)(t1.value1);
              }

              ;
              return Preload["throw"](new Task_Script_Error.ArgumentError(t1.value0, t2));
            });
          }

          ;
          return Preload["throw"](new Task_Script_Error.FunctionNeeded(t1));
        });
      }

      ;

      if (v instanceof Task_Script_Syntax.IfThenElse) {
        return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(function (t1) {
          if (t1 instanceof Task_Script_Type.TPrimitive && t1.value0 instanceof Task_Script_Type.TBool) {
            return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value1))(function (t2) {
              return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value2))(function (t3) {
                var $70 = Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(t2)(t3);

                if ($70) {
                  return Preload.done(Data_Either.applicativeEither)(t2);
                }

                ;
                return Preload["throw"](new Task_Script_Error.BranchError(t2, t3));
              });
            });
          }

          ;
          return Preload["throw"](new Task_Script_Error.BoolNeeded(t1));
        });
      }

      ;

      if (v instanceof Task_Script_Syntax.Case) {
        return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(function (t0) {
          if (t0 instanceof Task_Script_Type.TVariant) {
            return Control_Bind.bind(Data_Either.bindEither)(merge(t0.value0)(v.value1))(function (bs$prime) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_HashMap.traversableHashMap)(bs$prime)(function (v1) {
                return Control_Bind.bind(Data_Either.bindEither)(match(v1.value1.value0)(v1.value0))(function (d) {
                  return check($dollar_CheckExpression_8)(s)(Data_HashMap.union(Data_Hashable.hashableString)(g)(d))(v1.value1.value1);
                });
              }))(function (ts) {
                return smash(ts);
              });
            });
          }

          ;
          return Preload["throw"](new Task_Script_Error.VariantNeeded(t0));
        });
      }

      ;

      if (v instanceof Task_Script_Syntax.Record) {
        return Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(check($dollar_CheckExpression_8)(s)(g))(v.value0))(Task_Script_Type.TRecord.create);
      }

      ;

      if (v instanceof Task_Script_Syntax.Wildcard) {
        return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TRecord(Data_HashMap.filter(function () {
          var $153 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
          return function ($154) {
            return $153(Task_Script_Type.isFunction($154));
          };
        }())(g)));
      }

      ;

      if (v instanceof Task_Script_Syntax.Variant) {
        if (v.value2 instanceof Task_Script_Type.TVariant) {
          return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value1))(function (t_e) {
            var v1 = Data_HashMap.lookup(Data_Hashable.hashableString)(v.value0)(v.value2.value0);

            if (v1 instanceof Data_Maybe.Just) {
              var $87 = Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(t_e)(v1.value0);

              if ($87) {
                return Preload.done(Data_Either.applicativeEither)(v.value2);
              }

              ;
              return Preload["throw"](new Task_Script_Error.VariantError(v.value0, v1.value0, t_e));
            }

            ;

            if (v1 instanceof Data_Maybe.Nothing) {
              return Preload["throw"](new Task_Script_Error.UnknownLabel(v.value0, v.value2));
            }

            ;
            throw new Error("Failed pattern match at Task.Script.Checker (line 83, column 9 - line 89, column 47): " + [v1.constructor.name]);
          });
        }

        ;
        return Preload["throw"](new Task_Script_Error.VariantNeeded(v.value2));
      }

      ;

      if (v instanceof Task_Script_Syntax.Nil) {
        return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TList(v.value0));
      }

      ;

      if (v instanceof Task_Script_Syntax.Cons) {
        return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(function (t1) {
          return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value1))(function (t2) {
            if (t2 instanceof Task_Script_Type.TList) {
              var $95 = Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(t2)(t2.value0);

              if ($95) {
                return Preload.done(Data_Either.applicativeEither)(t2);
              }

              ;
              return Preload["throw"](new Task_Script_Error.ListError(t1, t2));
            }

            ;
            return Preload["throw"](new Task_Script_Error.ListNeeded(t2));
          });
        });
      }

      ;

      if (v instanceof Task_Script_Syntax.Constant && v.value0 instanceof Task_Script_Syntax.B) {
        return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TPrimitive(Task_Script_Type.TBool.value));
      }

      ;

      if (v instanceof Task_Script_Syntax.Constant && v.value0 instanceof Task_Script_Syntax.I) {
        return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TPrimitive(Task_Script_Type.TInt.value));
      }

      ;

      if (v instanceof Task_Script_Syntax.Constant && v.value0 instanceof Task_Script_Syntax.S) {
        return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TPrimitive(Task_Script_Type.TString.value));
      }

      ;
      throw new Error("Failed pattern match at Task.Script.Checker (line 37, column 15 - line 106, column 49): " + [v.constructor.name]);
    };
  };
});
var $dollar_CheckArguments_9 = new Check(function (s) {
  return function (g) {
    return function (v) {
      return Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(check($dollar_CheckExpression_8)(s)(g))(v.value0))(Task_Script_Type.TRecord.create);
    };
  };
});

var $dollar_CheckTask_11 = function $dollar_CheckTask_11(dictCheck) {
  return new Check(function (s) {
    return function (g) {
      var subcheck = function subcheck(t) {
        return Control_Bind.bind(Data_Either.bindEither)(check(dictCheck)(s)(g)(t))(outofTask);
      };

      var subcheck$prime = function subcheck$prime(v) {
        return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(function (t_e) {
          if (t_e instanceof Task_Script_Type.TPrimitive && t_e.value0 instanceof Task_Script_Type.TBool) {
            return subcheck(v.value1);
          }

          ;
          return Preload["throw"](new Task_Script_Error.BoolNeeded(t_e));
        });
      };

      var subcheck$prime$prime = function subcheck$prime$prime(v) {
        return subcheck$prime(new Data_Tuple.Tuple(v.value1.value0, v.value1.value1));
      };

      return function (v) {
        if (v instanceof Task_Script_Syntax.Enter) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Either.note(new Task_Script_Error.UnknownTypeName(v.value0))(Data_HashMap.lookup(Data_Hashable.hashableString)(v.value0)(s)))(Task_Script_Type.ofBasic))(wrapValue);
        }

        ;

        if (v instanceof Task_Script_Syntax.Update) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(needBasic))(wrapValue);
        }

        ;

        if (v instanceof Task_Script_Syntax.Change) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(outofReference))(wrapValue);
        }

        ;

        if (v instanceof Task_Script_Syntax.View) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(needBasic))(wrapValue);
        }

        ;

        if (v instanceof Task_Script_Syntax.Watch) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(outofReference))(wrapValue);
        }

        ;

        if (v instanceof Task_Script_Syntax.Lift) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(outofRecord))(Task_Script_Type.TTask.create);
        }

        ;

        if (v instanceof Task_Script_Syntax.Pair) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(subcheck)(v.value0))(unite(Data_Foldable.foldableArray)))(Task_Script_Type.TTask.create);
        }

        ;

        if (v instanceof Task_Script_Syntax.Choose) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(subcheck)(v.value0))(intersect(Data_Foldable.foldableArray)))(Task_Script_Type.TTask.create);
        }

        ;

        if (v instanceof Task_Script_Syntax.Branch) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(subcheck$prime)(v.value0))(intersect(Data_Foldable.foldableArray)))(Task_Script_Type.TTask.create);
        }

        ;

        if (v instanceof Task_Script_Syntax.Select) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(subcheck$prime$prime)(v.value0))(intersect(Data_Foldable.foldableArray)))(Task_Script_Type.TTask.create);
        }

        ;

        if (v instanceof Task_Script_Syntax.Step) {
          return Control_Bind.bind(Data_Either.bindEither)(check(dictCheck)(s)(g)(v.value1))(function (t_u1) {
            if (t_u1 instanceof Task_Script_Type.TTask) {
              return Control_Bind.bind(Data_Either.bindEither)(match(v.value0)(new Task_Script_Type.TRecord(t_u1.value0)))(function (d) {
                return check(dictCheck)(s)(Data_HashMap.union(Data_Hashable.hashableString)(g)(d))(v.value2);
              });
            }

            ;
            return Preload["throw"](new Task_Script_Error.TaskNeeded(t_u1));
          });
        }

        ;

        if (v instanceof Task_Script_Syntax.Execute) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new Task_Script_Error.UnknownVariable(v.value0))(Data_HashMap.lookup(Data_Hashable.hashableString)(v.value0)(g)))(function (t_x) {
            if (t_x instanceof Task_Script_Type.TFunction) {
              return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckArguments_9)(s)(g)(v.value1))(function (t_a) {
                var $136 = Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(t_x.value0)(t_a);

                if ($136) {
                  return Preload.done(Data_Either.applicativeEither)(t_x.value1);
                }

                ;
                return Preload["throw"](new Task_Script_Error.ArgumentError(t_x.value0, t_a));
              });
            }

            ;
            return Preload["throw"](new Task_Script_Error.FunctionNeeded(t_x));
          });
        }

        ;

        if (v instanceof Task_Script_Syntax.Hole) {
          return Preload["throw"](new Task_Script_Error.HoleFound(g));
        }

        ;

        if (v instanceof Task_Script_Syntax.Share) {
          return Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(outofBasic))(Task_Script_Type.TReference.create))(wrapValue);
        }

        ;

        if (v instanceof Task_Script_Syntax.Assign) {
          return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value0))(function (t1) {
            return Control_Bind.bind(Data_Either.bindEither)(outofReference(t1))(function (b1) {
              return Control_Bind.bind(Data_Either.bindEither)(check($dollar_CheckExpression_8)(s)(g)(v.value1))(function (b2) {
                var $143 = Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(b1)(b2);

                if ($143) {
                  return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TRecord(Data_HashMap.empty));
                }

                ;
                return Preload["throw"](new Task_Script_Error.AssignError(b1, b2));
              });
            });
          });
        }

        ;
        throw new Error("Failed pattern match at Task.Script.Checker (line 115, column 15 - line 152, column 35): " + [v.constructor.name]);
      };
    };
  });
};

var $dollar_CheckAnnotatedTask_10 = new Check(function (s) {
  return function (g) {
    return function (v) {
      return check($dollar_CheckTask_11($dollar_CheckAnnotatedTask_10))(s)(g)(v.value1);
    };
  };
});
module.exports = {
  Check: Check,
  check: check,
  match: match,
  wrapValue: wrapValue,
  needBasic: needBasic,
  outofBasic: outofBasic,
  outofRecord: outofRecord,
  outofReference: outofReference,
  outofTask: outofTask,
  unite: unite,
  intersect: intersect,
  merge: merge,
  smash: smash,
  "$_CheckExpression_8": $dollar_CheckExpression_8,
  "$_CheckArguments_9": $dollar_CheckArguments_9,
  "$_CheckAnnotatedTask_10": $dollar_CheckAnnotatedTask_10,
  "$_CheckTask_11": $dollar_CheckTask_11
};
},{"../Control.Bind/index.js":"VcTy","../Data.Array/index.js":"t4Co","../Data.Boolean/index.js":"ObQr","../Data.Either/index.js":"B2JL","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.HashSet/index.js":"Kjcf","../Data.Hashable/index.js":"PLrJ","../Data.HeytingAlgebra/index.js":"paZe","../Data.Maybe/index.js":"mN7T","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Preload/index.js":"yYWa","../Task.Script.Error/index.js":"JdID","../Task.Script.Syntax/index.js":"vwvk","../Task.Script.Type/index.js":"WWnz"}],"k6gt":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Apply = require("../Control.Apply/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Error = require("../Task.Script.Error/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var Expand = function Expand(expand) {
  this.expand = expand;
};

var expand = function expand(dict) {
  return dict.expand;
};

var $dollar_ExpandBasicType_3 = new Expand(function (s) {
  return function (v) {
    if (v instanceof Task_Script_Type.BName) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new Task_Script_Error.UnknownTypeName(v.value0))(Data_HashMap.lookup(Data_Hashable.hashableString)(v.value0)(s)))(expand($dollar_ExpandBasicType_3)(s));
    }

    ;

    if (v instanceof Task_Script_Type.BList) {
      return Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.BList.create)(expand($dollar_ExpandBasicType_3)(s)(v.value0));
    }

    ;

    if (v instanceof Task_Script_Type.BRecord) {
      return Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.BRecord.create)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(expand($dollar_ExpandBasicType_3)(s))(v.value0));
    }

    ;

    if (v instanceof Task_Script_Type.BVariant) {
      return Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.BVariant.create)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(expand($dollar_ExpandBasicType_3)(s))(v.value0));
    }

    ;

    if (v instanceof Task_Script_Type.BPrimitive) {
      return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.BPrimitive(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Expander (line 30, column 14 - line 35, column 41): " + [v.constructor.name]);
  };
});
var $dollar_ExpandFullType_2 = new Expand(function (s) {
  return function (v) {
    if (v instanceof Task_Script_Type.TFunction) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.TFunction.create)(expand($dollar_ExpandFullType_2)(s)(v.value0)))(expand($dollar_ExpandFullType_2)(s)(v.value1));
    }

    ;

    if (v instanceof Task_Script_Type.TName) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Either.note(new Task_Script_Error.UnknownTypeName(v.value0))(Data_HashMap.lookup(Data_Hashable.hashableString)(v.value0)(s)))(Task_Script_Type.ofBasic))(expand($dollar_ExpandFullType_2)(s));
    }

    ;

    if (v instanceof Task_Script_Type.TList) {
      return Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.TList.create)(expand($dollar_ExpandFullType_2)(s)(v.value0));
    }

    ;

    if (v instanceof Task_Script_Type.TRecord) {
      return Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.TRecord.create)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(expand($dollar_ExpandFullType_2)(s))(v.value0));
    }

    ;

    if (v instanceof Task_Script_Type.TVariant) {
      return Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.TVariant.create)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(expand($dollar_ExpandFullType_2)(s))(v.value0));
    }

    ;

    if (v instanceof Task_Script_Type.TReference) {
      return Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.TReference.create)(expand($dollar_ExpandBasicType_3)(s)(v.value0));
    }

    ;

    if (v instanceof Task_Script_Type.TTask) {
      return Data_Functor.map(Data_Either.functorEither)(Task_Script_Type.TTask.create)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(expand($dollar_ExpandFullType_2)(s))(v.value0));
    }

    ;

    if (v instanceof Task_Script_Type.TPrimitive) {
      return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TPrimitive(v.value0));
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Expander (line 19, column 14 - line 27, column 41): " + [v.constructor.name]);
  };
});
module.exports = {
  Expand: Expand,
  expand: expand,
  "$_ExpandFullType_2": $dollar_ExpandFullType_2,
  "$_ExpandBasicType_3": $dollar_ExpandBasicType_3
};
},{"../Control.Apply/index.js":"QcLv","../Control.Bind/index.js":"VcTy","../Data.Either/index.js":"B2JL","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.Hashable/index.js":"PLrJ","../Data.Traversable/index.js":"n7EE","../Preload/index.js":"yYWa","../Task.Script.Error/index.js":"JdID","../Task.Script.Type/index.js":"WWnz"}],"KFtq":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Eq = require("../Data.Eq/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Annotation = require("../Task.Script.Annotation/index.js");

var Task_Script_Checker = require("../Task.Script.Checker/index.js");

var Task_Script_Error = require("../Task.Script.Error/index.js");

var Task_Script_Syntax = require("../Task.Script.Syntax/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var outofBranch = Control_Bind.composeKleisli(Data_Either.bindEither)(Task_Script_Annotation.extractType)(Task_Script_Checker.outofTask);

var validate = function validate(s) {
  return function (g) {
    return function (v) {
      var validate1 = function validate1(v1) {
        var v2 = validate(s)(g)(v1);

        if (v2.value0 instanceof Task_Script_Annotation.Success) {
          if (v2.value0.value1 instanceof Task_Script_Type.TTask) {
            return Task_Script_Annotation.pass(v2.value0.value0)(v2.value1)(v2.value0.value1);
          }

          ;
          return Task_Script_Annotation.fail(v2.value0.value0)(v1.value1)(new Task_Script_Error.TaskNeeded(v2.value0.value1));
        }

        ;
        return v2;
      };

      var validate2 = function validate2(v1) {
        return new Data_Tuple.Tuple(v1.value0, function () {
          var v2 = Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v1.value0);

          if (v2 instanceof Data_Either.Right && v2.value0 instanceof Task_Script_Type.TPrimitive && v2.value0.value0 instanceof Task_Script_Type.TBool) {
            return validate1(v1.value1);
          }

          ;

          if (v2 instanceof Data_Either.Right) {
            return Task_Script_Annotation.fail(g)(v1.value1.value1)(new Task_Script_Error.BoolNeeded(v2.value0));
          }

          ;

          if (v2 instanceof Data_Either.Left) {
            return Task_Script_Annotation.fail(g)(v1.value1.value1)(v2.value0);
          }

          ;
          throw new Error("Failed pattern match at Task.Script.Validator (line 102, column 9 - line 105, column 32): " + [v2.constructor.name]);
        }());
      };

      var validate3 = function validate3(v1) {
        return new Data_Tuple.Tuple(v1.value0, validate2(new Data_Tuple.Tuple(v1.value1.value0, v1.value1.value1)));
      };

      if (v.value1 instanceof Task_Script_Syntax.Enter) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.Enter(v.value1.value0))(Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Functor.mapFlipped(Data_Either.functorEither)(Data_Either.note(new Task_Script_Error.UnknownTypeName(v.value1.value0))(Data_HashMap.lookup(Data_Hashable.hashableString)(v.value1.value0)(s)))(Task_Script_Type.ofBasic))(Task_Script_Checker.wrapValue));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Update) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.Update(v.value1.value0))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v.value1.value0))(Task_Script_Checker.needBasic))(Task_Script_Checker.wrapValue));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Change) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.Change(v.value1.value0))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v.value1.value0))(Task_Script_Checker.outofReference))(Task_Script_Checker.wrapValue));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.View) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.View(v.value1.value0))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v.value1.value0))(Task_Script_Checker.needBasic))(Task_Script_Checker.wrapValue));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Watch) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.Watch(v.value1.value0))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v.value1.value0))(Task_Script_Checker.outofReference))(Task_Script_Checker.wrapValue));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Lift) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.Lift(v.value1.value0))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v.value1.value0))(Task_Script_Checker.outofRecord))(Task_Script_Type.TTask.create));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Pair) {
        var cs = Data_Functor.map(Data_Functor.functorArray)(validate1)(v.value1.value0);
        return Task_Script_Annotation.sink(g)(new Task_Script_Syntax.Pair(cs))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(outofBranch)(cs))(Task_Script_Checker.unite(Data_Foldable.foldableArray)))(Task_Script_Type.TTask.create));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Choose) {
        var cs = Data_Functor.map(Data_Functor.functorArray)(validate1)(v.value1.value0);
        return Task_Script_Annotation.sink(g)(new Task_Script_Syntax.Choose(cs))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(outofBranch)(cs))(Task_Script_Checker.intersect(Data_Foldable.foldableArray)))(Task_Script_Type.TTask.create));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Branch) {
        var cs = Data_Functor.map(Data_Functor.functorArray)(validate2)(v.value1.value0);
        return Task_Script_Annotation.sink(g)(new Task_Script_Syntax.Branch(cs))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(function ($73) {
          return outofBranch(Data_Tuple.snd($73));
        })(cs))(Task_Script_Checker.intersect(Data_Foldable.foldableArray)))(Task_Script_Type.TTask.create));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Select) {
        var cs = Data_Functor.map(Data_Functor.functorArray)(validate3)(v.value1.value0);
        return Task_Script_Annotation.sink(g)(new Task_Script_Syntax.Select(cs))(Data_Functor.mapFlipped(Data_Either.functorEither)(Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(function ($74) {
          return outofBranch(Data_Tuple.snd(Data_Tuple.snd($74)));
        })(cs))(Task_Script_Checker.intersect(Data_Foldable.foldableArray)))(Task_Script_Type.TTask.create));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Step) {
        var c2 = validate(s)(g)(v.value1.value2);
        var c1 = validate(s)(g)(v.value1.value1);
        return Task_Script_Annotation.withTypeOf(c1)(new Task_Script_Syntax.Step(v.value1.value0, c1, c2))(function (t1) {
          if (t1 instanceof Task_Script_Type.TTask) {
            var v1 = Task_Script_Checker.match(v.value1.value0)(new Task_Script_Type.TRecord(t1.value0));

            if (v1 instanceof Data_Either.Left) {
              return Task_Script_Annotation.fail(g)(v.value1)(v1.value0);
            }

            ;

            if (v1 instanceof Data_Either.Right) {
              var g$prime = Data_HashMap.union(Data_Hashable.hashableString)(g)(v1.value0);
              var c2$prime = validate(s)(g$prime)(v.value1.value2);
              return Task_Script_Annotation.withTypeOf(c2$prime)(new Task_Script_Syntax.Step(v.value1.value0, c1, c2$prime))(function (t2) {
                if (t2 instanceof Task_Script_Type.TTask) {
                  return Task_Script_Annotation.pass(g$prime)(new Task_Script_Syntax.Step(v.value1.value0, c1, c2$prime))(new Task_Script_Type.TTask(t2.value0));
                }

                ;
                return Task_Script_Annotation.bury(new Task_Script_Syntax.Step(v.value1.value0, c1, Task_Script_Annotation.fail(g$prime)(v.value1.value2.value1)(new Task_Script_Error.TaskNeeded(t2))));
              });
            }

            ;
            throw new Error("Failed pattern match at Task.Script.Validator (line 43, column 19 - line 51, column 22): " + [v1.constructor.name]);
          }

          ;
          return Task_Script_Annotation.bury(new Task_Script_Syntax.Step(v.value1.value0, Task_Script_Annotation.fail(g)(v.value1.value1.value1)(new Task_Script_Error.TaskNeeded(t1)), c2));
        });
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Execute) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.Execute(v.value1.value0, v.value1.value1))(Control_Bind.bind(Data_Either.bindEither)(Data_Either.note(new Task_Script_Error.UnknownVariable(v.value1.value0))(Data_HashMap.lookup(Data_Hashable.hashableString)(v.value1.value0)(g)))(function (t_n) {
          if (t_n instanceof Task_Script_Type.TFunction) {
            return Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckArguments_9"])(s)(g)(v.value1.value1))(function (t_a) {
              var $61 = Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(t_n.value0)(t_a);

              if ($61) {
                return Preload.done(Data_Either.applicativeEither)(t_n.value1);
              }

              ;
              return Preload["throw"](new Task_Script_Error.ArgumentError(t_n.value0, t_a));
            });
          }

          ;
          return Preload["throw"](new Task_Script_Error.FunctionNeeded(t_n));
        }));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Hole) {
        return Task_Script_Annotation.fail(g)(v.value1)(new Task_Script_Error.HoleFound(g));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Share) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.Share(v.value1.value0))(Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v.value1.value0))(function (t) {
          return Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.outofBasic(t))(function (b) {
            return Preload.done(Data_Either.applicativeEither)(Task_Script_Checker.wrapValue(new Task_Script_Type.TReference(b)));
          });
        }));
      }

      ;

      if (v.value1 instanceof Task_Script_Syntax.Assign) {
        return Task_Script_Annotation.lift(g)(v.value1)(new Task_Script_Syntax.Assign(v.value1.value0, v.value1.value1))(Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v.value1.value0))(function (t1) {
          return Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.outofReference(t1))(function (b1) {
            return Control_Bind.bind(Data_Either.bindEither)(Task_Script_Checker.check(Task_Script_Checker["$_CheckExpression_8"])(s)(g)(v.value1.value1))(function (b2) {
              var $68 = Data_Eq.eq(Task_Script_Type["$_EqFullType_46"])(b1)(b2);

              if ($68) {
                return Preload.done(Data_Either.applicativeEither)(new Task_Script_Type.TRecord(Data_HashMap.empty));
              }

              ;
              return Preload["throw"](new Task_Script_Error.AssignError(b1, b2));
            });
          });
        }));
      }

      ;
      throw new Error("Failed pattern match at Task.Script.Validator (line 18, column 32 - line 83, column 35): " + [v.value1.constructor.name]);
    };
  };
};

module.exports = {
  validate: validate
};
},{"../Control.Bind/index.js":"VcTy","../Data.Either/index.js":"B2JL","../Data.Eq/index.js":"Pq4F","../Data.Foldable/index.js":"eVDl","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.Hashable/index.js":"PLrJ","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Preload/index.js":"yYWa","../Task.Script.Annotation/index.js":"abUU","../Task.Script.Checker/index.js":"OXDP","../Task.Script.Error/index.js":"JdID","../Task.Script.Syntax/index.js":"vwvk","../Task.Script.Type/index.js":"WWnz"}],"b6yc":[function(require,module,exports) {
// Generated by purs version 0.14.2
"use strict";

var Control_Bind = require("../Control.Bind/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_Traversable = require("../Data.Traversable/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Annotation = require("../Task.Script.Annotation/index.js");

var Task_Script_Checker = require("../Task.Script.Checker/index.js");

var Task_Script_Context = require("../Task.Script.Context/index.js");

var Task_Script_Expander = require("../Task.Script.Expander/index.js");

var Task_Script_Validator = require("../Task.Script.Validator/index.js");

var load = function load(s) {
  return function (g) {
    var types = Data_HashMap.union(Data_Hashable.hashableString)(s)(Task_Script_Context.aliases);
    var names = Data_HashMap.union(Data_Hashable.hashableString)(g)(Task_Script_Context.builtins);
    return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(Task_Script_Expander.expand(Task_Script_Expander["$_ExpandBasicType_3"])(types))(types))(function (types$prime) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.traverse(Data_HashMap.traversableHashMap)(Data_Either.applicativeEither)(Task_Script_Expander.expand(Task_Script_Expander["$_ExpandFullType_2"])(types$prime))(names))(function (names$prime) {
        return Preload.done(Data_Either.applicativeEither)(new Data_Tuple.Tuple(types$prime, names$prime));
      });
    });
  };
};

var validate = function validate(s) {
  return function (g) {
    return function (v) {
      var v1 = load(s)(g);

      if (v1 instanceof Data_Either.Right) {
        return Task_Script_Validator.validate(v1.value0.value0)(v1.value0.value1)(v);
      }

      ;

      if (v1 instanceof Data_Either.Left) {
        return new Task_Script_Annotation.Annotated(new Task_Script_Annotation.Failure(g, v1.value0), v.value1);
      }

      ;
      throw new Error("Failed pattern match at Task.Script.Loader (line 30, column 34 - line 32, column 42): " + [v1.constructor.name]);
    };
  };
};

var check = function check(s) {
  return function (g) {
    return function (t) {
      return Control_Bind.bind(Data_Either.bindEither)(load(s)(g))(function (v) {
        return Task_Script_Checker.check(Task_Script_Checker["$_CheckAnnotatedTask_10"])(v.value0)(v.value1)(t);
      });
    };
  };
};

module.exports = {
  load: load,
  check: check,
  validate: validate
};
},{"../Control.Bind/index.js":"VcTy","../Data.Either/index.js":"B2JL","../Data.HashMap/index.js":"l6NS","../Data.Hashable/index.js":"PLrJ","../Data.Traversable/index.js":"n7EE","../Data.Tuple/index.js":"IIOM","../Preload/index.js":"yYWa","../Task.Script.Annotation/index.js":"abUU","../Task.Script.Checker/index.js":"OXDP","../Task.Script.Context/index.js":"u63X","../Task.Script.Expander/index.js":"k6gt","../Task.Script.Validator/index.js":"KFtq"}],"bxgf":[function(require,module,exports) {
"use strict";

var Concur = require("../Concur/index.js");

var Concur_Core_Props = require("../Concur.Core.Props/index.js");

var Concur_Core_Types = require("../Concur.Core.Types/index.js");

var Concur_Dom_Icon = require("../Concur.Dom.Icon/index.js");

var Concur_Dom_Input = require("../Concur.Dom.Input/index.js");

var Concur_Dom_Style = require("../Concur.Dom.Style/index.js");

var Concur_Dom_Text = require("../Concur.Dom.Text/index.js");

var Concur_React_Props = require("../Concur.React.Props/index.js");

var Control_Bind = require("../Control.Bind/index.js");

var Control_Category = require("../Control.Category/index.js");

var Control_Plus = require("../Control.Plus/index.js");

var Data_Array = require("../Data.Array/index.js");

var Data_Either = require("../Data.Either/index.js");

var Data_Either_Nested = require("../Data.Either.Nested/index.js");

var Data_Foldable = require("../Data.Foldable/index.js");

var Data_Function = require("../Data.Function/index.js");

var Data_Functor = require("../Data.Functor/index.js");

var Data_HashMap = require("../Data.HashMap/index.js");

var Data_Hashable = require("../Data.Hashable/index.js");

var Data_HeytingAlgebra = require("../Data.HeytingAlgebra/index.js");

var Data_Maybe = require("../Data.Maybe/index.js");

var Data_Monoid = require("../Data.Monoid/index.js");

var Data_Ord = require("../Data.Ord/index.js");

var Data_Semigroup = require("../Data.Semigroup/index.js");

var Data_Show = require("../Data.Show/index.js");

var Data_Tuple = require("../Data.Tuple/index.js");

var Data_Void = require("../Data.Void/index.js");

var Preload = require("../Preload/index.js");

var Task_Script_Annotation = require("../Task.Script.Annotation/index.js");

var Task_Script_Builder = require("../Task.Script.Builder/index.js");

var Task_Script_Context = require("../Task.Script.Context/index.js");

var Task_Script_Error = require("../Task.Script.Error/index.js");

var Task_Script_Loader = require("../Task.Script.Loader/index.js");

var Task_Script_Syntax = require("../Task.Script.Syntax/index.js");

var Task_Script_Type = require("../Task.Script.Type/index.js");

var Switch = function Switch($$switch) {
  this["switch"] = $$switch;
};

var Yes = function () {
  function Yes(value0) {
    this.value0 = value0;
  }

  ;

  Yes.create = function (value0) {
    return new Yes(value0);
  };

  return Yes;
}();

var No = function () {
  function No(value0) {
    this.value0 = value0;
  }

  ;

  No.create = function (value0) {
    return new No(value0);
  };

  return No;
}();

var And = function () {
  function And() {}

  ;
  And.value = new And();
  return And;
}();

var Or = function () {
  function Or() {}

  ;
  Or.value = new Or();
  return Or;
}();

var Hurry = function () {
  function Hurry() {}

  ;
  Hurry.value = new Hurry();
  return Hurry;
}();

var Delay = function () {
  function Delay() {}

  ;
  Delay.value = new Delay();
  return Delay;
}();

var New = function () {
  function New() {}

  ;
  New.value = new New();
  return New;
}();

var $$this = function $$this(v) {
  if (v instanceof And) {
    return Task_Script_Syntax.Pair.create;
  }

  ;

  if (v instanceof Or) {
    return Task_Script_Syntax.Choose.create;
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 620, column 1 - line 620, column 43): " + [v.constructor.name]);
};

var $$switch = function $$switch(dict) {
  return dict["switch"];
};

var style = function style(v) {
  if (v instanceof Hurry) {
    return Concur_Dom_Style.Filled.value;
  }

  ;

  if (v instanceof Delay) {
    return Concur_Dom_Style.Outlined.value;
  }

  ;

  if (v instanceof New) {
    return Concur_Dom_Style.Filled.value;
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 637, column 1 - line 637, column 23): " + [v.constructor.name]);
};

var stroke = function stroke(v) {
  if (v instanceof And) {
    return Concur_Dom_Style.Solid.value;
  }

  ;

  if (v instanceof Or) {
    return Concur_Dom_Style.Double.value;
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 628, column 1 - line 628, column 24): " + [v.constructor.name]);
}; //-- Entries -------------------------------------------------------------------
// | [[  n  ?]]


var selectType = function selectType(types) {
  return function (name) {
    return Concur_Dom_Input.picker([new Data_Tuple.Tuple("Builtin", Data_Array.sort(Data_Ord.ordString)(Data_HashMap.keys(Task_Script_Context.aliases))), new Data_Tuple.Tuple("Project", Data_Array.sort(Data_Ord.ordString)(Data_HashMap.keys(types)))])(name);
  };
};

var selectRef = function selectRef(v) {
  return function (v1) {
    if (v1 instanceof Task_Script_Syntax.Variable) {
      return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Input.picker([new Data_Tuple.Tuple("Shares", Data_Array.sort(Data_Ord.ordString)(Data_HashMap.keys(Data_HashMap.filter(Task_Script_Type.isReference)(v))))])(v1.value0))(Task_Script_Syntax.Variable.create);
    }

    ;
    return Preload.todo()("unnamed references not supported");
  };
};

var reorder4 = function reorder4(v) {
  return new Data_Tuple.Tuple(v.value1.value1.value0, new Data_Tuple.Tuple(v.value1.value1.value1, new Data_Tuple.Tuple(v.value0, v.value1.value0)));
};

var reorder3 = function reorder3(v) {
  return new Data_Tuple.Tuple(v.value1.value0, new Data_Tuple.Tuple(v.value1.value1, v.value0));
};

var renderTips = Concur_Dom_Text.bullets([Concur_Dom_Text.item(Concur_Dom_Text.text("Hover over")), Concur_Dom_Text.bullets([Concur_Dom_Text.item(Concur_Dom_Text.text("arrows to see values in context")), Concur_Dom_Text.item(Concur_Dom_Text.text("arguments to add or remove some"))]), Concur_Dom_Text.item(Concur_Dom_Text.text("Click on")), Concur_Dom_Text.bullets([Concur_Dom_Text.item(Concur_Dom_Text.text("arrows to switch between internal/external step")), Concur_Dom_Text.item(Concur_Dom_Text.text("bars to switch between and/or parallel"))]), Concur_Dom_Text.item(Concur_Dom_Text.text("Double click on")), Concur_Dom_Text.bullets([Concur_Dom_Text.item(Concur_Dom_Text.text("arrows to add a new hole")), Concur_Dom_Text.item(Concur_Dom_Text.text("bars to add a new branch"))])]);
var renderStop = Concur_Dom_Style.column([Concur_Dom_Style.line(Concur_Dom_Style.Solid.value)(Control_Plus.empty(Control_Plus.plusArray)), Concur_Dom_Style.dot(Concur_Dom_Style.Medium.value)(Concur_Dom_Style.Filled.value)(Control_Plus.empty(Control_Plus.plusArray))]);

var renderPossibleArgs = function renderPossibleArgs(status) {
  return function (v) {
    var toArgs = function toArgs(labels) {
      return new Task_Script_Syntax.ARecord(Data_HashMap.fromArrayBy(Data_Hashable.hashableString)(Control_Category.identity(Control_Category.categoryFn))(Task_Script_Syntax.Variable.create)(labels));
    };

    var labels = Data_Array.sort(Data_Ord.ordString)(Data_HashMap.keys(Data_HashMap.filter(function () {
      var $284 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
      return function ($285) {
        return $284(Task_Script_Type.isFunction($285));
      };
    }())(Task_Script_Annotation.extractContext(status))));

    var action = function action(label) {
      var $66 = Data_HashMap.member(Data_Hashable.hashableString)(label)(v.value0);

      if ($66) {
        return Concur_Dom_Input.Remove.value;
      }

      ;
      return Concur_Dom_Input.Add.value;
    };

    var go = function go(label) {
      return Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(Concur_Dom_Input.chip(Concur_Dom_Style.Normal.value)(action(label))(label))(label);
    };

    return Concur_Dom_Style.row([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur.traverse(Data_Monoid.monoidArray)(go)(labels))(toArgs)]);
  };
};

var renderNotes = Concur_Dom_Text.text("Editing matches (results) and expressions is currently not supported, as is adding fresh tasks to the library."); // | || (( a_1 .. a_n ))

var renderLabels = Data_Functor.map(Data_Functor.functorArray)(Concur_Dom_Input.chip(Concur_Dom_Style.Normal.value)(Concur_Dom_Input.None.value));

var renderLine = function renderLine(labels) {
  return Concur_Dom_Style.line(Concur_Dom_Style.Solid.value)([Concur_Dom_Style.place(Concur_Dom_Style.After.value)(Concur_Dom_Style.Small.value)([Concur_Dom_Style.row(renderLabels(labels))])]);
};

var renderParams = function renderParams(params) {
  return Concur_Dom_Style.line(Concur_Dom_Style.Solid.value)([Concur_Dom_Style.place(Concur_Dom_Style.Above.value)(Concur_Dom_Style.Small.value)([Concur_Dom_Style.column(renderLabels(Data_HashMap.keys(params)))])]);
}; //-- Helpers -------------------------------------------------------------------


var renderError = function renderError(v) {
  return function (w) {
    if (v instanceof Task_Script_Annotation.Failure) {
      return Concur_Dom_Style.has(Concur_Dom_Style["Error"].value)([Concur_Dom_Input.tooltip(Concur_Dom_Style.Before.value)(Data_Show.show(Task_Script_Error["$_ShowError_1"])(v.value1))(w)]);
    }

    ;
    return Concur_Dom_Style.has(Concur_Dom_Style.Normal.value)([w]);
  };
}; //-- Editors ----
// | [[ i |   w   ]]


var renderEditor = Concur_Dom_Input.addon(Concur_Dom_Style.Medium.value);

var renderEnter = function renderEnter(types) {
  return function (name) {
    return renderEditor(Concur_Dom_Icon.pen)(selectType(types)(name));
  };
}; //-- Shares --------------------------------------------------------------------


var renderWatch = function renderWatch(status) {
  return function (expr) {
    return renderEditor(Concur_Dom_Icon.eye)(Concur_Dom_Style.place(Concur_Dom_Style.After.value)(Concur_Dom_Style.Large.value)([Concur_Dom_Style.row([Concur_Dom_Style.dot(Concur_Dom_Style.Small.value)(Concur_Dom_Style.Filled.value)([]), Concur_Dom_Style.line(Concur_Dom_Style.Solid.value)([]), renderEditor(Concur_Dom_Icon.database)(Data_Function.flip(selectRef)(expr)(Task_Script_Annotation.extractContext(status)))])]));
  };
};

var renderContext = function () {
  var go = function go(v) {
    return v.value0 + (" : " + (Data_Show.show(Task_Script_Type["$_ShowFullType_47"])(v.value1) + "\x0a"));
  };

  var $286 = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(go);
  var $287 = Data_Array.sortBy(Data_Function.on(Data_Ord.compare(Data_Ord.ordString))(Data_Tuple.fst));
  var $288 = Data_HashMap.toArrayBy(Data_Tuple.Tuple.create);
  var $289 = Data_HashMap.filter(function () {
    var $291 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
    return function ($292) {
      return $291(Task_Script_Type.isFunction($292));
    };
  }());
  return function ($290) {
    return $286($287($288($289(Task_Script_Annotation.extractContext($290)))));
  };
}();

var renderArg = function renderArg(sel) {
  if (sel instanceof Yes) {
    return Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(Concur_Dom_Input.chip(Concur_Dom_Style.Primary.value)(Concur_Dom_Input.Remove.value)(sel.value0))(new No(sel.value0));
  }

  ;

  if (sel instanceof No) {
    return Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(Concur_Dom_Input.chip(Concur_Dom_Style.Secondary.value)(Concur_Dom_Input.Add.value)(sel.value0))(new Yes(sel.value0));
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 255, column 17 - line 257, column 47): " + [sel.constructor.name]);
};

var removeLabels = function removeLabels(dictFunctor) {
  return Data_Functor.map(dictFunctor)(Data_Tuple.snd);
};

var other = function other(v) {
  if (v instanceof And) {
    return Task_Script_Syntax.Choose.create;
  }

  ;

  if (v instanceof Or) {
    return Task_Script_Syntax.Pair.create;
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 624, column 1 - line 624, column 44): " + [v.constructor.name]);
}; //-- Combinators ----
// | ==============
// |  t_1 ... t_n
// | =============
// renderGroup :: forall a. Stroke -> (a -> Widget a) -> Array a -> Widget (Array a)


var renderGroup = function renderGroup(par) {
  return function (trans) {
    return function (tasks) {
      return Concur_Dom_Style.element([Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Data_Functor["void"](Concur_Core_Props.functorProps)(Concur_React_Props.onClick))(other(par)(tasks)), Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Data_Functor["void"](Concur_Core_Props.functorProps)(Concur_React_Props.onDoubleClick))($$this(par)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(tasks)([Task_Script_Builder.item])))])([Concur_Dom_Style.group(stroke(par))([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur.traverse(Data_Monoid.monoidArray)(trans)(tasks))($$this(par))])]);
    };
  };
};

var isYes = function isYes(v) {
  if (v instanceof Yes) {
    return true;
  }

  ;

  if (v instanceof No) {
    return false;
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 271, column 9 - line 273, column 16): " + [v.constructor.name]);
};

var fix4 = function fix4(_1) {
  return function (_2) {
    return function (_3) {
      return function (_4) {
        return function (v) {
          if (v instanceof Data_Either.Left) {
            return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(_2, new Data_Tuple.Tuple(_3, _4)));
          }

          ;

          if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
            return new Data_Tuple.Tuple(_1, new Data_Tuple.Tuple(v.value0.value0, new Data_Tuple.Tuple(_3, _4)));
          }

          ;

          if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Left) {
            return new Data_Tuple.Tuple(_1, new Data_Tuple.Tuple(_2, new Data_Tuple.Tuple(v.value0.value0.value0, _4)));
          }

          ;

          if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Right && v.value0.value0.value0 instanceof Data_Either.Left) {
            return new Data_Tuple.Tuple(_1, new Data_Tuple.Tuple(_2, new Data_Tuple.Tuple(_3, v.value0.value0.value0.value0)));
          }

          ;

          if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Right && v.value0.value0.value0 instanceof Data_Either.Right) {
            return Data_Void.absurd(v.value0.value0.value0.value0);
          }

          ;
          throw new Error("Failed pattern match at Task.Script.Renderer (line 600, column 20 - line 605, column 56): " + [v.constructor.name]);
        };
      };
    };
  };
};

var fix3 = function fix3(_1) {
  return function (_2) {
    return function (z) {
      return function (v) {
        if (v instanceof Data_Either.Left) {
          return new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(_2, z));
        }

        ;

        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
          return new Data_Tuple.Tuple(_1, new Data_Tuple.Tuple(v.value0.value0, z));
        }

        ;

        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Left) {
          return new Data_Tuple.Tuple(_1, new Data_Tuple.Tuple(_2, v.value0.value0.value0));
        }

        ;

        if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right && v.value0.value0 instanceof Data_Either.Right) {
          return Data_Void.absurd(v.value0.value0.value0);
        }

        ;
        throw new Error("Failed pattern match at Task.Script.Renderer (line 593, column 16 - line 597, column 48): " + [v.constructor.name]);
      };
    };
  };
};

var renderEnd = function renderEnd(v) {
  return function (v1) {
    return function (v2) {
      return function (v3) {
        if (v2 instanceof Task_Script_Syntax.MRecord) {
          return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(v(v3))(Data_Either_Nested.in3), Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(renderLine(Data_HashMap.keys(v2.value0)))(Data_Either_Nested.in2(v2)), Concur_Dom_Input.popover(Concur_Dom_Style.Before.value)(Concur_Dom_Text.code("TopHat")(renderContext(v1)))(Concur_Dom_Style.element([Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Data_Functor["void"](Concur_Core_Props.functorProps)(Concur_React_Props.onDoubleClick))(Data_Either_Nested.in1(New.value))])([Concur_Dom_Style.triangle(style(Hurry.value))(Control_Plus.empty(Control_Plus.plusArray))]))]))(fix3(Hurry.value)(v2)(v3));
        }

        ;
        return Preload.todo()("other matches in end rendering");
      };
    };
  };
};

var fix2 = function fix2(_1) {
  return function (_2) {
    return function (v) {
      if (v instanceof Data_Either.Left) {
        return new Data_Tuple.Tuple(v.value0, _2);
      }

      ;

      if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
        return new Data_Tuple.Tuple(_1, v.value0.value0);
      }

      ;

      if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
        return Data_Void.absurd(v.value0.value0);
      }

      ;
      throw new Error("Failed pattern match at Task.Script.Renderer (line 587, column 14 - line 590, column 40): " + [v.constructor.name]);
    };
  };
};

var editName = function editName(name) {
  return Concur_Dom_Input.entry(Concur_Dom_Style.Medium.value)("enter a name...")(name);
}; //-- Parts ---------------------------------------------------------------------
//-- General ----
// | [[ * |   n   ]]
// |     ||


var renderStart = function renderStart(name) {
  return function (params) {
    return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Concur_Dom_Style.dot(Concur_Dom_Style.Medium.value)(Concur_Dom_Style.Filled.value)([Concur_Dom_Style.place(Concur_Dom_Style.Before.value)(Concur_Dom_Style.Medium.value)([Concur_Dom_Style.row([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderEditor(Concur_Dom_Icon.clipboard)(editName(name)))(Data_Either_Nested.in1), Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(renderParams(params))(Data_Either_Nested.in2(params))])])]), Concur_Dom_Style.line(Concur_Dom_Style.Solid.value)(Control_Plus.empty(Control_Plus.plusArray))]))(fix2(name)(params));
  };
};

var editLabel = function editLabel(lbl) {
  return Concur_Dom_Input.entry(Concur_Dom_Style.Small.value)("enter a label...")(lbl);
};

var renderLabel = editLabel;

var editGuard = function editGuard(expr) {
  return Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(Concur_Dom_Input.entry(Concur_Dom_Style.Small.value)("enter an expression...")(Data_Show.show(Task_Script_Syntax["$_ShowExpression_127"])(expr)))(new Task_Script_Syntax.Variable("x"));
};

var renderGuard = function renderGuard(status) {
  return function (expr) {
    return renderError(status)(Concur_Dom_Input.addon(Concur_Dom_Style.Small.value)(Concur_Dom_Icon.question)(editGuard(expr)));
  };
};

var renderOption = function renderOption(status) {
  return function (guard) {
    return Concur_Dom_Style.line(Concur_Dom_Style.Dashed.value)([Concur_Dom_Style.place(Concur_Dom_Style.After.value)(Concur_Dom_Style.Small.value)([renderGuard(status)(guard)])]);
  };
}; // renderSingleBranch :: Renderer -> Match -> Checked Task -> Expression * Checked Task -> Widget (Match * Checked Task * Checked Task)
// renderSingleBranch render match sub1 (guard ~ sub2) =
//   Style.column
//     [ render sub1 >-> Either.in2
//     , renderStep Hurry match >-> Either.in1
//     , render sub2
//     ]
//     >-> fix3 match sub1 sub2


var renderBranch = function renderBranch(render) {
  return function (v) {
    return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderOption(v.value1.value0)(v.value0))(Data_Either_Nested.in1), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(render(v.value1))(Data_Either_Nested.in2), Concur_Dom_Style.line(Concur_Dom_Style.Solid.value)(Control_Plus.empty(Control_Plus.plusArray))]))(fix2(v.value0)(v.value1));
  };
};

var renderOptionWithLabel = function renderOptionWithLabel(status) {
  return function (label) {
    return function (guard) {
      return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.line(Concur_Dom_Style.Dashed.value)([Concur_Dom_Style.place(Concur_Dom_Style.After.value)(Concur_Dom_Style.Small.value)([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderLabel(label))(Data_Either_Nested.in1), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderGuard(status)(guard))(Data_Either_Nested.in2)])]))(fix2(label)(guard));
    };
  };
};

var renderSelect = function renderSelect(render) {
  return function (v) {
    return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderOptionWithLabel(v.value1.value1.value0)(v.value0)(v.value1.value0))(Data_Either_Nested.in2), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(render(v.value1.value1))(Data_Either_Nested.in1), Concur_Dom_Style.line(Concur_Dom_Style.Solid.value)(Control_Plus.empty(Control_Plus.plusArray))]))(fix2(v.value1.value1)(new Data_Tuple.Tuple(v.value0, v.value1.value0))))(reorder3);
  };
}; // | [[  e  ]]


var editExpression = function editExpression(expr) {
  return Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(Concur_Dom_Input.entry(Concur_Dom_Style.Medium.value)("enter an expression...")(Data_Show.show(Task_Script_Syntax["$_ShowExpression_127"])(expr)))(new Task_Script_Syntax.Variable("x"));
};

var renderLift = function renderLift(expr) {
  return renderEditor(Concur_Dom_Icon.check_double)(editExpression(expr));
};

var renderShare = function renderShare(expr) {
  return renderEditor(Concur_Dom_Icon.retweet)(editExpression(expr));
};

var renderUpdate = function renderUpdate(expr) {
  return renderEditor(Concur_Dom_Icon.edit)(editExpression(expr));
};

var renderView = function renderView(expr) {
  return renderEditor(Concur_Dom_Icon.eye)(editExpression(expr));
};

var catYes = Data_Array.concatMap(function (v) {
  if (v instanceof Yes) {
    return [v.value0];
  }

  ;

  if (v instanceof No) {
    return [];
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 265, column 5 - line 267, column 17): " + [v.constructor.name]);
});

var renderArgs = function renderArgs(status) {
  return function (v) {
    var unselect = function () {
      var $293 = Data_HashMap.fromArray(Data_Hashable.hashableString);
      var $294 = Data_Functor.map(Data_Functor.functorArray)(function (l) {
        return new Data_Tuple.Tuple(l, new Task_Script_Syntax.Variable(l));
      });
      return function ($295) {
        return Task_Script_Syntax.ARecord.create($293($294(catYes($295))));
      };
    }();

    var check = function check(label) {
      return function () {
        var $137 = Data_HashMap.member(Data_Hashable.hashableString)(label)(v.value0);

        if ($137) {
          return Yes.create;
        }

        ;
        return No.create;
      }()(label);
    }; //TODO: renaming of variables


    var select = Data_Functor.map(Data_Functor.functorArray)(check)(Data_HashMap.keys(Data_HashMap.filter(function () {
      var $296 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
      return function ($297) {
        return $296(Task_Script_Type.isFunction($297));
      };
    }())(Task_Script_Annotation.extractContext(status))));
    return Concur_Dom_Input.popover(Concur_Dom_Style.After.value)(Concur_Dom_Input.card([])([Concur_Dom_Style.row([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur.traverse(Data_Monoid.monoidArray)(renderArg)(select))(unselect)])])([]))(Concur_Dom_Style.column([Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.line(Concur_Dom_Style.Solid.value)([Concur_Dom_Style.place(Concur_Dom_Style.After.value)(Concur_Dom_Style.Small.value)([Concur_Dom_Style.row(renderLabels(Data_HashMap.keys(v.value0)))])]))(v)]));
  };
}; // |      || as
// |  [[  n  ?]]


var renderExecute = function renderExecute(status) {
  return function (name) {
    return function (args) {
      return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderArgs(status)(args))(Data_Either_Nested.in2), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderError(status)(Concur_Dom_Input.picker([new Data_Tuple.Tuple("Builtin", ["??"]), new Data_Tuple.Tuple("Project", Data_Array.sort(Data_Ord.ordString)(Data_HashMap.keys(Data_HashMap.filter(Task_Script_Type.isTask)(Task_Script_Annotation.extractContext(status)))))])(name)))(Data_Either_Nested.in1)]))(fix2(name)(args));
    };
  };
};

var assoc = function assoc(v) {
  return new Data_Tuple.Tuple(v.value0.value0, new Data_Tuple.Tuple(v.value0.value1, v.value1));
};

var addLabels = function addLabels(dictFunctor) {
  return Data_Functor.map(dictFunctor)(function (v) {
    return new Data_Tuple.Tuple("", v);
  });
};

var $dollar_SwitchPar_41 = new Switch(function (v) {
  if (v instanceof And) {
    return Or.value;
  }

  ;

  if (v instanceof Or) {
    return And.value;
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 645, column 1 - line 647, column 18): " + [v.constructor.name]);
});
var $dollar_SwitchCont_42 = new Switch(function (v) {
  if (v instanceof Hurry) {
    return Delay.value;
  }

  ;

  if (v instanceof Delay) {
    return Hurry.value;
  }

  ;

  if (v instanceof New) {
    return New.value;
  }

  ;
  throw new Error("Failed pattern match at Task.Script.Renderer (line 649, column 1 - line 652, column 19): " + [v.constructor.name]);
}); //-- Steps ----
// |   || as
// |   V

var renderStep = function renderStep(v) {
  return function (v1) {
    return function (v2) {
      if (v2 instanceof Task_Script_Syntax.MRecord) {
        var getBinds = function getBinds(v3) {
          if (v3 instanceof Task_Script_Syntax.MBind) {
            return new Data_Maybe.Just(v3.value0);
          }

          ;
          return Data_Maybe.Nothing.value;
        };

        var labels = Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(getBinds)(Data_HashMap.values(v2.value0)));
        return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.voidLeft(Concur_Core_Types.widgetFunctor)(renderLine(labels))(Data_Either_Nested.in2(v2)), Concur_Dom_Input.popover(Concur_Dom_Style.Before.value)(Concur_Dom_Text.code("TopHat")(renderContext(v)))(Concur_Dom_Style.element([Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Data_Functor["void"](Concur_Core_Props.functorProps)(Concur_React_Props.onClick))(Data_Either_Nested.in1($$switch($dollar_SwitchCont_42)(v1))), Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Data_Functor["void"](Concur_Core_Props.functorProps)(Concur_React_Props.onDoubleClick))(Data_Either_Nested.in1(New.value))])([Concur_Dom_Style.triangle(style(v1))(Control_Plus.empty(Control_Plus.plusArray))]))]))(fix2(v1)(v2));
      }

      ;
      return Preload.todo()("other matches in step rendering");
    };
  };
}; //-- Branches ----


var renderBranches = function renderBranches(render) {
  return function (status) {
    return function (match) {
      return function (subtask) {
        return function (branches) {
          return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(render(subtask))(Data_Either_Nested.in1), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderStep(status)(Hurry.value)(match))(Data_Either_Nested.in3), Concur_Dom_Style.element([Data_Functor.voidLeft(Concur_Core_Props.functorProps)(Data_Functor["void"](Concur_Core_Props.functorProps)(Concur_React_Props.onDoubleClick))(Data_Either_Nested.in2(Data_Semigroup.append(Data_Semigroup.semigroupArray)(branches)([new Data_Tuple.Tuple(Task_Script_Builder.always, Task_Script_Builder.item)])))])([Concur_Dom_Style.branch([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur.traverse(Data_Monoid.monoidArray)(renderBranch(render))(branches))(Data_Either_Nested.in2)])])]))(fix3(subtask)(branches)(new Data_Tuple.Tuple(Hurry.value, match))))(reorder4);
        };
      };
    };
  };
}; //   Style.column
//     [ Style.line Dashed [ Style.place After (Input.addon Icon.question (Input.entry Small ?holder ?value)) ]
//     , renderTask task
//     ]


var renderSelects = function renderSelects(render) {
  return function (status) {
    return function (match) {
      return function (subtask) {
        return function (branches) {
          return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(render(subtask))(Data_Either_Nested.in1), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderStep(status)(Delay.value)(match))(Data_Either_Nested.in3), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.branch([Concur.traverse(Data_Monoid.monoidArray)(renderSelect(render))(branches)]))(Data_Either_Nested.in2)]))(fix3(subtask)(branches)(new Data_Tuple.Tuple(Delay.value, match))))(reorder4);
        };
      };
    };
  };
};

var renderSingle = function renderSingle(render) {
  return function (status) {
    return function (cont) {
      return function (match) {
        return function (sub1) {
          return function (sub2) {
            return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(render(sub1))(Data_Either_Nested.in1), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderStep(status)(cont)(match))(Data_Either_Nested.in3), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(render(sub2))(Data_Either_Nested.in2)]))(fix3(sub1)(sub2)(new Data_Tuple.Tuple(cont, match))))(reorder4);
          };
        };
      };
    };
  };
};

var renderTask = function renderTask(g) {
  return function (s) {
    return function (t) {
      var go = function go(v) {
        return Data_Functor.map(Concur_Core_Types.widgetFunctor)(Task_Script_Annotation.Annotated.create(v.value0))(function () {
          if (v.value1 instanceof Task_Script_Syntax.Step && v.value1.value2.value1 instanceof Task_Script_Syntax.Branch && v.value1.value2.value1.value0.length === 1 && v["value1"]["value2"]["value1"]["value0"][0].value0 instanceof Task_Script_Syntax.Constant && v["value1"]["value2"]["value1"]["value0"][0].value0.value0 instanceof Task_Script_Syntax.B && v["value1"]["value2"]["value1"]["value0"][0].value0.value0.value0 && v["value1"]["value2"]["value1"]["value0"][0].value1.value1 instanceof Task_Script_Syntax.Lift) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderEnd(go)(v.value0)(v.value1.value0)(v.value1.value1))(function (v1) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(Task_Script_Syntax.Step.create(v1.value1.value0)(v1.value1.value1)(function () {
                if (v1.value0 instanceof New) {
                  return Task_Script_Builder["new"](v.value1.value2);
                }

                ;
                return v.value1.value2;
              }()));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Step && v.value1.value2.value1 instanceof Task_Script_Syntax.Branch && v.value1.value2.value1.value0.length === 1 && v["value1"]["value2"]["value1"]["value0"][0].value0 instanceof Task_Script_Syntax.Constant && v["value1"]["value2"]["value1"]["value0"][0].value0.value0 instanceof Task_Script_Syntax.B && v["value1"]["value2"]["value1"]["value0"][0].value0.value0.value0) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderSingle(go)(v.value0)(Hurry.value)(v.value1.value0)(v.value1.value1)(v["value1"]["value2"]["value1"]["value0"][0].value1))(function (v1) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(Task_Script_Syntax.Step.create(v1.value1.value0)(v1.value1.value1.value0)(function () {
                if (v1.value0 instanceof Hurry) {
                  return Task_Script_Annotation.Annotated.create(v.value1.value2.value0)(new Task_Script_Syntax.Branch([new Data_Tuple.Tuple(new Task_Script_Syntax.Constant(new Task_Script_Syntax.B(true)), v1.value1.value1.value1)]));
                }

                ;

                if (v1.value0 instanceof Delay) {
                  return Task_Script_Annotation.Annotated.create(v.value1.value2.value0)(new Task_Script_Syntax.Select([new Data_Tuple.Tuple("Continue", new Data_Tuple.Tuple(new Task_Script_Syntax.Constant(new Task_Script_Syntax.B(true)), v1.value1.value1.value1))]));
                }

                ;

                if (v1.value0 instanceof New) {
                  return Task_Script_Builder["new"](v.value1.value2);
                }

                ;
                throw new Error("Failed pattern match at Task.Script.Renderer (line 97, column 30 - line 100, column 32): " + [v1.value0.constructor.name]);
              }()));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Step && v.value1.value2.value1 instanceof Task_Script_Syntax.Branch) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderBranches(go)(v.value0)(v.value1.value0)(v.value1.value1)(v.value1.value2.value1.value0))(function (v1) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(Task_Script_Syntax.Step.create(v1.value1.value0)(v1.value1.value1.value0)(function () {
                if (v1.value0 instanceof Hurry) {
                  return Task_Script_Annotation.Annotated.create(v.value1.value2.value0)(new Task_Script_Syntax.Branch(v1.value1.value1.value1));
                }

                ;

                if (v1.value0 instanceof Delay) {
                  return Task_Script_Annotation.Annotated.create(v.value1.value2.value0)(new Task_Script_Syntax.Select(addLabels(Data_Functor.functorArray)(v1.value1.value1.value1)));
                }

                ;

                if (v1.value0 instanceof New) {
                  return Task_Script_Builder["new"](v.value1.value2);
                }

                ;
                throw new Error("Failed pattern match at Task.Script.Renderer (line 103, column 30 - line 106, column 32): " + [v1.value0.constructor.name]);
              }()));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Step && v.value1.value2.value1 instanceof Task_Script_Syntax.Select && v.value1.value2.value1.value0.length === 1 && v["value1"]["value2"]["value1"]["value0"][0].value0 === "Continue" && v["value1"]["value2"]["value1"]["value0"][0].value1.value0 instanceof Task_Script_Syntax.Constant && v["value1"]["value2"]["value1"]["value0"][0].value1.value0.value0 instanceof Task_Script_Syntax.B && v["value1"]["value2"]["value1"]["value0"][0].value1.value0.value0.value0) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderSingle(go)(v.value0)(Delay.value)(v.value1.value0)(v.value1.value1)(v["value1"]["value2"]["value1"]["value0"][0].value1.value1))(function (v1) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(Task_Script_Syntax.Step.create(v1.value1.value0)(v1.value1.value1.value0)(function () {
                if (v1.value0 instanceof Hurry) {
                  return Task_Script_Annotation.Annotated.create(v.value1.value2.value0)(new Task_Script_Syntax.Branch([new Data_Tuple.Tuple(new Task_Script_Syntax.Constant(new Task_Script_Syntax.B(true)), v1.value1.value1.value1)]));
                }

                ;

                if (v1.value0 instanceof Delay) {
                  return Task_Script_Annotation.Annotated.create(v.value1.value2.value0)(new Task_Script_Syntax.Select([new Data_Tuple.Tuple("Continue", new Data_Tuple.Tuple(new Task_Script_Syntax.Constant(new Task_Script_Syntax.B(true)), v1.value1.value1.value1))]));
                }

                ;

                if (v1.value0 instanceof New) {
                  return Task_Script_Builder["new"](v.value1.value2);
                }

                ;
                throw new Error("Failed pattern match at Task.Script.Renderer (line 110, column 30 - line 113, column 32): " + [v1.value0.constructor.name]);
              }()));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Step && v.value1.value2.value1 instanceof Task_Script_Syntax.Select) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderSelects(go)(v.value0)(v.value1.value0)(v.value1.value1)(v.value1.value2.value1.value0))(function (v1) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(Task_Script_Syntax.Step.create(v1.value1.value0)(v1.value1.value1.value0)(function () {
                if (v1.value0 instanceof Hurry) {
                  return Task_Script_Annotation.Annotated.create(v.value1.value2.value0)(new Task_Script_Syntax.Branch(removeLabels(Data_Functor.functorArray)(v1.value1.value1.value1)));
                }

                ;

                if (v1.value0 instanceof Delay) {
                  return Task_Script_Annotation.Annotated.create(v.value1.value2.value0)(new Task_Script_Syntax.Select(v1.value1.value1.value1));
                }

                ;

                if (v1.value0 instanceof New) {
                  return Task_Script_Builder["new"](v.value1.value2);
                }

                ;
                throw new Error("Failed pattern match at Task.Script.Renderer (line 116, column 30 - line 119, column 32): " + [v1.value0.constructor.name]);
              }()));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Step) {
            return Preload.panic("invalid single step");
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Branch) {
            return Preload.panic("invalid single branch");
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Select) {
            return Preload.panic("invalid single select");
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Enter) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderEnter(s)(v.value1.value0))(function (n$prime) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.Enter(n$prime));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Update) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderUpdate(v.value1.value0))(function (e$prime) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.Update(e$prime));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Change) {
            return Preload.todo()("change");
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.View) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderView(v.value1.value0))(function (e$prime) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.View(e$prime));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Watch) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderWatch(v.value0)(v.value1.value0))(function (e$prime) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.Watch(e$prime));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Lift) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderLift(v.value1.value0))(function (e$prime) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.Lift(e$prime));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Pair) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderGroup(And.value)(go)(v.value1.value0))(function (t$prime) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(t$prime);
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Choose) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderGroup(Or.value)(go)(v.value1.value0))(function (t$prime) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(t$prime);
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Execute) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderExecute(v.value0)(v.value1.value0)(v.value1.value1))(function (v1) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.Execute(v1.value0, v1.value1));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Hole) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderExecute(v.value0)("??")(v.value1.value0))(function (v1) {
              var $261 = v1.value0 === "??";

              if ($261) {
                return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.Hole(v1.value1));
              }

              ;
              return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.Execute(v1.value0, v1.value1));
            });
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Assign) {
            return Preload.todo()("assign");
          }

          ;

          if (v.value1 instanceof Task_Script_Syntax.Share) {
            return Control_Bind.bind(Concur_Core_Types.widgetBind)(renderShare(v.value1.value0))(function (e$prime) {
              return Preload.done(Concur_Core_Types.widgetApplicative)(new Task_Script_Syntax.Share(e$prime));
            });
          }

          ;
          throw new Error("Failed pattern match at Task.Script.Renderer (line 84, column 44 - line 188, column 23): " + [v.value1.constructor.name]);
        }());
      };

      return Concur_Dom_Style.column([go(t)]);
    };
  };
};

var main = function main(v) {
  return function (n) {
    var v1 = Data_HashMap.lookup(Data_Hashable.hashableString)(n)(v.tasks);

    if (v1 instanceof Data_Maybe.Just) {
      return Concur.repeat(Concur_Core_Types.widgetBind)(new Data_Tuple.Tuple(n, new Data_Tuple.Tuple(v1.value0.value0, v1.value0.value1)))(function (v2) {
        var g$prime = Data_HashMap.union(Data_Hashable.hashableString)(v1.value0.value0)(v.context);
        var t$prime$prime = Task_Script_Loader.validate(v.types)(g$prime)(v2.value1.value1);
        return Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(Concur_Dom_Style.column([Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderStart(v2.value0)(v2.value1.value0))(Data_Either_Nested.in1), Data_Functor.mapFlipped(Concur_Core_Types.widgetFunctor)(renderTask(g$prime)(v.types)(t$prime$prime))(Data_Either_Nested.in2), renderStop, Concur_Dom_Text.head("\xa0"), Concur_Dom_Text.head("Code"), Concur_Dom_Text.code("TopHat")(Data_Show.show(Task_Script_Annotation["$_ShowUnannotatedTask_11"])(Task_Script_Annotation.unannotate(Task_Script_Syntax["$_FunctorTask_135"])(t$prime$prime))), Concur_Dom_Text.head("Tips"), renderTips, Concur_Dom_Text.head("Notes"), renderNotes]))(fix2(new Data_Tuple.Tuple(v2.value0, v2.value1.value0))(t$prime$prime)))(assoc);
      });
    }

    ;

    if (v1 instanceof Data_Maybe.Nothing) {
      return Concur_Dom_Text.text("Could not find task " + Preload.quote(n));
    }

    ;
    throw new Error("Failed pattern match at Task.Script.Renderer (line 34, column 3 - line 54, column 62): " + [v1.constructor.name]);
  };
};

module.exports = {
  "switch": $$switch,
  main: main,
  renderTips: renderTips,
  renderNotes: renderNotes,
  renderTask: renderTask,
  renderStart: renderStart,
  renderParams: renderParams,
  renderStop: renderStop,
  renderExecute: renderExecute,
  renderArgs: renderArgs,
  renderArg: renderArg,
  Yes: Yes,
  No: No,
  catYes: catYes,
  isYes: isYes,
  renderPossibleArgs: renderPossibleArgs,
  renderLine: renderLine,
  renderLabels: renderLabels,
  renderContext: renderContext,
  renderStep: renderStep,
  renderOption: renderOption,
  renderOptionWithLabel: renderOptionWithLabel,
  renderSingle: renderSingle,
  renderEnd: renderEnd,
  renderBranches: renderBranches,
  renderBranch: renderBranch,
  renderSelects: renderSelects,
  renderSelect: renderSelect,
  renderGroup: renderGroup,
  renderEditor: renderEditor,
  renderEnter: renderEnter,
  renderUpdate: renderUpdate,
  renderView: renderView,
  renderLift: renderLift,
  renderShare: renderShare,
  renderGuard: renderGuard,
  renderLabel: renderLabel,
  renderWatch: renderWatch,
  renderError: renderError,
  selectType: selectType,
  selectRef: selectRef,
  editExpression: editExpression,
  editGuard: editGuard,
  editName: editName,
  editLabel: editLabel,
  fix2: fix2,
  fix3: fix3,
  fix4: fix4,
  reorder3: reorder3,
  reorder4: reorder4,
  assoc: assoc,
  And: And,
  Or: Or,
  "this": $$this,
  other: other,
  stroke: stroke,
  Hurry: Hurry,
  Delay: Delay,
  New: New,
  style: style,
  Switch: Switch,
  addLabels: addLabels,
  removeLabels: removeLabels,
  "$_SwitchPar_41": $dollar_SwitchPar_41,
  "$_SwitchCont_42": $dollar_SwitchCont_42
};
},{"../Concur/index.js":"ks1e","../Concur.Core.Props/index.js":"uj7M","../Concur.Core.Types/index.js":"qGwK","../Concur.Dom.Icon/index.js":"LDGR","../Concur.Dom.Input/index.js":"Gx00","../Concur.Dom.Style/index.js":"bh6e","../Concur.Dom.Text/index.js":"tCQD","../Concur.React.Props/index.js":"twSw","../Control.Bind/index.js":"VcTy","../Control.Category/index.js":"IAi2","../Control.Plus/index.js":"oMBg","../Data.Array/index.js":"t4Co","../Data.Either/index.js":"B2JL","../Data.Either.Nested/index.js":"d6M4","../Data.Foldable/index.js":"eVDl","../Data.Function/index.js":"ImXJ","../Data.Functor/index.js":"AEHo","../Data.HashMap/index.js":"l6NS","../Data.Hashable/index.js":"PLrJ","../Data.HeytingAlgebra/index.js":"paZe","../Data.Maybe/index.js":"mN7T","../Data.Monoid/index.js":"TiEB","../Data.Ord/index.js":"r4Vb","../Data.Semigroup/index.js":"EsAJ","../Data.Show/index.js":"mFY7","../Data.Tuple/index.js":"IIOM","../Data.Void/index.js":"bncE","../Preload/index.js":"yYWa","../Task.Script.Annotation/index.js":"abUU","../Task.Script.Builder/index.js":"MyFA","../Task.Script.Context/index.js":"u63X","../Task.Script.Error/index.js":"JdID","../Task.Script.Loader/index.js":"b6yc","../Task.Script.Syntax/index.js":"vwvk","../Task.Script.Type/index.js":"WWnz"}],"MrQo":[function(require,module,exports) {
"use strict";

var Concur_Dom = require("../Concur.Dom/index.js");

var Task_Script_Example_Subsidy = require("../Task.Script.Example.Subsidy/index.js");

var Task_Script_Renderer = require("../Task.Script.Renderer/index.js"); // import Task.Script.Example.Deadline as Example
// import Task.Script.Example.Singles as Example
// import Test.Selection as Test
// import Test.Tree as Test


var main = Concur_Dom.runWidgetInDom("root")(Task_Script_Renderer.main(Task_Script_Example_Subsidy.world)("request subsidy"));
module.exports = {
  main: main
};
},{"../Concur.Dom/index.js":"vptB","../Task.Script.Example.Subsidy/index.js":"VRh8","../Task.Script.Renderer/index.js":"bxgf"}],"RfSX":[function(require,module,exports) {
var Main = require('./output/Main');

function main() {
  /*
  Here we could add variables such as
   var baseUrl = process.env.BASE_URL;
   Parcel will replace `process.env.BASE_URL`
  with the string contents of the BASE_URL environment
  variable at bundle/build time.
  A .env file can also be used to override shell variables
  for more information, see https://en.parceljs.org/env.html
   These variables can be supplied to the Main.main function.
  However, you will need to change the type to accept variables, by default it is an Effect.
  You will probably want to make it a function from String -> Effect ()
  */
  Main.main();
} // HMR setup. For more info see: https://parceljs.org/hmr.html


if (module.hot) {
  module.hot.accept(function () {
    console.log('Reloaded, running main again');
    main();
  });
}

console.log('Starting app');
main();
},{"./output/Main":"MrQo"}]},{},["RfSX"], null)
//# sourceMappingURL=/tophat/builder.c5db0c80.js.map